{"version":3,"file":"filters.min.js","sources":["../../../src/local/editor/filters.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Report builder filters editor\n *\n * @module      core_reportbuilder/local/editor/filters\n * @copyright   2021 David Matamoros <davidmc@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\"use strict\";\n\nimport $ from 'jquery';\nimport AutoComplete from 'core/form-autocomplete';\nimport 'core/inplace_editable';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\nimport {prefetchStrings} from 'core/prefetch';\nimport SortableList from 'core/sortable_list';\nimport {getString} from 'core/str';\nimport Templates from 'core/templates';\nimport {add as addToast} from 'core/toast';\nimport * as reportSelectors from 'core_reportbuilder/local/selectors';\nimport {addFilter, deleteFilter, reorderFilter} from 'core_reportbuilder/local/repository/filters';\n\n/**\n * Reload filters settings region\n *\n * @param {Element} reportElement\n * @param {Object} templateContext\n * @return {Promise}\n */\nconst reloadSettingsFiltersRegion = (reportElement, templateContext) => {\n    const pendingPromise = new Pending('core_reportbuilder/filters:reload');\n    const settingsFiltersRegion = reportElement.querySelector(reportSelectors.regions.settingsFilters);\n\n    return Templates.renderForPromise('core_reportbuilder/local/settings/filters', {filters: templateContext})\n        .then(({html, js}) => {\n            Templates.replaceNode(settingsFiltersRegion, html, js);\n\n            initFiltersForm();\n\n            // Re-focus the add filter element after reloading the region.\n            const reportAddFilter = reportElement.querySelector(reportSelectors.actions.reportAddFilter);\n            reportAddFilter?.focus();\n\n            return pendingPromise.resolve();\n        });\n};\n\n/**\n * Initialise filters form, must be called on each init because the form container is re-created when switching editor modes\n */\nconst initFiltersForm = () => {\n    const reportElement = document.querySelector(reportSelectors.regions.report);\n\n    // Enhance filter selector.\n    const reportAddFilter = reportElement.querySelector(reportSelectors.actions.reportAddFilter);\n    AutoComplete.enhanceField(reportAddFilter, false, '', getString('selectafilter', 'core_reportbuilder'))\n        .catch(Notification.exception);\n};\n\n/**\n * Initialise module, prefetch all required strings\n *\n * @param {Boolean} initialized Ensure we only add our listeners once\n */\nexport const init = initialized => {\n    prefetchStrings('core_reportbuilder', [\n        'deletefilter',\n        'deletefilterconfirm',\n        'filteradded',\n        'filterdeleted',\n        'filtermoved',\n        'selectafilter',\n    ]);\n\n    prefetchStrings('core', [\n        'delete',\n    ]);\n\n    initFiltersForm();\n    if (initialized) {\n        return;\n    }\n\n    // Add filter to report.\n    document.addEventListener('change', event => {\n        const reportAddFilter = event.target.closest(reportSelectors.actions.reportAddFilter);\n        if (reportAddFilter) {\n            event.preventDefault();\n\n            // Check if dropdown is closed with no filter selected.\n            if (reportAddFilter.value === \"\" || reportAddFilter.value === \"0\") {\n                return;\n            }\n\n            const reportElement = reportAddFilter.closest(reportSelectors.regions.report);\n            const pendingPromise = new Pending('core_reportbuilder/filters:add');\n\n            addFilter(reportElement.dataset.reportId, reportAddFilter.value)\n                .then(data => reloadSettingsFiltersRegion(reportElement, data))\n                .then(() => getString('filteradded', 'core_reportbuilder',\n                    reportAddFilter.options[reportAddFilter.selectedIndex].text))\n                .then(addToast)\n                .then(() => pendingPromise.resolve())\n                .catch(Notification.exception);\n        }\n    });\n\n    document.addEventListener('click', event => {\n\n        // Remove filter from report.\n        const reportRemoveFilter = event.target.closest(reportSelectors.actions.reportRemoveFilter);\n        if (reportRemoveFilter) {\n            event.preventDefault();\n\n            const reportElement = reportRemoveFilter.closest(reportSelectors.regions.report);\n            const filterContainer = reportRemoveFilter.closest(reportSelectors.regions.activeFilter);\n            const filterName = filterContainer.dataset.filterName;\n\n            Notification.saveCancelPromise(\n                getString('deletefilter', 'core_reportbuilder', filterName),\n                getString('deletefilterconfirm', 'core_reportbuilder', filterName),\n                getString('delete', 'core'),\n                {triggerElement: reportRemoveFilter}\n            ).then(() => {\n                const pendingPromise = new Pending('core_reportbuilder/filters:remove');\n\n                return deleteFilter(reportElement.dataset.reportId, filterContainer.dataset.filterId)\n                    .then(data => reloadSettingsFiltersRegion(reportElement, data))\n                    .then(() => addToast(getString('filterdeleted', 'core_reportbuilder', filterName)))\n                    .then(() => pendingPromise.resolve())\n                    .catch(Notification.exception);\n            }).catch(() => {\n                return;\n            });\n        }\n    });\n\n    // Initialize sortable list to handle active filters moving (note JQuery dependency, see MDL-72293 for resolution).\n    var activeFiltersSortableList = new SortableList(`${reportSelectors.regions.activeFilters} ul`, {isHorizontal: false});\n    activeFiltersSortableList.getElementName = element => Promise.resolve(element.data('filterName'));\n\n    $(document).on(SortableList.EVENTS.DROP, `${reportSelectors.regions.report} li[data-filter-id]`, (event, info) => {\n        if (info.positionChanged) {\n            const pendingPromise = new Pending('core_reportbuilder/filters:reorder');\n            const reportElement = event.target.closest(reportSelectors.regions.report);\n            const filterId = info.element.data('filterId');\n            const filterPosition = info.element.data('filterPosition');\n\n            // Select target position, if moving to the end then count number of element siblings.\n            let targetFilterPosition = info.targetNextElement.data('filterPosition') || info.element.siblings().length + 2;\n            if (targetFilterPosition > filterPosition) {\n                targetFilterPosition--;\n            }\n\n            // Re-order filter, giving drop event transition time to finish.\n            const reorderPromise = reorderFilter(reportElement.dataset.reportId, filterId, targetFilterPosition);\n            Promise.all([reorderPromise, new Promise(resolve => setTimeout(resolve, 1000))])\n                .then(([data]) => reloadSettingsFiltersRegion(reportElement, data))\n                .then(() => getString('filtermoved', 'core_reportbuilder', info.element.data('filterName')))\n                .then(addToast)\n                .then(() => pendingPromise.resolve())\n                .catch(Notification.exception);\n        }\n    });\n};\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireDefault","__esModule","default","Object","defineProperty","_exports","value","init","_jquery","_formAutocomplete","_notification","_pending","_sortable_list","_templates","reportSelectors","has","get","n","__proto__","a","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","reloadSettingsFiltersRegion","reportElement","templateContext","pendingPromise","Pending","settingsFiltersRegion","querySelector","regions","settingsFilters","Templates","renderForPromise","filters","then","_ref","html","js","replaceNode","initFiltersForm","reportAddFilter","actions","focus","resolve","document","report","AutoComplete","enhanceField","getString","catch","Notification","exception","initialized","prefetchStrings","addEventListener","event","target","closest","preventDefault","addFilter","dataset","reportId","data","options","selectedIndex","text","addToast","add","reportRemoveFilter","filterContainer","activeFilter","filterName","saveCancelPromise","triggerElement","deleteFilter","filterId","SortableList","activeFilters","isHorizontal","getElementName","element","Promise","$","on","EVENTS","DROP","info","positionChanged","filterPosition","targetFilterPosition","targetNextElement","siblings","length","reorderPromise","reorderFilter","all","setTimeout","_ref2"],"mappings":"2dAmCsE,SAAAA,yBAAAC,GAAA,GAAA,mBAAAC,QAAA,OAAA,KAAA,IAAAC,EAAAD,IAAAA,QAAAE,EAAAF,IAAAA,eAAAF,yBAAA,SAAAC,GAAAA,OAAAA,EAAAG,EAAAD,IAAAF,EAAA,CAAA,SAAAI,uBAAAJ,GAAAA,OAAAA,GAAAA,EAAAK,WAAAL,EAAAM,CAAAA,QAAAN,EAAA,CAZzDO,OAAAC,eAAAC,SAAA,aAAA,CAAAC,OAAA,IAAAD,SAAAE,UAAA,EAEbC,QAAAR,uBAAAQ,SACAC,kBAAAT,uBAAAS,mBAEAC,cAAAV,uBAAAU,eACAC,SAAAX,uBAAAW,UAEAC,eAAAZ,uBAAAY,gBAEAC,WAAAb,uBAAAa,YAEAC,gBAAsE,SAAAlB,EAAAE,GAAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAAL,OAAAA,EAAAA,GAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAM,MAAAA,CAAAA,QAAAN,GAAAG,IAAAA,EAAAJ,yBAAAG,GAAA,GAAAC,GAAAA,EAAAgB,IAAAnB,GAAA,OAAAG,EAAAiB,IAAApB,GAAA,IAAAqB,EAAA,CAAAC,UAAA,MAAAC,EAAAhB,OAAAC,gBAAAD,OAAAiB,yBAAA,IAAA,IAAAC,KAAAzB,EAAAyB,GAAAA,YAAAA,GAAAC,CAAAA,EAAAA,eAAAC,KAAA3B,EAAAyB,GAAAG,CAAAA,IAAAA,EAAAL,EAAAhB,OAAAiB,yBAAAxB,EAAAyB,GAAAG,KAAAA,IAAAA,EAAAR,KAAAQ,EAAAC,KAAAtB,OAAAC,eAAAa,EAAAI,EAAAG,GAAAP,EAAAI,GAAAzB,EAAAyB,GAAAJ,OAAAA,EAAAf,QAAAN,EAAAG,GAAAA,EAAA0B,IAAA7B,EAAAqB,GAAAA,CAAA,CAAtES,CAAAZ,iBAUA,MAAMa,4BAA8BA,CAACC,cAAeC,mBAChD,MAAMC,eAAiB,IAAIC,SAAO7B,QAAC,qCAC7B8B,sBAAwBJ,cAAcK,cAAcnB,gBAAgBoB,QAAQC,iBAElF,OAAOC,WAASlC,QAACmC,iBAAiB,4CAA6C,CAACC,QAAST,kBACpFU,MAAKC,OAAgB,IAAfC,KAACA,KAAIC,GAAEA,IAAGF,KACbJ,WAASlC,QAACyC,YAAYX,sBAAuBS,KAAMC,IAEnDE,kBAGA,MAAMC,gBAAkBjB,cAAcK,cAAcnB,gBAAgBgC,QAAQD,iBAG5E,OAFAA,uBAAAA,gBAAiBE,QAEVjB,eAAekB,SAAS,GACjC,EAMJJ,gBAAkBA,KACpB,MAGMC,gBAHgBI,SAAShB,cAAcnB,gBAAgBoB,QAAQgB,QAG/BjB,cAAcnB,gBAAgBgC,QAAQD,iBAC5EM,kBAAYjD,QAACkD,aAAaP,iBAAiB,EAAO,IAAI,EAAAQ,KAAAA,WAAU,gBAAiB,uBAC5EC,MAAMC,cAAAA,QAAaC,UAAU,EA4GpCnD,SAAAE,KApGkBkD,gBAChB,EAAAC,2BAAgB,qBAAsB,CAClC,eACA,sBACA,cACA,gBACA,cACA,mBAGJ,EAAAA,2BAAgB,OAAQ,CACpB,WAGJd,kBACIa,eAKJR,SAASU,iBAAiB,UAAUC,QAChC,MAAMf,gBAAkBe,MAAMC,OAAOC,QAAQhD,gBAAgBgC,QAAQD,iBACrE,GAAIA,gBAAiB,CAIjB,GAHAe,MAAMG,iBAGwB,KAA1BlB,gBAAgBvC,OAA0C,MAA1BuC,gBAAgBvC,MAChD,OAGJ,MAAMsB,cAAgBiB,gBAAgBiB,QAAQhD,gBAAgBoB,QAAQgB,QAChEpB,eAAiB,IAAIC,SAAO7B,QAAC,mCAEnC,EAAA8D,SAASA,WAACpC,cAAcqC,QAAQC,SAAUrB,gBAAgBvC,OACrDiC,MAAK4B,MAAQxC,4BAA4BC,cAAeuC,QACxD5B,MAAK,KAAM,EAAAc,KAASA,WAAC,cAAe,qBACjCR,gBAAgBuB,QAAQvB,gBAAgBwB,eAAeC,QAC1D/B,KAAKgC,OAAQC,KACbjC,MAAK,IAAMT,eAAekB,YAC1BM,MAAMC,cAAYrD,QAACsD,UAC5B,KAGJP,SAASU,iBAAiB,SAASC,QAG/B,MAAMa,mBAAqBb,MAAMC,OAAOC,QAAQhD,gBAAgBgC,QAAQ2B,oBACxE,GAAIA,mBAAoB,CACpBb,MAAMG,iBAEN,MAAMnC,cAAgB6C,mBAAmBX,QAAQhD,gBAAgBoB,QAAQgB,QACnEwB,gBAAkBD,mBAAmBX,QAAQhD,gBAAgBoB,QAAQyC,cACrEC,WAAaF,gBAAgBT,QAAQW,WAE3CrB,cAAAA,QAAasB,mBACT,EAAAxB,KAASA,WAAC,eAAgB,qBAAsBuB,aAChD,EAAAvB,KAAAA,WAAU,sBAAuB,qBAAsBuB,aACvD,EAAAvB,KAAAA,WAAU,SAAU,QACpB,CAACyB,eAAgBL,qBACnBlC,MAAK,KACH,MAAMT,eAAiB,IAAIC,SAAO7B,QAAC,qCAEnC,OAAO,EAAA6E,SAAAA,cAAanD,cAAcqC,QAAQC,SAAUQ,gBAAgBT,QAAQe,UACvEzC,MAAK4B,MAAQxC,4BAA4BC,cAAeuC,QACxD5B,MAAK,KAAM,EAAAgC,OAAQC,MAAC,EAAAnB,KAAAA,WAAU,gBAAiB,qBAAsBuB,eACrErC,MAAK,IAAMT,eAAekB,YAC1BM,MAAMC,cAAYrD,QAACsD,UAAU,IACnCF,OAAM,KACL,GAER,KAI4B,IAAI2B,eAAAA,QAAa,GAAGnE,gBAAgBoB,QAAQgD,mBAAoB,CAACC,cAAc,IACrFC,eAAiBC,SAAWC,QAAQtC,QAAQqC,QAAQlB,KAAK,gBAEnF,EAAAoB,QAAAA,SAAEtC,UAAUuC,GAAGP,eAAAA,QAAaQ,OAAOC,KAAM,GAAG5E,gBAAgBoB,QAAQgB,6BAA6B,CAACU,MAAO+B,QACrG,GAAIA,KAAKC,gBAAiB,CACtB,MAAM9D,eAAiB,IAAIC,SAAO7B,QAAC,sCAC7B0B,cAAgBgC,MAAMC,OAAOC,QAAQhD,gBAAgBoB,QAAQgB,QAC7D8B,SAAWW,KAAKN,QAAQlB,KAAK,YAC7B0B,eAAiBF,KAAKN,QAAQlB,KAAK,kBAGzC,IAAI2B,qBAAuBH,KAAKI,kBAAkB5B,KAAK,mBAAqBwB,KAAKN,QAAQW,WAAWC,OAAS,EACzGH,qBAAuBD,gBACvBC,uBAIJ,MAAMI,gBAAiB,EAAAC,SAAAA,eAAcvE,cAAcqC,QAAQC,SAAUc,SAAUc,sBAC/ER,QAAQc,IAAI,CAACF,eAAgB,IAAIZ,SAAQtC,SAAWqD,WAAWrD,QAAS,SACnET,MAAK+D,QAAA,IAAEnC,MAAKmC,MAAA,OAAK3E,4BAA4BC,cAAeuC,KAAK,IACjE5B,MAAK,KAAM,EAAAc,KAAAA,WAAU,cAAe,qBAAsBsC,KAAKN,QAAQlB,KAAK,iBAC5E5B,KAAKgC,OAAQC,KACbjC,MAAK,IAAMT,eAAekB,YAC1BM,MAAMC,cAAYrD,QAACsD,UAC5B,KACF,CACJ"}