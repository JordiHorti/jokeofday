{"version":3,"file":"view_manager.min.js","sources":["../src/view_manager.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A javascript module to handler calendar view changes.\n *\n * @module     core_calendar/view_manager\n * @copyright  2017 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\nimport * as CalendarRepository from 'core_calendar/repository';\nimport CalendarEvents from 'core_calendar/events';\nimport * as CalendarSelectors from 'core_calendar/selectors';\nimport ModalEvents from 'core/modal_events';\nimport SummaryModal from 'core_calendar/summary_modal';\nimport CustomEvents from 'core/custom_interaction_events';\nimport {getString} from 'core/str';\nimport Pending from 'core/pending';\nimport {prefetchStrings} from 'core/prefetch';\nimport Url from 'core/url';\nimport Config from 'core/config';\n\n/**\n * Limit number of events per day\n *\n */\nconst LIMIT_DAY_EVENTS = 5;\n\n/**\n * Hide day events if more than 5.\n *\n */\nexport const foldDayEvents = () => {\n    const root = $(CalendarSelectors.elements.monthDetailed);\n    const days = root.find(CalendarSelectors.day);\n    if (days.length === 0) {\n        return;\n    }\n    days.each(function() {\n        const dayContainer = $(this);\n        const eventsSelector = `${CalendarSelectors.elements.dateContent} ul li[data-event-eventtype]`;\n        const filteredEventsSelector = `${CalendarSelectors.elements.dateContent} ul li[data-event-filtered=\"true\"]`;\n        const moreEventsSelector = `${CalendarSelectors.elements.dateContent} [data-action=\"view-more-events\"]`;\n        const events = dayContainer.find(eventsSelector);\n        if (events.length === 0) {\n            return;\n        }\n\n        const filteredEvents = dayContainer.find(filteredEventsSelector);\n        const numberOfFiltered = filteredEvents.length;\n        const numberOfEvents = events.length - numberOfFiltered;\n\n        let count = 1;\n        events.each(function() {\n            const event = $(this);\n            const isNotFiltered = event.attr('data-event-filtered') !== 'true';\n            const offset = (numberOfEvents === LIMIT_DAY_EVENTS) ? 0 : 1;\n            if (isNotFiltered) {\n                if (count > LIMIT_DAY_EVENTS - offset) {\n                    event.attr('data-event-folded', 'true');\n                    event.hide();\n                } else {\n                    event.attr('data-event-folded', 'false');\n                    event.show();\n                    count++;\n                }\n            } else {\n                // It's being filtered out.\n                event.attr('data-event-folded', 'false');\n            }\n        });\n\n        const moreEventsLink = dayContainer.find(moreEventsSelector);\n        if (numberOfEvents > LIMIT_DAY_EVENTS) {\n            const numberOfHiddenEvents = numberOfEvents - LIMIT_DAY_EVENTS + 1;\n            moreEventsLink.show();\n            getString('moreevents', 'calendar', numberOfHiddenEvents).then(str => {\n                const link = moreEventsLink.find('strong a');\n                moreEventsLink.attr('data-event-folded', 'false');\n                link.text(str);\n                return str;\n            }).catch(Notification.exception);\n        } else {\n            moreEventsLink.hide();\n        }\n    });\n};\n\n/**\n * Register and handle month calendar events.\n *\n * @param {string} pendingId pending id.\n */\nexport const registerEventListenersForMonthDetailed = (pendingId) => {\n    const events = `${CalendarEvents.viewUpdated}`;\n    $('body').on(events, function(e) {\n        foldDayEvents(e);\n    });\n    foldDayEvents();\n    $('body').on(CalendarEvents.filterChanged, function(e, data) {\n        const root = $(CalendarSelectors.elements.monthDetailed);\n        const pending = new Pending(pendingId);\n        const target = root.find(CalendarSelectors.eventType[data.type]);\n        const transitionPromise = $.Deferred();\n        if (data.hidden) {\n            transitionPromise.then(function() {\n                target.attr('data-event-filtered', 'true');\n                return target.hide().promise();\n            }).fail();\n        } else {\n            transitionPromise.then(function() {\n                target.attr('data-event-filtered', 'false');\n                return target.show().promise();\n            }).fail();\n        }\n\n        transitionPromise.then(function() {\n            foldDayEvents();\n            return;\n        })\n        .always(pending.resolve)\n        .fail();\n\n        transitionPromise.resolve();\n    });\n};\n\n/**\n * Register event listeners for the module.\n *\n * @param {object} root The root element.\n * @param {boolean} isCalendarBlock - A flag indicating whether this is a calendar block.\n */\nconst registerEventListeners = (root, isCalendarBlock) => {\n    root = $(root);\n\n    // Bind click events to event links.\n    root.on('click', CalendarSelectors.links.eventLink, (e) => {\n        const target = e.target;\n        let eventLink = null;\n        let eventId = null;\n        const pendingPromise = new Pending('core_calendar/view_manager:eventLink:click');\n\n        if (target.matches(CalendarSelectors.actions.viewEvent)) {\n            eventLink = target;\n        } else {\n            eventLink = target.closest(CalendarSelectors.actions.viewEvent);\n        }\n\n        if (eventLink) {\n            eventId = eventLink.dataset.eventId;\n        } else {\n            eventId = target.querySelector(CalendarSelectors.actions.viewEvent).dataset.eventId;\n        }\n\n        if (eventId) {\n            // A link was found. Show the modal.\n\n            e.preventDefault();\n            // We've handled the event so stop it from bubbling\n            // and causing the day click handler to fire.\n            e.stopPropagation();\n\n            renderEventSummaryModal(eventId)\n            .then(pendingPromise.resolve)\n            .catch();\n        } else {\n            pendingPromise.resolve();\n        }\n    });\n\n    root.on('click', CalendarSelectors.links.navLink, (e) => {\n        const wrapper = root.find(CalendarSelectors.wrapper);\n        const view = wrapper.data('view');\n        const courseId = wrapper.data('courseid');\n        const categoryId = wrapper.data('categoryid');\n        const link = e.currentTarget;\n\n        if (view === 'month' || view === 'monthblock') {\n            changeMonth(root, link.href, link.dataset.year, link.dataset.month,\n                courseId, categoryId, link.dataset.day, isCalendarBlock);\n            e.preventDefault();\n        } else if (view === 'day') {\n            changeDay(root, link.href, link.dataset.year, link.dataset.month, link.dataset.day,\n                courseId, categoryId, isCalendarBlock);\n            e.preventDefault();\n        }\n    });\n\n    const viewSelector = root.find(CalendarSelectors.viewSelector);\n    CustomEvents.define(viewSelector, [CustomEvents.events.activate]);\n    viewSelector.on(\n        CustomEvents.events.activate,\n        (e) => {\n            e.preventDefault();\n\n            const option = e.target;\n            if (option.classList.contains('active')) {\n                return;\n            }\n\n            const view = option.dataset.view,\n                year = option.dataset.year,\n                month = option.dataset.month,\n                day = option.dataset.day,\n                courseId = option.dataset.courseid,\n                categoryId = option.dataset.categoryid;\n\n            if (view == 'month') {\n                refreshMonthContent(root, year, month, courseId, categoryId, root, 'core_calendar/calendar_month', day)\n                    .then(() => {\n                        updateUrl('?view=month&course=' + courseId);\n                        return;\n                    }).fail(Notification.exception);\n            } else if (view == 'day') {\n                refreshDayContent(root, year, month, day, courseId, categoryId, root, 'core_calendar/calendar_day')\n                    .then(() => {\n                        updateUrl('?view=day&course=' + courseId);\n                        return;\n                    }).fail(Notification.exception);\n            } else if (view == 'upcoming') {\n                reloadCurrentUpcoming(root, courseId, categoryId, root, 'core_calendar/calendar_upcoming')\n                    .then(() => {\n                        updateUrl('?view=upcoming&course=' + courseId);\n                        return;\n                    }).fail(Notification.exception);\n            }\n        }\n    );\n};\n\n/**\n * Refresh the month content.\n *\n * @param {object} root The root element.\n * @param {number} year Year\n * @param {number} month Month\n * @param {number} courseId The id of the course whose events are shown\n * @param {number} categoryId The id of the category whose events are shown\n * @param {object} target The element being replaced. If not specified, the calendarwrapper is used.\n * @param {string} template The template to be rendered.\n * @param {number} day Day (optional)\n * @return {promise}\n */\nexport const refreshMonthContent = (root, year, month, courseId, categoryId, target = null, template = '', day = 1) => {\n    startLoading(root);\n\n    target = target || root.find(CalendarSelectors.wrapper);\n    template = template || root.attr('data-template');\n    M.util.js_pending([root.get('id'), year, month, courseId].join('-'));\n    const includenavigation = root.data('includenavigation');\n    const mini = root.data('mini');\n    const viewMode = target.data('view');\n    return CalendarRepository.getCalendarMonthData(year, month, courseId, categoryId, includenavigation, mini, day, viewMode)\n        .then(context => {\n            return Templates.render(template, context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(target, html, js);\n        })\n        .then(() => {\n            document.querySelector('body').dispatchEvent(new CustomEvent(CalendarEvents.viewUpdated));\n            return;\n        })\n        .always(() => {\n            M.util.js_complete([root.get('id'), year, month, courseId].join('-'));\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Handle changes to the current calendar view.\n *\n * @param {object} root The container element\n * @param {string} url The calendar url to be shown\n * @param {number} year Year\n * @param {number} month Month\n * @param {number} courseId The id of the course whose events are shown\n * @param {number} categoryId The id of the category whose events are shown\n * @param {number} day Day (optional)\n * @param {boolean} [isCalendarBlock=false] - A flag indicating whether this is a calendar block.\n * @return {promise}\n */\nexport const changeMonth = (root, url, year, month, courseId, categoryId, day = 1, isCalendarBlock = false) => {\n    return refreshMonthContent(root, year, month, courseId, categoryId, null, '', day)\n        .then((...args) => {\n            if (url.length && url !== '#' && !isCalendarBlock) {\n                updateUrl(url);\n            }\n            return args;\n        })\n        .then((...args) => {\n            $('body').trigger(CalendarEvents.monthChanged, [year, month, courseId, categoryId, day, isCalendarBlock]);\n            return args;\n        });\n};\n\n/**\n * Reload the current month view data.\n *\n * @param {object} root The container element.\n * @param {number} courseId The course id.\n * @param {number} categoryId The id of the category whose events are shown\n * @return {promise}\n */\nexport const reloadCurrentMonth = (root, courseId = 0, categoryId = 0) => {\n    const year = root.find(CalendarSelectors.wrapper).data('year');\n    const month = root.find(CalendarSelectors.wrapper).data('month');\n    const day = root.find(CalendarSelectors.wrapper).data('day');\n\n    courseId = courseId || root.find(CalendarSelectors.wrapper).data('courseid');\n    categoryId = categoryId || root.find(CalendarSelectors.wrapper).data('categoryid');\n\n    return refreshMonthContent(root, year, month, courseId, categoryId, null, '', day).\n        then((...args) => {\n            $('body').trigger(CalendarEvents.courseChanged, [year, month, courseId, categoryId]);\n            return args;\n        });\n};\n\n\n/**\n * Refresh the day content.\n *\n * @param {object} root The root element.\n * @param {number} year Year\n * @param {number} month Month\n * @param {number} day Day\n * @param {number} courseId The id of the course whose events are shown\n * @param {number} categoryId The id of the category whose events are shown\n * @param {object} target The element being replaced. If not specified, the calendarwrapper is used.\n * @param {string} template The template to be rendered.\n * @param {boolean} isCalendarBlock - A flag indicating whether this is a calendar block.\n *\n * @return {promise}\n */\nexport const refreshDayContent = (root, year, month, day, courseId, categoryId,\n    target = null, template = '', isCalendarBlock = false) => {\n    startLoading(root);\n\n    if (!target || target.length == 0){\n        target = root.find(CalendarSelectors.wrapper);\n    }\n    template = template || root.attr('data-template');\n    M.util.js_pending([root.get('id'), year, month, day, courseId, categoryId].join('-'));\n    const includenavigation = root.data('includenavigation');\n    return CalendarRepository.getCalendarDayData(year, month, day, courseId, categoryId, includenavigation)\n        .then((context) => {\n            context.viewingday = true;\n            context.showviewselector = true;\n            context.iscalendarblock = isCalendarBlock;\n            return Templates.render(template, context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(target, html, js);\n        })\n        .then(() => {\n            document.querySelector('body').dispatchEvent(new CustomEvent(CalendarEvents.viewUpdated));\n            return;\n        })\n        .always(() => {\n            M.util.js_complete([root.get('id'), year, month, day, courseId, categoryId].join('-'));\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Reload the current day view data.\n *\n * @param {object} root The container element.\n * @param {number} courseId The course id.\n * @param {number} categoryId The id of the category whose events are shown\n * @return {promise}\n */\nexport const reloadCurrentDay = (root, courseId = 0, categoryId = 0) => {\n    const wrapper = root.find(CalendarSelectors.wrapper);\n    const year = wrapper.data('year');\n    const month = wrapper.data('month');\n    const day = wrapper.data('day');\n\n    courseId = courseId || root.find(CalendarSelectors.wrapper).data('courseid');\n    categoryId = categoryId || root.find(CalendarSelectors.wrapper).data('categoryid');\n\n    return refreshDayContent(root, year, month, day, courseId, categoryId);\n};\n\n/**\n * Handle changes to the current calendar view.\n *\n * @param {object} root The root element.\n * @param {String} url The calendar url to be shown\n * @param {Number} year Year\n * @param {Number} month Month\n * @param {Number} day Day\n * @param {Number} courseId The id of the course whose events are shown\n * @param {Number} categoryId The id of the category whose events are shown\n * @param {boolean} [isCalendarBlock=false] - A flag indicating whether this is a calendar block.\n * @return {promise}\n */\nexport const changeDay = (root, url, year, month, day, courseId, categoryId, isCalendarBlock = false) => {\n    return refreshDayContent(root, year, month, day, courseId, categoryId, null, '', isCalendarBlock)\n        .then((...args) => {\n            if (url.length && url !== '#' && !isCalendarBlock) {\n                updateUrl(url);\n            }\n            return args;\n        })\n        .then((...args) => {\n            $('body').trigger(CalendarEvents.dayChanged, [year, month, courseId, categoryId, isCalendarBlock]);\n            return args;\n        });\n};\n\n/**\n * Update calendar URL.\n *\n * @param {String} url The calendar url to be updated.\n */\nexport const updateUrl = (url) => {\n    const viewingFullCalendar = document.getElementById(CalendarSelectors.fullCalendarView);\n\n    // We want to update the url only if the user is viewing the full calendar.\n    if (viewingFullCalendar) {\n        window.history.pushState({}, '', url);\n    }\n};\n\n/**\n * Set the element state to loading.\n *\n * @param {object} root The container element\n * @method startLoading\n */\nconst startLoading = (root) => {\n    const loadingIconContainer = root.find(CalendarSelectors.containers.loadingIcon);\n\n    loadingIconContainer.removeClass('hidden');\n};\n\n/**\n * Remove the loading state from the element.\n *\n * @param {object} root The container element\n * @method stopLoading\n */\nconst stopLoading = (root) => {\n    const loadingIconContainer = root.find(CalendarSelectors.containers.loadingIcon);\n\n    loadingIconContainer.addClass('hidden');\n};\n\n/**\n * Reload the current month view data.\n *\n * @param {object} root The container element.\n * @param {number} courseId The course id.\n * @param {number} categoryId The id of the category whose events are shown\n * @param {object} target The element being replaced. If not specified, the calendarwrapper is used.\n * @param {string} template The template to be rendered.\n * @return {promise}\n */\nexport const reloadCurrentUpcoming = (root, courseId = 0, categoryId = 0, target = null, template = '') => {\n    startLoading(root);\n\n    target = target || root.find(CalendarSelectors.wrapper);\n    template = template || root.attr('data-template');\n    courseId = courseId || root.find(CalendarSelectors.wrapper).data('courseid');\n    categoryId = categoryId || root.find(CalendarSelectors.wrapper).data('categoryid');\n\n    return CalendarRepository.getCalendarUpcomingData(courseId, categoryId)\n        .then((context) => {\n            context.viewingupcoming = true;\n            context.showviewselector = true;\n            return Templates.render(template, context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(target, html, js);\n        })\n        .then(() => {\n            document.querySelector('body').dispatchEvent(new CustomEvent(CalendarEvents.viewUpdated));\n            return;\n        })\n        .always(function() {\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Get the CSS class to apply for the given event type.\n *\n * @param {string} eventType The calendar event type\n * @return {string}\n */\nconst getEventTypeClassFromType = (eventType) => {\n    return 'calendar_event_' + eventType;\n};\n\n/**\n * Render the event summary modal.\n *\n * @param {Number} eventId The calendar event id.\n * @returns {Promise}\n */\nconst renderEventSummaryModal = (eventId) => {\n    const pendingPromise = new Pending('core_calendar/view_manager:renderEventSummaryModal');\n\n    // Calendar repository promise.\n    return CalendarRepository.getEventById(eventId)\n    .then((getEventResponse) => {\n        if (!getEventResponse.event) {\n            throw new Error('Error encountered while trying to fetch calendar event with ID: ' + eventId);\n        }\n\n        return getEventResponse.event;\n    })\n    .then(eventData => {\n        // Build the modal parameters from the event data.\n        const modalParams = {\n            title: eventData.name,\n            body: Templates.render('core_calendar/event_summary_body', eventData),\n            templateContext: {\n                canedit: eventData.canedit,\n                candelete: eventData.candelete,\n                headerclasses: getEventTypeClassFromType(eventData.normalisedeventtype),\n                isactionevent: eventData.isactionevent,\n                url: eventData.url,\n                action: eventData.action\n            }\n        };\n\n        // Create the modal.\n        return SummaryModal.create(modalParams);\n    })\n    .then(modal => {\n        // Handle hidden event.\n        modal.getRoot().on(ModalEvents.hidden, function() {\n            // Destroy when hidden.\n            modal.destroy();\n        });\n\n        // Finally, render the modal!\n        modal.show();\n\n        return modal;\n    })\n    .then(modal => {\n        pendingPromise.resolve();\n\n        return modal;\n    })\n    .catch(Notification.exception);\n};\n\n/**\n * Initializes the calendar component by prefetching strings, folding day events,\n * and registering event listeners.\n *\n * @param {HTMLElement} root - The root element where the calendar view manager and event listeners will be attached.\n * @param {string} view - A flag indicating whether this is a calendar block.\n * @param {boolean} isCalendarBlock - A flag indicating whether this is a calendar block.\n */\nexport const init = (root, view, isCalendarBlock) => {\n    prefetchStrings('calendar', ['moreevents']);\n    foldDayEvents();\n    registerEventListeners(root, isCalendarBlock);\n    const calendarTable = root.find(CalendarSelectors.elements.monthDetailed);\n    if (calendarTable.length) {\n        const pendingId = `month-detailed-${calendarTable.id}-filterChanged`;\n        registerEventListenersForMonthDetailed(calendarTable, pendingId);\n    }\n};\n\n/**\n * Handles the change of course and updates the relevant elements on the page.\n *\n * @param {integer} courseId - The ID of the new course.\n * @param {string} courseName - The name of the new course.\n * @returns {Promise<void>} - A promise that resolves after the updates are applied.\n */\nexport const handleCourseChange = async(courseId, courseName) => {\n    // Select the <ul> element inside the data-region=\"view-selector\".\n    const ulElement = document.querySelector(CalendarSelectors.viewSelector + ' ul');\n    // Select all <li><a> elements within the <ul>.\n    const liElements = ulElement.querySelectorAll('li a');\n    // Loop through the selected elements and update the courseid.\n    liElements.forEach(element => {\n        element.setAttribute('data-courseid', courseId);\n    });\n\n    const calendar = await getString('calendar', 'calendar');\n    const pageHeaderHeadingsElement = document.querySelector(CalendarSelectors.pageHeaderHeadings);\n    const courseUrl = Url.relativeUrl('/course/view.php', {id: courseId});\n    // Apply the page header text.\n    if (courseId !== Config.siteId) {\n        pageHeaderHeadingsElement.innerHTML = calendar + ': <a href=\"' + courseUrl + '\">' + courseName + '</a>';\n    } else {\n        pageHeaderHeadingsElement.innerHTML = calendar;\n    }\n};"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireWildcard","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireDefault","_jquery","_templates","_notification","CalendarRepository","_events","CalendarSelectors","_modal_events","_summary_modal","_custom_interaction_events","_pending","_url","_config","foldDayEvents","days","$","elements","monthDetailed","find","day","length","each","dayContainer","this","eventsSelector","dateContent","filteredEventsSelector","moreEventsSelector","events","numberOfFiltered","numberOfEvents","count","event","attr","hide","show","moreEventsLink","numberOfHiddenEvents","getString","then","str","link","text","catch","Notification","exception","_exports","registerEventListenersForMonthDetailed","pendingId","CalendarEvents","viewUpdated","on","filterChanged","data","root","pending","Pending","target","eventType","type","transitionPromise","Deferred","hidden","promise","fail","always","resolve","refreshMonthContent","year","month","courseId","categoryId","arguments","undefined","template","startLoading","wrapper","M","util","js_pending","join","includenavigation","mini","viewMode","getCalendarMonthData","context","Templates","render","html","js","replaceNode","document","querySelector","dispatchEvent","CustomEvent","js_complete","stopLoading","changeMonth","url","isCalendarBlock","updateUrl","_len","args","Array","_key","trigger","monthChanged","_len2","_key2","reloadCurrentMonth","courseChanged","_len3","_key3","refreshDayContent","getCalendarDayData","viewingday","showviewselector","iscalendarblock","reloadCurrentDay","changeDay","_len4","_key4","dayChanged","_len5","_key5","getElementById","fullCalendarView","window","history","pushState","containers","loadingIcon","removeClass","addClass","reloadCurrentUpcoming","getCalendarUpcomingData","viewingupcoming","renderEventSummaryModal","eventId","pendingPromise","getEventById","getEventResponse","Error","eventData","modalParams","title","name","body","templateContext","canedit","candelete","headerclasses","normalisedeventtype","isactionevent","action","SummaryModal","create","modal","getRoot","ModalEvents","destroy","init","view","prefetchStrings","registerEventListeners","links","eventLink","matches","actions","viewEvent","closest","dataset","preventDefault","stopPropagation","navLink","currentTarget","href","viewSelector","CustomEvents","define","activate","option","classList","contains","courseid","categoryid","calendarTable","id","handleCourseChange","async","courseName","querySelectorAll","forEach","element","setAttribute","calendar","pageHeaderHeadingsElement","pageHeaderHeadings","courseUrl","Url","relativeUrl","Config","siteId","innerHTML"],"mappings":"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"}