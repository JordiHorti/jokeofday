{"version":3,"file":"video-lazy.min.js","sources":["../src/video-lazy.js"],"sourcesContent":["/**\n * @license\n * Video.js 8.17.3 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/main/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/main/LICENSE>\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.videojs = factory());\n})(this, (function () { 'use strict';\n\n  var version$5 = \"8.17.3\";\n\n  /**\n   * An Object that contains lifecycle hooks as keys which point to an array\n   * of functions that are run when a lifecycle is triggered\n   *\n   * @private\n   */\n  const hooks_ = {};\n\n  /**\n   * Get a list of hooks for a specific lifecycle\n   *\n   * @param  {string} type\n   *         the lifecycle to get hooks from\n   *\n   * @param  {Function|Function[]} [fn]\n   *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n   *\n   * @return {Array}\n   *         an array of hooks, or an empty array if there are none.\n   */\n  const hooks = function (type, fn) {\n    hooks_[type] = hooks_[type] || [];\n    if (fn) {\n      hooks_[type] = hooks_[type].concat(fn);\n    }\n    return hooks_[type];\n  };\n\n  /**\n   * Add a function hook to a specific videojs lifecycle.\n   *\n   * @param {string} type\n   *        the lifecycle to hook the function to.\n   *\n   * @param {Function|Function[]}\n   *        The function or array of functions to attach.\n   */\n  const hook = function (type, fn) {\n    hooks(type, fn);\n  };\n\n  /**\n   * Remove a hook from a specific videojs lifecycle.\n   *\n   * @param  {string} type\n   *         the lifecycle that the function hooked to\n   *\n   * @param  {Function} fn\n   *         The hooked function to remove\n   *\n   * @return {boolean}\n   *         The function that was removed or undef\n   */\n  const removeHook = function (type, fn) {\n    const index = hooks(type).indexOf(fn);\n    if (index <= -1) {\n      return false;\n    }\n    hooks_[type] = hooks_[type].slice();\n    hooks_[type].splice(index, 1);\n    return true;\n  };\n\n  /**\n   * Add a function hook that will only run once to a specific videojs lifecycle.\n   *\n   * @param {string} type\n   *        the lifecycle to hook the function to.\n   *\n   * @param {Function|Function[]}\n   *        The function or array of functions to attach.\n   */\n  const hookOnce = function (type, fn) {\n    hooks(type, [].concat(fn).map(original => {\n      const wrapper = (...args) => {\n        removeHook(type, wrapper);\n        return original(...args);\n      };\n      return wrapper;\n    }));\n  };\n\n  /**\n   * @file fullscreen-api.js\n   * @module fullscreen-api\n   */\n\n  /**\n   * Store the browser-specific methods for the fullscreen API.\n   *\n   * @type {Object}\n   * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n   * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n   */\n  const FullscreenApi = {\n    prefixed: true\n  };\n\n  // browser API methods\n  const apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'],\n  // WebKit\n  ['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen']];\n  const specApi = apiMap[0];\n  let browserApi;\n\n  // determine the supported set of functions\n  for (let i = 0; i < apiMap.length; i++) {\n    // check for exitFullscreen function\n    if (apiMap[i][1] in document) {\n      browserApi = apiMap[i];\n      break;\n    }\n  }\n\n  // map the browser API names to the spec API names\n  if (browserApi) {\n    for (let i = 0; i < browserApi.length; i++) {\n      FullscreenApi[specApi[i]] = browserApi[i];\n    }\n    FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n  }\n\n  /**\n   * @file create-logger.js\n   * @module create-logger\n   */\n\n  // This is the private tracking variable for the logging history.\n  let history = [];\n\n  /**\n   * Log messages to the console and history based on the type of message\n   *\n   * @private\n   * @param  {string} name\n   *         The name of the console method to use.\n   *\n   * @param  {Object} log\n   *         The arguments to be passed to the matching console method.\n   *\n   * @param {string} [styles]\n   *        styles for name\n   */\n  const LogByTypeFactory = (name, log, styles) => (type, level, args) => {\n    const lvl = log.levels[level];\n    const lvlRegExp = new RegExp(`^(${lvl})$`);\n    let resultName = name;\n    if (type !== 'log') {\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    }\n    if (styles) {\n      resultName = `%c${name}`;\n      args.unshift(styles);\n    }\n\n    // Add console prefix after adding to history.\n    args.unshift(resultName + ':');\n\n    // Add a clone of the args at this point to history.\n    if (history) {\n      history.push([].concat(args));\n\n      // only store 1000 history entries\n      const splice = history.length - 1000;\n      history.splice(0, splice > 0 ? splice : 0);\n    }\n\n    // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n    if (!window.console) {\n      return;\n    }\n\n    // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n    let fn = window.console[type];\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window.console.info || window.console.log;\n    }\n\n    // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n    fn[Array.isArray(args) ? 'apply' : 'call'](window.console, args);\n  };\n  function createLogger$1(name, delimiter = ':', styles = '') {\n    // This is the private tracking variable for logging level.\n    let level = 'info';\n\n    // the curried logByType bound to the specific log and history\n    let logByType;\n\n    /**\n     * Logs plain debug messages. Similar to `console.log`.\n     *\n     * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n     * of our JSDoc template, we cannot properly document this as both a function\n     * and a namespace, so its function signature is documented here.\n     *\n     * #### Arguments\n     * ##### *args\n     * *[]\n     *\n     * Any combination of values that could be passed to `console.log()`.\n     *\n     * #### Return Value\n     *\n     * `undefined`\n     *\n     * @namespace\n     * @param    {...*} args\n     *           One or more messages or objects that should be logged.\n     */\n    function log(...args) {\n      logByType('log', level, args);\n    }\n\n    // This is the logByType helper that the logging methods below use\n    logByType = LogByTypeFactory(name, log, styles);\n\n    /**\n     * Create a new subLogger which chains the old name to the new name.\n     *\n     * For example, doing `mylogger = videojs.log.createLogger('player')` and then using that logger will log the following:\n     * ```js\n     *  mylogger('foo');\n     *  // > VIDEOJS: player: foo\n     * ```\n     *\n     * @param {string} subName\n     *        The name to add call the new logger\n     * @param {string} [subDelimiter]\n     *        Optional delimiter\n     * @param {string} [subStyles]\n     *        Optional styles\n     * @return {Object}\n     */\n    log.createLogger = (subName, subDelimiter, subStyles) => {\n      const resultDelimiter = subDelimiter !== undefined ? subDelimiter : delimiter;\n      const resultStyles = subStyles !== undefined ? subStyles : styles;\n      const resultName = `${name} ${resultDelimiter} ${subName}`;\n      return createLogger$1(resultName, resultDelimiter, resultStyles);\n    };\n\n    /**\n     * Create a new logger.\n     *\n     * @param {string} newName\n     *        The name for the new logger\n     * @param {string} [newDelimiter]\n     *        Optional delimiter\n     * @param {string} [newStyles]\n     *        Optional styles\n     * @return {Object}\n     */\n    log.createNewLogger = (newName, newDelimiter, newStyles) => {\n      return createLogger$1(newName, newDelimiter, newStyles);\n    };\n\n    /**\n     * Enumeration of available logging levels, where the keys are the level names\n     * and the values are `|`-separated strings containing logging methods allowed\n     * in that logging level. These strings are used to create a regular expression\n     * matching the function name being called.\n     *\n     * Levels provided by Video.js are:\n     *\n     * - `off`: Matches no calls. Any value that can be cast to `false` will have\n     *   this effect. The most restrictive.\n     * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n     *   `log.warn`, and `log.error`).\n     * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n     * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n     * - `warn`: Matches `log.warn` and `log.error` calls.\n     * - `error`: Matches only `log.error` calls.\n     *\n     * @type {Object}\n     */\n    log.levels = {\n      all: 'debug|log|warn|error',\n      off: '',\n      debug: 'debug|log|warn|error',\n      info: 'log|warn|error',\n      warn: 'warn|error',\n      error: 'error',\n      DEFAULT: level\n    };\n\n    /**\n     * Get or set the current logging level.\n     *\n     * If a string matching a key from {@link module:log.levels} is provided, acts\n     * as a setter.\n     *\n     * @param  {'all'|'debug'|'info'|'warn'|'error'|'off'} [lvl]\n     *         Pass a valid level to set a new logging level.\n     *\n     * @return {string}\n     *         The current logging level.\n     */\n    log.level = lvl => {\n      if (typeof lvl === 'string') {\n        if (!log.levels.hasOwnProperty(lvl)) {\n          throw new Error(`\"${lvl}\" in not a valid log level`);\n        }\n        level = lvl;\n      }\n      return level;\n    };\n\n    /**\n     * Returns an array containing everything that has been logged to the history.\n     *\n     * This array is a shallow clone of the internal history record. However, its\n     * contents are _not_ cloned; so, mutating objects inside this array will\n     * mutate them in history.\n     *\n     * @return {Array}\n     */\n    log.history = () => history ? [].concat(history) : [];\n\n    /**\n     * Allows you to filter the history by the given logger name\n     *\n     * @param {string} fname\n     *        The name to filter by\n     *\n     * @return {Array}\n     *         The filtered list to return\n     */\n    log.history.filter = fname => {\n      return (history || []).filter(historyItem => {\n        // if the first item in each historyItem includes `fname`, then it's a match\n        return new RegExp(`.*${fname}.*`).test(historyItem[0]);\n      });\n    };\n\n    /**\n     * Clears the internal history tracking, but does not prevent further history\n     * tracking.\n     */\n    log.history.clear = () => {\n      if (history) {\n        history.length = 0;\n      }\n    };\n\n    /**\n     * Disable history tracking if it is currently enabled.\n     */\n    log.history.disable = () => {\n      if (history !== null) {\n        history.length = 0;\n        history = null;\n      }\n    };\n\n    /**\n     * Enable history tracking if it is currently disabled.\n     */\n    log.history.enable = () => {\n      if (history === null) {\n        history = [];\n      }\n    };\n\n    /**\n     * Logs error messages. Similar to `console.error`.\n     *\n     * @param {...*} args\n     *        One or more messages or objects that should be logged as an error\n     */\n    log.error = (...args) => logByType('error', level, args);\n\n    /**\n     * Logs warning messages. Similar to `console.warn`.\n     *\n     * @param {...*} args\n     *        One or more messages or objects that should be logged as a warning.\n     */\n    log.warn = (...args) => logByType('warn', level, args);\n\n    /**\n     * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n     * log if `console.debug` is not available\n     *\n     * @param {...*} args\n     *        One or more messages or objects that should be logged as debug.\n     */\n    log.debug = (...args) => logByType('debug', level, args);\n    return log;\n  }\n\n  /**\n   * @file log.js\n   * @module log\n   */\n  const log$1 = createLogger$1('VIDEOJS');\n  const createLogger = log$1.createLogger;\n\n  /**\n   * @file obj.js\n   * @module obj\n   */\n\n  /**\n   * @callback obj:EachCallback\n   *\n   * @param {*} value\n   *        The current key for the object that is being iterated over.\n   *\n   * @param {string} key\n   *        The current key-value for object that is being iterated over\n   */\n\n  /**\n   * @callback obj:ReduceCallback\n   *\n   * @param {*} accum\n   *        The value that is accumulating over the reduce loop.\n   *\n   * @param {*} value\n   *        The current key for the object that is being iterated over.\n   *\n   * @param {string} key\n   *        The current key-value for object that is being iterated over\n   *\n   * @return {*}\n   *         The new accumulated value.\n   */\n  const toString$1 = Object.prototype.toString;\n\n  /**\n   * Get the keys of an Object\n   *\n   * @param {Object}\n   *        The Object to get the keys from\n   *\n   * @return {string[]}\n   *         An array of the keys from the object. Returns an empty array if the\n   *         object passed in was invalid or had no keys.\n   *\n   * @private\n   */\n  const keys = function (object) {\n    return isObject$1(object) ? Object.keys(object) : [];\n  };\n\n  /**\n   * Array-like iteration for objects.\n   *\n   * @param {Object} object\n   *        The object to iterate over\n   *\n   * @param {obj:EachCallback} fn\n   *        The callback function which is called for each key in the object.\n   */\n  function each(object, fn) {\n    keys(object).forEach(key => fn(object[key], key));\n  }\n\n  /**\n   * Array-like reduce for objects.\n   *\n   * @param {Object} object\n   *        The Object that you want to reduce.\n   *\n   * @param {Function} fn\n   *         A callback function which is called for each key in the object. It\n   *         receives the accumulated value and the per-iteration value and key\n   *         as arguments.\n   *\n   * @param {*} [initial = 0]\n   *        Starting value\n   *\n   * @return {*}\n   *         The final accumulated value.\n   */\n  function reduce(object, fn, initial = 0) {\n    return keys(object).reduce((accum, key) => fn(accum, object[key], key), initial);\n  }\n\n  /**\n   * Returns whether a value is an object of any kind - including DOM nodes,\n   * arrays, regular expressions, etc. Not functions, though.\n   *\n   * This avoids the gotcha where using `typeof` on a `null` value\n   * results in `'object'`.\n   *\n   * @param  {Object} value\n   * @return {boolean}\n   */\n  function isObject$1(value) {\n    return !!value && typeof value === 'object';\n  }\n\n  /**\n   * Returns whether an object appears to be a \"plain\" object - that is, a\n   * direct instance of `Object`.\n   *\n   * @param  {Object} value\n   * @return {boolean}\n   */\n  function isPlain(value) {\n    return isObject$1(value) && toString$1.call(value) === '[object Object]' && value.constructor === Object;\n  }\n\n  /**\n   * Merge two objects recursively.\n   *\n   * Performs a deep merge like\n   * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n   * plain objects (not arrays, elements, or anything else).\n   *\n   * Non-plain object values will be copied directly from the right-most\n   * argument.\n   *\n   * @param   {Object[]} sources\n   *          One or more objects to merge into a new object.\n   *\n   * @return {Object}\n   *          A new object that is the merged result of all sources.\n   */\n  function merge$2(...sources) {\n    const result = {};\n    sources.forEach(source => {\n      if (!source) {\n        return;\n      }\n      each(source, (value, key) => {\n        if (!isPlain(value)) {\n          result[key] = value;\n          return;\n        }\n        if (!isPlain(result[key])) {\n          result[key] = {};\n        }\n        result[key] = merge$2(result[key], value);\n      });\n    });\n    return result;\n  }\n\n  /**\n   * Returns an array of values for a given object\n   *\n   * @param  {Object} source - target object\n   * @return {Array<unknown>} - object values\n   */\n  function values$1(source = {}) {\n    const result = [];\n    for (const key in source) {\n      if (source.hasOwnProperty(key)) {\n        const value = source[key];\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Object.defineProperty but \"lazy\", which means that the value is only set after\n   * it is retrieved the first time, rather than being set right away.\n   *\n   * @param {Object} obj the object to set the property on\n   * @param {string} key the key for the property to set\n   * @param {Function} getValue the function used to get the value when it is needed.\n   * @param {boolean} setter whether a setter should be allowed or not\n   */\n  function defineLazyProperty(obj, key, getValue, setter = true) {\n    const set = value => Object.defineProperty(obj, key, {\n      value,\n      enumerable: true,\n      writable: true\n    });\n    const options = {\n      configurable: true,\n      enumerable: true,\n      get() {\n        const value = getValue();\n        set(value);\n        return value;\n      }\n    };\n    if (setter) {\n      options.set = set;\n    }\n    return Object.defineProperty(obj, key, options);\n  }\n\n  var Obj = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    each: each,\n    reduce: reduce,\n    isObject: isObject$1,\n    isPlain: isPlain,\n    merge: merge$2,\n    values: values$1,\n    defineLazyProperty: defineLazyProperty\n  });\n\n  /**\n   * @file browser.js\n   * @module browser\n   */\n\n  /**\n   * Whether or not this device is an iPod.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  let IS_IPOD = false;\n\n  /**\n   * The detected iOS version - or `null`.\n   *\n   * @static\n   * @type {string|null}\n   */\n  let IOS_VERSION = null;\n\n  /**\n   * Whether or not this is an Android device.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  let IS_ANDROID = false;\n\n  /**\n   * The detected Android version - or `null` if not Android or indeterminable.\n   *\n   * @static\n   * @type {number|string|null}\n   */\n  let ANDROID_VERSION;\n\n  /**\n   * Whether or not this is Mozilla Firefox.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  let IS_FIREFOX = false;\n\n  /**\n   * Whether or not this is Microsoft Edge.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  let IS_EDGE = false;\n\n  /**\n   * Whether or not this is any Chromium Browser\n   *\n   * @static\n   * @type {Boolean}\n   */\n  let IS_CHROMIUM = false;\n\n  /**\n   * Whether or not this is any Chromium browser that is not Edge.\n   *\n   * This will also be `true` for Chrome on iOS, which will have different support\n   * as it is actually Safari under the hood.\n   *\n   * Deprecated, as the behaviour to not match Edge was to prevent Legacy Edge's UA matching.\n   * IS_CHROMIUM should be used instead.\n   * \"Chromium but not Edge\" could be explicitly tested with IS_CHROMIUM && !IS_EDGE\n   *\n   * @static\n   * @deprecated\n   * @type {Boolean}\n   */\n  let IS_CHROME = false;\n\n  /**\n   * The detected Chromium version - or `null`.\n   *\n   * @static\n   * @type {number|null}\n   */\n  let CHROMIUM_VERSION = null;\n\n  /**\n   * The detected Google Chrome version - or `null`.\n   * This has always been the _Chromium_ version, i.e. would return on Chromium Edge.\n   * Deprecated, use CHROMIUM_VERSION instead.\n   *\n   * @static\n   * @deprecated\n   * @type {number|null}\n   */\n  let CHROME_VERSION = null;\n\n  /**\n   * Whether or not this is a Chromecast receiver application.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  const IS_CHROMECAST_RECEIVER = Boolean(window.cast && window.cast.framework && window.cast.framework.CastReceiverContext);\n\n  /**\n   * The detected Internet Explorer version - or `null`.\n   *\n   * @static\n   * @deprecated\n   * @type {number|null}\n   */\n  let IE_VERSION = null;\n\n  /**\n   * Whether or not this is desktop Safari.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  let IS_SAFARI = false;\n\n  /**\n   * Whether or not this is a Windows machine.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  let IS_WINDOWS = false;\n\n  /**\n   * Whether or not this device is an iPad.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  let IS_IPAD = false;\n\n  /**\n   * Whether or not this device is an iPhone.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  // The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n  // to identify iPhones, we need to exclude iPads.\n  // http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n  let IS_IPHONE = false;\n\n  /**\n   * Whether or not this is a Tizen device.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  let IS_TIZEN = false;\n\n  /**\n   * Whether or not this is a WebOS device.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  let IS_WEBOS = false;\n\n  /**\n   * Whether or not this is a Smart TV (Tizen or WebOS) device.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  let IS_SMART_TV = false;\n\n  /**\n   * Whether or not this device is touch-enabled.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n  const TOUCH_ENABLED = Boolean(isReal() && ('ontouchstart' in window || window.navigator.maxTouchPoints || window.DocumentTouch && window.document instanceof window.DocumentTouch));\n  const UAD = window.navigator && window.navigator.userAgentData;\n  if (UAD && UAD.platform && UAD.brands) {\n    // If userAgentData is present, use it instead of userAgent to avoid warnings\n    // Currently only implemented on Chromium\n    // userAgentData does not expose Android version, so ANDROID_VERSION remains `null`\n\n    IS_ANDROID = UAD.platform === 'Android';\n    IS_EDGE = Boolean(UAD.brands.find(b => b.brand === 'Microsoft Edge'));\n    IS_CHROMIUM = Boolean(UAD.brands.find(b => b.brand === 'Chromium'));\n    IS_CHROME = !IS_EDGE && IS_CHROMIUM;\n    CHROMIUM_VERSION = CHROME_VERSION = (UAD.brands.find(b => b.brand === 'Chromium') || {}).version || null;\n    IS_WINDOWS = UAD.platform === 'Windows';\n  }\n\n  // If the browser is not Chromium, either userAgentData is not present which could be an old Chromium browser,\n  //  or it's a browser that has added userAgentData since that we don't have tests for yet. In either case,\n  // the checks need to be made agiainst the regular userAgent string.\n  if (!IS_CHROMIUM) {\n    const USER_AGENT = window.navigator && window.navigator.userAgent || '';\n    IS_IPOD = /iPod/i.test(USER_AGENT);\n    IOS_VERSION = function () {\n      const match = USER_AGENT.match(/OS (\\d+)_/i);\n      if (match && match[1]) {\n        return match[1];\n      }\n      return null;\n    }();\n    IS_ANDROID = /Android/i.test(USER_AGENT);\n    ANDROID_VERSION = function () {\n      // This matches Android Major.Minor.Patch versions\n      // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n      const match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n      if (!match) {\n        return null;\n      }\n      const major = match[1] && parseFloat(match[1]);\n      const minor = match[2] && parseFloat(match[2]);\n      if (major && minor) {\n        return parseFloat(match[1] + '.' + match[2]);\n      } else if (major) {\n        return major;\n      }\n      return null;\n    }();\n    IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n    IS_EDGE = /Edg/i.test(USER_AGENT);\n    IS_CHROMIUM = /Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT);\n    IS_CHROME = !IS_EDGE && IS_CHROMIUM;\n    CHROMIUM_VERSION = CHROME_VERSION = function () {\n      const match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n      if (match && match[2]) {\n        return parseFloat(match[2]);\n      }\n      return null;\n    }();\n    IE_VERSION = function () {\n      const result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n      let version = result && parseFloat(result[1]);\n      if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n        // IE 11 has a different user agent string than other IE versions\n        version = 11.0;\n      }\n      return version;\n    }();\n    IS_TIZEN = /Tizen/i.test(USER_AGENT);\n    IS_WEBOS = /Web0S/i.test(USER_AGENT);\n    IS_SMART_TV = IS_TIZEN || IS_WEBOS;\n    IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE && !IS_SMART_TV;\n    IS_WINDOWS = /Windows/i.test(USER_AGENT);\n    IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n    IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n  }\n\n  /**\n   * Whether or not this is an iOS device.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n  const IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\n  /**\n   * Whether or not this is any flavor of Safari - including iOS.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n  const IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\n  var browser = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    get IS_IPOD () { return IS_IPOD; },\n    get IOS_VERSION () { return IOS_VERSION; },\n    get IS_ANDROID () { return IS_ANDROID; },\n    get ANDROID_VERSION () { return ANDROID_VERSION; },\n    get IS_FIREFOX () { return IS_FIREFOX; },\n    get IS_EDGE () { return IS_EDGE; },\n    get IS_CHROMIUM () { return IS_CHROMIUM; },\n    get IS_CHROME () { return IS_CHROME; },\n    get CHROMIUM_VERSION () { return CHROMIUM_VERSION; },\n    get CHROME_VERSION () { return CHROME_VERSION; },\n    IS_CHROMECAST_RECEIVER: IS_CHROMECAST_RECEIVER,\n    get IE_VERSION () { return IE_VERSION; },\n    get IS_SAFARI () { return IS_SAFARI; },\n    get IS_WINDOWS () { return IS_WINDOWS; },\n    get IS_IPAD () { return IS_IPAD; },\n    get IS_IPHONE () { return IS_IPHONE; },\n    get IS_TIZEN () { return IS_TIZEN; },\n    get IS_WEBOS () { return IS_WEBOS; },\n    get IS_SMART_TV () { return IS_SMART_TV; },\n    TOUCH_ENABLED: TOUCH_ENABLED,\n    IS_IOS: IS_IOS,\n    IS_ANY_SAFARI: IS_ANY_SAFARI\n  });\n\n  /**\n   * @file dom.js\n   * @module dom\n   */\n\n  /**\n   * Detect if a value is a string with any non-whitespace characters.\n   *\n   * @private\n   * @param  {string} str\n   *         The string to check\n   *\n   * @return {boolean}\n   *         Will be `true` if the string is non-blank, `false` otherwise.\n   *\n   */\n  function isNonBlankString(str) {\n    // we use str.trim as it will trim any whitespace characters\n    // from the front or back of non-whitespace characters. aka\n    // Any string that contains non-whitespace characters will\n    // still contain them after `trim` but whitespace only strings\n    // will have a length of 0, failing this check.\n    return typeof str === 'string' && Boolean(str.trim());\n  }\n\n  /**\n   * Throws an error if the passed string has whitespace. This is used by\n   * class methods to be relatively consistent with the classList API.\n   *\n   * @private\n   * @param  {string} str\n   *         The string to check for whitespace.\n   *\n   * @throws {Error}\n   *         Throws an error if there is whitespace in the string.\n   */\n  function throwIfWhitespace(str) {\n    // str.indexOf instead of regex because str.indexOf is faster performance wise.\n    if (str.indexOf(' ') >= 0) {\n      throw new Error('class has illegal whitespace characters');\n    }\n  }\n\n  /**\n   * Whether the current DOM interface appears to be real (i.e. not simulated).\n   *\n   * @return {boolean}\n   *         Will be `true` if the DOM appears to be real, `false` otherwise.\n   */\n  function isReal() {\n    // Both document and window will never be undefined thanks to `global`.\n    return document === window.document;\n  }\n\n  /**\n   * Determines, via duck typing, whether or not a value is a DOM element.\n   *\n   * @param  {*} value\n   *         The value to check.\n   *\n   * @return {boolean}\n   *         Will be `true` if the value is a DOM element, `false` otherwise.\n   */\n  function isEl(value) {\n    return isObject$1(value) && value.nodeType === 1;\n  }\n\n  /**\n   * Determines if the current DOM is embedded in an iframe.\n   *\n   * @return {boolean}\n   *         Will be `true` if the DOM is embedded in an iframe, `false`\n   *         otherwise.\n   */\n  function isInFrame() {\n    // We need a try/catch here because Safari will throw errors when attempting\n    // to get either `parent` or `self`\n    try {\n      return window.parent !== window.self;\n    } catch (x) {\n      return true;\n    }\n  }\n\n  /**\n   * Creates functions to query the DOM using a given method.\n   *\n   * @private\n   * @param   {string} method\n   *          The method to create the query with.\n   *\n   * @return  {Function}\n   *          The query method\n   */\n  function createQuerier(method) {\n    return function (selector, context) {\n      if (!isNonBlankString(selector)) {\n        return document[method](null);\n      }\n      if (isNonBlankString(context)) {\n        context = document.querySelector(context);\n      }\n      const ctx = isEl(context) ? context : document;\n      return ctx[method] && ctx[method](selector);\n    };\n  }\n\n  /**\n   * Creates an element and applies properties, attributes, and inserts content.\n   *\n   * @param  {string} [tagName='div']\n   *         Name of tag to be created.\n   *\n   * @param  {Object} [properties={}]\n   *         Element properties to be applied.\n   *\n   * @param  {Object} [attributes={}]\n   *         Element attributes to be applied.\n   *\n   * @param {ContentDescriptor} [content]\n   *        A content descriptor object.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  function createEl(tagName = 'div', properties = {}, attributes = {}, content) {\n    const el = document.createElement(tagName);\n    Object.getOwnPropertyNames(properties).forEach(function (propName) {\n      const val = properties[propName];\n\n      // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n      if (propName === 'textContent') {\n        textContent(el, val);\n      } else if (el[propName] !== val || propName === 'tabIndex') {\n        el[propName] = val;\n      }\n    });\n    Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n      el.setAttribute(attrName, attributes[attrName]);\n    });\n    if (content) {\n      appendContent(el, content);\n    }\n    return el;\n  }\n\n  /**\n   * Injects text into an element, replacing any existing contents entirely.\n   *\n   * @param  {HTMLElement} el\n   *         The element to add text content into\n   *\n   * @param  {string} text\n   *         The text content to add.\n   *\n   * @return {Element}\n   *         The element with added text content.\n   */\n  function textContent(el, text) {\n    if (typeof el.textContent === 'undefined') {\n      el.innerText = text;\n    } else {\n      el.textContent = text;\n    }\n    return el;\n  }\n\n  /**\n   * Insert an element as the first child node of another\n   *\n   * @param {Element} child\n   *        Element to insert\n   *\n   * @param {Element} parent\n   *        Element to insert child into\n   */\n  function prependTo(child, parent) {\n    if (parent.firstChild) {\n      parent.insertBefore(child, parent.firstChild);\n    } else {\n      parent.appendChild(child);\n    }\n  }\n\n  /**\n   * Check if an element has a class name.\n   *\n   * @param  {Element} element\n   *         Element to check\n   *\n   * @param  {string} classToCheck\n   *         Class name to check for\n   *\n   * @return {boolean}\n   *         Will be `true` if the element has a class, `false` otherwise.\n   *\n   * @throws {Error}\n   *         Throws an error if `classToCheck` has white space.\n   */\n  function hasClass(element, classToCheck) {\n    throwIfWhitespace(classToCheck);\n    return element.classList.contains(classToCheck);\n  }\n\n  /**\n   * Add a class name to an element.\n   *\n   * @param  {Element} element\n   *         Element to add class name to.\n   *\n   * @param  {...string} classesToAdd\n   *         One or more class name to add.\n   *\n   * @return {Element}\n   *         The DOM element with the added class name.\n   */\n  function addClass(element, ...classesToAdd) {\n    element.classList.add(...classesToAdd.reduce((prev, current) => prev.concat(current.split(/\\s+/)), []));\n    return element;\n  }\n\n  /**\n   * Remove a class name from an element.\n   *\n   * @param  {Element} element\n   *         Element to remove a class name from.\n   *\n   * @param  {...string} classesToRemove\n   *         One or more class name to remove.\n   *\n   * @return {Element}\n   *         The DOM element with class name removed.\n   */\n  function removeClass(element, ...classesToRemove) {\n    // Protect in case the player gets disposed\n    if (!element) {\n      log$1.warn(\"removeClass was called with an element that doesn't exist\");\n      return null;\n    }\n    element.classList.remove(...classesToRemove.reduce((prev, current) => prev.concat(current.split(/\\s+/)), []));\n    return element;\n  }\n\n  /**\n   * The callback definition for toggleClass.\n   *\n   * @callback module:dom~PredicateCallback\n   * @param    {Element} element\n   *           The DOM element of the Component.\n   *\n   * @param    {string} classToToggle\n   *           The `className` that wants to be toggled\n   *\n   * @return   {boolean|undefined}\n   *           If `true` is returned, the `classToToggle` will be added to the\n   *           `element`. If `false`, the `classToToggle` will be removed from\n   *           the `element`. If `undefined`, the callback will be ignored.\n   */\n\n  /**\n   * Adds or removes a class name to/from an element depending on an optional\n   * condition or the presence/absence of the class name.\n   *\n   * @param  {Element} element\n   *         The element to toggle a class name on.\n   *\n   * @param  {string} classToToggle\n   *         The class that should be toggled.\n   *\n   * @param  {boolean|module:dom~PredicateCallback} [predicate]\n   *         See the return value for {@link module:dom~PredicateCallback}\n   *\n   * @return {Element}\n   *         The element with a class that has been toggled.\n   */\n  function toggleClass(element, classToToggle, predicate) {\n    if (typeof predicate === 'function') {\n      predicate = predicate(element, classToToggle);\n    }\n    if (typeof predicate !== 'boolean') {\n      predicate = undefined;\n    }\n    classToToggle.split(/\\s+/).forEach(className => element.classList.toggle(className, predicate));\n    return element;\n  }\n\n  /**\n   * Apply attributes to an HTML element.\n   *\n   * @param {Element} el\n   *        Element to add attributes to.\n   *\n   * @param {Object} [attributes]\n   *        Attributes to be applied.\n   */\n  function setAttributes(el, attributes) {\n    Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n      const attrValue = attributes[attrName];\n      if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n        el.removeAttribute(attrName);\n      } else {\n        el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n      }\n    });\n  }\n\n  /**\n   * Get an element's attribute values, as defined on the HTML tag.\n   *\n   * Attributes are not the same as properties. They're defined on the tag\n   * or with setAttribute.\n   *\n   * @param  {Element} tag\n   *         Element from which to get tag attributes.\n   *\n   * @return {Object}\n   *         All attributes of the element. Boolean attributes will be `true` or\n   *         `false`, others will be strings.\n   */\n  function getAttributes(tag) {\n    const obj = {};\n\n    // known boolean attributes\n    // we can check for matching boolean properties, but not all browsers\n    // and not all tags know about these attributes, so, we still want to check them manually\n    const knownBooleans = ['autoplay', 'controls', 'playsinline', 'loop', 'muted', 'default', 'defaultMuted'];\n    if (tag && tag.attributes && tag.attributes.length > 0) {\n      const attrs = tag.attributes;\n      for (let i = attrs.length - 1; i >= 0; i--) {\n        const attrName = attrs[i].name;\n        /** @type {boolean|string} */\n        let attrVal = attrs[i].value;\n\n        // check for known booleans\n        // the matching element property will return a value for typeof\n        if (knownBooleans.includes(attrName)) {\n          // the value of an included boolean attribute is typically an empty\n          // string ('') which would equal false if we just check for a false value.\n          // we also don't want support bad code like autoplay='false'\n          attrVal = attrVal !== null ? true : false;\n        }\n        obj[attrName] = attrVal;\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Get the value of an element's attribute.\n   *\n   * @param {Element} el\n   *        A DOM element.\n   *\n   * @param {string} attribute\n   *        Attribute to get the value of.\n   *\n   * @return {string}\n   *         The value of the attribute.\n   */\n  function getAttribute(el, attribute) {\n    return el.getAttribute(attribute);\n  }\n\n  /**\n   * Set the value of an element's attribute.\n   *\n   * @param {Element} el\n   *        A DOM element.\n   *\n   * @param {string} attribute\n   *        Attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   */\n  function setAttribute(el, attribute, value) {\n    el.setAttribute(attribute, value);\n  }\n\n  /**\n   * Remove an element's attribute.\n   *\n   * @param {Element} el\n   *        A DOM element.\n   *\n   * @param {string} attribute\n   *        Attribute to remove.\n   */\n  function removeAttribute(el, attribute) {\n    el.removeAttribute(attribute);\n  }\n\n  /**\n   * Attempt to block the ability to select text.\n   */\n  function blockTextSelection() {\n    document.body.focus();\n    document.onselectstart = function () {\n      return false;\n    };\n  }\n\n  /**\n   * Turn off text selection blocking.\n   */\n  function unblockTextSelection() {\n    document.onselectstart = function () {\n      return true;\n    };\n  }\n\n  /**\n   * Identical to the native `getBoundingClientRect` function, but ensures that\n   * the method is supported at all (it is in all browsers we claim to support)\n   * and that the element is in the DOM before continuing.\n   *\n   * This wrapper function also shims properties which are not provided by some\n   * older browsers (namely, IE8).\n   *\n   * Additionally, some browsers do not support adding properties to a\n   * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n   * properties (except `x` and `y` which are not widely supported). This helps\n   * avoid implementations where keys are non-enumerable.\n   *\n   * @param  {Element} el\n   *         Element whose `ClientRect` we want to calculate.\n   *\n   * @return {Object|undefined}\n   *         Always returns a plain object - or `undefined` if it cannot.\n   */\n  function getBoundingClientRect(el) {\n    if (el && el.getBoundingClientRect && el.parentNode) {\n      const rect = el.getBoundingClientRect();\n      const result = {};\n      ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(k => {\n        if (rect[k] !== undefined) {\n          result[k] = rect[k];\n        }\n      });\n      if (!result.height) {\n        result.height = parseFloat(computedStyle(el, 'height'));\n      }\n      if (!result.width) {\n        result.width = parseFloat(computedStyle(el, 'width'));\n      }\n      return result;\n    }\n  }\n\n  /**\n   * Represents the position of a DOM element on the page.\n   *\n   * @typedef  {Object} module:dom~Position\n   *\n   * @property {number} left\n   *           Pixels to the left.\n   *\n   * @property {number} top\n   *           Pixels from the top.\n   */\n\n  /**\n   * Get the position of an element in the DOM.\n   *\n   * Uses `getBoundingClientRect` technique from John Resig.\n   *\n   * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n   *\n   * @param  {Element} el\n   *         Element from which to get offset.\n   *\n   * @return {module:dom~Position}\n   *         The position of the element that was passed in.\n   */\n  function findPosition(el) {\n    if (!el || el && !el.offsetParent) {\n      return {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    const width = el.offsetWidth;\n    const height = el.offsetHeight;\n    let left = 0;\n    let top = 0;\n    while (el.offsetParent && el !== document[FullscreenApi.fullscreenElement]) {\n      left += el.offsetLeft;\n      top += el.offsetTop;\n      el = el.offsetParent;\n    }\n    return {\n      left,\n      top,\n      width,\n      height\n    };\n  }\n\n  /**\n   * Represents x and y coordinates for a DOM element or mouse pointer.\n   *\n   * @typedef  {Object} module:dom~Coordinates\n   *\n   * @property {number} x\n   *           x coordinate in pixels\n   *\n   * @property {number} y\n   *           y coordinate in pixels\n   */\n\n  /**\n   * Get the pointer position within an element.\n   *\n   * The base on the coordinates are the bottom left of the element.\n   *\n   * @param  {Element} el\n   *         Element on which to get the pointer position on.\n   *\n   * @param  {Event} event\n   *         Event object.\n   *\n   * @return {module:dom~Coordinates}\n   *         A coordinates object corresponding to the mouse position.\n   *\n   */\n  function getPointerPosition(el, event) {\n    const translated = {\n      x: 0,\n      y: 0\n    };\n    if (IS_IOS) {\n      let item = el;\n      while (item && item.nodeName.toLowerCase() !== 'html') {\n        const transform = computedStyle(item, 'transform');\n        if (/^matrix/.test(transform)) {\n          const values = transform.slice(7, -1).split(/,\\s/).map(Number);\n          translated.x += values[4];\n          translated.y += values[5];\n        } else if (/^matrix3d/.test(transform)) {\n          const values = transform.slice(9, -1).split(/,\\s/).map(Number);\n          translated.x += values[12];\n          translated.y += values[13];\n        }\n        if (item.assignedSlot && item.assignedSlot.parentElement && window.WebKitCSSMatrix) {\n          const transformValue = window.getComputedStyle(item.assignedSlot.parentElement).transform;\n          const matrix = new window.WebKitCSSMatrix(transformValue);\n          translated.x += matrix.m41;\n          translated.y += matrix.m42;\n        }\n        item = item.parentNode || item.host;\n      }\n    }\n    const position = {};\n    const boxTarget = findPosition(event.target);\n    const box = findPosition(el);\n    const boxW = box.width;\n    const boxH = box.height;\n    let offsetY = event.offsetY - (box.top - boxTarget.top);\n    let offsetX = event.offsetX - (box.left - boxTarget.left);\n    if (event.changedTouches) {\n      offsetX = event.changedTouches[0].pageX - box.left;\n      offsetY = event.changedTouches[0].pageY + box.top;\n      if (IS_IOS) {\n        offsetX -= translated.x;\n        offsetY -= translated.y;\n      }\n    }\n    position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n    position.x = Math.max(0, Math.min(1, offsetX / boxW));\n    return position;\n  }\n\n  /**\n   * Determines, via duck typing, whether or not a value is a text node.\n   *\n   * @param  {*} value\n   *         Check if this value is a text node.\n   *\n   * @return {boolean}\n   *         Will be `true` if the value is a text node, `false` otherwise.\n   */\n  function isTextNode$1(value) {\n    return isObject$1(value) && value.nodeType === 3;\n  }\n\n  /**\n   * Empties the contents of an element.\n   *\n   * @param  {Element} el\n   *         The element to empty children from\n   *\n   * @return {Element}\n   *         The element with no children\n   */\n  function emptyEl(el) {\n    while (el.firstChild) {\n      el.removeChild(el.firstChild);\n    }\n    return el;\n  }\n\n  /**\n   * This is a mixed value that describes content to be injected into the DOM\n   * via some method. It can be of the following types:\n   *\n   * Type       | Description\n   * -----------|-------------\n   * `string`   | The value will be normalized into a text node.\n   * `Element`  | The value will be accepted as-is.\n   * `Text`     | A TextNode. The value will be accepted as-is.\n   * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n   * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n   *\n   * @typedef {string|Element|Text|Array|Function} ContentDescriptor\n   */\n\n  /**\n   * Normalizes content for eventual insertion into the DOM.\n   *\n   * This allows a wide range of content definition methods, but helps protect\n   * from falling into the trap of simply writing to `innerHTML`, which could\n   * be an XSS concern.\n   *\n   * The content for an element can be passed in multiple types and\n   * combinations, whose behavior is as follows:\n   *\n   * @param {ContentDescriptor} content\n   *        A content descriptor value.\n   *\n   * @return {Array}\n   *         All of the content that was passed in, normalized to an array of\n   *         elements or text nodes.\n   */\n  function normalizeContent(content) {\n    // First, invoke content if it is a function. If it produces an array,\n    // that needs to happen before normalization.\n    if (typeof content === 'function') {\n      content = content();\n    }\n\n    // Next up, normalize to an array, so one or many items can be normalized,\n    // filtered, and returned.\n    return (Array.isArray(content) ? content : [content]).map(value => {\n      // First, invoke value if it is a function to produce a new value,\n      // which will be subsequently normalized to a Node of some kind.\n      if (typeof value === 'function') {\n        value = value();\n      }\n      if (isEl(value) || isTextNode$1(value)) {\n        return value;\n      }\n      if (typeof value === 'string' && /\\S/.test(value)) {\n        return document.createTextNode(value);\n      }\n    }).filter(value => value);\n  }\n\n  /**\n   * Normalizes and appends content to an element.\n   *\n   * @param  {Element} el\n   *         Element to append normalized content to.\n   *\n   * @param {ContentDescriptor} content\n   *        A content descriptor value.\n   *\n   * @return {Element}\n   *         The element with appended normalized content.\n   */\n  function appendContent(el, content) {\n    normalizeContent(content).forEach(node => el.appendChild(node));\n    return el;\n  }\n\n  /**\n   * Normalizes and inserts content into an element; this is identical to\n   * `appendContent()`, except it empties the element first.\n   *\n   * @param {Element} el\n   *        Element to insert normalized content into.\n   *\n   * @param {ContentDescriptor} content\n   *        A content descriptor value.\n   *\n   * @return {Element}\n   *         The element with inserted normalized content.\n   */\n  function insertContent(el, content) {\n    return appendContent(emptyEl(el), content);\n  }\n\n  /**\n   * Check if an event was a single left click.\n   *\n   * @param  {MouseEvent} event\n   *         Event object.\n   *\n   * @return {boolean}\n   *         Will be `true` if a single left click, `false` otherwise.\n   */\n  function isSingleLeftClick(event) {\n    // Note: if you create something draggable, be sure to\n    // call it on both `mousedown` and `mousemove` event,\n    // otherwise `mousedown` should be enough for a button\n\n    if (event.button === undefined && event.buttons === undefined) {\n      // Why do we need `buttons` ?\n      // Because, middle mouse sometimes have this:\n      // e.button === 0 and e.buttons === 4\n      // Furthermore, we want to prevent combination click, something like\n      // HOLD middlemouse then left click, that would be\n      // e.button === 0, e.buttons === 5\n      // just `button` is not gonna work\n\n      // Alright, then what this block does ?\n      // this is for chrome `simulate mobile devices`\n      // I want to support this as well\n\n      return true;\n    }\n    if (event.button === 0 && event.buttons === undefined) {\n      // Touch screen, sometimes on some specific device, `buttons`\n      // doesn't have anything (safari on ios, blackberry...)\n\n      return true;\n    }\n\n    // `mouseup` event on a single left click has\n    // `button` and `buttons` equal to 0\n    if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n      return true;\n    }\n\n    // MacOS Sonoma trackpad when \"tap to click enabled\"\n    if (event.type === 'mousedown' && event.button === 0 && event.buttons === 0) {\n      return true;\n    }\n    if (event.button !== 0 || event.buttons !== 1) {\n      // This is the reason we have those if else block above\n      // if any special case we can catch and let it slide\n      // we do it above, when get to here, this definitely\n      // is-not-left-click\n\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Finds a single DOM element matching `selector` within the optional\n   * `context` of another DOM element (defaulting to `document`).\n   *\n   * @param  {string} selector\n   *         A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param  {Element|String} [context=document]\n   *         A DOM element within which to query. Can also be a selector\n   *         string in which case the first matching element will be used\n   *         as context. If missing (or no element matches selector), falls\n   *         back to `document`.\n   *\n   * @return {Element|null}\n   *         The element that was found or null.\n   */\n  const $ = createQuerier('querySelector');\n\n  /**\n   * Finds a all DOM elements matching `selector` within the optional\n   * `context` of another DOM element (defaulting to `document`).\n   *\n   * @param  {string} selector\n   *         A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param  {Element|String} [context=document]\n   *         A DOM element within which to query. Can also be a selector\n   *         string in which case the first matching element will be used\n   *         as context. If missing (or no element matches selector), falls\n   *         back to `document`.\n   *\n   * @return {NodeList}\n   *         A element list of elements that were found. Will be empty if none\n   *         were found.\n   *\n   */\n  const $$ = createQuerier('querySelectorAll');\n\n  /**\n   * A safe getComputedStyle.\n   *\n   * This is needed because in Firefox, if the player is loaded in an iframe with\n   * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n   * null-check to make sure that the player doesn't break in these cases.\n   *\n   * @param    {Element} el\n   *           The element you want the computed style of\n   *\n   * @param    {string} prop\n   *           The property name you want\n   *\n   * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n   */\n  function computedStyle(el, prop) {\n    if (!el || !prop) {\n      return '';\n    }\n    if (typeof window.getComputedStyle === 'function') {\n      let computedStyleValue;\n      try {\n        computedStyleValue = window.getComputedStyle(el);\n      } catch (e) {\n        return '';\n      }\n      return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n    }\n    return '';\n  }\n\n  /**\n   * Copy document style sheets to another window.\n   *\n   * @param    {Window} win\n   *           The window element you want to copy the document style sheets to.\n   *\n   */\n  function copyStyleSheetsToWindow(win) {\n    [...document.styleSheets].forEach(styleSheet => {\n      try {\n        const cssRules = [...styleSheet.cssRules].map(rule => rule.cssText).join('');\n        const style = document.createElement('style');\n        style.textContent = cssRules;\n        win.document.head.appendChild(style);\n      } catch (e) {\n        const link = document.createElement('link');\n        link.rel = 'stylesheet';\n        link.type = styleSheet.type;\n        // For older Safari this has to be the string; on other browsers setting the MediaList works\n        link.media = styleSheet.media.mediaText;\n        link.href = styleSheet.href;\n        win.document.head.appendChild(link);\n      }\n    });\n  }\n\n  var Dom = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    isReal: isReal,\n    isEl: isEl,\n    isInFrame: isInFrame,\n    createEl: createEl,\n    textContent: textContent,\n    prependTo: prependTo,\n    hasClass: hasClass,\n    addClass: addClass,\n    removeClass: removeClass,\n    toggleClass: toggleClass,\n    setAttributes: setAttributes,\n    getAttributes: getAttributes,\n    getAttribute: getAttribute,\n    setAttribute: setAttribute,\n    removeAttribute: removeAttribute,\n    blockTextSelection: blockTextSelection,\n    unblockTextSelection: unblockTextSelection,\n    getBoundingClientRect: getBoundingClientRect,\n    findPosition: findPosition,\n    getPointerPosition: getPointerPosition,\n    isTextNode: isTextNode$1,\n    emptyEl: emptyEl,\n    normalizeContent: normalizeContent,\n    appendContent: appendContent,\n    insertContent: insertContent,\n    isSingleLeftClick: isSingleLeftClick,\n    $: $,\n    $$: $$,\n    computedStyle: computedStyle,\n    copyStyleSheetsToWindow: copyStyleSheetsToWindow\n  });\n\n  /**\n   * @file setup.js - Functions for setting up a player without\n   * user interaction based on the data-setup `attribute` of the video tag.\n   *\n   * @module setup\n   */\n  let _windowLoaded = false;\n  let videojs$1;\n\n  /**\n   * Set up any tags that have a data-setup `attribute` when the player is started.\n   */\n  const autoSetup = function () {\n    if (videojs$1.options.autoSetup === false) {\n      return;\n    }\n    const vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n    const audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n    const divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n    const mediaEls = vids.concat(audios, divs);\n\n    // Check if any media elements exist\n    if (mediaEls && mediaEls.length > 0) {\n      for (let i = 0, e = mediaEls.length; i < e; i++) {\n        const mediaEl = mediaEls[i];\n\n        // Check if element exists, has getAttribute func.\n        if (mediaEl && mediaEl.getAttribute) {\n          // Make sure this player hasn't already been set up.\n          if (mediaEl.player === undefined) {\n            const options = mediaEl.getAttribute('data-setup');\n\n            // Check if data-setup attr exists.\n            // We only auto-setup if they've added the data-setup attr.\n            if (options !== null) {\n              // Create new video.js instance.\n              videojs$1(mediaEl);\n            }\n          }\n\n          // If getAttribute isn't defined, we need to wait for the DOM.\n        } else {\n          autoSetupTimeout(1);\n          break;\n        }\n      }\n\n      // No videos were found, so keep looping unless page is finished loading.\n    } else if (!_windowLoaded) {\n      autoSetupTimeout(1);\n    }\n  };\n\n  /**\n   * Wait until the page is loaded before running autoSetup. This will be called in\n   * autoSetup if `hasLoaded` returns false.\n   *\n   * @param {number} wait\n   *        How long to wait in ms\n   *\n   * @param {module:videojs} [vjs]\n   *        The videojs library function\n   */\n  function autoSetupTimeout(wait, vjs) {\n    // Protect against breakage in non-browser environments\n    if (!isReal()) {\n      return;\n    }\n    if (vjs) {\n      videojs$1 = vjs;\n    }\n    window.setTimeout(autoSetup, wait);\n  }\n\n  /**\n   * Used to set the internal tracking of window loaded state to true.\n   *\n   * @private\n   */\n  function setWindowLoaded() {\n    _windowLoaded = true;\n    window.removeEventListener('load', setWindowLoaded);\n  }\n  if (isReal()) {\n    if (document.readyState === 'complete') {\n      setWindowLoaded();\n    } else {\n      /**\n       * Listen for the load event on window, and set _windowLoaded to true.\n       *\n       * We use a standard event listener here to avoid incrementing the GUID\n       * before any players are created.\n       *\n       * @listens load\n       */\n      window.addEventListener('load', setWindowLoaded);\n    }\n  }\n\n  /**\n   * @file stylesheet.js\n   * @module stylesheet\n   */\n\n  /**\n   * Create a DOM style element given a className for it.\n   *\n   * @param {string} className\n   *        The className to add to the created style element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  const createStyleElement = function (className) {\n    const style = document.createElement('style');\n    style.className = className;\n    return style;\n  };\n\n  /**\n   * Add text to a DOM element.\n   *\n   * @param {Element} el\n   *        The Element to add text content to.\n   *\n   * @param {string} content\n   *        The text to add to the element.\n   */\n  const setTextContent = function (el, content) {\n    if (el.styleSheet) {\n      el.styleSheet.cssText = content;\n    } else {\n      el.textContent = content;\n    }\n  };\n\n  /**\n   * @file dom-data.js\n   * @module dom-data\n   */\n\n  /**\n   * Element Data Store.\n   *\n   * Allows for binding data to an element without putting it directly on the\n   * element. Ex. Event listeners are stored here.\n   * (also from jsninja.com, slightly modified and updated for closure compiler)\n   *\n   * @type {Object}\n   * @private\n   */\n  var DomData = new WeakMap();\n\n  /**\n   * @file guid.js\n   * @module guid\n   */\n\n  // Default value for GUIDs. This allows us to reset the GUID counter in tests.\n  //\n  // The initial GUID is 3 because some users have come to rely on the first\n  // default player ID ending up as `vjs_video_3`.\n  //\n  // See: https://github.com/videojs/video.js/pull/6216\n  const _initialGuid = 3;\n\n  /**\n   * Unique ID for an element or function\n   *\n   * @type {Number}\n   */\n  let _guid = _initialGuid;\n\n  /**\n   * Get a unique auto-incrementing ID by number that has not been returned before.\n   *\n   * @return {number}\n   *         A new unique ID.\n   */\n  function newGUID() {\n    return _guid++;\n  }\n\n  /**\n   * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n   * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n   * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n   * robust as jquery's, so there's probably some differences.\n   *\n   * @file events.js\n   * @module events\n   */\n\n  /**\n   * Clean up the listener cache and dispatchers\n   *\n   * @param {Element|Object} elem\n   *        Element to clean up\n   *\n   * @param {string} type\n   *        Type of event to clean up\n   */\n  function _cleanUpEvents(elem, type) {\n    if (!DomData.has(elem)) {\n      return;\n    }\n    const data = DomData.get(elem);\n\n    // Remove the events of a particular type if there are none left\n    if (data.handlers[type].length === 0) {\n      delete data.handlers[type];\n      // data.handlers[type] = null;\n      // Setting to null was causing an error with data.handlers\n\n      // Remove the meta-handler from the element\n      if (elem.removeEventListener) {\n        elem.removeEventListener(type, data.dispatcher, false);\n      } else if (elem.detachEvent) {\n        elem.detachEvent('on' + type, data.dispatcher);\n      }\n    }\n\n    // Remove the events object if there are no types left\n    if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n      delete data.handlers;\n      delete data.dispatcher;\n      delete data.disabled;\n    }\n\n    // Finally remove the element data if there is no data left\n    if (Object.getOwnPropertyNames(data).length === 0) {\n      DomData.delete(elem);\n    }\n  }\n\n  /**\n   * Loops through an array of event types and calls the requested method for each type.\n   *\n   * @param {Function} fn\n   *        The event method we want to use.\n   *\n   * @param {Element|Object} elem\n   *        Element or object to bind listeners to\n   *\n   * @param {string[]} types\n   *        Type of event to bind to.\n   *\n   * @param {Function} callback\n   *        Event listener.\n   */\n  function _handleMultipleEvents(fn, elem, types, callback) {\n    types.forEach(function (type) {\n      // Call the event method for each one of the types\n      fn(elem, type, callback);\n    });\n  }\n\n  /**\n   * Fix a native event to have standard property values\n   *\n   * @param {Object} event\n   *        Event object to fix.\n   *\n   * @return {Object}\n   *         Fixed event object.\n   */\n  function fixEvent(event) {\n    if (event.fixed_) {\n      return event;\n    }\n    function returnTrue() {\n      return true;\n    }\n    function returnFalse() {\n      return false;\n    }\n\n    // Test if fixing up is needed\n    // Used to check if !event.stopPropagation instead of isPropagationStopped\n    // But native events return true for stopPropagation, but don't have\n    // other expected methods like isPropagationStopped. Seems to be a problem\n    // with the Javascript Ninja code. So we're just overriding all events now.\n    if (!event || !event.isPropagationStopped || !event.isImmediatePropagationStopped) {\n      const old = event || window.event;\n      event = {};\n      // Clone the old object so that we can modify the values event = {};\n      // IE8 Doesn't like when you mess with native event properties\n      // Firefox returns false for event.hasOwnProperty('type') and other props\n      //  which makes copying more difficult.\n\n      // TODO: Probably best to create an allowlist of event props\n      const deprecatedProps = ['layerX', 'layerY', 'keyLocation', 'path', 'webkitMovementX', 'webkitMovementY', 'mozPressure', 'mozInputSource'];\n      for (const key in old) {\n        // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n        // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n        // and webkitMovementX/Y\n        // Lighthouse complains if Event.path is copied\n        if (!deprecatedProps.includes(key)) {\n          // Chrome 32+ warns if you try to copy deprecated returnValue, but\n          // we still want to if preventDefault isn't supported (IE8).\n          if (!(key === 'returnValue' && old.preventDefault)) {\n            event[key] = old[key];\n          }\n        }\n      }\n\n      // The event occurred on this element\n      if (!event.target) {\n        event.target = event.srcElement || document;\n      }\n\n      // Handle which other element the event is related to\n      if (!event.relatedTarget) {\n        event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n      }\n\n      // Stop the default browser action\n      event.preventDefault = function () {\n        if (old.preventDefault) {\n          old.preventDefault();\n        }\n        event.returnValue = false;\n        old.returnValue = false;\n        event.defaultPrevented = true;\n      };\n      event.defaultPrevented = false;\n\n      // Stop the event from bubbling\n      event.stopPropagation = function () {\n        if (old.stopPropagation) {\n          old.stopPropagation();\n        }\n        event.cancelBubble = true;\n        old.cancelBubble = true;\n        event.isPropagationStopped = returnTrue;\n      };\n      event.isPropagationStopped = returnFalse;\n\n      // Stop the event from bubbling and executing other handlers\n      event.stopImmediatePropagation = function () {\n        if (old.stopImmediatePropagation) {\n          old.stopImmediatePropagation();\n        }\n        event.isImmediatePropagationStopped = returnTrue;\n        event.stopPropagation();\n      };\n      event.isImmediatePropagationStopped = returnFalse;\n\n      // Handle mouse position\n      if (event.clientX !== null && event.clientX !== undefined) {\n        const doc = document.documentElement;\n        const body = document.body;\n        event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n        event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n      }\n\n      // Handle key presses\n      event.which = event.charCode || event.keyCode;\n\n      // Fix button for mouse clicks:\n      // 0 == left; 1 == middle; 2 == right\n      if (event.button !== null && event.button !== undefined) {\n        // The following is disabled because it does not pass videojs-standard\n        // and... yikes.\n        /* eslint-disable */\n        event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n        /* eslint-enable */\n      }\n    }\n    event.fixed_ = true;\n    // Returns fixed-up instance\n    return event;\n  }\n\n  /**\n   * Whether passive event listeners are supported\n   */\n  let _supportsPassive;\n  const supportsPassive = function () {\n    if (typeof _supportsPassive !== 'boolean') {\n      _supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          get() {\n            _supportsPassive = true;\n          }\n        });\n        window.addEventListener('test', null, opts);\n        window.removeEventListener('test', null, opts);\n      } catch (e) {\n        // disregard\n      }\n    }\n    return _supportsPassive;\n  };\n\n  /**\n   * Touch events Chrome expects to be passive\n   */\n  const passiveEvents = ['touchstart', 'touchmove'];\n\n  /**\n   * Add an event listener to element\n   * It stores the handler function in a separate cache object\n   * and adds a generic handler to the element's event,\n   * along with a unique id (guid) to the element.\n   *\n   * @param {Element|Object} elem\n   *        Element or object to bind listeners to\n   *\n   * @param {string|string[]} type\n   *        Type of event to bind to.\n   *\n   * @param {Function} fn\n   *        Event listener.\n   */\n  function on(elem, type, fn) {\n    if (Array.isArray(type)) {\n      return _handleMultipleEvents(on, elem, type, fn);\n    }\n    if (!DomData.has(elem)) {\n      DomData.set(elem, {});\n    }\n    const data = DomData.get(elem);\n\n    // We need a place to store all our handler data\n    if (!data.handlers) {\n      data.handlers = {};\n    }\n    if (!data.handlers[type]) {\n      data.handlers[type] = [];\n    }\n    if (!fn.guid) {\n      fn.guid = newGUID();\n    }\n    data.handlers[type].push(fn);\n    if (!data.dispatcher) {\n      data.disabled = false;\n      data.dispatcher = function (event, hash) {\n        if (data.disabled) {\n          return;\n        }\n        event = fixEvent(event);\n        const handlers = data.handlers[event.type];\n        if (handlers) {\n          // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n          const handlersCopy = handlers.slice(0);\n          for (let m = 0, n = handlersCopy.length; m < n; m++) {\n            if (event.isImmediatePropagationStopped()) {\n              break;\n            } else {\n              try {\n                handlersCopy[m].call(elem, event, hash);\n              } catch (e) {\n                log$1.error(e);\n              }\n            }\n          }\n        }\n      };\n    }\n    if (data.handlers[type].length === 1) {\n      if (elem.addEventListener) {\n        let options = false;\n        if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n          options = {\n            passive: true\n          };\n        }\n        elem.addEventListener(type, data.dispatcher, options);\n      } else if (elem.attachEvent) {\n        elem.attachEvent('on' + type, data.dispatcher);\n      }\n    }\n  }\n\n  /**\n   * Removes event listeners from an element\n   *\n   * @param {Element|Object} elem\n   *        Object to remove listeners from.\n   *\n   * @param {string|string[]} [type]\n   *        Type of listener to remove. Don't include to remove all events from element.\n   *\n   * @param {Function} [fn]\n   *        Specific listener to remove. Don't include to remove listeners for an event\n   *        type.\n   */\n  function off(elem, type, fn) {\n    // Don't want to add a cache object through getElData if not needed\n    if (!DomData.has(elem)) {\n      return;\n    }\n    const data = DomData.get(elem);\n\n    // If no events exist, nothing to unbind\n    if (!data.handlers) {\n      return;\n    }\n    if (Array.isArray(type)) {\n      return _handleMultipleEvents(off, elem, type, fn);\n    }\n\n    // Utility function\n    const removeType = function (el, t) {\n      data.handlers[t] = [];\n      _cleanUpEvents(el, t);\n    };\n\n    // Are we removing all bound events?\n    if (type === undefined) {\n      for (const t in data.handlers) {\n        if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n          removeType(elem, t);\n        }\n      }\n      return;\n    }\n    const handlers = data.handlers[type];\n\n    // If no handlers exist, nothing to unbind\n    if (!handlers) {\n      return;\n    }\n\n    // If no listener was provided, remove all listeners for type\n    if (!fn) {\n      removeType(elem, type);\n      return;\n    }\n\n    // We're only removing a single handler\n    if (fn.guid) {\n      for (let n = 0; n < handlers.length; n++) {\n        if (handlers[n].guid === fn.guid) {\n          handlers.splice(n--, 1);\n        }\n      }\n    }\n    _cleanUpEvents(elem, type);\n  }\n\n  /**\n   * Trigger an event for an element\n   *\n   * @param {Element|Object} elem\n   *        Element to trigger an event on\n   *\n   * @param {EventTarget~Event|string} event\n   *        A string (the type) or an event object with a type attribute\n   *\n   * @param {Object} [hash]\n   *        data hash to pass along with the event\n   *\n   * @return {boolean|undefined}\n   *         Returns the opposite of `defaultPrevented` if default was\n   *         prevented. Otherwise, returns `undefined`\n   */\n  function trigger(elem, event, hash) {\n    // Fetches element data and a reference to the parent (for bubbling).\n    // Don't want to add a data object to cache for every parent,\n    // so checking hasElData first.\n    const elemData = DomData.has(elem) ? DomData.get(elem) : {};\n    const parent = elem.parentNode || elem.ownerDocument;\n    // type = event.type || event,\n    // handler;\n\n    // If an event name was passed as a string, creates an event out of it\n    if (typeof event === 'string') {\n      event = {\n        type: event,\n        target: elem\n      };\n    } else if (!event.target) {\n      event.target = elem;\n    }\n\n    // Normalizes the event properties.\n    event = fixEvent(event);\n\n    // If the passed element has a dispatcher, executes the established handlers.\n    if (elemData.dispatcher) {\n      elemData.dispatcher.call(elem, event, hash);\n    }\n\n    // Unless explicitly stopped or the event does not bubble (e.g. media events)\n    // recursively calls this function to bubble the event up the DOM.\n    if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n      trigger.call(null, parent, event, hash);\n\n      // If at the top of the DOM, triggers the default action unless disabled.\n    } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n      if (!DomData.has(event.target)) {\n        DomData.set(event.target, {});\n      }\n      const targetData = DomData.get(event.target);\n\n      // Checks if the target has a default action for this event.\n      if (event.target[event.type]) {\n        // Temporarily disables event dispatching on the target as we have already executed the handler.\n        targetData.disabled = true;\n        // Executes the default action.\n        if (typeof event.target[event.type] === 'function') {\n          event.target[event.type]();\n        }\n        // Re-enables event dispatching.\n        targetData.disabled = false;\n      }\n    }\n\n    // Inform the triggerer if the default was prevented by returning false\n    return !event.defaultPrevented;\n  }\n\n  /**\n   * Trigger a listener only once for an event.\n   *\n   * @param {Element|Object} elem\n   *        Element or object to bind to.\n   *\n   * @param {string|string[]} type\n   *        Name/type of event\n   *\n   * @param {Event~EventListener} fn\n   *        Event listener function\n   */\n  function one(elem, type, fn) {\n    if (Array.isArray(type)) {\n      return _handleMultipleEvents(one, elem, type, fn);\n    }\n    const func = function () {\n      off(elem, type, func);\n      fn.apply(this, arguments);\n    };\n\n    // copy the guid to the new function so it can removed using the original function's ID\n    func.guid = fn.guid = fn.guid || newGUID();\n    on(elem, type, func);\n  }\n\n  /**\n   * Trigger a listener only once and then turn if off for all\n   * configured events\n   *\n   * @param {Element|Object} elem\n   *        Element or object to bind to.\n   *\n   * @param {string|string[]} type\n   *        Name/type of event\n   *\n   * @param {Event~EventListener} fn\n   *        Event listener function\n   */\n  function any(elem, type, fn) {\n    const func = function () {\n      off(elem, type, func);\n      fn.apply(this, arguments);\n    };\n\n    // copy the guid to the new function so it can removed using the original function's ID\n    func.guid = fn.guid = fn.guid || newGUID();\n\n    // multiple ons, but one off for everything\n    on(elem, type, func);\n  }\n\n  var Events = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    fixEvent: fixEvent,\n    on: on,\n    off: off,\n    trigger: trigger,\n    one: one,\n    any: any\n  });\n\n  /**\n   * @file fn.js\n   * @module fn\n   */\n  const UPDATE_REFRESH_INTERVAL = 30;\n\n  /**\n   * A private, internal-only function for changing the context of a function.\n   *\n   * It also stores a unique id on the function so it can be easily removed from\n   * events.\n   *\n   * @private\n   * @function\n   * @param    {*} context\n   *           The object to bind as scope.\n   *\n   * @param    {Function} fn\n   *           The function to be bound to a scope.\n   *\n   * @param    {number} [uid]\n   *           An optional unique ID for the function to be set\n   *\n   * @return   {Function}\n   *           The new function that will be bound into the context given\n   */\n  const bind_ = function (context, fn, uid) {\n    // Make sure the function has a unique ID\n    if (!fn.guid) {\n      fn.guid = newGUID();\n    }\n\n    // Create the new function that changes the context\n    const bound = fn.bind(context);\n\n    // Allow for the ability to individualize this function\n    // Needed in the case where multiple objects might share the same prototype\n    // IF both items add an event listener with the same function, then you try to remove just one\n    // it will remove both because they both have the same guid.\n    // when using this, you need to use the bind method when you remove the listener as well.\n    // currently used in text tracks\n    bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n    return bound;\n  };\n\n  /**\n   * Wraps the given function, `fn`, with a new function that only invokes `fn`\n   * at most once per every `wait` milliseconds.\n   *\n   * @function\n   * @param    {Function} fn\n   *           The function to be throttled.\n   *\n   * @param    {number}   wait\n   *           The number of milliseconds by which to throttle.\n   *\n   * @return   {Function}\n   */\n  const throttle = function (fn, wait) {\n    let last = window.performance.now();\n    const throttled = function (...args) {\n      const now = window.performance.now();\n      if (now - last >= wait) {\n        fn(...args);\n        last = now;\n      }\n    };\n    return throttled;\n  };\n\n  /**\n   * Creates a debounced function that delays invoking `func` until after `wait`\n   * milliseconds have elapsed since the last time the debounced function was\n   * invoked.\n   *\n   * Inspired by lodash and underscore implementations.\n   *\n   * @function\n   * @param    {Function} func\n   *           The function to wrap with debounce behavior.\n   *\n   * @param    {number} wait\n   *           The number of milliseconds to wait after the last invocation.\n   *\n   * @param    {boolean} [immediate]\n   *           Whether or not to invoke the function immediately upon creation.\n   *\n   * @param    {Object} [context=window]\n   *           The \"context\" in which the debounced function should debounce. For\n   *           example, if this function should be tied to a Video.js player,\n   *           the player can be passed here. Alternatively, defaults to the\n   *           global `window` object.\n   *\n   * @return   {Function}\n   *           A debounced function.\n   */\n  const debounce = function (func, wait, immediate, context = window) {\n    let timeout;\n    const cancel = () => {\n      context.clearTimeout(timeout);\n      timeout = null;\n    };\n\n    /* eslint-disable consistent-this */\n    const debounced = function () {\n      const self = this;\n      const args = arguments;\n      let later = function () {\n        timeout = null;\n        later = null;\n        if (!immediate) {\n          func.apply(self, args);\n        }\n      };\n      if (!timeout && immediate) {\n        func.apply(self, args);\n      }\n      context.clearTimeout(timeout);\n      timeout = context.setTimeout(later, wait);\n    };\n    /* eslint-enable consistent-this */\n\n    debounced.cancel = cancel;\n    return debounced;\n  };\n\n  var Fn = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    UPDATE_REFRESH_INTERVAL: UPDATE_REFRESH_INTERVAL,\n    bind_: bind_,\n    throttle: throttle,\n    debounce: debounce\n  });\n\n  /**\n   * @file src/js/event-target.js\n   */\n  let EVENT_MAP;\n\n  /**\n   * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n   * adds shorthand functions that wrap around lengthy functions. For example:\n   * the `on` function is a wrapper around `addEventListener`.\n   *\n   * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n   * @class EventTarget\n   */\n  class EventTarget$2 {\n    /**\n     * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n     * function that will get called when an event with a certain name gets triggered.\n     *\n     * @param {string|string[]} type\n     *        An event name or an array of event names.\n     *\n     * @param {Function} fn\n     *        The function to call with `EventTarget`s\n     */\n    on(type, fn) {\n      // Remove the addEventListener alias before calling Events.on\n      // so we don't get into an infinite type loop\n      const ael = this.addEventListener;\n      this.addEventListener = () => {};\n      on(this, type, fn);\n      this.addEventListener = ael;\n    }\n    /**\n     * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n     * This makes it so that the `event listener` will no longer get called when the\n     * named event happens.\n     *\n     * @param {string|string[]} type\n     *        An event name or an array of event names.\n     *\n     * @param {Function} fn\n     *        The function to remove.\n     */\n    off(type, fn) {\n      off(this, type, fn);\n    }\n    /**\n     * This function will add an `event listener` that gets triggered only once. After the\n     * first trigger it will get removed. This is like adding an `event listener`\n     * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n     *\n     * @param {string|string[]} type\n     *        An event name or an array of event names.\n     *\n     * @param {Function} fn\n     *        The function to be called once for each event name.\n     */\n    one(type, fn) {\n      // Remove the addEventListener aliasing Events.on\n      // so we don't get into an infinite type loop\n      const ael = this.addEventListener;\n      this.addEventListener = () => {};\n      one(this, type, fn);\n      this.addEventListener = ael;\n    }\n    /**\n     * This function will add an `event listener` that gets triggered only once and is\n     * removed from all events. This is like adding an array of `event listener`s\n     * with {@link EventTarget#on} that calls {@link EventTarget#off} on all events the\n     * first time it is triggered.\n     *\n     * @param {string|string[]} type\n     *        An event name or an array of event names.\n     *\n     * @param {Function} fn\n     *        The function to be called once for each event name.\n     */\n    any(type, fn) {\n      // Remove the addEventListener aliasing Events.on\n      // so we don't get into an infinite type loop\n      const ael = this.addEventListener;\n      this.addEventListener = () => {};\n      any(this, type, fn);\n      this.addEventListener = ael;\n    }\n    /**\n     * This function causes an event to happen. This will then cause any `event listeners`\n     * that are waiting for that event, to get called. If there are no `event listeners`\n     * for an event then nothing will happen.\n     *\n     * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n     * Trigger will also call the `on` + `uppercaseEventName` function.\n     *\n     * Example:\n     * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n     * `onClick` if it exists.\n     *\n     * @param {string|EventTarget~Event|Object} event\n     *        The name of the event, an `Event`, or an object with a key of type set to\n     *        an event name.\n     */\n    trigger(event) {\n      const type = event.type || event;\n\n      // deprecation\n      // In a future version we should default target to `this`\n      // similar to how we default the target to `elem` in\n      // `Events.trigger`. Right now the default `target` will be\n      // `document` due to the `Event.fixEvent` call.\n      if (typeof event === 'string') {\n        event = {\n          type\n        };\n      }\n      event = fixEvent(event);\n      if (this.allowedEvents_[type] && this['on' + type]) {\n        this['on' + type](event);\n      }\n      trigger(this, event);\n    }\n    queueTrigger(event) {\n      // only set up EVENT_MAP if it'll be used\n      if (!EVENT_MAP) {\n        EVENT_MAP = new Map();\n      }\n      const type = event.type || event;\n      let map = EVENT_MAP.get(this);\n      if (!map) {\n        map = new Map();\n        EVENT_MAP.set(this, map);\n      }\n      const oldTimeout = map.get(type);\n      map.delete(type);\n      window.clearTimeout(oldTimeout);\n      const timeout = window.setTimeout(() => {\n        map.delete(type);\n        // if we cleared out all timeouts for the current target, delete its map\n        if (map.size === 0) {\n          map = null;\n          EVENT_MAP.delete(this);\n        }\n        this.trigger(event);\n      }, 0);\n      map.set(type, timeout);\n    }\n  }\n\n  /**\n   * A Custom DOM event.\n   *\n   * @typedef {CustomEvent} Event\n   * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n   */\n\n  /**\n   * All event listeners should follow the following format.\n   *\n   * @callback EventListener\n   * @this {EventTarget}\n   *\n   * @param {Event} event\n   *        the event that triggered this function\n   *\n   * @param {Object} [hash]\n   *        hash of data sent during the event\n   */\n\n  /**\n   * An object containing event names as keys and booleans as values.\n   *\n   * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n   *         will have extra functionality. See that function for more information.\n   *\n   * @property EventTarget.prototype.allowedEvents_\n   * @protected\n   */\n  EventTarget$2.prototype.allowedEvents_ = {};\n\n  /**\n   * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n   * the standard DOM API.\n   *\n   * @function\n   * @see {@link EventTarget#on}\n   */\n  EventTarget$2.prototype.addEventListener = EventTarget$2.prototype.on;\n\n  /**\n   * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n   * the standard DOM API.\n   *\n   * @function\n   * @see {@link EventTarget#off}\n   */\n  EventTarget$2.prototype.removeEventListener = EventTarget$2.prototype.off;\n\n  /**\n   * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n   * the standard DOM API.\n   *\n   * @function\n   * @see {@link EventTarget#trigger}\n   */\n  EventTarget$2.prototype.dispatchEvent = EventTarget$2.prototype.trigger;\n\n  /**\n   * @file mixins/evented.js\n   * @module evented\n   */\n  const objName = obj => {\n    if (typeof obj.name === 'function') {\n      return obj.name();\n    }\n    if (typeof obj.name === 'string') {\n      return obj.name;\n    }\n    if (obj.name_) {\n      return obj.name_;\n    }\n    if (obj.constructor && obj.constructor.name) {\n      return obj.constructor.name;\n    }\n    return typeof obj;\n  };\n\n  /**\n   * Returns whether or not an object has had the evented mixin applied.\n   *\n   * @param  {Object} object\n   *         An object to test.\n   *\n   * @return {boolean}\n   *         Whether or not the object appears to be evented.\n   */\n  const isEvented = object => object instanceof EventTarget$2 || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(k => typeof object[k] === 'function');\n\n  /**\n   * Adds a callback to run after the evented mixin applied.\n   *\n   * @param  {Object} target\n   *         An object to Add\n   * @param  {Function} callback\n   *         The callback to run.\n   */\n  const addEventedCallback = (target, callback) => {\n    if (isEvented(target)) {\n      callback();\n    } else {\n      if (!target.eventedCallbacks) {\n        target.eventedCallbacks = [];\n      }\n      target.eventedCallbacks.push(callback);\n    }\n  };\n\n  /**\n   * Whether a value is a valid event type - non-empty string or array.\n   *\n   * @private\n   * @param  {string|Array} type\n   *         The type value to test.\n   *\n   * @return {boolean}\n   *         Whether or not the type is a valid event type.\n   */\n  const isValidEventType = type =>\n  // The regex here verifies that the `type` contains at least one non-\n  // whitespace character.\n  typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length;\n\n  /**\n   * Validates a value to determine if it is a valid event target. Throws if not.\n   *\n   * @private\n   * @throws {Error}\n   *         If the target does not appear to be a valid event target.\n   *\n   * @param  {Object} target\n   *         The object to test.\n   *\n   * @param  {Object} obj\n   *         The evented object we are validating for\n   *\n   * @param  {string} fnName\n   *         The name of the evented mixin function that called this.\n   */\n  const validateTarget = (target, obj, fnName) => {\n    if (!target || !target.nodeName && !isEvented(target)) {\n      throw new Error(`Invalid target for ${objName(obj)}#${fnName}; must be a DOM node or evented object.`);\n    }\n  };\n\n  /**\n   * Validates a value to determine if it is a valid event target. Throws if not.\n   *\n   * @private\n   * @throws {Error}\n   *         If the type does not appear to be a valid event type.\n   *\n   * @param  {string|Array} type\n   *         The type to test.\n   *\n   * @param  {Object} obj\n  *         The evented object we are validating for\n   *\n   * @param  {string} fnName\n   *         The name of the evented mixin function that called this.\n   */\n  const validateEventType = (type, obj, fnName) => {\n    if (!isValidEventType(type)) {\n      throw new Error(`Invalid event type for ${objName(obj)}#${fnName}; must be a non-empty string or array.`);\n    }\n  };\n\n  /**\n   * Validates a value to determine if it is a valid listener. Throws if not.\n   *\n   * @private\n   * @throws {Error}\n   *         If the listener is not a function.\n   *\n   * @param  {Function} listener\n   *         The listener to test.\n   *\n   * @param  {Object} obj\n   *         The evented object we are validating for\n   *\n   * @param  {string} fnName\n   *         The name of the evented mixin function that called this.\n   */\n  const validateListener = (listener, obj, fnName) => {\n    if (typeof listener !== 'function') {\n      throw new Error(`Invalid listener for ${objName(obj)}#${fnName}; must be a function.`);\n    }\n  };\n\n  /**\n   * Takes an array of arguments given to `on()` or `one()`, validates them, and\n   * normalizes them into an object.\n   *\n   * @private\n   * @param  {Object} self\n   *         The evented object on which `on()` or `one()` was called. This\n   *         object will be bound as the `this` value for the listener.\n   *\n   * @param  {Array} args\n   *         An array of arguments passed to `on()` or `one()`.\n   *\n   * @param  {string} fnName\n   *         The name of the evented mixin function that called this.\n   *\n   * @return {Object}\n   *         An object containing useful values for `on()` or `one()` calls.\n   */\n  const normalizeListenArgs = (self, args, fnName) => {\n    // If the number of arguments is less than 3, the target is always the\n    // evented object itself.\n    const isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n    let target;\n    let type;\n    let listener;\n    if (isTargetingSelf) {\n      target = self.eventBusEl_;\n\n      // Deal with cases where we got 3 arguments, but we are still listening to\n      // the evented object itself.\n      if (args.length >= 3) {\n        args.shift();\n      }\n      [type, listener] = args;\n    } else {\n      // This was `[target, type, listener] = args;` but this block needs more than\n      // one statement to produce minified output compatible with Chrome 53.\n      // See https://github.com/videojs/video.js/pull/8810\n      target = args[0];\n      type = args[1];\n      listener = args[2];\n    }\n    validateTarget(target, self, fnName);\n    validateEventType(type, self, fnName);\n    validateListener(listener, self, fnName);\n    listener = bind_(self, listener);\n    return {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    };\n  };\n\n  /**\n   * Adds the listener to the event type(s) on the target, normalizing for\n   * the type of target.\n   *\n   * @private\n   * @param  {Element|Object} target\n   *         A DOM node or evented object.\n   *\n   * @param  {string} method\n   *         The event binding method to use (\"on\" or \"one\").\n   *\n   * @param  {string|Array} type\n   *         One or more event type(s).\n   *\n   * @param  {Function} listener\n   *         A listener function.\n   */\n  const listen = (target, method, type, listener) => {\n    validateTarget(target, target, method);\n    if (target.nodeName) {\n      Events[method](target, type, listener);\n    } else {\n      target[method](type, listener);\n    }\n  };\n\n  /**\n   * Contains methods that provide event capabilities to an object which is passed\n   * to {@link module:evented|evented}.\n   *\n   * @mixin EventedMixin\n   */\n  const EventedMixin = {\n    /**\n     * Add a listener to an event (or events) on this object or another evented\n     * object.\n     *\n     * @param  {string|Array|Element|Object} targetOrType\n     *         If this is a string or array, it represents the event type(s)\n     *         that will trigger the listener.\n     *\n     *         Another evented object can be passed here instead, which will\n     *         cause the listener to listen for events on _that_ object.\n     *\n     *         In either case, the listener's `this` value will be bound to\n     *         this object.\n     *\n     * @param  {string|Array|Function} typeOrListener\n     *         If the first argument was a string or array, this should be the\n     *         listener function. Otherwise, this is a string or array of event\n     *         type(s).\n     *\n     * @param  {Function} [listener]\n     *         If the first argument was another evented object, this will be\n     *         the listener function.\n     */\n    on(...args) {\n      const {\n        isTargetingSelf,\n        target,\n        type,\n        listener\n      } = normalizeListenArgs(this, args, 'on');\n      listen(target, 'on', type, listener);\n\n      // If this object is listening to another evented object.\n      if (!isTargetingSelf) {\n        // If this object is disposed, remove the listener.\n        const removeListenerOnDispose = () => this.off(target, type, listener);\n\n        // Use the same function ID as the listener so we can remove it later it\n        // using the ID of the original listener.\n        removeListenerOnDispose.guid = listener.guid;\n\n        // Add a listener to the target's dispose event as well. This ensures\n        // that if the target is disposed BEFORE this object, we remove the\n        // removal listener that was just added. Otherwise, we create a memory leak.\n        const removeRemoverOnTargetDispose = () => this.off('dispose', removeListenerOnDispose);\n\n        // Use the same function ID as the listener so we can remove it later\n        // it using the ID of the original listener.\n        removeRemoverOnTargetDispose.guid = listener.guid;\n        listen(this, 'on', 'dispose', removeListenerOnDispose);\n        listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n      }\n    },\n    /**\n     * Add a listener to an event (or events) on this object or another evented\n     * object. The listener will be called once per event and then removed.\n     *\n     * @param  {string|Array|Element|Object} targetOrType\n     *         If this is a string or array, it represents the event type(s)\n     *         that will trigger the listener.\n     *\n     *         Another evented object can be passed here instead, which will\n     *         cause the listener to listen for events on _that_ object.\n     *\n     *         In either case, the listener's `this` value will be bound to\n     *         this object.\n     *\n     * @param  {string|Array|Function} typeOrListener\n     *         If the first argument was a string or array, this should be the\n     *         listener function. Otherwise, this is a string or array of event\n     *         type(s).\n     *\n     * @param  {Function} [listener]\n     *         If the first argument was another evented object, this will be\n     *         the listener function.\n     */\n    one(...args) {\n      const {\n        isTargetingSelf,\n        target,\n        type,\n        listener\n      } = normalizeListenArgs(this, args, 'one');\n\n      // Targeting this evented object.\n      if (isTargetingSelf) {\n        listen(target, 'one', type, listener);\n\n        // Targeting another evented object.\n      } else {\n        // TODO: This wrapper is incorrect! It should only\n        //       remove the wrapper for the event type that called it.\n        //       Instead all listeners are removed on the first trigger!\n        //       see https://github.com/videojs/video.js/issues/5962\n        const wrapper = (...largs) => {\n          this.off(target, type, wrapper);\n          listener.apply(null, largs);\n        };\n\n        // Use the same function ID as the listener so we can remove it later\n        // it using the ID of the original listener.\n        wrapper.guid = listener.guid;\n        listen(target, 'one', type, wrapper);\n      }\n    },\n    /**\n     * Add a listener to an event (or events) on this object or another evented\n     * object. The listener will only be called once for the first event that is triggered\n     * then removed.\n     *\n     * @param  {string|Array|Element|Object} targetOrType\n     *         If this is a string or array, it represents the event type(s)\n     *         that will trigger the listener.\n     *\n     *         Another evented object can be passed here instead, which will\n     *         cause the listener to listen for events on _that_ object.\n     *\n     *         In either case, the listener's `this` value will be bound to\n     *         this object.\n     *\n     * @param  {string|Array|Function} typeOrListener\n     *         If the first argument was a string or array, this should be the\n     *         listener function. Otherwise, this is a string or array of event\n     *         type(s).\n     *\n     * @param  {Function} [listener]\n     *         If the first argument was another evented object, this will be\n     *         the listener function.\n     */\n    any(...args) {\n      const {\n        isTargetingSelf,\n        target,\n        type,\n        listener\n      } = normalizeListenArgs(this, args, 'any');\n\n      // Targeting this evented object.\n      if (isTargetingSelf) {\n        listen(target, 'any', type, listener);\n\n        // Targeting another evented object.\n      } else {\n        const wrapper = (...largs) => {\n          this.off(target, type, wrapper);\n          listener.apply(null, largs);\n        };\n\n        // Use the same function ID as the listener so we can remove it later\n        // it using the ID of the original listener.\n        wrapper.guid = listener.guid;\n        listen(target, 'any', type, wrapper);\n      }\n    },\n    /**\n     * Removes listener(s) from event(s) on an evented object.\n     *\n     * @param  {string|Array|Element|Object} [targetOrType]\n     *         If this is a string or array, it represents the event type(s).\n     *\n     *         Another evented object can be passed here instead, in which case\n     *         ALL 3 arguments are _required_.\n     *\n     * @param  {string|Array|Function} [typeOrListener]\n     *         If the first argument was a string or array, this may be the\n     *         listener function. Otherwise, this is a string or array of event\n     *         type(s).\n     *\n     * @param  {Function} [listener]\n     *         If the first argument was another evented object, this will be\n     *         the listener function; otherwise, _all_ listeners bound to the\n     *         event type(s) will be removed.\n     */\n    off(targetOrType, typeOrListener, listener) {\n      // Targeting this evented object.\n      if (!targetOrType || isValidEventType(targetOrType)) {\n        off(this.eventBusEl_, targetOrType, typeOrListener);\n\n        // Targeting another evented object.\n      } else {\n        const target = targetOrType;\n        const type = typeOrListener;\n\n        // Fail fast and in a meaningful way!\n        validateTarget(target, this, 'off');\n        validateEventType(type, this, 'off');\n        validateListener(listener, this, 'off');\n\n        // Ensure there's at least a guid, even if the function hasn't been used\n        listener = bind_(this, listener);\n\n        // Remove the dispose listener on this evented object, which was given\n        // the same guid as the event listener in on().\n        this.off('dispose', listener);\n        if (target.nodeName) {\n          off(target, type, listener);\n          off(target, 'dispose', listener);\n        } else if (isEvented(target)) {\n          target.off(type, listener);\n          target.off('dispose', listener);\n        }\n      }\n    },\n    /**\n     * Fire an event on this evented object, causing its listeners to be called.\n     *\n     * @param   {string|Object} event\n     *          An event type or an object with a type property.\n     *\n     * @param   {Object} [hash]\n     *          An additional object to pass along to listeners.\n     *\n     * @return {boolean}\n     *          Whether or not the default behavior was prevented.\n     */\n    trigger(event, hash) {\n      validateTarget(this.eventBusEl_, this, 'trigger');\n      const type = event && typeof event !== 'string' ? event.type : event;\n      if (!isValidEventType(type)) {\n        throw new Error(`Invalid event type for ${objName(this)}#trigger; ` + 'must be a non-empty string or object with a type key that has a non-empty value.');\n      }\n      return trigger(this.eventBusEl_, event, hash);\n    }\n  };\n\n  /**\n   * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n   *\n   * @param  {Object} target\n   *         The object to which to add event methods.\n   *\n   * @param  {Object} [options={}]\n   *         Options for customizing the mixin behavior.\n   *\n   * @param  {string} [options.eventBusKey]\n   *         By default, adds a `eventBusEl_` DOM element to the target object,\n   *         which is used as an event bus. If the target object already has a\n   *         DOM element that should be used, pass its key here.\n   *\n   * @return {Object}\n   *         The target object.\n   */\n  function evented(target, options = {}) {\n    const {\n      eventBusKey\n    } = options;\n\n    // Set or create the eventBusEl_.\n    if (eventBusKey) {\n      if (!target[eventBusKey].nodeName) {\n        throw new Error(`The eventBusKey \"${eventBusKey}\" does not refer to an element.`);\n      }\n      target.eventBusEl_ = target[eventBusKey];\n    } else {\n      target.eventBusEl_ = createEl('span', {\n        className: 'vjs-event-bus'\n      });\n    }\n    Object.assign(target, EventedMixin);\n    if (target.eventedCallbacks) {\n      target.eventedCallbacks.forEach(callback => {\n        callback();\n      });\n    }\n\n    // When any evented object is disposed, it removes all its listeners.\n    target.on('dispose', () => {\n      target.off();\n      [target, target.el_, target.eventBusEl_].forEach(function (val) {\n        if (val && DomData.has(val)) {\n          DomData.delete(val);\n        }\n      });\n      window.setTimeout(() => {\n        target.eventBusEl_ = null;\n      }, 0);\n    });\n    return target;\n  }\n\n  /**\n   * @file mixins/stateful.js\n   * @module stateful\n   */\n\n  /**\n   * Contains methods that provide statefulness to an object which is passed\n   * to {@link module:stateful}.\n   *\n   * @mixin StatefulMixin\n   */\n  const StatefulMixin = {\n    /**\n     * A hash containing arbitrary keys and values representing the state of\n     * the object.\n     *\n     * @type {Object}\n     */\n    state: {},\n    /**\n     * Set the state of an object by mutating its\n     * {@link module:stateful~StatefulMixin.state|state} object in place.\n     *\n     * @fires   module:stateful~StatefulMixin#statechanged\n     * @param   {Object|Function} stateUpdates\n     *          A new set of properties to shallow-merge into the plugin state.\n     *          Can be a plain object or a function returning a plain object.\n     *\n     * @return {Object|undefined}\n     *          An object containing changes that occurred. If no changes\n     *          occurred, returns `undefined`.\n     */\n    setState(stateUpdates) {\n      // Support providing the `stateUpdates` state as a function.\n      if (typeof stateUpdates === 'function') {\n        stateUpdates = stateUpdates();\n      }\n      let changes;\n      each(stateUpdates, (value, key) => {\n        // Record the change if the value is different from what's in the\n        // current state.\n        if (this.state[key] !== value) {\n          changes = changes || {};\n          changes[key] = {\n            from: this.state[key],\n            to: value\n          };\n        }\n        this.state[key] = value;\n      });\n\n      // Only trigger \"statechange\" if there were changes AND we have a trigger\n      // function. This allows us to not require that the target object be an\n      // evented object.\n      if (changes && isEvented(this)) {\n        /**\n         * An event triggered on an object that is both\n         * {@link module:stateful|stateful} and {@link module:evented|evented}\n         * indicating that its state has changed.\n         *\n         * @event    module:stateful~StatefulMixin#statechanged\n         * @type     {Object}\n         * @property {Object} changes\n         *           A hash containing the properties that were changed and\n         *           the values they were changed `from` and `to`.\n         */\n        this.trigger({\n          changes,\n          type: 'statechanged'\n        });\n      }\n      return changes;\n    }\n  };\n\n  /**\n   * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n   * object.\n   *\n   * If the target object is {@link module:evented|evented} and has a\n   * `handleStateChanged` method, that method will be automatically bound to the\n   * `statechanged` event on itself.\n   *\n   * @param   {Object} target\n   *          The object to be made stateful.\n   *\n   * @param   {Object} [defaultState]\n   *          A default set of properties to populate the newly-stateful object's\n   *          `state` property.\n   *\n   * @return {Object}\n   *          Returns the `target`.\n   */\n  function stateful(target, defaultState) {\n    Object.assign(target, StatefulMixin);\n\n    // This happens after the mixing-in because we need to replace the `state`\n    // added in that step.\n    target.state = Object.assign({}, target.state, defaultState);\n\n    // Auto-bind the `handleStateChanged` method of the target object if it exists.\n    if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n      target.on('statechanged', target.handleStateChanged);\n    }\n    return target;\n  }\n\n  /**\n   * @file str.js\n   * @module to-lower-case\n   */\n\n  /**\n   * Lowercase the first letter of a string.\n   *\n   * @param {string} string\n   *        String to be lowercased\n   *\n   * @return {string}\n   *         The string with a lowercased first letter\n   */\n  const toLowerCase = function (string) {\n    if (typeof string !== 'string') {\n      return string;\n    }\n    return string.replace(/./, w => w.toLowerCase());\n  };\n\n  /**\n   * Uppercase the first letter of a string.\n   *\n   * @param {string} string\n   *        String to be uppercased\n   *\n   * @return {string}\n   *         The string with an uppercased first letter\n   */\n  const toTitleCase$1 = function (string) {\n    if (typeof string !== 'string') {\n      return string;\n    }\n    return string.replace(/./, w => w.toUpperCase());\n  };\n\n  /**\n   * Compares the TitleCase versions of the two strings for equality.\n   *\n   * @param {string} str1\n   *        The first string to compare\n   *\n   * @param {string} str2\n   *        The second string to compare\n   *\n   * @return {boolean}\n   *         Whether the TitleCase versions of the strings are equal\n   */\n  const titleCaseEquals = function (str1, str2) {\n    return toTitleCase$1(str1) === toTitleCase$1(str2);\n  };\n\n  var Str = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    toLowerCase: toLowerCase,\n    toTitleCase: toTitleCase$1,\n    titleCaseEquals: titleCaseEquals\n  });\n\n  /**\n   * Player Component - Base class for all UI objects\n   *\n   * @file component.js\n   */\n\n  /** @import Player from './player' */\n\n  /**\n   * A callback to be called if and when the component is ready.\n   * `this` will be the Component instance.\n   *\n   * @callback ReadyCallback\n   * @returns  {void}\n   */\n\n  /**\n   * Base class for all UI Components.\n   * Components are UI objects which represent both a javascript object and an element\n   * in the DOM. They can be children of other components, and can have\n   * children themselves.\n   *\n   * Components can also use methods from {@link EventTarget}\n   */\n  class Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of component options.\n     *\n     * @param {Object[]} [options.children]\n     *        An array of children objects to initialize this component with. Children objects have\n     *        a name property that will be used if more than one component of the same type needs to be\n     *        added.\n     *\n     * @param  {string} [options.className]\n     *         A class or space separated list of classes to add the component\n     *\n     * @param {ReadyCallback} [ready]\n     *        Function that gets called when the `Component` is ready.\n     */\n    constructor(player, options, ready) {\n      // The component might be the player itself and we can't pass `this` to super\n      if (!player && this.play) {\n        this.player_ = player = this; // eslint-disable-line\n      } else {\n        this.player_ = player;\n      }\n      this.isDisposed_ = false;\n\n      // Hold the reference to the parent component via `addChild` method\n      this.parentComponent_ = null;\n\n      // Make a copy of prototype.options_ to protect against overriding defaults\n      this.options_ = merge$2({}, this.options_);\n\n      // Updated options with supplied options\n      options = this.options_ = merge$2(this.options_, options);\n\n      // Get ID from options or options element if one is supplied\n      this.id_ = options.id || options.el && options.el.id;\n\n      // If there was no ID from the options, generate one\n      if (!this.id_) {\n        // Don't require the player ID function in the case of mock players\n        const id = player && player.id && player.id() || 'no_player';\n        this.id_ = `${id}_component_${newGUID()}`;\n      }\n      this.name_ = options.name || null;\n\n      // Create element if one wasn't provided in options\n      if (options.el) {\n        this.el_ = options.el;\n      } else if (options.createEl !== false) {\n        this.el_ = this.createEl();\n      }\n      if (options.className && this.el_) {\n        options.className.split(' ').forEach(c => this.addClass(c));\n      }\n\n      // Remove the placeholder event methods. If the component is evented, the\n      // real methods are added next\n      ['on', 'off', 'one', 'any', 'trigger'].forEach(fn => {\n        this[fn] = undefined;\n      });\n\n      // if evented is anything except false, we want to mixin in evented\n      if (options.evented !== false) {\n        // Make this an evented object and use `el_`, if available, as its event bus\n        evented(this, {\n          eventBusKey: this.el_ ? 'el_' : null\n        });\n        this.handleLanguagechange = this.handleLanguagechange.bind(this);\n        this.on(this.player_, 'languagechange', this.handleLanguagechange);\n      }\n      stateful(this, this.constructor.defaultState);\n      this.children_ = [];\n      this.childIndex_ = {};\n      this.childNameIndex_ = {};\n      this.setTimeoutIds_ = new Set();\n      this.setIntervalIds_ = new Set();\n      this.rafIds_ = new Set();\n      this.namedRafs_ = new Map();\n      this.clearingTimersOnDispose_ = false;\n\n      // Add any child components in options\n      if (options.initChildren !== false) {\n        this.initChildren();\n      }\n\n      // Don't want to trigger ready here or it will go before init is actually\n      // finished for all children that run this constructor\n      this.ready(ready);\n      if (options.reportTouchActivity !== false) {\n        this.enableTouchActivity();\n      }\n    }\n\n    // `on`, `off`, `one`, `any` and `trigger` are here so tsc includes them in definitions.\n    // They are replaced or removed in the constructor\n\n    /**\n     * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n     * function that will get called when an event with a certain name gets triggered.\n     *\n     * @param {string|string[]} type\n     *        An event name or an array of event names.\n     *\n     * @param {Function} fn\n     *        The function to call with `EventTarget`s\n     */\n    on(type, fn) {}\n\n    /**\n     * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n     * This makes it so that the `event listener` will no longer get called when the\n     * named event happens.\n     *\n     * @param {string|string[]} type\n     *        An event name or an array of event names.\n     *\n     * @param {Function} [fn]\n     *        The function to remove. If not specified, all listeners managed by Video.js will be removed.\n     */\n    off(type, fn) {}\n\n    /**\n     * This function will add an `event listener` that gets triggered only once. After the\n     * first trigger it will get removed. This is like adding an `event listener`\n     * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n     *\n     * @param {string|string[]} type\n     *        An event name or an array of event names.\n     *\n     * @param {Function} fn\n     *        The function to be called once for each event name.\n     */\n    one(type, fn) {}\n\n    /**\n     * This function will add an `event listener` that gets triggered only once and is\n     * removed from all events. This is like adding an array of `event listener`s\n     * with {@link EventTarget#on} that calls {@link EventTarget#off} on all events the\n     * first time it is triggered.\n     *\n     * @param {string|string[]} type\n     *        An event name or an array of event names.\n     *\n     * @param {Function} fn\n     *        The function to be called once for each event name.\n     */\n    any(type, fn) {}\n\n    /**\n     * This function causes an event to happen. This will then cause any `event listeners`\n     * that are waiting for that event, to get called. If there are no `event listeners`\n     * for an event then nothing will happen.\n     *\n     * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n     * Trigger will also call the `on` + `uppercaseEventName` function.\n     *\n     * Example:\n     * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n     * `onClick` if it exists.\n     *\n     * @param {string|Event|Object} event\n     *        The name of the event, an `Event`, or an object with a key of type set to\n     *        an event name.\n     *\n     * @param {Object} [hash]\n     *        Optionally extra argument to pass through to an event listener\n     */\n    trigger(event, hash) {}\n\n    /**\n     * Dispose of the `Component` and all child components.\n     *\n     * @fires Component#dispose\n     *\n     * @param {Object} options\n     * @param {Element} options.originalEl element with which to replace player element\n     */\n    dispose(options = {}) {\n      // Bail out if the component has already been disposed.\n      if (this.isDisposed_) {\n        return;\n      }\n      if (this.readyQueue_) {\n        this.readyQueue_.length = 0;\n      }\n\n      /**\n       * Triggered when a `Component` is disposed.\n       *\n       * @event Component#dispose\n       * @type {Event}\n       *\n       * @property {boolean} [bubbles=false]\n       *           set to false so that the dispose event does not\n       *           bubble up\n       */\n      this.trigger({\n        type: 'dispose',\n        bubbles: false\n      });\n      this.isDisposed_ = true;\n\n      // Dispose all children.\n      if (this.children_) {\n        for (let i = this.children_.length - 1; i >= 0; i--) {\n          if (this.children_[i].dispose) {\n            this.children_[i].dispose();\n          }\n        }\n      }\n\n      // Delete child references\n      this.children_ = null;\n      this.childIndex_ = null;\n      this.childNameIndex_ = null;\n      this.parentComponent_ = null;\n      if (this.el_) {\n        // Remove element from DOM\n        if (this.el_.parentNode) {\n          if (options.restoreEl) {\n            this.el_.parentNode.replaceChild(options.restoreEl, this.el_);\n          } else {\n            this.el_.parentNode.removeChild(this.el_);\n          }\n        }\n        this.el_ = null;\n      }\n\n      // remove reference to the player after disposing of the element\n      this.player_ = null;\n    }\n\n    /**\n     * Determine whether or not this component has been disposed.\n     *\n     * @return {boolean}\n     *         If the component has been disposed, will be `true`. Otherwise, `false`.\n     */\n    isDisposed() {\n      return Boolean(this.isDisposed_);\n    }\n\n    /**\n     * Return the {@link Player} that the `Component` has attached to.\n     *\n     * @return {Player}\n     *         The player that this `Component` has attached to.\n     */\n    player() {\n      return this.player_;\n    }\n\n    /**\n     * Deep merge of options objects with new options.\n     * > Note: When both `obj` and `options` contain properties whose values are objects.\n     *         The two properties get merged using {@link module:obj.merge}\n     *\n     * @param {Object} obj\n     *        The object that contains new options.\n     *\n     * @return {Object}\n     *         A new object of `this.options_` and `obj` merged together.\n     */\n    options(obj) {\n      if (!obj) {\n        return this.options_;\n      }\n      this.options_ = merge$2(this.options_, obj);\n      return this.options_;\n    }\n\n    /**\n     * Get the `Component`s DOM element\n     *\n     * @return {Element}\n     *         The DOM element for this `Component`.\n     */\n    el() {\n      return this.el_;\n    }\n\n    /**\n     * Create the `Component`s DOM element.\n     *\n     * @param {string} [tagName]\n     *        Element's DOM node type. e.g. 'div'\n     *\n     * @param {Object} [properties]\n     *        An object of properties that should be set.\n     *\n     * @param {Object} [attributes]\n     *        An object of attributes that should be set.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    createEl(tagName, properties, attributes) {\n      return createEl(tagName, properties, attributes);\n    }\n\n    /**\n     * Localize a string given the string in english.\n     *\n     * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n     * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n     *\n     * If a `defaultValue` is provided, it'll use that over `string`,\n     * if a value isn't found in provided language files.\n     * This is useful if you want to have a descriptive key for token replacement\n     * but have a succinct localized string and not require `en.json` to be included.\n     *\n     * Currently, it is used for the progress bar timing.\n     * ```js\n     * {\n     *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n     * }\n     * ```\n     * It is then used like so:\n     * ```js\n     * this.localize('progress bar timing: currentTime={1} duration{2}',\n     *               [this.player_.currentTime(), this.player_.duration()],\n     *               '{1} of {2}');\n     * ```\n     *\n     * Which outputs something like: `01:23 of 24:56`.\n     *\n     *\n     * @param {string} string\n     *        The string to localize and the key to lookup in the language files.\n     * @param {string[]} [tokens]\n     *        If the current item has token replacements, provide the tokens here.\n     * @param {string} [defaultValue]\n     *        Defaults to `string`. Can be a default value to use for token replacement\n     *        if the lookup key is needed to be separate.\n     *\n     * @return {string}\n     *         The localized string or if no localization exists the english string.\n     */\n    localize(string, tokens, defaultValue = string) {\n      const code = this.player_.language && this.player_.language();\n      const languages = this.player_.languages && this.player_.languages();\n      const language = languages && languages[code];\n      const primaryCode = code && code.split('-')[0];\n      const primaryLang = languages && languages[primaryCode];\n      let localizedString = defaultValue;\n      if (language && language[string]) {\n        localizedString = language[string];\n      } else if (primaryLang && primaryLang[string]) {\n        localizedString = primaryLang[string];\n      }\n      if (tokens) {\n        localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n          const value = tokens[index - 1];\n          let ret = value;\n          if (typeof value === 'undefined') {\n            ret = match;\n          }\n          return ret;\n        });\n      }\n      return localizedString;\n    }\n\n    /**\n     * Handles language change for the player in components. Should be overridden by sub-components.\n     *\n     * @abstract\n     */\n    handleLanguagechange() {}\n\n    /**\n     * Return the `Component`s DOM element. This is where children get inserted.\n     * This will usually be the the same as the element returned in {@link Component#el}.\n     *\n     * @return {Element}\n     *         The content element for this `Component`.\n     */\n    contentEl() {\n      return this.contentEl_ || this.el_;\n    }\n\n    /**\n     * Get this `Component`s ID\n     *\n     * @return {string}\n     *         The id of this `Component`\n     */\n    id() {\n      return this.id_;\n    }\n\n    /**\n     * Get the `Component`s name. The name gets used to reference the `Component`\n     * and is set during registration.\n     *\n     * @return {string}\n     *         The name of this `Component`.\n     */\n    name() {\n      return this.name_;\n    }\n\n    /**\n     * Get an array of all child components\n     *\n     * @return {Array}\n     *         The children\n     */\n    children() {\n      return this.children_;\n    }\n\n    /**\n     * Returns the child `Component` with the given `id`.\n     *\n     * @param {string} id\n     *        The id of the child `Component` to get.\n     *\n     * @return {Component|undefined}\n     *         The child `Component` with the given `id` or undefined.\n     */\n    getChildById(id) {\n      return this.childIndex_[id];\n    }\n\n    /**\n     * Returns the child `Component` with the given `name`.\n     *\n     * @param {string} name\n     *        The name of the child `Component` to get.\n     *\n     * @return {Component|undefined}\n     *         The child `Component` with the given `name` or undefined.\n     */\n    getChild(name) {\n      if (!name) {\n        return;\n      }\n      return this.childNameIndex_[name];\n    }\n\n    /**\n     * Returns the descendant `Component` following the givent\n     * descendant `names`. For instance ['foo', 'bar', 'baz'] would\n     * try to get 'foo' on the current component, 'bar' on the 'foo'\n     * component and 'baz' on the 'bar' component and return undefined\n     * if any of those don't exist.\n     *\n     * @param {...string[]|...string} names\n     *        The name of the child `Component` to get.\n     *\n     * @return {Component|undefined}\n     *         The descendant `Component` following the given descendant\n     *         `names` or undefined.\n     */\n    getDescendant(...names) {\n      // flatten array argument into the main array\n      names = names.reduce((acc, n) => acc.concat(n), []);\n      let currentChild = this;\n      for (let i = 0; i < names.length; i++) {\n        currentChild = currentChild.getChild(names[i]);\n        if (!currentChild || !currentChild.getChild) {\n          return;\n        }\n      }\n      return currentChild;\n    }\n\n    /**\n     * Adds an SVG icon element to another element or component.\n     *\n     * @param {string} iconName\n     *        The name of icon. A list of all the icon names can be found at 'sandbox/svg-icons.html'\n     *\n     * @param {Element} [el=this.el()]\n     *        Element to set the title on. Defaults to the current Component's element.\n     *\n     * @return {Element}\n     *        The newly created icon element.\n     */\n    setIcon(iconName, el = this.el()) {\n      // TODO: In v9 of video.js, we will want to remove font icons entirely.\n      // This means this check, as well as the others throughout the code, and\n      // the unecessary CSS for font icons, will need to be removed.\n      // See https://github.com/videojs/video.js/pull/8260 as to which components\n      // need updating.\n      if (!this.player_.options_.experimentalSvgIcons) {\n        return;\n      }\n      const xmlnsURL = 'http://www.w3.org/2000/svg';\n\n      // The below creates an element in the format of:\n      // <span><svg><use>....</use></svg></span>\n      const iconContainer = createEl('span', {\n        className: 'vjs-icon-placeholder vjs-svg-icon'\n      }, {\n        'aria-hidden': 'true'\n      });\n      const svgEl = document.createElementNS(xmlnsURL, 'svg');\n      svgEl.setAttributeNS(null, 'viewBox', '0 0 512 512');\n      const useEl = document.createElementNS(xmlnsURL, 'use');\n      svgEl.appendChild(useEl);\n      useEl.setAttributeNS(null, 'href', `#vjs-icon-${iconName}`);\n      iconContainer.appendChild(svgEl);\n\n      // Replace a pre-existing icon if one exists.\n      if (this.iconIsSet_) {\n        el.replaceChild(iconContainer, el.querySelector('.vjs-icon-placeholder'));\n      } else {\n        el.appendChild(iconContainer);\n      }\n      this.iconIsSet_ = true;\n      return iconContainer;\n    }\n\n    /**\n     * Add a child `Component` inside the current `Component`.\n     *\n     * @param {string|Component} child\n     *        The name or instance of a child to add.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of options that will get passed to children of\n     *        the child.\n     *\n     * @param {number} [index=this.children_.length]\n     *        The index to attempt to add a child into.\n     *\n     *\n     * @return {Component}\n     *         The `Component` that gets added as a child. When using a string the\n     *         `Component` will get created by this process.\n     */\n    addChild(child, options = {}, index = this.children_.length) {\n      let component;\n      let componentName;\n\n      // If child is a string, create component with options\n      if (typeof child === 'string') {\n        componentName = toTitleCase$1(child);\n        const componentClassName = options.componentClass || componentName;\n\n        // Set name through options\n        options.name = componentName;\n\n        // Create a new object & element for this controls set\n        // If there's no .player_, this is a player\n        const ComponentClass = Component$1.getComponent(componentClassName);\n        if (!ComponentClass) {\n          throw new Error(`Component ${componentClassName} does not exist`);\n        }\n\n        // data stored directly on the videojs object may be\n        // misidentified as a component to retain\n        // backwards-compatibility with 4.x. check to make sure the\n        // component class can be instantiated.\n        if (typeof ComponentClass !== 'function') {\n          return null;\n        }\n        component = new ComponentClass(this.player_ || this, options);\n\n        // child is a component instance\n      } else {\n        component = child;\n      }\n      if (component.parentComponent_) {\n        component.parentComponent_.removeChild(component);\n      }\n      this.children_.splice(index, 0, component);\n      component.parentComponent_ = this;\n      if (typeof component.id === 'function') {\n        this.childIndex_[component.id()] = component;\n      }\n\n      // If a name wasn't used to create the component, check if we can use the\n      // name function of the component\n      componentName = componentName || component.name && toTitleCase$1(component.name());\n      if (componentName) {\n        this.childNameIndex_[componentName] = component;\n        this.childNameIndex_[toLowerCase(componentName)] = component;\n      }\n\n      // Add the UI object's element to the container div (box)\n      // Having an element is not required\n      if (typeof component.el === 'function' && component.el()) {\n        // If inserting before a component, insert before that component's element\n        let refNode = null;\n        if (this.children_[index + 1]) {\n          // Most children are components, but the video tech is an HTML element\n          if (this.children_[index + 1].el_) {\n            refNode = this.children_[index + 1].el_;\n          } else if (isEl(this.children_[index + 1])) {\n            refNode = this.children_[index + 1];\n          }\n        }\n        this.contentEl().insertBefore(component.el(), refNode);\n      }\n\n      // Return so it can stored on parent object if desired.\n      return component;\n    }\n\n    /**\n     * Remove a child `Component` from this `Component`s list of children. Also removes\n     * the child `Component`s element from this `Component`s element.\n     *\n     * @param {Component} component\n     *        The child `Component` to remove.\n     */\n    removeChild(component) {\n      if (typeof component === 'string') {\n        component = this.getChild(component);\n      }\n      if (!component || !this.children_) {\n        return;\n      }\n      let childFound = false;\n      for (let i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i] === component) {\n          childFound = true;\n          this.children_.splice(i, 1);\n          break;\n        }\n      }\n      if (!childFound) {\n        return;\n      }\n      component.parentComponent_ = null;\n      this.childIndex_[component.id()] = null;\n      this.childNameIndex_[toTitleCase$1(component.name())] = null;\n      this.childNameIndex_[toLowerCase(component.name())] = null;\n      const compEl = component.el();\n      if (compEl && compEl.parentNode === this.contentEl()) {\n        this.contentEl().removeChild(component.el());\n      }\n    }\n\n    /**\n     * Add and initialize default child `Component`s based upon options.\n     */\n    initChildren() {\n      const children = this.options_.children;\n      if (children) {\n        // `this` is `parent`\n        const parentOptions = this.options_;\n        const handleAdd = child => {\n          const name = child.name;\n          let opts = child.opts;\n\n          // Allow options for children to be set at the parent options\n          // e.g. videojs(id, { controlBar: false });\n          // instead of videojs(id, { children: { controlBar: false });\n          if (parentOptions[name] !== undefined) {\n            opts = parentOptions[name];\n          }\n\n          // Allow for disabling default components\n          // e.g. options['children']['posterImage'] = false\n          if (opts === false) {\n            return;\n          }\n\n          // Allow options to be passed as a simple boolean if no configuration\n          // is necessary.\n          if (opts === true) {\n            opts = {};\n          }\n\n          // We also want to pass the original player options\n          // to each component as well so they don't need to\n          // reach back into the player for options later.\n          opts.playerOptions = this.options_.playerOptions;\n\n          // Create and add the child component.\n          // Add a direct reference to the child by name on the parent instance.\n          // If two of the same component are used, different names should be supplied\n          // for each\n          const newChild = this.addChild(name, opts);\n          if (newChild) {\n            this[name] = newChild;\n          }\n        };\n\n        // Allow for an array of children details to passed in the options\n        let workingChildren;\n        const Tech = Component$1.getComponent('Tech');\n        if (Array.isArray(children)) {\n          workingChildren = children;\n        } else {\n          workingChildren = Object.keys(children);\n        }\n        workingChildren\n        // children that are in this.options_ but also in workingChildren  would\n        // give us extra children we do not want. So, we want to filter them out.\n        .concat(Object.keys(this.options_).filter(function (child) {\n          return !workingChildren.some(function (wchild) {\n            if (typeof wchild === 'string') {\n              return child === wchild;\n            }\n            return child === wchild.name;\n          });\n        })).map(child => {\n          let name;\n          let opts;\n          if (typeof child === 'string') {\n            name = child;\n            opts = children[name] || this.options_[name] || {};\n          } else {\n            name = child.name;\n            opts = child;\n          }\n          return {\n            name,\n            opts\n          };\n        }).filter(child => {\n          // we have to make sure that child.name isn't in the techOrder since\n          // techs are registered as Components but can't aren't compatible\n          // See https://github.com/videojs/video.js/issues/2772\n          const c = Component$1.getComponent(child.opts.componentClass || toTitleCase$1(child.name));\n          return c && !Tech.isTech(c);\n        }).forEach(handleAdd);\n      }\n    }\n\n    /**\n     * Builds the default DOM class name. Should be overridden by sub-components.\n     *\n     * @return {string}\n     *         The DOM class name for this object.\n     *\n     * @abstract\n     */\n    buildCSSClass() {\n      // Child classes can include a function that does:\n      // return 'CLASS NAME' + this._super();\n      return '';\n    }\n\n    /**\n     * Bind a listener to the component's ready state.\n     * Different from event listeners in that if the ready event has already happened\n     * it will trigger the function immediately.\n     *\n     * @param {ReadyCallback} fn\n     *        Function that gets called when the `Component` is ready.\n     */\n    ready(fn, sync = false) {\n      if (!fn) {\n        return;\n      }\n      if (!this.isReady_) {\n        this.readyQueue_ = this.readyQueue_ || [];\n        this.readyQueue_.push(fn);\n        return;\n      }\n      if (sync) {\n        fn.call(this);\n      } else {\n        // Call the function asynchronously by default for consistency\n        this.setTimeout(fn, 1);\n      }\n    }\n\n    /**\n     * Trigger all the ready listeners for this `Component`.\n     *\n     * @fires Component#ready\n     */\n    triggerReady() {\n      this.isReady_ = true;\n\n      // Ensure ready is triggered asynchronously\n      this.setTimeout(function () {\n        const readyQueue = this.readyQueue_;\n\n        // Reset Ready Queue\n        this.readyQueue_ = [];\n        if (readyQueue && readyQueue.length > 0) {\n          readyQueue.forEach(function (fn) {\n            fn.call(this);\n          }, this);\n        }\n\n        // Allow for using event listeners also\n        /**\n         * Triggered when a `Component` is ready.\n         *\n         * @event Component#ready\n         * @type {Event}\n         */\n        this.trigger('ready');\n      }, 1);\n    }\n\n    /**\n     * Find a single DOM element matching a `selector`. This can be within the `Component`s\n     * `contentEl()` or another custom context.\n     *\n     * @param {string} selector\n     *        A valid CSS selector, which will be passed to `querySelector`.\n     *\n     * @param {Element|string} [context=this.contentEl()]\n     *        A DOM element within which to query. Can also be a selector string in\n     *        which case the first matching element will get used as context. If\n     *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n     *        nothing it falls back to `document`.\n     *\n     * @return {Element|null}\n     *         the dom element that was found, or null\n     *\n     * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n     */\n    $(selector, context) {\n      return $(selector, context || this.contentEl());\n    }\n\n    /**\n     * Finds all DOM element matching a `selector`. This can be within the `Component`s\n     * `contentEl()` or another custom context.\n     *\n     * @param {string} selector\n     *        A valid CSS selector, which will be passed to `querySelectorAll`.\n     *\n     * @param {Element|string} [context=this.contentEl()]\n     *        A DOM element within which to query. Can also be a selector string in\n     *        which case the first matching element will get used as context. If\n     *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n     *        nothing it falls back to `document`.\n     *\n     * @return {NodeList}\n     *         a list of dom elements that were found\n     *\n     * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n     */\n    $$(selector, context) {\n      return $$(selector, context || this.contentEl());\n    }\n\n    /**\n     * Check if a component's element has a CSS class name.\n     *\n     * @param {string} classToCheck\n     *        CSS class name to check.\n     *\n     * @return {boolean}\n     *         - True if the `Component` has the class.\n     *         - False if the `Component` does not have the class`\n     */\n    hasClass(classToCheck) {\n      return hasClass(this.el_, classToCheck);\n    }\n\n    /**\n     * Add a CSS class name to the `Component`s element.\n     *\n     * @param {...string} classesToAdd\n     *        One or more CSS class name to add.\n     */\n    addClass(...classesToAdd) {\n      addClass(this.el_, ...classesToAdd);\n    }\n\n    /**\n     * Remove a CSS class name from the `Component`s element.\n     *\n     * @param {...string} classesToRemove\n     *        One or more CSS class name to remove.\n     */\n    removeClass(...classesToRemove) {\n      removeClass(this.el_, ...classesToRemove);\n    }\n\n    /**\n     * Add or remove a CSS class name from the component's element.\n     * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n     * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n     *\n     * @param  {string} classToToggle\n     *         The class to add or remove based on (@link Component#hasClass}\n     *\n     * @param  {boolean|Dom~predicate} [predicate]\n     *         An {@link Dom~predicate} function or a boolean\n     */\n    toggleClass(classToToggle, predicate) {\n      toggleClass(this.el_, classToToggle, predicate);\n    }\n\n    /**\n     * Show the `Component`s element if it is hidden by removing the\n     * 'vjs-hidden' class name from it.\n     */\n    show() {\n      this.removeClass('vjs-hidden');\n    }\n\n    /**\n     * Hide the `Component`s element if it is currently showing by adding the\n     * 'vjs-hidden` class name to it.\n     */\n    hide() {\n      this.addClass('vjs-hidden');\n    }\n\n    /**\n     * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n     * class name to it. Used during fadeIn/fadeOut.\n     *\n     * @private\n     */\n    lockShowing() {\n      this.addClass('vjs-lock-showing');\n    }\n\n    /**\n     * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n     * class name from it. Used during fadeIn/fadeOut.\n     *\n     * @private\n     */\n    unlockShowing() {\n      this.removeClass('vjs-lock-showing');\n    }\n\n    /**\n     * Get the value of an attribute on the `Component`s element.\n     *\n     * @param {string} attribute\n     *        Name of the attribute to get the value from.\n     *\n     * @return {string|null}\n     *         - The value of the attribute that was asked for.\n     *         - Can be an empty string on some browsers if the attribute does not exist\n     *           or has no value\n     *         - Most browsers will return null if the attribute does not exist or has\n     *           no value.\n     *\n     * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n     */\n    getAttribute(attribute) {\n      return getAttribute(this.el_, attribute);\n    }\n\n    /**\n     * Set the value of an attribute on the `Component`'s element\n     *\n     * @param {string} attribute\n     *        Name of the attribute to set.\n     *\n     * @param {string} value\n     *        Value to set the attribute to.\n     *\n     * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n     */\n    setAttribute(attribute, value) {\n      setAttribute(this.el_, attribute, value);\n    }\n\n    /**\n     * Remove an attribute from the `Component`s element.\n     *\n     * @param {string} attribute\n     *        Name of the attribute to remove.\n     *\n     * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n     */\n    removeAttribute(attribute) {\n      removeAttribute(this.el_, attribute);\n    }\n\n    /**\n     * Get or set the width of the component based upon the CSS styles.\n     * See {@link Component#dimension} for more detailed information.\n     *\n     * @param {number|string} [num]\n     *        The width that you want to set postfixed with '%', 'px' or nothing.\n     *\n     * @param {boolean} [skipListeners]\n     *        Skip the componentresize event trigger\n     *\n     * @return {number|undefined}\n     *         The width when getting, zero if there is no width\n     */\n    width(num, skipListeners) {\n      return this.dimension('width', num, skipListeners);\n    }\n\n    /**\n     * Get or set the height of the component based upon the CSS styles.\n     * See {@link Component#dimension} for more detailed information.\n     *\n     * @param {number|string} [num]\n     *        The height that you want to set postfixed with '%', 'px' or nothing.\n     *\n     * @param {boolean} [skipListeners]\n     *        Skip the componentresize event trigger\n     *\n     * @return {number|undefined}\n     *         The height when getting, zero if there is no height\n     */\n    height(num, skipListeners) {\n      return this.dimension('height', num, skipListeners);\n    }\n\n    /**\n     * Set both the width and height of the `Component` element at the same time.\n     *\n     * @param  {number|string} width\n     *         Width to set the `Component`s element to.\n     *\n     * @param  {number|string} height\n     *         Height to set the `Component`s element to.\n     */\n    dimensions(width, height) {\n      // Skip componentresize listeners on width for optimization\n      this.width(width, true);\n      this.height(height);\n    }\n\n    /**\n     * Get or set width or height of the `Component` element. This is the shared code\n     * for the {@link Component#width} and {@link Component#height}.\n     *\n     * Things to know:\n     * - If the width or height in an number this will return the number postfixed with 'px'.\n     * - If the width/height is a percent this will return the percent postfixed with '%'\n     * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n     *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n     *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n     *   for more information\n     * - If you want the computed style of the component, use {@link Component#currentWidth}\n     *   and {@link {Component#currentHeight}\n     *\n     * @fires Component#componentresize\n     *\n     * @param {string} widthOrHeight\n     8        'width' or 'height'\n     *\n     * @param  {number|string} [num]\n     8         New dimension\n     *\n     * @param  {boolean} [skipListeners]\n     *         Skip componentresize event trigger\n     *\n     * @return {number|undefined}\n     *         The dimension when getting or 0 if unset\n     */\n    dimension(widthOrHeight, num, skipListeners) {\n      if (num !== undefined) {\n        // Set to zero if null or literally NaN (NaN !== NaN)\n        if (num === null || num !== num) {\n          num = 0;\n        }\n\n        // Check if using css width/height (% or px) and adjust\n        if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n          this.el_.style[widthOrHeight] = num;\n        } else if (num === 'auto') {\n          this.el_.style[widthOrHeight] = '';\n        } else {\n          this.el_.style[widthOrHeight] = num + 'px';\n        }\n\n        // skipListeners allows us to avoid triggering the resize event when setting both width and height\n        if (!skipListeners) {\n          /**\n           * Triggered when a component is resized.\n           *\n           * @event Component#componentresize\n           * @type {Event}\n           */\n          this.trigger('componentresize');\n        }\n        return;\n      }\n\n      // Not setting a value, so getting it\n      // Make sure element exists\n      if (!this.el_) {\n        return 0;\n      }\n\n      // Get dimension value from style\n      const val = this.el_.style[widthOrHeight];\n      const pxIndex = val.indexOf('px');\n      if (pxIndex !== -1) {\n        // Return the pixel value with no 'px'\n        return parseInt(val.slice(0, pxIndex), 10);\n      }\n\n      // No px so using % or no style was set, so falling back to offsetWidth/height\n      // If component has display:none, offset will return 0\n      // TODO: handle display:none and no dimension style using px\n      return parseInt(this.el_['offset' + toTitleCase$1(widthOrHeight)], 10);\n    }\n\n    /**\n     * Get the computed width or the height of the component's element.\n     *\n     * Uses `window.getComputedStyle`.\n     *\n     * @param {string} widthOrHeight\n     *        A string containing 'width' or 'height'. Whichever one you want to get.\n     *\n     * @return {number}\n     *         The dimension that gets asked for or 0 if nothing was set\n     *         for that dimension.\n     */\n    currentDimension(widthOrHeight) {\n      let computedWidthOrHeight = 0;\n      if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n        throw new Error('currentDimension only accepts width or height value');\n      }\n      computedWidthOrHeight = computedStyle(this.el_, widthOrHeight);\n\n      // remove 'px' from variable and parse as integer\n      computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n      // if the computed value is still 0, it's possible that the browser is lying\n      // and we want to check the offset values.\n      // This code also runs wherever getComputedStyle doesn't exist.\n      if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n        const rule = `offset${toTitleCase$1(widthOrHeight)}`;\n        computedWidthOrHeight = this.el_[rule];\n      }\n      return computedWidthOrHeight;\n    }\n\n    /**\n     * An object that contains width and height values of the `Component`s\n     * computed style. Uses `window.getComputedStyle`.\n     *\n     * @typedef {Object} Component~DimensionObject\n     *\n     * @property {number} width\n     *           The width of the `Component`s computed style.\n     *\n     * @property {number} height\n     *           The height of the `Component`s computed style.\n     */\n\n    /**\n     * Get an object that contains computed width and height values of the\n     * component's element.\n     *\n     * Uses `window.getComputedStyle`.\n     *\n     * @return {Component~DimensionObject}\n     *         The computed dimensions of the component's element.\n     */\n    currentDimensions() {\n      return {\n        width: this.currentDimension('width'),\n        height: this.currentDimension('height')\n      };\n    }\n\n    /**\n     * Get the computed width of the component's element.\n     *\n     * Uses `window.getComputedStyle`.\n     *\n     * @return {number}\n     *         The computed width of the component's element.\n     */\n    currentWidth() {\n      return this.currentDimension('width');\n    }\n\n    /**\n     * Get the computed height of the component's element.\n     *\n     * Uses `window.getComputedStyle`.\n     *\n     * @return {number}\n     *         The computed height of the component's element.\n     */\n    currentHeight() {\n      return this.currentDimension('height');\n    }\n\n    /**\n     * Retrieves the position and size information of the component's element.\n     *\n     * @return {Object} An object with `boundingClientRect` and `center` properties.\n     *         - `boundingClientRect`: An object with properties `x`, `y`, `width`,\n     *           `height`, `top`, `right`, `bottom`, and `left`, representing\n     *           the bounding rectangle of the element.\n     *         - `center`: An object with properties `x` and `y`, representing\n     *           the center point of the element. `width` and `height` are set to 0.\n     */\n    getPositions() {\n      const rect = this.el_.getBoundingClientRect();\n\n      // Creating objects that mirror DOMRectReadOnly for boundingClientRect and center\n      const boundingClientRect = {\n        x: rect.x,\n        y: rect.y,\n        width: rect.width,\n        height: rect.height,\n        top: rect.top,\n        right: rect.right,\n        bottom: rect.bottom,\n        left: rect.left\n      };\n\n      // Calculating the center position\n      const center = {\n        x: rect.left + rect.width / 2,\n        y: rect.top + rect.height / 2,\n        width: 0,\n        height: 0,\n        top: rect.top + rect.height / 2,\n        right: rect.left + rect.width / 2,\n        bottom: rect.top + rect.height / 2,\n        left: rect.left + rect.width / 2\n      };\n      return {\n        boundingClientRect,\n        center\n      };\n    }\n\n    /**\n     * Set the focus to this component\n     */\n    focus() {\n      this.el_.focus();\n    }\n\n    /**\n     * Remove the focus from this component\n     */\n    blur() {\n      this.el_.blur();\n    }\n\n    /**\n     * When this Component receives a `keydown` event which it does not process,\n     *  it passes the event to the Player for handling.\n     *\n     * @param {KeyboardEvent} event\n     *        The `keydown` event that caused this function to be called.\n     */\n    handleKeyDown(event) {\n      if (this.player_) {\n        // We only stop propagation here because we want unhandled events to fall\n        // back to the browser. Exclude Tab for focus trapping, exclude also when spatialNavigation is enabled.\n        if (event.key !== 'Tab' && !(this.player_.options_.playerOptions.spatialNavigation && this.player_.options_.playerOptions.spatialNavigation.enabled)) {\n          event.stopPropagation();\n        }\n        this.player_.handleKeyDown(event);\n      }\n    }\n\n    /**\n     * Many components used to have a `handleKeyPress` method, which was poorly\n     * named because it listened to a `keydown` event. This method name now\n     * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n     * will not see their method calls stop working.\n     *\n     * @param {KeyboardEvent} event\n     *        The event that caused this function to be called.\n     */\n    handleKeyPress(event) {\n      this.handleKeyDown(event);\n    }\n\n    /**\n     * Emit a 'tap' events when touch event support gets detected. This gets used to\n     * support toggling the controls through a tap on the video. They get enabled\n     * because every sub-component would have extra overhead otherwise.\n     *\n     * @protected\n     * @fires Component#tap\n     * @listens Component#touchstart\n     * @listens Component#touchmove\n     * @listens Component#touchleave\n     * @listens Component#touchcancel\n     * @listens Component#touchend\n      */\n    emitTapEvents() {\n      // Track the start time so we can determine how long the touch lasted\n      let touchStart = 0;\n      let firstTouch = null;\n\n      // Maximum movement allowed during a touch event to still be considered a tap\n      // Other popular libs use anywhere from 2 (hammer.js) to 15,\n      // so 10 seems like a nice, round number.\n      const tapMovementThreshold = 10;\n\n      // The maximum length a touch can be while still being considered a tap\n      const touchTimeThreshold = 200;\n      let couldBeTap;\n      this.on('touchstart', function (event) {\n        // If more than one finger, don't consider treating this as a click\n        if (event.touches.length === 1) {\n          // Copy pageX/pageY from the object\n          firstTouch = {\n            pageX: event.touches[0].pageX,\n            pageY: event.touches[0].pageY\n          };\n          // Record start time so we can detect a tap vs. \"touch and hold\"\n          touchStart = window.performance.now();\n          // Reset couldBeTap tracking\n          couldBeTap = true;\n        }\n      });\n      this.on('touchmove', function (event) {\n        // If more than one finger, don't consider treating this as a click\n        if (event.touches.length > 1) {\n          couldBeTap = false;\n        } else if (firstTouch) {\n          // Some devices will throw touchmoves for all but the slightest of taps.\n          // So, if we moved only a small distance, this could still be a tap\n          const xdiff = event.touches[0].pageX - firstTouch.pageX;\n          const ydiff = event.touches[0].pageY - firstTouch.pageY;\n          const touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n          if (touchDistance > tapMovementThreshold) {\n            couldBeTap = false;\n          }\n        }\n      });\n      const noTap = function () {\n        couldBeTap = false;\n      };\n\n      // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n      this.on('touchleave', noTap);\n      this.on('touchcancel', noTap);\n\n      // When the touch ends, measure how long it took and trigger the appropriate\n      // event\n      this.on('touchend', function (event) {\n        firstTouch = null;\n        // Proceed only if the touchmove/leave/cancel event didn't happen\n        if (couldBeTap === true) {\n          // Measure how long the touch lasted\n          const touchTime = window.performance.now() - touchStart;\n\n          // Make sure the touch was less than the threshold to be considered a tap\n          if (touchTime < touchTimeThreshold) {\n            // Don't let browser turn this into a click\n            event.preventDefault();\n            /**\n             * Triggered when a `Component` is tapped.\n             *\n             * @event Component#tap\n             * @type {MouseEvent}\n             */\n            this.trigger('tap');\n            // It may be good to copy the touchend event object and change the\n            // type to tap, if the other event properties aren't exact after\n            // Events.fixEvent runs (e.g. event.target)\n          }\n        }\n      });\n    }\n\n    /**\n     * This function reports user activity whenever touch events happen. This can get\n     * turned off by any sub-components that wants touch events to act another way.\n     *\n     * Report user touch activity when touch events occur. User activity gets used to\n     * determine when controls should show/hide. It is simple when it comes to mouse\n     * events, because any mouse event should show the controls. So we capture mouse\n     * events that bubble up to the player and report activity when that happens.\n     * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n     * controls. So touch events can't help us at the player level either.\n     *\n     * User activity gets checked asynchronously. So what could happen is a tap event\n     * on the video turns the controls off. Then the `touchend` event bubbles up to\n     * the player. Which, if it reported user activity, would turn the controls right\n     * back on. We also don't want to completely block touch events from bubbling up.\n     * Furthermore a `touchmove` event and anything other than a tap, should not turn\n     * controls back on.\n     *\n     * @listens Component#touchstart\n     * @listens Component#touchmove\n     * @listens Component#touchend\n     * @listens Component#touchcancel\n     */\n    enableTouchActivity() {\n      // Don't continue if the root player doesn't support reporting user activity\n      if (!this.player() || !this.player().reportUserActivity) {\n        return;\n      }\n\n      // listener for reporting that the user is active\n      const report = bind_(this.player(), this.player().reportUserActivity);\n      let touchHolding;\n      this.on('touchstart', function () {\n        report();\n        // For as long as the they are touching the device or have their mouse down,\n        // we consider them active even if they're not moving their finger or mouse.\n        // So we want to continue to update that they are active\n        this.clearInterval(touchHolding);\n        // report at the same interval as activityCheck\n        touchHolding = this.setInterval(report, 250);\n      });\n      const touchEnd = function (event) {\n        report();\n        // stop the interval that maintains activity if the touch is holding\n        this.clearInterval(touchHolding);\n      };\n      this.on('touchmove', report);\n      this.on('touchend', touchEnd);\n      this.on('touchcancel', touchEnd);\n    }\n\n    /**\n     * A callback that has no parameters and is bound into `Component`s context.\n     *\n     * @callback Component~GenericCallback\n     * @this Component\n     */\n\n    /**\n     * Creates a function that runs after an `x` millisecond timeout. This function is a\n     * wrapper around `window.setTimeout`. There are a few reasons to use this one\n     * instead though:\n     * 1. It gets cleared via  {@link Component#clearTimeout} when\n     *    {@link Component#dispose} gets called.\n     * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n     *\n     * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n     *         will cause its dispose listener not to get cleaned up! Please use\n     *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n     *\n     * @param {Component~GenericCallback} fn\n     *        The function that will be run after `timeout`.\n     *\n     * @param {number} timeout\n     *        Timeout in milliseconds to delay before executing the specified function.\n     *\n     * @return {number}\n     *         Returns a timeout ID that gets used to identify the timeout. It can also\n     *         get used in {@link Component#clearTimeout} to clear the timeout that\n     *         was set.\n     *\n     * @listens Component#dispose\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n     */\n    setTimeout(fn, timeout) {\n      // declare as variables so they are properly available in timeout function\n      // eslint-disable-next-line\n      var timeoutId;\n      fn = bind_(this, fn);\n      this.clearTimersOnDispose_();\n      timeoutId = window.setTimeout(() => {\n        if (this.setTimeoutIds_.has(timeoutId)) {\n          this.setTimeoutIds_.delete(timeoutId);\n        }\n        fn();\n      }, timeout);\n      this.setTimeoutIds_.add(timeoutId);\n      return timeoutId;\n    }\n\n    /**\n     * Clears a timeout that gets created via `window.setTimeout` or\n     * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n     * use this function instead of `window.clearTimout`. If you don't your dispose\n     * listener will not get cleaned up until {@link Component#dispose}!\n     *\n     * @param {number} timeoutId\n     *        The id of the timeout to clear. The return value of\n     *        {@link Component#setTimeout} or `window.setTimeout`.\n     *\n     * @return {number}\n     *         Returns the timeout id that was cleared.\n     *\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n     */\n    clearTimeout(timeoutId) {\n      if (this.setTimeoutIds_.has(timeoutId)) {\n        this.setTimeoutIds_.delete(timeoutId);\n        window.clearTimeout(timeoutId);\n      }\n      return timeoutId;\n    }\n\n    /**\n     * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n     * around `window.setInterval`. There are a few reasons to use this one instead though.\n     * 1. It gets cleared via  {@link Component#clearInterval} when\n     *    {@link Component#dispose} gets called.\n     * 2. The function callback will be a {@link Component~GenericCallback}\n     *\n     * @param {Component~GenericCallback} fn\n     *        The function to run every `x` seconds.\n     *\n     * @param {number} interval\n     *        Execute the specified function every `x` milliseconds.\n     *\n     * @return {number}\n     *         Returns an id that can be used to identify the interval. It can also be be used in\n     *         {@link Component#clearInterval} to clear the interval.\n     *\n     * @listens Component#dispose\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n     */\n    setInterval(fn, interval) {\n      fn = bind_(this, fn);\n      this.clearTimersOnDispose_();\n      const intervalId = window.setInterval(fn, interval);\n      this.setIntervalIds_.add(intervalId);\n      return intervalId;\n    }\n\n    /**\n     * Clears an interval that gets created via `window.setInterval` or\n     * {@link Component#setInterval}. If you set an interval via {@link Component#setInterval}\n     * use this function instead of `window.clearInterval`. If you don't your dispose\n     * listener will not get cleaned up until {@link Component#dispose}!\n     *\n     * @param {number} intervalId\n     *        The id of the interval to clear. The return value of\n     *        {@link Component#setInterval} or `window.setInterval`.\n     *\n     * @return {number}\n     *         Returns the interval id that was cleared.\n     *\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n     */\n    clearInterval(intervalId) {\n      if (this.setIntervalIds_.has(intervalId)) {\n        this.setIntervalIds_.delete(intervalId);\n        window.clearInterval(intervalId);\n      }\n      return intervalId;\n    }\n\n    /**\n     * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n     * with a few extra bonuses:\n     *\n     * - Supports browsers that do not support rAF by falling back to\n     *   {@link Component#setTimeout}.\n     *\n     * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n     *   bound to the component).\n     *\n     * - Automatic cancellation of the rAF callback is handled if the component\n     *   is disposed before it is called.\n     *\n     * @param  {Component~GenericCallback} fn\n     *         A function that will be bound to this component and executed just\n     *         before the browser's next repaint.\n     *\n     * @return {number}\n     *         Returns an rAF ID that gets used to identify the timeout. It can\n     *         also be used in {@link Component#cancelAnimationFrame} to cancel\n     *         the animation frame callback.\n     *\n     * @listens Component#dispose\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n     */\n    requestAnimationFrame(fn) {\n      this.clearTimersOnDispose_();\n\n      // declare as variables so they are properly available in rAF function\n      // eslint-disable-next-line\n      var id;\n      fn = bind_(this, fn);\n      id = window.requestAnimationFrame(() => {\n        if (this.rafIds_.has(id)) {\n          this.rafIds_.delete(id);\n        }\n        fn();\n      });\n      this.rafIds_.add(id);\n      return id;\n    }\n\n    /**\n     * Request an animation frame, but only one named animation\n     * frame will be queued. Another will never be added until\n     * the previous one finishes.\n     *\n     * @param {string} name\n     *        The name to give this requestAnimationFrame\n     *\n     * @param  {Component~GenericCallback} fn\n     *         A function that will be bound to this component and executed just\n     *         before the browser's next repaint.\n     */\n    requestNamedAnimationFrame(name, fn) {\n      if (this.namedRafs_.has(name)) {\n        return;\n      }\n      this.clearTimersOnDispose_();\n      fn = bind_(this, fn);\n      const id = this.requestAnimationFrame(() => {\n        fn();\n        if (this.namedRafs_.has(name)) {\n          this.namedRafs_.delete(name);\n        }\n      });\n      this.namedRafs_.set(name, id);\n      return name;\n    }\n\n    /**\n     * Cancels a current named animation frame if it exists.\n     *\n     * @param {string} name\n     *        The name of the requestAnimationFrame to cancel.\n     */\n    cancelNamedAnimationFrame(name) {\n      if (!this.namedRafs_.has(name)) {\n        return;\n      }\n      this.cancelAnimationFrame(this.namedRafs_.get(name));\n      this.namedRafs_.delete(name);\n    }\n\n    /**\n     * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n     * (rAF).\n     *\n     * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n     * use this function instead of `window.cancelAnimationFrame`. If you don't,\n     * your dispose listener will not get cleaned up until {@link Component#dispose}!\n     *\n     * @param {number} id\n     *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n     *\n     * @return {number}\n     *         Returns the rAF ID that was cleared.\n     *\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n     */\n    cancelAnimationFrame(id) {\n      if (this.rafIds_.has(id)) {\n        this.rafIds_.delete(id);\n        window.cancelAnimationFrame(id);\n      }\n      return id;\n    }\n\n    /**\n     * A function to setup `requestAnimationFrame`, `setTimeout`,\n     * and `setInterval`, clearing on dispose.\n     *\n     * > Previously each timer added and removed dispose listeners on it's own.\n     * For better performance it was decided to batch them all, and use `Set`s\n     * to track outstanding timer ids.\n     *\n     * @private\n     */\n    clearTimersOnDispose_() {\n      if (this.clearingTimersOnDispose_) {\n        return;\n      }\n      this.clearingTimersOnDispose_ = true;\n      this.one('dispose', () => {\n        [['namedRafs_', 'cancelNamedAnimationFrame'], ['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(([idName, cancelName]) => {\n          // for a `Set` key will actually be the value again\n          // so forEach((val, val) =>` but for maps we want to use\n          // the key.\n          this[idName].forEach((val, key) => this[cancelName](key));\n        });\n        this.clearingTimersOnDispose_ = false;\n      });\n    }\n\n    /**\n      * Decide whether an element is actually disabled or not.\n      *\n      * @function isActuallyDisabled\n      * @param element {Node}\n      * @return {boolean}\n      *\n      * @see {@link https://html.spec.whatwg.org/multipage/semantics-other.html#concept-element-disabled}\n      */\n    getIsDisabled() {\n      return Boolean(this.el_.disabled);\n    }\n\n    /**\n      * Decide whether the element is expressly inert or not.\n      *\n      * @see {@link https://html.spec.whatwg.org/multipage/interaction.html#expressly-inert}\n      * @function isExpresslyInert\n      * @param element {Node}\n      * @return {boolean}\n      */\n    getIsExpresslyInert() {\n      return this.el_.inert && !this.el_.ownerDocument.documentElement.inert;\n    }\n\n    /**\n     * Determine whether or not this component can be considered as focusable component.\n     *\n     * @param {HTMLElement} el - The HTML element representing the component.\n     * @return {boolean}\n     *         If the component can be focused, will be `true`. Otherwise, `false`.\n     */\n    getIsFocusable(el) {\n      const element = el || this.el_;\n      return element.tabIndex >= 0 && !(this.getIsDisabled() || this.getIsExpresslyInert());\n    }\n\n    /**\n     * Determine whether or not this component is currently visible/enabled/etc...\n     *\n     * @param {HTMLElement} el - The HTML element representing the component.\n     * @return {boolean}\n     *         If the component can is currently visible & enabled, will be `true`. Otherwise, `false`.\n     */\n    getIsAvailableToBeFocused(el) {\n      /**\n       * Decide the style property of this element is specified whether it's visible or not.\n       *\n       * @function isVisibleStyleProperty\n       * @param element {CSSStyleDeclaration}\n       * @return {boolean}\n       */\n      function isVisibleStyleProperty(element) {\n        const elementStyle = window.getComputedStyle(element, null);\n        const thisVisibility = elementStyle.getPropertyValue('visibility');\n        const thisDisplay = elementStyle.getPropertyValue('display');\n        const invisibleStyle = ['hidden', 'collapse'];\n        return thisDisplay !== 'none' && !invisibleStyle.includes(thisVisibility);\n      }\n\n      /**\n       * Decide whether the element is being rendered or not.\n       * 1. If an element has the style as \"visibility: hidden | collapse\" or \"display: none\", it is not being rendered.\n       * 2. If an element has the style as \"opacity: 0\", it is not being rendered.(that is, invisible).\n       * 3. If width and height of an element are explicitly set to 0, it is not being rendered.\n       * 4. If a parent element is hidden, an element itself is not being rendered.\n       * (CSS visibility property and display property are inherited.)\n       *\n       * @see {@link https://html.spec.whatwg.org/multipage/rendering.html#being-rendered}\n       * @function isBeingRendered\n       * @param element {Node}\n       * @return {boolean}\n       */\n      function isBeingRendered(element) {\n        if (!isVisibleStyleProperty(element.parentElement)) {\n          return false;\n        }\n        if (!isVisibleStyleProperty(element) || element.style.opacity === '0' || window.getComputedStyle(element).height === '0px' || window.getComputedStyle(element).width === '0px') {\n          return false;\n        }\n        return true;\n      }\n\n      /**\n       * Determine if the element is visible for the user or not.\n       * 1. If an element sum of its offsetWidth, offsetHeight, height and width is less than 1 is not visible.\n       * 2. If elementCenter.x is less than is not visible.\n       * 3. If elementCenter.x is more than the document's width is not visible.\n       * 4. If elementCenter.y is less than 0 is not visible.\n       * 5. If elementCenter.y is the document's height is not visible.\n       *\n       * @function isVisible\n       * @param element {Node}\n       * @return {boolean}\n       */\n      function isVisible(element) {\n        if (element.offsetWidth + element.offsetHeight + element.getBoundingClientRect().height + element.getBoundingClientRect().width === 0) {\n          return false;\n        }\n\n        // Define elementCenter object with props of x and y\n        // x: Left position relative to the viewport plus element's width (no margin) divided between 2.\n        // y: Top position relative to the viewport plus element's height (no margin) divided between 2.\n        const elementCenter = {\n          x: element.getBoundingClientRect().left + element.offsetWidth / 2,\n          y: element.getBoundingClientRect().top + element.offsetHeight / 2\n        };\n        if (elementCenter.x < 0) {\n          return false;\n        }\n        if (elementCenter.x > (document.documentElement.clientWidth || window.innerWidth)) {\n          return false;\n        }\n        if (elementCenter.y < 0) {\n          return false;\n        }\n        if (elementCenter.y > (document.documentElement.clientHeight || window.innerHeight)) {\n          return false;\n        }\n        let pointContainer = document.elementFromPoint(elementCenter.x, elementCenter.y);\n        while (pointContainer) {\n          if (pointContainer === element) {\n            return true;\n          }\n          if (pointContainer.parentNode) {\n            pointContainer = pointContainer.parentNode;\n          } else {\n            return false;\n          }\n        }\n      }\n\n      // If no DOM element was passed as argument use this component's element.\n      if (!el) {\n        el = this.el();\n      }\n\n      // If element is visible, is being rendered & either does not have a parent element or its tabIndex is not negative.\n      if (isVisible(el) && isBeingRendered(el) && (!el.parentElement || el.tabIndex >= 0)) {\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Register a `Component` with `videojs` given the name and the component.\n     *\n     * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n     *         should be registered using {@link Tech.registerTech} or\n     *         {@link videojs:videojs.registerTech}.\n     *\n     * > NOTE: This function can also be seen on videojs as\n     *         {@link videojs:videojs.registerComponent}.\n     *\n     * @param {string} name\n     *        The name of the `Component` to register.\n     *\n     * @param {Component} ComponentToRegister\n     *        The `Component` class to register.\n     *\n     * @return {Component}\n     *         The `Component` that was registered.\n     */\n    static registerComponent(name, ComponentToRegister) {\n      if (typeof name !== 'string' || !name) {\n        throw new Error(`Illegal component name, \"${name}\"; must be a non-empty string.`);\n      }\n      const Tech = Component$1.getComponent('Tech');\n\n      // We need to make sure this check is only done if Tech has been registered.\n      const isTech = Tech && Tech.isTech(ComponentToRegister);\n      const isComp = Component$1 === ComponentToRegister || Component$1.prototype.isPrototypeOf(ComponentToRegister.prototype);\n      if (isTech || !isComp) {\n        let reason;\n        if (isTech) {\n          reason = 'techs must be registered using Tech.registerTech()';\n        } else {\n          reason = 'must be a Component subclass';\n        }\n        throw new Error(`Illegal component, \"${name}\"; ${reason}.`);\n      }\n      name = toTitleCase$1(name);\n      if (!Component$1.components_) {\n        Component$1.components_ = {};\n      }\n      const Player = Component$1.getComponent('Player');\n      if (name === 'Player' && Player && Player.players) {\n        const players = Player.players;\n        const playerNames = Object.keys(players);\n\n        // If we have players that were disposed, then their name will still be\n        // in Players.players. So, we must loop through and verify that the value\n        // for each item is not null. This allows registration of the Player component\n        // after all players have been disposed or before any were created.\n        if (players && playerNames.length > 0 && playerNames.map(pname => players[pname]).every(Boolean)) {\n          throw new Error('Can not register Player component after player has been created.');\n        }\n      }\n      Component$1.components_[name] = ComponentToRegister;\n      Component$1.components_[toLowerCase(name)] = ComponentToRegister;\n      return ComponentToRegister;\n    }\n\n    /**\n     * Get a `Component` based on the name it was registered with.\n     *\n     * @param {string} name\n     *        The Name of the component to get.\n     *\n     * @return {typeof Component}\n     *         The `Component` that got registered under the given name.\n     */\n    static getComponent(name) {\n      if (!name || !Component$1.components_) {\n        return;\n      }\n      return Component$1.components_[name];\n    }\n  }\n  Component$1.registerComponent('Component', Component$1);\n\n  /**\n   * @file time.js\n   * @module time\n   */\n\n  /**\n   * Returns the time for the specified index at the start or end\n   * of a TimeRange object.\n   *\n   * @typedef    {Function} TimeRangeIndex\n   *\n   * @param      {number} [index=0]\n   *             The range number to return the time for.\n   *\n   * @return     {number}\n   *             The time offset at the specified index.\n   *\n   * @deprecated The index argument must be provided.\n   *             In the future, leaving it out will throw an error.\n   */\n\n  /**\n   * An object that contains ranges of time, which mimics {@link TimeRanges}.\n   *\n   * @typedef  {Object} TimeRange\n   *\n   * @property {number} length\n   *           The number of time ranges represented by this object.\n   *\n   * @property {module:time~TimeRangeIndex} start\n   *           Returns the time offset at which a specified time range begins.\n   *\n   * @property {module:time~TimeRangeIndex} end\n   *           Returns the time offset at which a specified time range ends.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n   */\n\n  /**\n   * Check if any of the time ranges are over the maximum index.\n   *\n   * @private\n   * @param   {string} fnName\n   *          The function name to use for logging\n   *\n   * @param   {number} index\n   *          The index to check\n   *\n   * @param   {number} maxIndex\n   *          The maximum possible index\n   *\n   * @throws  {Error} if the timeRanges provided are over the maxIndex\n   */\n  function rangeCheck(fnName, index, maxIndex) {\n    if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n      throw new Error(`Failed to execute '${fnName}' on 'TimeRanges': The index provided (${index}) is non-numeric or out of bounds (0-${maxIndex}).`);\n    }\n  }\n\n  /**\n   * Get the time for the specified index at the start or end\n   * of a TimeRange object.\n   *\n   * @private\n   * @param      {string} fnName\n   *             The function name to use for logging\n   *\n   * @param      {string} valueIndex\n   *             The property that should be used to get the time. should be\n   *             'start' or 'end'\n   *\n   * @param      {Array} ranges\n   *             An array of time ranges\n   *\n   * @param      {Array} [rangeIndex=0]\n   *             The index to start the search at\n   *\n   * @return     {number}\n   *             The time that offset at the specified index.\n   *\n   * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n   * @throws     {Error} if rangeIndex is more than the length of ranges\n   */\n  function getRange(fnName, valueIndex, ranges, rangeIndex) {\n    rangeCheck(fnName, rangeIndex, ranges.length - 1);\n    return ranges[rangeIndex][valueIndex];\n  }\n\n  /**\n   * Create a time range object given ranges of time.\n   *\n   * @private\n   * @param   {Array} [ranges]\n   *          An array of time ranges.\n   *\n   * @return  {TimeRange}\n   */\n  function createTimeRangesObj(ranges) {\n    let timeRangesObj;\n    if (ranges === undefined || ranges.length === 0) {\n      timeRangesObj = {\n        length: 0,\n        start() {\n          throw new Error('This TimeRanges object is empty');\n        },\n        end() {\n          throw new Error('This TimeRanges object is empty');\n        }\n      };\n    } else {\n      timeRangesObj = {\n        length: ranges.length,\n        start: getRange.bind(null, 'start', 0, ranges),\n        end: getRange.bind(null, 'end', 1, ranges)\n      };\n    }\n    if (window.Symbol && window.Symbol.iterator) {\n      timeRangesObj[window.Symbol.iterator] = () => (ranges || []).values();\n    }\n    return timeRangesObj;\n  }\n\n  /**\n   * Create a `TimeRange` object which mimics an\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n   *\n   * @param {number|Array[]} start\n   *        The start of a single range (a number) or an array of ranges (an\n   *        array of arrays of two numbers each).\n   *\n   * @param {number} end\n   *        The end of a single range. Cannot be used with the array form of\n   *        the `start` argument.\n   *\n   * @return {TimeRange}\n   */\n  function createTimeRanges$1(start, end) {\n    if (Array.isArray(start)) {\n      return createTimeRangesObj(start);\n    } else if (start === undefined || end === undefined) {\n      return createTimeRangesObj();\n    }\n    return createTimeRangesObj([[start, end]]);\n  }\n\n  /**\n   * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n   * seconds) will force a number of leading zeros to cover the length of the\n   * guide.\n   *\n   * @private\n   * @param  {number} seconds\n   *         Number of seconds to be turned into a string\n   *\n   * @param  {number} guide\n   *         Number (in seconds) to model the string after\n   *\n   * @return {string}\n   *         Time formatted as H:MM:SS or M:SS\n   */\n  const defaultImplementation = function (seconds, guide) {\n    seconds = seconds < 0 ? 0 : seconds;\n    let s = Math.floor(seconds % 60);\n    let m = Math.floor(seconds / 60 % 60);\n    let h = Math.floor(seconds / 3600);\n    const gm = Math.floor(guide / 60 % 60);\n    const gh = Math.floor(guide / 3600);\n\n    // handle invalid times\n    if (isNaN(seconds) || seconds === Infinity) {\n      // '-' is false for all relational operators (e.g. <, >=) so this setting\n      // will add the minimum number of fields specified by the guide\n      h = m = s = '-';\n    }\n\n    // Check if we need to show hours\n    h = h > 0 || gh > 0 ? h + ':' : '';\n\n    // If hours are showing, we may need to add a leading zero.\n    // Always show at least one digit of minutes.\n    m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n    // Check if leading zero is need for seconds\n    s = s < 10 ? '0' + s : s;\n    return h + m + s;\n  };\n\n  // Internal pointer to the current implementation.\n  let implementation = defaultImplementation;\n\n  /**\n   * Replaces the default formatTime implementation with a custom implementation.\n   *\n   * @param {Function} customImplementation\n   *        A function which will be used in place of the default formatTime\n   *        implementation. Will receive the current time in seconds and the\n   *        guide (in seconds) as arguments.\n   */\n  function setFormatTime(customImplementation) {\n    implementation = customImplementation;\n  }\n\n  /**\n   * Resets formatTime to the default implementation.\n   */\n  function resetFormatTime() {\n    implementation = defaultImplementation;\n  }\n\n  /**\n   * Delegates to either the default time formatting function or a custom\n   * function supplied via `setFormatTime`.\n   *\n   * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n   * guide (in seconds) will force a number of leading zeros to cover the\n   * length of the guide.\n   *\n   * @example  formatTime(125, 600) === \"02:05\"\n   * @param    {number} seconds\n   *           Number of seconds to be turned into a string\n   *\n   * @param    {number} guide\n   *           Number (in seconds) to model the string after\n   *\n   * @return   {string}\n   *           Time formatted as H:MM:SS or M:SS\n   */\n  function formatTime(seconds, guide = seconds) {\n    return implementation(seconds, guide);\n  }\n\n  var Time = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    createTimeRanges: createTimeRanges$1,\n    createTimeRange: createTimeRanges$1,\n    setFormatTime: setFormatTime,\n    resetFormatTime: resetFormatTime,\n    formatTime: formatTime\n  });\n\n  /**\n   * @file buffer.js\n   * @module buffer\n   */\n\n  /** @import { TimeRange } from './time' */\n\n  /**\n   * Compute the percentage of the media that has been buffered.\n   *\n   * @param {TimeRange} buffered\n   *        The current `TimeRanges` object representing buffered time ranges\n   *\n   * @param {number} duration\n   *        Total duration of the media\n   *\n   * @return {number}\n   *         Percent buffered of the total duration in decimal form.\n   */\n  function bufferedPercent(buffered, duration) {\n    let bufferedDuration = 0;\n    let start;\n    let end;\n    if (!duration) {\n      return 0;\n    }\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges$1(0, 0);\n    }\n    for (let i = 0; i < buffered.length; i++) {\n      start = buffered.start(i);\n      end = buffered.end(i);\n\n      // buffered end can be bigger than duration by a very small fraction\n      if (end > duration) {\n        end = duration;\n      }\n      bufferedDuration += end - start;\n    }\n    return bufferedDuration / duration;\n  }\n\n  /**\n   * @file media-error.js\n   */\n\n  /**\n   * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n   *\n   * @param {number|string|Object|MediaError} value\n   *        This can be of multiple types:\n   *        - number: should be a standard error code\n   *        - string: an error message (the code will be 0)\n   *        - Object: arbitrary properties\n   *        - `MediaError` (native): used to populate a video.js `MediaError` object\n   *        - `MediaError` (video.js): will return itself if it's already a\n   *          video.js `MediaError` object.\n   *\n   * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n   * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n   *\n   * @class MediaError\n   */\n  function MediaError(value) {\n    // Allow redundant calls to this constructor to avoid having `instanceof`\n    // checks peppered around the code.\n    if (value instanceof MediaError) {\n      return value;\n    }\n    if (typeof value === 'number') {\n      this.code = value;\n    } else if (typeof value === 'string') {\n      // default code is zero, so this is a custom error\n      this.message = value;\n    } else if (isObject$1(value)) {\n      // We assign the `code` property manually because native `MediaError` objects\n      // do not expose it as an own/enumerable property of the object.\n      if (typeof value.code === 'number') {\n        this.code = value.code;\n      }\n      Object.assign(this, value);\n    }\n    if (!this.message) {\n      this.message = MediaError.defaultMessages[this.code] || '';\n    }\n  }\n\n  /**\n   * The error code that refers two one of the defined `MediaError` types\n   *\n   * @type {Number}\n   */\n  MediaError.prototype.code = 0;\n\n  /**\n   * An optional message that to show with the error. Message is not part of the HTML5\n   * video spec but allows for more informative custom errors.\n   *\n   * @type {String}\n   */\n  MediaError.prototype.message = '';\n\n  /**\n   * An optional status code that can be set by plugins to allow even more detail about\n   * the error. For example a plugin might provide a specific HTTP status code and an\n   * error message for that code. Then when the plugin gets that error this class will\n   * know how to display an error message for it. This allows a custom message to show\n   * up on the `Player` error overlay.\n   *\n   * @type {Array}\n   */\n  MediaError.prototype.status = null;\n\n  /**\n   * An object containing an error type, as well as other information regarding the error.\n   *\n   * @typedef {{errorType: string, [key: string]: any}} ErrorMetadata\n   */\n\n  /**\n   * An optional object to give more detail about the error. This can be used to give\n   * a higher level of specificity to an error versus the more generic MediaError codes.\n   * `metadata` expects an `errorType` string that should align with the values from videojs.Error.\n   *\n   * @type {ErrorMetadata}\n   */\n  MediaError.prototype.metadata = null;\n\n  /**\n   * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n   * specification listed under {@link MediaError} for more information.\n   *\n   * @enum {array}\n   * @readonly\n   * @property {string} 0 - MEDIA_ERR_CUSTOM\n   * @property {string} 1 - MEDIA_ERR_ABORTED\n   * @property {string} 2 - MEDIA_ERR_NETWORK\n   * @property {string} 3 - MEDIA_ERR_DECODE\n   * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n   * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n   */\n  MediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n  /**\n   * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n   *\n   * @type {Array}\n   * @constant\n   */\n  MediaError.defaultMessages = {\n    1: 'You aborted the media playback',\n    2: 'A network error caused the media download to fail part-way.',\n    3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n    4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n    5: 'The media is encrypted and we do not have the keys to decrypt it.'\n  };\n\n  /**\n   * W3C error code for any custom error.\n   *\n   * @member MediaError#MEDIA_ERR_CUSTOM\n   * @constant {number}\n   * @default 0\n   */\n  MediaError.MEDIA_ERR_CUSTOM = 0;\n\n  /**\n   * W3C error code for any custom error.\n   *\n   * @member MediaError.MEDIA_ERR_CUSTOM\n   * @constant {number}\n   * @default 0\n   */\n  MediaError.prototype.MEDIA_ERR_CUSTOM = 0;\n\n  /**\n   * W3C error code for media error aborted.\n   *\n   * @member MediaError#MEDIA_ERR_ABORTED\n   * @constant {number}\n   * @default 1\n   */\n  MediaError.MEDIA_ERR_ABORTED = 1;\n\n  /**\n   * W3C error code for media error aborted.\n   *\n   * @member MediaError.MEDIA_ERR_ABORTED\n   * @constant {number}\n   * @default 1\n   */\n  MediaError.prototype.MEDIA_ERR_ABORTED = 1;\n\n  /**\n   * W3C error code for any network error.\n   *\n   * @member MediaError#MEDIA_ERR_NETWORK\n   * @constant {number}\n   * @default 2\n   */\n  MediaError.MEDIA_ERR_NETWORK = 2;\n\n  /**\n   * W3C error code for any network error.\n   *\n   * @member MediaError.MEDIA_ERR_NETWORK\n   * @constant {number}\n   * @default 2\n   */\n  MediaError.prototype.MEDIA_ERR_NETWORK = 2;\n\n  /**\n   * W3C error code for any decoding error.\n   *\n   * @member MediaError#MEDIA_ERR_DECODE\n   * @constant {number}\n   * @default 3\n   */\n  MediaError.MEDIA_ERR_DECODE = 3;\n\n  /**\n   * W3C error code for any decoding error.\n   *\n   * @member MediaError.MEDIA_ERR_DECODE\n   * @constant {number}\n   * @default 3\n   */\n  MediaError.prototype.MEDIA_ERR_DECODE = 3;\n\n  /**\n   * W3C error code for any time that a source is not supported.\n   *\n   * @member MediaError#MEDIA_ERR_SRC_NOT_SUPPORTED\n   * @constant {number}\n   * @default 4\n   */\n  MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\n  /**\n   * W3C error code for any time that a source is not supported.\n   *\n   * @member MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED\n   * @constant {number}\n   * @default 4\n   */\n  MediaError.prototype.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\n  /**\n   * W3C error code for any time that a source is encrypted.\n   *\n   * @member MediaError#MEDIA_ERR_ENCRYPTED\n   * @constant {number}\n   * @default 5\n   */\n  MediaError.MEDIA_ERR_ENCRYPTED = 5;\n\n  /**\n   * W3C error code for any time that a source is encrypted.\n   *\n   * @member MediaError.MEDIA_ERR_ENCRYPTED\n   * @constant {number}\n   * @default 5\n   */\n  MediaError.prototype.MEDIA_ERR_ENCRYPTED = 5;\n\n  var tuple = SafeParseTuple;\n  function SafeParseTuple(obj, reviver) {\n    var json;\n    var error = null;\n    try {\n      json = JSON.parse(obj, reviver);\n    } catch (err) {\n      error = err;\n    }\n    return [error, json];\n  }\n\n  /**\n   * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n   *\n   * @param  {Object}  value\n   *         An object that may or may not be `Promise`-like.\n   *\n   * @return {boolean}\n   *         Whether or not the object is `Promise`-like.\n   */\n  function isPromise(value) {\n    return value !== undefined && value !== null && typeof value.then === 'function';\n  }\n\n  /**\n   * Silence a Promise-like object.\n   *\n   * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n   * play promise\" rejection error messages.\n   *\n   * @param  {Object} value\n   *         An object that may or may not be `Promise`-like.\n   */\n  function silencePromise(value) {\n    if (isPromise(value)) {\n      value.then(null, e => {});\n    }\n  }\n\n  /**\n   * @file text-track-list-converter.js Utilities for capturing text track state and\n   * re-creating tracks based on a capture.\n   *\n   * @module text-track-list-converter\n   */\n\n  /** @import Tech from '../tech/tech' */\n\n  /**\n   * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n   * represents the {@link TextTrack}'s state.\n   *\n   * @param {TextTrack} track\n   *        The text track to query.\n   *\n   * @return {Object}\n   *         A serializable javascript representation of the TextTrack.\n   * @private\n   */\n  const trackToJson_ = function (track) {\n    const ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce((acc, prop, i) => {\n      if (track[prop]) {\n        acc[prop] = track[prop];\n      }\n      return acc;\n    }, {\n      cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n        return {\n          startTime: cue.startTime,\n          endTime: cue.endTime,\n          text: cue.text,\n          id: cue.id\n        };\n      })\n    });\n    return ret;\n  };\n\n  /**\n   * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n   * state of all {@link TextTrack}s currently configured. The return array is compatible with\n   * {@link text-track-list-converter:jsonToTextTracks}.\n   *\n   * @param {Tech} tech\n   *        The tech object to query\n   *\n   * @return {Array}\n   *         A serializable javascript representation of the {@link Tech}s\n   *         {@link TextTrackList}.\n   */\n  const textTracksToJson = function (tech) {\n    const trackEls = tech.$$('track');\n    const trackObjs = Array.prototype.map.call(trackEls, t => t.track);\n    const tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n      const json = trackToJson_(trackEl.track);\n      if (trackEl.src) {\n        json.src = trackEl.src;\n      }\n      return json;\n    });\n    return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n      return trackObjs.indexOf(track) === -1;\n    }).map(trackToJson_));\n  };\n\n  /**\n   * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n   * object {@link TextTrack} representations.\n   *\n   * @param {Array} json\n   *        An array of `TextTrack` representation objects, like those that would be\n   *        produced by `textTracksToJson`.\n   *\n   * @param {Tech} tech\n   *        The `Tech` to create the `TextTrack`s on.\n   */\n  const jsonToTextTracks = function (json, tech) {\n    json.forEach(function (track) {\n      const addedTrack = tech.addRemoteTextTrack(track).track;\n      if (!track.src && track.cues) {\n        track.cues.forEach(cue => addedTrack.addCue(cue));\n      }\n    });\n    return tech.textTracks();\n  };\n  var textTrackConverter = {\n    textTracksToJson,\n    jsonToTextTracks,\n    trackToJson_\n  };\n\n  /**\n   * @file modal-dialog.js\n   */\n\n  /** @import Player from './player' */\n  /** @import { ContentDescriptor } from './utils/dom' */\n\n  const MODAL_CLASS_NAME = 'vjs-modal-dialog';\n\n  /**\n   * The `ModalDialog` displays over the video and its controls, which blocks\n   * interaction with the player until it is closed.\n   *\n   * Modal dialogs include a \"Close\" button and will close when that button\n   * is activated - or when ESC is pressed anywhere.\n   *\n   * @extends Component\n   */\n  class ModalDialog extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {ContentDescriptor} [options.content=undefined]\n     *        Provide customized content for this modal.\n     *\n     * @param {string} [options.description]\n     *        A text description for the modal, primarily for accessibility.\n     *\n     * @param {boolean} [options.fillAlways=false]\n     *        Normally, modals are automatically filled only the first time\n     *        they open. This tells the modal to refresh its content\n     *        every time it opens.\n     *\n     * @param {string} [options.label]\n     *        A text label for the modal, primarily for accessibility.\n     *\n     * @param {boolean} [options.pauseOnOpen=true]\n     *        If `true`, playback will will be paused if playing when\n     *        the modal opens, and resumed when it closes.\n     *\n     * @param {boolean} [options.temporary=true]\n     *        If `true`, the modal can only be opened once; it will be\n     *        disposed as soon as it's closed.\n     *\n     * @param {boolean} [options.uncloseable=false]\n     *        If `true`, the user will not be able to close the modal\n     *        through the UI in the normal ways. Programmatic closing is\n     *        still possible.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.handleKeyDown_ = e => this.handleKeyDown(e);\n      this.close_ = e => this.close(e);\n      this.opened_ = this.hasBeenOpened_ = this.hasBeenFilled_ = false;\n      this.closeable(!this.options_.uncloseable);\n      this.content(this.options_.content);\n\n      // Make sure the contentEl is defined AFTER any children are initialized\n      // because we only want the contents of the modal in the contentEl\n      // (not the UI elements like the close button).\n      this.contentEl_ = createEl('div', {\n        className: `${MODAL_CLASS_NAME}-content`\n      }, {\n        role: 'document'\n      });\n      this.descEl_ = createEl('p', {\n        className: `${MODAL_CLASS_NAME}-description vjs-control-text`,\n        id: this.el().getAttribute('aria-describedby')\n      });\n      textContent(this.descEl_, this.description());\n      this.el_.appendChild(this.descEl_);\n      this.el_.appendChild(this.contentEl_);\n    }\n\n    /**\n     * Create the `ModalDialog`'s DOM element\n     *\n     * @return {Element}\n     *         The DOM element that gets created.\n     */\n    createEl() {\n      return super.createEl('div', {\n        className: this.buildCSSClass(),\n        tabIndex: -1\n      }, {\n        'aria-describedby': `${this.id()}_description`,\n        'aria-hidden': 'true',\n        'aria-label': this.label(),\n        'role': 'dialog',\n        'aria-live': 'polite'\n      });\n    }\n    dispose() {\n      this.contentEl_ = null;\n      this.descEl_ = null;\n      this.previouslyActiveEl_ = null;\n      super.dispose();\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return `${MODAL_CLASS_NAME} vjs-hidden ${super.buildCSSClass()}`;\n    }\n\n    /**\n     * Returns the label string for this modal. Primarily used for accessibility.\n     *\n     * @return {string}\n     *         the localized or raw label of this modal.\n     */\n    label() {\n      return this.localize(this.options_.label || 'Modal Window');\n    }\n\n    /**\n     * Returns the description string for this modal. Primarily used for\n     * accessibility.\n     *\n     * @return {string}\n     *         The localized or raw description of this modal.\n     */\n    description() {\n      let desc = this.options_.description || this.localize('This is a modal window.');\n\n      // Append a universal closeability message if the modal is closeable.\n      if (this.closeable()) {\n        desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n      }\n      return desc;\n    }\n\n    /**\n     * Opens the modal.\n     *\n     * @fires ModalDialog#beforemodalopen\n     * @fires ModalDialog#modalopen\n     */\n    open() {\n      if (this.opened_) {\n        if (this.options_.fillAlways) {\n          this.fill();\n        }\n        return;\n      }\n      const player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n      this.on('keydown', this.handleKeyDown_);\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n\n    /**\n     * If the `ModalDialog` is currently open or closed.\n     *\n     * @param  {boolean} [value]\n     *         If given, it will open (`true`) or close (`false`) the modal.\n     *\n     * @return {boolean}\n     *         the current open state of the modaldialog\n     */\n    opened(value) {\n      if (typeof value === 'boolean') {\n        this[value ? 'open' : 'close']();\n      }\n      return this.opened_;\n    }\n\n    /**\n     * Closes the modal, does nothing if the `ModalDialog` is\n     * not open.\n     *\n     * @fires ModalDialog#beforemodalclose\n     * @fires ModalDialog#modalclose\n     */\n    close() {\n      if (!this.opened_) {\n        return;\n      }\n      const player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is closed.\n        *\n        * @event ModalDialog#beforemodalclose\n        * @type {Event}\n        */\n      this.trigger('beforemodalclose');\n      this.opened_ = false;\n      if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n        player.play();\n      }\n      this.off('keydown', this.handleKeyDown_);\n      if (this.hadControls_) {\n        player.controls(true);\n      }\n      this.hide();\n      this.el().setAttribute('aria-hidden', 'true');\n\n      /**\n        * Fired just after a `ModalDialog` is closed.\n        *\n        * @event ModalDialog#modalclose\n        * @type {Event}\n        *\n        * @property {boolean} [bubbles=true]\n        */\n      this.trigger({\n        type: 'modalclose',\n        bubbles: true\n      });\n      this.conditionalBlur_();\n      if (this.options_.temporary) {\n        this.dispose();\n      }\n    }\n\n    /**\n     * Check to see if the `ModalDialog` is closeable via the UI.\n     *\n     * @param  {boolean} [value]\n     *         If given as a boolean, it will set the `closeable` option.\n     *\n     * @return {boolean}\n     *         Returns the final value of the closable option.\n     */\n    closeable(value) {\n      if (typeof value === 'boolean') {\n        const closeable = this.closeable_ = !!value;\n        let close = this.getChild('closeButton');\n\n        // If this is being made closeable and has no close button, add one.\n        if (closeable && !close) {\n          // The close button should be a child of the modal - not its\n          // content element, so temporarily change the content element.\n          const temp = this.contentEl_;\n          this.contentEl_ = this.el_;\n          close = this.addChild('closeButton', {\n            controlText: 'Close Modal Dialog'\n          });\n          this.contentEl_ = temp;\n          this.on(close, 'close', this.close_);\n        }\n\n        // If this is being made uncloseable and has a close button, remove it.\n        if (!closeable && close) {\n          this.off(close, 'close', this.close_);\n          this.removeChild(close);\n          close.dispose();\n        }\n      }\n      return this.closeable_;\n    }\n\n    /**\n     * Fill the modal's content element with the modal's \"content\" option.\n     * The content element will be emptied before this change takes place.\n     */\n    fill() {\n      this.fillWith(this.content());\n    }\n\n    /**\n     * Fill the modal's content element with arbitrary content.\n     * The content element will be emptied before this change takes place.\n     *\n     * @fires ModalDialog#beforemodalfill\n     * @fires ModalDialog#modalfill\n     *\n     * @param {ContentDescriptor} [content]\n     *        The same rules apply to this as apply to the `content` option.\n     */\n    fillWith(content) {\n      const contentEl = this.contentEl();\n      const parentEl = contentEl.parentNode;\n      const nextSiblingEl = contentEl.nextSibling;\n\n      /**\n        * Fired just before a `ModalDialog` is filled with content.\n        *\n        * @event ModalDialog#beforemodalfill\n        * @type {Event}\n        */\n      this.trigger('beforemodalfill');\n      this.hasBeenFilled_ = true;\n\n      // Detach the content element from the DOM before performing\n      // manipulation to avoid modifying the live DOM multiple times.\n      parentEl.removeChild(contentEl);\n      this.empty();\n      insertContent(contentEl, content);\n      /**\n       * Fired just after a `ModalDialog` is filled with content.\n       *\n       * @event ModalDialog#modalfill\n       * @type {Event}\n       */\n      this.trigger('modalfill');\n\n      // Re-inject the re-filled content element.\n      if (nextSiblingEl) {\n        parentEl.insertBefore(contentEl, nextSiblingEl);\n      } else {\n        parentEl.appendChild(contentEl);\n      }\n\n      // make sure that the close button is last in the dialog DOM\n      const closeButton = this.getChild('closeButton');\n      if (closeButton) {\n        parentEl.appendChild(closeButton.el_);\n      }\n\n      /**\n       * Fired after `ModalDialog` is re-filled with content & close button is appended.\n       *\n       * @event ModalDialog#aftermodalfill\n       * @type {Event}\n       */\n      this.trigger('aftermodalfill');\n    }\n\n    /**\n     * Empties the content element. This happens anytime the modal is filled.\n     *\n     * @fires ModalDialog#beforemodalempty\n     * @fires ModalDialog#modalempty\n     */\n    empty() {\n      /**\n      * Fired just before a `ModalDialog` is emptied.\n      *\n      * @event ModalDialog#beforemodalempty\n      * @type {Event}\n      */\n      this.trigger('beforemodalempty');\n      emptyEl(this.contentEl());\n\n      /**\n      * Fired just after a `ModalDialog` is emptied.\n      *\n      * @event ModalDialog#modalempty\n      * @type {Event}\n      */\n      this.trigger('modalempty');\n    }\n\n    /**\n     * Gets or sets the modal content, which gets normalized before being\n     * rendered into the DOM.\n     *\n     * This does not update the DOM or fill the modal, but it is called during\n     * that process.\n     *\n     * @param  {ContentDescriptor} [value]\n     *         If defined, sets the internal content value to be used on the\n     *         next call(s) to `fill`. This value is normalized before being\n     *         inserted. To \"clear\" the internal content value, pass `null`.\n     *\n     * @return {ContentDescriptor}\n     *         The current content of the modal dialog\n     */\n    content(value) {\n      if (typeof value !== 'undefined') {\n        this.content_ = value;\n      }\n      return this.content_;\n    }\n\n    /**\n     * conditionally focus the modal dialog if focus was previously on the player.\n     *\n     * @private\n     */\n    conditionalFocus_() {\n      const activeEl = document.activeElement;\n      const playerEl = this.player_.el_;\n      this.previouslyActiveEl_ = null;\n      if (playerEl.contains(activeEl) || playerEl === activeEl) {\n        this.previouslyActiveEl_ = activeEl;\n        this.focus();\n      }\n    }\n\n    /**\n     * conditionally blur the element and refocus the last focused element\n     *\n     * @private\n     */\n    conditionalBlur_() {\n      if (this.previouslyActiveEl_) {\n        this.previouslyActiveEl_.focus();\n        this.previouslyActiveEl_ = null;\n      }\n    }\n\n    /**\n     * Keydown handler. Attached when modal is focused.\n     *\n     * @listens keydown\n     */\n    handleKeyDown(event) {\n      /**\n       * Fired a custom keyDown event that bubbles.\n       *\n       * @event ModalDialog#modalKeydown\n       * @type {Event}\n       */\n      this.trigger({\n        type: 'modalKeydown',\n        originalEvent: event,\n        target: this,\n        bubbles: true\n      });\n      // Do not allow keydowns to reach out of the modal dialog.\n      event.stopPropagation();\n      if (event.key === 'Escape' && this.closeable()) {\n        event.preventDefault();\n        this.close();\n        return;\n      }\n\n      // exit early if it isn't a tab key\n      if (event.key !== 'Tab') {\n        return;\n      }\n      const focusableEls = this.focusableEls_();\n      const activeEl = this.el_.querySelector(':focus');\n      let focusIndex;\n      for (let i = 0; i < focusableEls.length; i++) {\n        if (activeEl === focusableEls[i]) {\n          focusIndex = i;\n          break;\n        }\n      }\n      if (document.activeElement === this.el_) {\n        focusIndex = 0;\n      }\n      if (event.shiftKey && focusIndex === 0) {\n        focusableEls[focusableEls.length - 1].focus();\n        event.preventDefault();\n      } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n        focusableEls[0].focus();\n        event.preventDefault();\n      }\n    }\n\n    /**\n     * get all focusable elements\n     *\n     * @private\n     */\n    focusableEls_() {\n      const allChildren = this.el_.querySelectorAll('*');\n      return Array.prototype.filter.call(allChildren, child => {\n        return (child instanceof window.HTMLAnchorElement || child instanceof window.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window.HTMLInputElement || child instanceof window.HTMLSelectElement || child instanceof window.HTMLTextAreaElement || child instanceof window.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window.HTMLIFrameElement || child instanceof window.HTMLObjectElement || child instanceof window.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n      });\n    }\n  }\n\n  /**\n   * Default options for `ModalDialog` default options.\n   *\n   * @type {Object}\n   * @private\n   */\n  ModalDialog.prototype.options_ = {\n    pauseOnOpen: true,\n    temporary: true\n  };\n  Component$1.registerComponent('ModalDialog', ModalDialog);\n\n  /**\n   * @file track-list.js\n   */\n\n  /** @import Track from './track' */\n\n  /**\n   * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n   * {@link VideoTrackList}\n   *\n   * @extends EventTarget\n   */\n  class TrackList extends EventTarget$2 {\n    /**\n     * Create an instance of this class\n     *\n     * @param { Track[] } tracks\n     *        A list of tracks to initialize the list with.\n     *\n     * @abstract\n     */\n    constructor(tracks = []) {\n      super();\n      this.tracks_ = [];\n\n      /**\n       * @memberof TrackList\n       * @member {number} length\n       *         The current number of `Track`s in the this Trackist.\n       * @instance\n       */\n      Object.defineProperty(this, 'length', {\n        get() {\n          return this.tracks_.length;\n        }\n      });\n      for (let i = 0; i < tracks.length; i++) {\n        this.addTrack(tracks[i]);\n      }\n    }\n\n    /**\n     * Add a {@link Track} to the `TrackList`\n     *\n     * @param {Track} track\n     *        The audio, video, or text track to add to the list.\n     *\n     * @fires TrackList#addtrack\n     */\n    addTrack(track) {\n      const index = this.tracks_.length;\n      if (!('' + index in this)) {\n        Object.defineProperty(this, index, {\n          get() {\n            return this.tracks_[index];\n          }\n        });\n      }\n\n      // Do not add duplicate tracks\n      if (this.tracks_.indexOf(track) === -1) {\n        this.tracks_.push(track);\n        /**\n         * Triggered when a track is added to a track list.\n         *\n         * @event TrackList#addtrack\n         * @type {Event}\n         * @property {Track} track\n         *           A reference to track that was added.\n         */\n        this.trigger({\n          track,\n          type: 'addtrack',\n          target: this\n        });\n      }\n\n      /**\n       * Triggered when a track label is changed.\n       *\n       * @event TrackList#addtrack\n       * @type {Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      track.labelchange_ = () => {\n        this.trigger({\n          track,\n          type: 'labelchange',\n          target: this\n        });\n      };\n      if (isEvented(track)) {\n        track.addEventListener('labelchange', track.labelchange_);\n      }\n    }\n\n    /**\n     * Remove a {@link Track} from the `TrackList`\n     *\n     * @param {Track} rtrack\n     *        The audio, video, or text track to remove from the list.\n     *\n     * @fires TrackList#removetrack\n     */\n    removeTrack(rtrack) {\n      let track;\n      for (let i = 0, l = this.length; i < l; i++) {\n        if (this[i] === rtrack) {\n          track = this[i];\n          if (track.off) {\n            track.off();\n          }\n          this.tracks_.splice(i, 1);\n          break;\n        }\n      }\n      if (!track) {\n        return;\n      }\n\n      /**\n       * Triggered when a track is removed from track list.\n       *\n       * @event TrackList#removetrack\n       * @type {Event}\n       * @property {Track} track\n       *           A reference to track that was removed.\n       */\n      this.trigger({\n        track,\n        type: 'removetrack',\n        target: this\n      });\n    }\n\n    /**\n     * Get a Track from the TrackList by a tracks id\n     *\n     * @param {string} id - the id of the track to get\n     * @method getTrackById\n     * @return {Track}\n     * @private\n     */\n    getTrackById(id) {\n      let result = null;\n      for (let i = 0, l = this.length; i < l; i++) {\n        const track = this[i];\n        if (track.id === id) {\n          result = track;\n          break;\n        }\n      }\n      return result;\n    }\n  }\n\n  /**\n   * Triggered when a different track is selected/enabled.\n   *\n   * @event TrackList#change\n   * @type {Event}\n   */\n\n  /**\n   * Events that can be called with on + eventName. See {@link EventHandler}.\n   *\n   * @property {Object} TrackList#allowedEvents_\n   * @protected\n   */\n  TrackList.prototype.allowedEvents_ = {\n    change: 'change',\n    addtrack: 'addtrack',\n    removetrack: 'removetrack',\n    labelchange: 'labelchange'\n  };\n\n  // emulate attribute EventHandler support to allow for feature detection\n  for (const event in TrackList.prototype.allowedEvents_) {\n    TrackList.prototype['on' + event] = null;\n  }\n\n  /**\n   * @file audio-track-list.js\n   */\n\n  /** @import AudioTrack from './audio-track' */\n\n  /**\n   * Anywhere we call this function we diverge from the spec\n   * as we only support one enabled audiotrack at a time\n   *\n   * @param {AudioTrackList} list\n   *        list to work on\n   *\n   * @param {AudioTrack} track\n   *        The track to skip\n   *\n   * @private\n   */\n  const disableOthers$1 = function (list, track) {\n    for (let i = 0; i < list.length; i++) {\n      if (!Object.keys(list[i]).length || track.id === list[i].id) {\n        continue;\n      }\n      // another audio track is enabled, disable it\n      list[i].enabled = false;\n    }\n  };\n\n  /**\n   * The current list of {@link AudioTrack} for a media file.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n   * @extends TrackList\n   */\n  class AudioTrackList extends TrackList {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {AudioTrack[]} [tracks=[]]\n     *        A list of `AudioTrack` to instantiate the list with.\n     */\n    constructor(tracks = []) {\n      // make sure only 1 track is enabled\n      // sorted from last index to first index\n      for (let i = tracks.length - 1; i >= 0; i--) {\n        if (tracks[i].enabled) {\n          disableOthers$1(tracks, tracks[i]);\n          break;\n        }\n      }\n      super(tracks);\n      this.changing_ = false;\n    }\n\n    /**\n     * Add an {@link AudioTrack} to the `AudioTrackList`.\n     *\n     * @param {AudioTrack} track\n     *        The AudioTrack to add to the list\n     *\n     * @fires TrackList#addtrack\n     */\n    addTrack(track) {\n      if (track.enabled) {\n        disableOthers$1(this, track);\n      }\n      super.addTrack(track);\n      // native tracks don't have this\n      if (!track.addEventListener) {\n        return;\n      }\n      track.enabledChange_ = () => {\n        // when we are disabling other tracks (since we don't support\n        // more than one track at a time) we will set changing_\n        // to true so that we don't trigger additional change events\n        if (this.changing_) {\n          return;\n        }\n        this.changing_ = true;\n        disableOthers$1(this, track);\n        this.changing_ = false;\n        this.trigger('change');\n      };\n\n      /**\n       * @listens AudioTrack#enabledchange\n       * @fires TrackList#change\n       */\n      track.addEventListener('enabledchange', track.enabledChange_);\n    }\n    removeTrack(rtrack) {\n      super.removeTrack(rtrack);\n      if (rtrack.removeEventListener && rtrack.enabledChange_) {\n        rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n        rtrack.enabledChange_ = null;\n      }\n    }\n  }\n\n  /**\n   * @file video-track-list.js\n   */\n\n  /** @import VideoTrack from './video-track' */\n\n  /**\n   * Un-select all other {@link VideoTrack}s that are selected.\n   *\n   * @param {VideoTrackList} list\n   *        list to work on\n   *\n   * @param {VideoTrack} track\n   *        The track to skip\n   *\n   * @private\n   */\n  const disableOthers = function (list, track) {\n    for (let i = 0; i < list.length; i++) {\n      if (!Object.keys(list[i]).length || track.id === list[i].id) {\n        continue;\n      }\n      // another video track is enabled, disable it\n      list[i].selected = false;\n    }\n  };\n\n  /**\n   * The current list of {@link VideoTrack} for a video.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n   * @extends TrackList\n   */\n  class VideoTrackList extends TrackList {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {VideoTrack[]} [tracks=[]]\n     *        A list of `VideoTrack` to instantiate the list with.\n     */\n    constructor(tracks = []) {\n      // make sure only 1 track is enabled\n      // sorted from last index to first index\n      for (let i = tracks.length - 1; i >= 0; i--) {\n        if (tracks[i].selected) {\n          disableOthers(tracks, tracks[i]);\n          break;\n        }\n      }\n      super(tracks);\n      this.changing_ = false;\n\n      /**\n       * @member {number} VideoTrackList#selectedIndex\n       *         The current index of the selected {@link VideoTrack`}.\n       */\n      Object.defineProperty(this, 'selectedIndex', {\n        get() {\n          for (let i = 0; i < this.length; i++) {\n            if (this[i].selected) {\n              return i;\n            }\n          }\n          return -1;\n        },\n        set() {}\n      });\n    }\n\n    /**\n     * Add a {@link VideoTrack} to the `VideoTrackList`.\n     *\n     * @param {VideoTrack} track\n     *        The VideoTrack to add to the list\n     *\n     * @fires TrackList#addtrack\n     */\n    addTrack(track) {\n      if (track.selected) {\n        disableOthers(this, track);\n      }\n      super.addTrack(track);\n      // native tracks don't have this\n      if (!track.addEventListener) {\n        return;\n      }\n      track.selectedChange_ = () => {\n        if (this.changing_) {\n          return;\n        }\n        this.changing_ = true;\n        disableOthers(this, track);\n        this.changing_ = false;\n        this.trigger('change');\n      };\n\n      /**\n       * @listens VideoTrack#selectedchange\n       * @fires TrackList#change\n       */\n      track.addEventListener('selectedchange', track.selectedChange_);\n    }\n    removeTrack(rtrack) {\n      super.removeTrack(rtrack);\n      if (rtrack.removeEventListener && rtrack.selectedChange_) {\n        rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n        rtrack.selectedChange_ = null;\n      }\n    }\n  }\n\n  /**\n   * @file text-track-list.js\n   */\n\n  /** @import TextTrack from './text-track' */\n\n  /**\n   * The current list of {@link TextTrack} for a media file.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n   * @extends TrackList\n   */\n  class TextTrackList extends TrackList {\n    /**\n     * Add a {@link TextTrack} to the `TextTrackList`\n     *\n     * @param {TextTrack} track\n     *        The text track to add to the list.\n     *\n     * @fires TrackList#addtrack\n     */\n    addTrack(track) {\n      super.addTrack(track);\n      if (!this.queueChange_) {\n        this.queueChange_ = () => this.queueTrigger('change');\n      }\n      if (!this.triggerSelectedlanguagechange) {\n        this.triggerSelectedlanguagechange_ = () => this.trigger('selectedlanguagechange');\n      }\n\n      /**\n       * @listens TextTrack#modechange\n       * @fires TrackList#change\n       */\n      track.addEventListener('modechange', this.queueChange_);\n      const nonLanguageTextTrackKind = ['metadata', 'chapters'];\n      if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n        track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n    removeTrack(rtrack) {\n      super.removeTrack(rtrack);\n\n      // manually remove the event handlers we added\n      if (rtrack.removeEventListener) {\n        if (this.queueChange_) {\n          rtrack.removeEventListener('modechange', this.queueChange_);\n        }\n        if (this.selectedlanguagechange_) {\n          rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n        }\n      }\n    }\n  }\n\n  /**\n   * @file html-track-element-list.js\n   */\n\n  /**\n   * The current list of {@link HtmlTrackElement}s.\n   */\n  class HtmlTrackElementList {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {HtmlTrackElement[]} [tracks=[]]\n     *        A list of `HtmlTrackElement` to instantiate the list with.\n     */\n    constructor(trackElements = []) {\n      this.trackElements_ = [];\n\n      /**\n       * @memberof HtmlTrackElementList\n       * @member {number} length\n       *         The current number of `Track`s in the this Trackist.\n       * @instance\n       */\n      Object.defineProperty(this, 'length', {\n        get() {\n          return this.trackElements_.length;\n        }\n      });\n      for (let i = 0, length = trackElements.length; i < length; i++) {\n        this.addTrackElement_(trackElements[i]);\n      }\n    }\n\n    /**\n     * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n     *\n     * @param {HtmlTrackElement} trackElement\n     *        The track element to add to the list.\n     *\n     * @private\n     */\n    addTrackElement_(trackElement) {\n      const index = this.trackElements_.length;\n      if (!('' + index in this)) {\n        Object.defineProperty(this, index, {\n          get() {\n            return this.trackElements_[index];\n          }\n        });\n      }\n\n      // Do not add duplicate elements\n      if (this.trackElements_.indexOf(trackElement) === -1) {\n        this.trackElements_.push(trackElement);\n      }\n    }\n\n    /**\n     * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n     * {@link TextTrack}.\n     *\n     * @param {TextTrack} track\n     *        The track associated with a track element.\n     *\n     * @return {HtmlTrackElement|undefined}\n     *         The track element that was found or undefined.\n     *\n     * @private\n     */\n    getTrackElementByTrack_(track) {\n      let trackElement_;\n      for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n        if (track === this.trackElements_[i].track) {\n          trackElement_ = this.trackElements_[i];\n          break;\n        }\n      }\n      return trackElement_;\n    }\n\n    /**\n     * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n     *\n     * @param {HtmlTrackElement} trackElement\n     *        The track element to remove from the list.\n     *\n     * @private\n     */\n    removeTrackElement_(trackElement) {\n      for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n        if (trackElement === this.trackElements_[i]) {\n          if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n            this.trackElements_[i].track.off();\n          }\n          if (typeof this.trackElements_[i].off === 'function') {\n            this.trackElements_[i].off();\n          }\n          this.trackElements_.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @file text-track-cue-list.js\n   */\n\n  /**\n   * @typedef {Object} TextTrackCueList~TextTrackCue\n   *\n   * @property {string} id\n   *           The unique id for this text track cue\n   *\n   * @property {number} startTime\n   *           The start time for this text track cue\n   *\n   * @property {number} endTime\n   *           The end time for this text track cue\n   *\n   * @property {boolean} pauseOnExit\n   *           Pause when the end time is reached if true.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n   */\n\n  /**\n   * A List of TextTrackCues.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n   */\n  class TextTrackCueList {\n    /**\n     * Create an instance of this class..\n     *\n     * @param {Array} cues\n     *        A list of cues to be initialized with\n     */\n    constructor(cues) {\n      TextTrackCueList.prototype.setCues_.call(this, cues);\n\n      /**\n       * @memberof TextTrackCueList\n       * @member {number} length\n       *         The current number of `TextTrackCue`s in the TextTrackCueList.\n       * @instance\n       */\n      Object.defineProperty(this, 'length', {\n        get() {\n          return this.length_;\n        }\n      });\n    }\n\n    /**\n     * A setter for cues in this list. Creates getters\n     * an an index for the cues.\n     *\n     * @param {Array} cues\n     *        An array of cues to set\n     *\n     * @private\n     */\n    setCues_(cues) {\n      const oldLength = this.length || 0;\n      let i = 0;\n      const l = cues.length;\n      this.cues_ = cues;\n      this.length_ = cues.length;\n      const defineProp = function (index) {\n        if (!('' + index in this)) {\n          Object.defineProperty(this, '' + index, {\n            get() {\n              return this.cues_[index];\n            }\n          });\n        }\n      };\n      if (oldLength < l) {\n        i = oldLength;\n        for (; i < l; i++) {\n          defineProp.call(this, i);\n        }\n      }\n    }\n\n    /**\n     * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n     *\n     * @param {string} id\n     *        The id of the cue that should be searched for.\n     *\n     * @return {TextTrackCueList~TextTrackCue|null}\n     *         A single cue or null if none was found.\n     */\n    getCueById(id) {\n      let result = null;\n      for (let i = 0, l = this.length; i < l; i++) {\n        const cue = this[i];\n        if (cue.id === id) {\n          result = cue;\n          break;\n        }\n      }\n      return result;\n    }\n  }\n\n  /**\n   * @file track-kinds.js\n   */\n\n  /**\n   * All possible `VideoTrackKind`s\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n   * @typedef VideoTrack~Kind\n   * @enum\n   */\n  const VideoTrackKind = {\n    alternative: 'alternative',\n    captions: 'captions',\n    main: 'main',\n    sign: 'sign',\n    subtitles: 'subtitles',\n    commentary: 'commentary'\n  };\n\n  /**\n   * All possible `AudioTrackKind`s\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n   * @typedef AudioTrack~Kind\n   * @enum\n   */\n  const AudioTrackKind = {\n    'alternative': 'alternative',\n    'descriptions': 'descriptions',\n    'main': 'main',\n    'main-desc': 'main-desc',\n    'translation': 'translation',\n    'commentary': 'commentary'\n  };\n\n  /**\n   * All possible `TextTrackKind`s\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n   * @typedef TextTrack~Kind\n   * @enum\n   */\n  const TextTrackKind = {\n    subtitles: 'subtitles',\n    captions: 'captions',\n    descriptions: 'descriptions',\n    chapters: 'chapters',\n    metadata: 'metadata'\n  };\n\n  /**\n   * All possible `TextTrackMode`s\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n   * @typedef TextTrack~Mode\n   * @enum\n   */\n  const TextTrackMode = {\n    disabled: 'disabled',\n    hidden: 'hidden',\n    showing: 'showing'\n  };\n\n  /**\n   * @file track.js\n   */\n\n  /**\n   * A Track class that contains all of the common functionality for {@link AudioTrack},\n   * {@link VideoTrack}, and {@link TextTrack}.\n   *\n   * > Note: This class should not be used directly\n   *\n   * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n   * @extends EventTarget\n   * @abstract\n   */\n  class Track extends EventTarget$2 {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} [options={}]\n     *        Object of option names and values\n     *\n     * @param {string} [options.kind='']\n     *        A valid kind for the track type you are creating.\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this AudioTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @abstract\n     */\n    constructor(options = {}) {\n      super();\n      const trackProps = {\n        id: options.id || 'vjs_track_' + newGUID(),\n        kind: options.kind || '',\n        language: options.language || ''\n      };\n      let label = options.label || '';\n\n      /**\n       * @memberof Track\n       * @member {string} id\n       *         The id of this track. Cannot be changed after creation.\n       * @instance\n       *\n       * @readonly\n       */\n\n      /**\n       * @memberof Track\n       * @member {string} kind\n       *         The kind of track that this is. Cannot be changed after creation.\n       * @instance\n       *\n       * @readonly\n       */\n\n      /**\n       * @memberof Track\n       * @member {string} language\n       *         The two letter language code for this track. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n\n      for (const key in trackProps) {\n        Object.defineProperty(this, key, {\n          get() {\n            return trackProps[key];\n          },\n          set() {}\n        });\n      }\n\n      /**\n       * @memberof Track\n       * @member {string} label\n       *         The label of this track. Cannot be changed after creation.\n       * @instance\n       *\n       * @fires Track#labelchange\n       */\n      Object.defineProperty(this, 'label', {\n        get() {\n          return label;\n        },\n        set(newLabel) {\n          if (newLabel !== label) {\n            label = newLabel;\n\n            /**\n             * An event that fires when label changes on this track.\n             *\n             * > Note: This is not part of the spec!\n             *\n             * @event Track#labelchange\n             * @type {Event}\n             */\n            this.trigger('labelchange');\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * @file url.js\n   * @module url\n   */\n\n  /**\n   * Resolve and parse the elements of a URL.\n   *\n   * @function\n   * @param    {string} url\n   *           The url to parse\n   *\n   * @return   {URL}\n   *           An object of url details\n   */\n  const parseUrl = function (url) {\n    return new URL(url, document.baseURI);\n  };\n\n  /**\n   * Get absolute version of relative URL.\n   *\n   * @function\n   * @param    {string} url\n   *           URL to make absolute\n   *\n   * @return   {string}\n   *           Absolute URL\n   */\n  const getAbsoluteURL = function (url) {\n    return new URL(url, document.baseURI).href;\n  };\n\n  /**\n   * Returns the extension of the passed file name. It will return an empty string\n   * if passed an invalid path.\n   *\n   * @function\n   * @param    {string} path\n   *           The fileName path like '/path/to/file.mp4'\n   *\n   * @return  {string}\n   *           The extension in lower case or an empty string if no\n   *           extension could be found.\n   */\n  const getFileExtension = function (path) {\n    if (typeof path === 'string') {\n      const splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n      const pathParts = splitPathRe.exec(path);\n      if (pathParts) {\n        return pathParts.pop().toLowerCase();\n      }\n    }\n    return '';\n  };\n\n  /**\n   * Returns whether the url passed is a cross domain request or not.\n   *\n   * @function\n   * @param    {string} url\n   *           The url to check.\n   *\n   * @param    {URL} [winLoc]\n   *           the domain to check the url against, defaults to window.location\n   *\n   * @return   {boolean}\n   *           Whether it is a cross domain request or not.\n   */\n  const isCrossOrigin = function (url, winLoc = window.location) {\n    return parseUrl(url).origin !== winLoc.origin;\n  };\n\n  var Url = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    parseUrl: parseUrl,\n    getAbsoluteURL: getAbsoluteURL,\n    getFileExtension: getFileExtension,\n    isCrossOrigin: isCrossOrigin\n  });\n\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function unwrapExports (x) {\n  \treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n  }\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  var win;\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n  var window_1 = win;\n\n  var _extends_1 = createCommonjsModule(function (module) {\n    function _extends() {\n      return (module.exports = _extends = Object.assign ? Object.assign.bind() : function (n) {\n        for (var e = 1; e < arguments.length; e++) {\n          var t = arguments[e];\n          for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n        }\n        return n;\n      }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _extends.apply(null, arguments);\n    }\n    module.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  });\n  var _extends$1 = unwrapExports(_extends_1);\n\n  var isFunction_1 = isFunction;\n  var toString = Object.prototype.toString;\n  function isFunction(fn) {\n    if (!fn) {\n      return false;\n    }\n    var string = toString.call(fn);\n    return string === '[object Function]' || typeof fn === 'function' && string !== '[object RegExp]' || typeof window !== 'undefined' && (\n    // IE8 and below\n    fn === window.setTimeout || fn === window.alert || fn === window.confirm || fn === window.prompt);\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  }\n  var InterceptorsStorage = /*#__PURE__*/function () {\n    function InterceptorsStorage() {\n      this.typeToInterceptorsMap_ = new Map();\n      this.enabled_ = false;\n    }\n    var _proto = InterceptorsStorage.prototype;\n    _proto.getIsEnabled = function getIsEnabled() {\n      return this.enabled_;\n    };\n    _proto.enable = function enable() {\n      this.enabled_ = true;\n    };\n    _proto.disable = function disable() {\n      this.enabled_ = false;\n    };\n    _proto.reset = function reset() {\n      this.typeToInterceptorsMap_ = new Map();\n      this.enabled_ = false;\n    };\n    _proto.addInterceptor = function addInterceptor(type, interceptor) {\n      if (!this.typeToInterceptorsMap_.has(type)) {\n        this.typeToInterceptorsMap_.set(type, new Set());\n      }\n      var interceptorsSet = this.typeToInterceptorsMap_.get(type);\n      if (interceptorsSet.has(interceptor)) {\n        // already have this interceptor\n        return false;\n      }\n      interceptorsSet.add(interceptor);\n      return true;\n    };\n    _proto.removeInterceptor = function removeInterceptor(type, interceptor) {\n      var interceptorsSet = this.typeToInterceptorsMap_.get(type);\n      if (interceptorsSet && interceptorsSet.has(interceptor)) {\n        interceptorsSet.delete(interceptor);\n        return true;\n      }\n      return false;\n    };\n    _proto.clearInterceptorsByType = function clearInterceptorsByType(type) {\n      var interceptorsSet = this.typeToInterceptorsMap_.get(type);\n      if (!interceptorsSet) {\n        return false;\n      }\n      this.typeToInterceptorsMap_.delete(type);\n      this.typeToInterceptorsMap_.set(type, new Set());\n      return true;\n    };\n    _proto.clear = function clear() {\n      if (!this.typeToInterceptorsMap_.size) {\n        return false;\n      }\n      this.typeToInterceptorsMap_ = new Map();\n      return true;\n    };\n    _proto.getForType = function getForType(type) {\n      return this.typeToInterceptorsMap_.get(type) || new Set();\n    };\n    _proto.execute = function execute(type, payload) {\n      var interceptors = this.getForType(type);\n      for (var _iterator = _createForOfIteratorHelperLoose(interceptors), _step; !(_step = _iterator()).done;) {\n        var interceptor = _step.value;\n        try {\n          payload = interceptor(payload);\n        } catch (e) {//ignore\n        }\n      }\n      return payload;\n    };\n    return InterceptorsStorage;\n  }();\n  var interceptors = InterceptorsStorage;\n\n  var RetryManager = /*#__PURE__*/function () {\n    function RetryManager() {\n      this.maxAttempts_ = 1;\n      this.delayFactor_ = 0.1;\n      this.fuzzFactor_ = 0.1;\n      this.initialDelay_ = 1000;\n      this.enabled_ = false;\n    }\n    var _proto = RetryManager.prototype;\n    _proto.getIsEnabled = function getIsEnabled() {\n      return this.enabled_;\n    };\n    _proto.enable = function enable() {\n      this.enabled_ = true;\n    };\n    _proto.disable = function disable() {\n      this.enabled_ = false;\n    };\n    _proto.reset = function reset() {\n      this.maxAttempts_ = 1;\n      this.delayFactor_ = 0.1;\n      this.fuzzFactor_ = 0.1;\n      this.initialDelay_ = 1000;\n      this.enabled_ = false;\n    };\n    _proto.getMaxAttempts = function getMaxAttempts() {\n      return this.maxAttempts_;\n    };\n    _proto.setMaxAttempts = function setMaxAttempts(maxAttempts) {\n      this.maxAttempts_ = maxAttempts;\n    };\n    _proto.getDelayFactor = function getDelayFactor() {\n      return this.delayFactor_;\n    };\n    _proto.setDelayFactor = function setDelayFactor(delayFactor) {\n      this.delayFactor_ = delayFactor;\n    };\n    _proto.getFuzzFactor = function getFuzzFactor() {\n      return this.fuzzFactor_;\n    };\n    _proto.setFuzzFactor = function setFuzzFactor(fuzzFactor) {\n      this.fuzzFactor_ = fuzzFactor;\n    };\n    _proto.getInitialDelay = function getInitialDelay() {\n      return this.initialDelay_;\n    };\n    _proto.setInitialDelay = function setInitialDelay(initialDelay) {\n      this.initialDelay_ = initialDelay;\n    };\n    _proto.createRetry = function createRetry(_temp) {\n      var _ref = _temp === void 0 ? {} : _temp,\n        maxAttempts = _ref.maxAttempts,\n        delayFactor = _ref.delayFactor,\n        fuzzFactor = _ref.fuzzFactor,\n        initialDelay = _ref.initialDelay;\n      return new Retry({\n        maxAttempts: maxAttempts || this.maxAttempts_,\n        delayFactor: delayFactor || this.delayFactor_,\n        fuzzFactor: fuzzFactor || this.fuzzFactor_,\n        initialDelay: initialDelay || this.initialDelay_\n      });\n    };\n    return RetryManager;\n  }();\n  var Retry = /*#__PURE__*/function () {\n    function Retry(options) {\n      this.maxAttempts_ = options.maxAttempts;\n      this.delayFactor_ = options.delayFactor;\n      this.fuzzFactor_ = options.fuzzFactor;\n      this.currentDelay_ = options.initialDelay;\n      this.currentAttempt_ = 1;\n    }\n    var _proto2 = Retry.prototype;\n    _proto2.moveToNextAttempt = function moveToNextAttempt() {\n      this.currentAttempt_++;\n      var delayDelta = this.currentDelay_ * this.delayFactor_;\n      this.currentDelay_ = this.currentDelay_ + delayDelta;\n    };\n    _proto2.shouldRetry = function shouldRetry() {\n      return this.currentAttempt_ < this.maxAttempts_;\n    };\n    _proto2.getCurrentDelay = function getCurrentDelay() {\n      return this.currentDelay_;\n    };\n    _proto2.getCurrentMinPossibleDelay = function getCurrentMinPossibleDelay() {\n      return (1 - this.fuzzFactor_) * this.currentDelay_;\n    };\n    _proto2.getCurrentMaxPossibleDelay = function getCurrentMaxPossibleDelay() {\n      return (1 + this.fuzzFactor_) * this.currentDelay_;\n    }\n    /**\n     * For example fuzzFactor is 0.1\n     * This means ±10% deviation\n     * So if we have delay as 1000\n     * This function can generate any value from 900 to 1100\n     */;\n    _proto2.getCurrentFuzzedDelay = function getCurrentFuzzedDelay() {\n      var lowValue = this.getCurrentMinPossibleDelay();\n      var highValue = this.getCurrentMaxPossibleDelay();\n      return lowValue + Math.random() * (highValue - lowValue);\n    };\n    return Retry;\n  }();\n  var retry = RetryManager;\n\n  var httpResponseHandler = function httpResponseHandler(callback, decodeResponseBody) {\n    if (decodeResponseBody === void 0) {\n      decodeResponseBody = false;\n    }\n    return function (err, response, responseBody) {\n      // if the XHR failed, return that error\n      if (err) {\n        callback(err);\n        return;\n      } // if the HTTP status code is 4xx or 5xx, the request also failed\n\n      if (response.statusCode >= 400 && response.statusCode <= 599) {\n        var cause = responseBody;\n        if (decodeResponseBody) {\n          if (window_1.TextDecoder) {\n            var charset = getCharset(response.headers && response.headers['content-type']);\n            try {\n              cause = new TextDecoder(charset).decode(responseBody);\n            } catch (e) {}\n          } else {\n            cause = String.fromCharCode.apply(null, new Uint8Array(responseBody));\n          }\n        }\n        callback({\n          cause: cause\n        });\n        return;\n      } // otherwise, request succeeded\n\n      callback(null, responseBody);\n    };\n  };\n  function getCharset(contentTypeHeader) {\n    if (contentTypeHeader === void 0) {\n      contentTypeHeader = '';\n    }\n    return contentTypeHeader.toLowerCase().split(';').reduce(function (charset, contentType) {\n      var _contentType$split = contentType.split('='),\n        type = _contentType$split[0],\n        value = _contentType$split[1];\n      if (type.trim() === 'charset') {\n        return value.trim();\n      }\n      return charset;\n    }, 'utf-8');\n  }\n  var httpHandler = httpResponseHandler;\n\n  createXHR.httpHandler = httpHandler;\n  createXHR.requestInterceptorsStorage = new interceptors();\n  createXHR.responseInterceptorsStorage = new interceptors();\n  createXHR.retryManager = new retry();\n  /**\n   * @license\n   * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\n   * Copyright (c) 2014 David Björklund\n   * Available under the MIT license\n   * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\n   */\n\n  var parseHeaders = function parseHeaders(headers) {\n    var result = {};\n    if (!headers) {\n      return result;\n    }\n    headers.trim().split('\\n').forEach(function (row) {\n      var index = row.indexOf(':');\n      var key = row.slice(0, index).trim().toLowerCase();\n      var value = row.slice(index + 1).trim();\n      if (typeof result[key] === 'undefined') {\n        result[key] = value;\n      } else if (Array.isArray(result[key])) {\n        result[key].push(value);\n      } else {\n        result[key] = [result[key], value];\n      }\n    });\n    return result;\n  };\n  var lib = createXHR; // Allow use of default import syntax in TypeScript\n\n  var default_1 = createXHR;\n  createXHR.XMLHttpRequest = window_1.XMLHttpRequest || noop$1;\n  createXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window_1.XDomainRequest;\n  forEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n      options = initParams(uri, options, callback);\n      options.method = method.toUpperCase();\n      return _createXHR(options);\n    };\n  });\n  function forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n      iterator(array[i]);\n    }\n  }\n  function isEmpty(obj) {\n    for (var i in obj) {\n      if (obj.hasOwnProperty(i)) return false;\n    }\n    return true;\n  }\n  function initParams(uri, options, callback) {\n    var params = uri;\n    if (isFunction_1(options)) {\n      callback = options;\n      if (typeof uri === \"string\") {\n        params = {\n          uri: uri\n        };\n      }\n    } else {\n      params = _extends_1({}, options, {\n        uri: uri\n      });\n    }\n    params.callback = callback;\n    return params;\n  }\n  function createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback);\n    return _createXHR(options);\n  }\n  function _createXHR(options) {\n    if (typeof options.callback === \"undefined\") {\n      throw new Error(\"callback argument missing\");\n    } // call all registered request interceptors for a given request type:\n\n    if (options.requestType && createXHR.requestInterceptorsStorage.getIsEnabled()) {\n      var requestInterceptorPayload = {\n        uri: options.uri || options.url,\n        headers: options.headers || {},\n        body: options.body,\n        metadata: options.metadata || {},\n        retry: options.retry,\n        timeout: options.timeout\n      };\n      var updatedPayload = createXHR.requestInterceptorsStorage.execute(options.requestType, requestInterceptorPayload);\n      options.uri = updatedPayload.uri;\n      options.headers = updatedPayload.headers;\n      options.body = updatedPayload.body;\n      options.metadata = updatedPayload.metadata;\n      options.retry = updatedPayload.retry;\n      options.timeout = updatedPayload.timeout;\n    }\n    var called = false;\n    var callback = function cbOnce(err, response, body) {\n      if (!called) {\n        called = true;\n        options.callback(err, response, body);\n      }\n    };\n    function readystatechange() {\n      // do not call load 2 times when response interceptors are enabled\n      // why do we even need this 2nd load?\n      if (xhr.readyState === 4 && !createXHR.responseInterceptorsStorage.getIsEnabled()) {\n        setTimeout(loadFunc, 0);\n      }\n    }\n    function getBody() {\n      // Chrome with requestType=blob throws errors arround when even testing access to responseText\n      var body = undefined;\n      if (xhr.response) {\n        body = xhr.response;\n      } else {\n        body = xhr.responseText || getXml(xhr);\n      }\n      if (isJson) {\n        try {\n          body = JSON.parse(body);\n        } catch (e) {}\n      }\n      return body;\n    }\n    function errorFunc(evt) {\n      clearTimeout(timeoutTimer);\n      clearTimeout(options.retryTimeout);\n      if (!(evt instanceof Error)) {\n        evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n      }\n      evt.statusCode = 0; // we would like to retry on error:\n\n      if (!aborted && createXHR.retryManager.getIsEnabled() && options.retry && options.retry.shouldRetry()) {\n        options.retryTimeout = setTimeout(function () {\n          options.retry.moveToNextAttempt(); // we want to re-use the same options and the same xhr object:\n\n          options.xhr = xhr;\n          _createXHR(options);\n        }, options.retry.getCurrentFuzzedDelay());\n        return;\n      } // call all registered response interceptors for a given request type:\n\n      if (options.requestType && createXHR.responseInterceptorsStorage.getIsEnabled()) {\n        var responseInterceptorPayload = {\n          headers: failureResponse.headers || {},\n          body: failureResponse.body,\n          responseUrl: xhr.responseURL,\n          responseType: xhr.responseType\n        };\n        var _updatedPayload = createXHR.responseInterceptorsStorage.execute(options.requestType, responseInterceptorPayload);\n        failureResponse.body = _updatedPayload.body;\n        failureResponse.headers = _updatedPayload.headers;\n      }\n      return callback(evt, failureResponse);\n    } // will load the data & process the response in a special response object\n\n    function loadFunc() {\n      if (aborted) return;\n      var status;\n      clearTimeout(timeoutTimer);\n      clearTimeout(options.retryTimeout);\n      if (options.useXDR && xhr.status === undefined) {\n        //IE8 CORS GET successful response doesn't have a status field, but body is fine\n        status = 200;\n      } else {\n        status = xhr.status === 1223 ? 204 : xhr.status;\n      }\n      var response = failureResponse;\n      var err = null;\n      if (status !== 0) {\n        response = {\n          body: getBody(),\n          statusCode: status,\n          method: method,\n          headers: {},\n          url: uri,\n          rawRequest: xhr\n        };\n        if (xhr.getAllResponseHeaders) {\n          //remember xhr can in fact be XDR for CORS in IE\n          response.headers = parseHeaders(xhr.getAllResponseHeaders());\n        }\n      } else {\n        err = new Error(\"Internal XMLHttpRequest Error\");\n      } // call all registered response interceptors for a given request type:\n\n      if (options.requestType && createXHR.responseInterceptorsStorage.getIsEnabled()) {\n        var responseInterceptorPayload = {\n          headers: response.headers || {},\n          body: response.body,\n          responseUrl: xhr.responseURL,\n          responseType: xhr.responseType\n        };\n        var _updatedPayload2 = createXHR.responseInterceptorsStorage.execute(options.requestType, responseInterceptorPayload);\n        response.body = _updatedPayload2.body;\n        response.headers = _updatedPayload2.headers;\n      }\n      return callback(err, response, response.body);\n    }\n    var xhr = options.xhr || null;\n    if (!xhr) {\n      if (options.cors || options.useXDR) {\n        xhr = new createXHR.XDomainRequest();\n      } else {\n        xhr = new createXHR.XMLHttpRequest();\n      }\n    }\n    var key;\n    var aborted;\n    var uri = xhr.url = options.uri || options.url;\n    var method = xhr.method = options.method || \"GET\";\n    var body = options.body || options.data;\n    var headers = xhr.headers = options.headers || {};\n    var sync = !!options.sync;\n    var isJson = false;\n    var timeoutTimer;\n    var failureResponse = {\n      body: undefined,\n      headers: {},\n      statusCode: 0,\n      method: method,\n      url: uri,\n      rawRequest: xhr\n    };\n    if (\"json\" in options && options.json !== false) {\n      isJson = true;\n      headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      if (method !== \"GET\" && method !== \"HEAD\") {\n        headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n        body = JSON.stringify(options.json === true ? body : options.json);\n      }\n    }\n    xhr.onreadystatechange = readystatechange;\n    xhr.onload = loadFunc;\n    xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n    xhr.onprogress = function () {// IE must die\n    };\n    xhr.onabort = function () {\n      aborted = true;\n      clearTimeout(options.retryTimeout);\n    };\n    xhr.ontimeout = errorFunc;\n    xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n    if (!sync) {\n      xhr.withCredentials = !!options.withCredentials;\n    } // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n    if (!sync && options.timeout > 0) {\n      timeoutTimer = setTimeout(function () {\n        if (aborted) return;\n        aborted = true; //IE9 may still call readystatechange\n\n        xhr.abort(\"timeout\");\n        var e = new Error(\"XMLHttpRequest timeout\");\n        e.code = \"ETIMEDOUT\";\n        errorFunc(e);\n      }, options.timeout);\n    }\n    if (xhr.setRequestHeader) {\n      for (key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          xhr.setRequestHeader(key, headers[key]);\n        }\n      }\n    } else if (options.headers && !isEmpty(options.headers)) {\n      throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n    }\n    if (\"responseType\" in options) {\n      xhr.responseType = options.responseType;\n    }\n    if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n      options.beforeSend(xhr);\n    } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n\n    xhr.send(body || null);\n    return xhr;\n  }\n  function getXml(xhr) {\n    // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n    // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\n    try {\n      if (xhr.responseType === \"document\") {\n        return xhr.responseXML;\n      }\n      var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n      if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML;\n      }\n    } catch (e) {}\n    return null;\n  }\n  function noop$1() {}\n  lib.default = default_1;\n\n  /**\n   * @file text-track.js\n   */\n\n  /** @import Tech from '../tech/tech' */\n\n  /**\n   * Takes a webvtt file contents and parses it into cues\n   *\n   * @param {string} srcContent\n   *        webVTT file contents\n   *\n   * @param {TextTrack} track\n   *        TextTrack to add cues to. Cues come from the srcContent.\n   *\n   * @private\n   */\n  const parseCues = function (srcContent, track) {\n    const parser = new window.WebVTT.Parser(window, window.vttjs, window.WebVTT.StringDecoder());\n    const errors = [];\n    parser.oncue = function (cue) {\n      track.addCue(cue);\n    };\n    parser.onparsingerror = function (error) {\n      errors.push(error);\n    };\n    parser.onflush = function () {\n      track.trigger({\n        type: 'loadeddata',\n        target: track\n      });\n    };\n    parser.parse(srcContent);\n    if (errors.length > 0) {\n      if (window.console && window.console.groupCollapsed) {\n        window.console.groupCollapsed(`Text Track parsing errors for ${track.src}`);\n      }\n      errors.forEach(error => log$1.error(error));\n      if (window.console && window.console.groupEnd) {\n        window.console.groupEnd();\n      }\n    }\n    parser.flush();\n  };\n\n  /**\n   * Load a `TextTrack` from a specified url.\n   *\n   * @param {string} src\n   *        Url to load track from.\n   *\n   * @param {TextTrack} track\n   *        Track to add cues to. Comes from the content at the end of `url`.\n   *\n   * @private\n   */\n  const loadTrack = function (src, track) {\n    const opts = {\n      uri: src\n    };\n    const crossOrigin = isCrossOrigin(src);\n    if (crossOrigin) {\n      opts.cors = crossOrigin;\n    }\n    const withCredentials = track.tech_.crossOrigin() === 'use-credentials';\n    if (withCredentials) {\n      opts.withCredentials = withCredentials;\n    }\n    lib(opts, bind_(this, function (err, response, responseBody) {\n      if (err) {\n        return log$1.error(err, response);\n      }\n      track.loaded_ = true;\n\n      // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n      // NOTE: this is only used for the alt/video.novtt.js build\n      if (typeof window.WebVTT !== 'function') {\n        if (track.tech_) {\n          // to prevent use before define eslint error, we define loadHandler\n          // as a let here\n          track.tech_.any(['vttjsloaded', 'vttjserror'], event => {\n            if (event.type === 'vttjserror') {\n              log$1.error(`vttjs failed to load, stopping trying to process ${track.src}`);\n              return;\n            }\n            return parseCues(responseBody, track);\n          });\n        }\n      } else {\n        parseCues(responseBody, track);\n      }\n    }));\n  };\n\n  /**\n   * A representation of a single `TextTrack`.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n   * @extends Track\n   */\n  class TextTrack extends Track {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} options={}\n     *        Object of option names and values\n     *\n     * @param {Tech} options.tech\n     *        A reference to the tech that owns this TextTrack.\n     *\n     * @param {TextTrack~Kind} [options.kind='subtitles']\n     *        A valid text track kind.\n     *\n     * @param {TextTrack~Mode} [options.mode='disabled']\n     *        A valid text track mode.\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this TextTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @param {string} [options.srclang='']\n     *        A valid two character language code. An alternative, but deprioritized\n     *        version of `options.language`\n     *\n     * @param {string} [options.src]\n     *        A url to TextTrack cues.\n     *\n     * @param {boolean} [options.default]\n     *        If this track should default to on or off.\n     */\n    constructor(options = {}) {\n      if (!options.tech) {\n        throw new Error('A tech was not provided.');\n      }\n      const settings = merge$2(options, {\n        kind: TextTrackKind[options.kind] || 'subtitles',\n        language: options.language || options.srclang || ''\n      });\n      let mode = TextTrackMode[settings.mode] || 'disabled';\n      const default_ = settings.default;\n      if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n        mode = 'hidden';\n      }\n      super(settings);\n      this.tech_ = settings.tech;\n      this.cues_ = [];\n      this.activeCues_ = [];\n      this.preload_ = this.tech_.preloadTextTracks !== false;\n      const cues = new TextTrackCueList(this.cues_);\n      const activeCues = new TextTrackCueList(this.activeCues_);\n      let changed = false;\n      this.timeupdateHandler = bind_(this, function (event = {}) {\n        if (this.tech_.isDisposed()) {\n          return;\n        }\n        if (!this.tech_.isReady_) {\n          if (event.type !== 'timeupdate') {\n            this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n          }\n          return;\n        }\n\n        // Accessing this.activeCues for the side-effects of updating itself\n        // due to its nature as a getter function. Do not remove or cues will\n        // stop updating!\n        // Use the setter to prevent deletion from uglify (pure_getters rule)\n        this.activeCues = this.activeCues;\n        if (changed) {\n          this.trigger('cuechange');\n          changed = false;\n        }\n        if (event.type !== 'timeupdate') {\n          this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n        }\n      });\n      const disposeHandler = () => {\n        this.stopTracking();\n      };\n      this.tech_.one('dispose', disposeHandler);\n      if (mode !== 'disabled') {\n        this.startTracking();\n      }\n      Object.defineProperties(this, {\n        /**\n         * @memberof TextTrack\n         * @member {boolean} default\n         *         If this track was set to be on or off by default. Cannot be changed after\n         *         creation.\n         * @instance\n         *\n         * @readonly\n         */\n        default: {\n          get() {\n            return default_;\n          },\n          set() {}\n        },\n        /**\n         * @memberof TextTrack\n         * @member {string} mode\n         *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n         *         not be set if setting to an invalid mode.\n         * @instance\n         *\n         * @fires TextTrack#modechange\n         */\n        mode: {\n          get() {\n            return mode;\n          },\n          set(newMode) {\n            if (!TextTrackMode[newMode]) {\n              return;\n            }\n            if (mode === newMode) {\n              return;\n            }\n            mode = newMode;\n            if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n              // On-demand load.\n              loadTrack(this.src, this);\n            }\n            this.stopTracking();\n            if (mode !== 'disabled') {\n              this.startTracking();\n            }\n            /**\n             * An event that fires when mode changes on this track. This allows\n             * the TextTrackList that holds this track to act accordingly.\n             *\n             * > Note: This is not part of the spec!\n             *\n             * @event TextTrack#modechange\n             * @type {Event}\n             */\n            this.trigger('modechange');\n          }\n        },\n        /**\n         * @memberof TextTrack\n         * @member {TextTrackCueList} cues\n         *         The text track cue list for this TextTrack.\n         * @instance\n         */\n        cues: {\n          get() {\n            if (!this.loaded_) {\n              return null;\n            }\n            return cues;\n          },\n          set() {}\n        },\n        /**\n         * @memberof TextTrack\n         * @member {TextTrackCueList} activeCues\n         *         The list text track cues that are currently active for this TextTrack.\n         * @instance\n         */\n        activeCues: {\n          get() {\n            if (!this.loaded_) {\n              return null;\n            }\n\n            // nothing to do\n            if (this.cues.length === 0) {\n              return activeCues;\n            }\n            const ct = this.tech_.currentTime();\n            const active = [];\n            for (let i = 0, l = this.cues.length; i < l; i++) {\n              const cue = this.cues[i];\n              if (cue.startTime <= ct && cue.endTime >= ct) {\n                active.push(cue);\n              }\n            }\n            changed = false;\n            if (active.length !== this.activeCues_.length) {\n              changed = true;\n            } else {\n              for (let i = 0; i < active.length; i++) {\n                if (this.activeCues_.indexOf(active[i]) === -1) {\n                  changed = true;\n                }\n              }\n            }\n            this.activeCues_ = active;\n            activeCues.setCues_(this.activeCues_);\n            return activeCues;\n          },\n          // /!\\ Keep this setter empty (see the timeupdate handler above)\n          set() {}\n        }\n      });\n      if (settings.src) {\n        this.src = settings.src;\n        if (!this.preload_) {\n          // Tracks will load on-demand.\n          // Act like we're loaded for other purposes.\n          this.loaded_ = true;\n        }\n        if (this.preload_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n          loadTrack(this.src, this);\n        }\n      } else {\n        this.loaded_ = true;\n      }\n    }\n    startTracking() {\n      // More precise cues based on requestVideoFrameCallback with a requestAnimationFram fallback\n      this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n      // Also listen to timeupdate in case rVFC/rAF stops (window in background, audio in video el)\n      this.tech_.on('timeupdate', this.timeupdateHandler);\n    }\n    stopTracking() {\n      if (this.rvf_) {\n        this.tech_.cancelVideoFrameCallback(this.rvf_);\n        this.rvf_ = undefined;\n      }\n      this.tech_.off('timeupdate', this.timeupdateHandler);\n    }\n\n    /**\n     * Add a cue to the internal list of cues.\n     *\n     * @param {TextTrack~Cue} cue\n     *        The cue to add to our internal list\n     */\n    addCue(originalCue) {\n      let cue = originalCue;\n\n      // Testing if the cue is a VTTCue in a way that survives minification\n      if (!('getCueAsHTML' in cue)) {\n        cue = new window.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n        for (const prop in originalCue) {\n          if (!(prop in cue)) {\n            cue[prop] = originalCue[prop];\n          }\n        }\n\n        // make sure that `id` is copied over\n        cue.id = originalCue.id;\n        cue.originalCue_ = originalCue;\n      }\n      const tracks = this.tech_.textTracks();\n      for (let i = 0; i < tracks.length; i++) {\n        if (tracks[i] !== this) {\n          tracks[i].removeCue(cue);\n        }\n      }\n      this.cues_.push(cue);\n      this.cues.setCues_(this.cues_);\n    }\n\n    /**\n     * Remove a cue from our internal list\n     *\n     * @param {TextTrack~Cue} removeCue\n     *        The cue to remove from our internal list\n     */\n    removeCue(removeCue) {\n      let i = this.cues_.length;\n      while (i--) {\n        const cue = this.cues_[i];\n        if (cue === removeCue || cue.originalCue_ && cue.originalCue_ === removeCue) {\n          this.cues_.splice(i, 1);\n          this.cues.setCues_(this.cues_);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * cuechange - One or more cues in the track have become active or stopped being active.\n   *\n   * @protected\n   */\n  TextTrack.prototype.allowedEvents_ = {\n    cuechange: 'cuechange'\n  };\n\n  /**\n   * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n   * only one `AudioTrack` in the list will be enabled at a time.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n   * @extends Track\n   */\n  class AudioTrack extends Track {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} [options={}]\n     *        Object of option names and values\n     *\n     * @param {AudioTrack~Kind} [options.kind='']\n     *        A valid audio track kind\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this AudioTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @param {boolean} [options.enabled]\n     *        If this track is the one that is currently playing. If this track is part of\n     *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n     */\n    constructor(options = {}) {\n      const settings = merge$2(options, {\n        kind: AudioTrackKind[options.kind] || ''\n      });\n      super(settings);\n      let enabled = false;\n\n      /**\n       * @memberof AudioTrack\n       * @member {boolean} enabled\n       *         If this `AudioTrack` is enabled or not. When setting this will\n       *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n       * @instance\n       *\n       * @fires VideoTrack#selectedchange\n       */\n      Object.defineProperty(this, 'enabled', {\n        get() {\n          return enabled;\n        },\n        set(newEnabled) {\n          // an invalid or unchanged value\n          if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n            return;\n          }\n          enabled = newEnabled;\n\n          /**\n           * An event that fires when enabled changes on this track. This allows\n           * the AudioTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec! Native tracks will do\n           *         this internally without an event.\n           *\n           * @event AudioTrack#enabledchange\n           * @type {Event}\n           */\n          this.trigger('enabledchange');\n        }\n      });\n\n      // if the user sets this track to selected then\n      // set selected to that true value otherwise\n      // we keep it false\n      if (settings.enabled) {\n        this.enabled = settings.enabled;\n      }\n      this.loaded_ = true;\n    }\n  }\n\n  /**\n   * A representation of a single `VideoTrack`.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n   * @extends Track\n   */\n  class VideoTrack extends Track {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} [options={}]\n     *        Object of option names and values\n     *\n     * @param {string} [options.kind='']\n     *        A valid {@link VideoTrack~Kind}\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this AudioTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @param {boolean} [options.selected]\n     *        If this track is the one that is currently playing.\n     */\n    constructor(options = {}) {\n      const settings = merge$2(options, {\n        kind: VideoTrackKind[options.kind] || ''\n      });\n      super(settings);\n      let selected = false;\n\n      /**\n       * @memberof VideoTrack\n       * @member {boolean} selected\n       *         If this `VideoTrack` is selected or not. When setting this will\n       *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n       * @instance\n       *\n       * @fires VideoTrack#selectedchange\n       */\n      Object.defineProperty(this, 'selected', {\n        get() {\n          return selected;\n        },\n        set(newSelected) {\n          // an invalid or unchanged value\n          if (typeof newSelected !== 'boolean' || newSelected === selected) {\n            return;\n          }\n          selected = newSelected;\n\n          /**\n           * An event that fires when selected changes on this track. This allows\n           * the VideoTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec! Native tracks will do\n           *         this internally without an event.\n           *\n           * @event VideoTrack#selectedchange\n           * @type {Event}\n           */\n          this.trigger('selectedchange');\n        }\n      });\n\n      // if the user sets this track to selected then\n      // set selected to that true value otherwise\n      // we keep it false\n      if (settings.selected) {\n        this.selected = settings.selected;\n      }\n    }\n  }\n\n  /**\n   * @file html-track-element.js\n   */\n\n  /** @import Tech from '../tech/tech' */\n\n  /**\n   * A single track represented in the DOM.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n   * @extends EventTarget\n   */\n  class HTMLTrackElement extends EventTarget$2 {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} options={}\n     *        Object of option names and values\n     *\n     * @param {Tech} options.tech\n     *        A reference to the tech that owns this HTMLTrackElement.\n     *\n     * @param {TextTrack~Kind} [options.kind='subtitles']\n     *        A valid text track kind.\n     *\n     * @param {TextTrack~Mode} [options.mode='disabled']\n     *        A valid text track mode.\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this TextTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @param {string} [options.srclang='']\n     *        A valid two character language code. An alternative, but deprioritized\n     *        version of `options.language`\n     *\n     * @param {string} [options.src]\n     *        A url to TextTrack cues.\n     *\n     * @param {boolean} [options.default]\n     *        If this track should default to on or off.\n     */\n    constructor(options = {}) {\n      super();\n      let readyState;\n      const track = new TextTrack(options);\n      this.kind = track.kind;\n      this.src = track.src;\n      this.srclang = track.language;\n      this.label = track.label;\n      this.default = track.default;\n      Object.defineProperties(this, {\n        /**\n         * @memberof HTMLTrackElement\n         * @member {HTMLTrackElement~ReadyState} readyState\n         *         The current ready state of the track element.\n         * @instance\n         */\n        readyState: {\n          get() {\n            return readyState;\n          }\n        },\n        /**\n         * @memberof HTMLTrackElement\n         * @member {TextTrack} track\n         *         The underlying TextTrack object.\n         * @instance\n         *\n         */\n        track: {\n          get() {\n            return track;\n          }\n        }\n      });\n      readyState = HTMLTrackElement.NONE;\n\n      /**\n       * @listens TextTrack#loadeddata\n       * @fires HTMLTrackElement#load\n       */\n      track.addEventListener('loadeddata', () => {\n        readyState = HTMLTrackElement.LOADED;\n        this.trigger({\n          type: 'load',\n          target: this\n        });\n      });\n    }\n  }\n\n  /**\n   * @protected\n   */\n  HTMLTrackElement.prototype.allowedEvents_ = {\n    load: 'load'\n  };\n\n  /**\n   * The text track not loaded state.\n   *\n   * @type {number}\n   * @static\n   */\n  HTMLTrackElement.NONE = 0;\n\n  /**\n   * The text track loading state.\n   *\n   * @type {number}\n   * @static\n   */\n  HTMLTrackElement.LOADING = 1;\n\n  /**\n   * The text track loaded state.\n   *\n   * @type {number}\n   * @static\n   */\n  HTMLTrackElement.LOADED = 2;\n\n  /**\n   * The text track failed to load state.\n   *\n   * @type {number}\n   * @static\n   */\n  HTMLTrackElement.ERROR = 3;\n\n  /*\n   * This file contains all track properties that are used in\n   * player.js, tech.js, html5.js and possibly other techs in the future.\n   */\n\n  const NORMAL = {\n    audio: {\n      ListClass: AudioTrackList,\n      TrackClass: AudioTrack,\n      capitalName: 'Audio'\n    },\n    video: {\n      ListClass: VideoTrackList,\n      TrackClass: VideoTrack,\n      capitalName: 'Video'\n    },\n    text: {\n      ListClass: TextTrackList,\n      TrackClass: TextTrack,\n      capitalName: 'Text'\n    }\n  };\n  Object.keys(NORMAL).forEach(function (type) {\n    NORMAL[type].getterName = `${type}Tracks`;\n    NORMAL[type].privateName = `${type}Tracks_`;\n  });\n  const REMOTE = {\n    remoteText: {\n      ListClass: TextTrackList,\n      TrackClass: TextTrack,\n      capitalName: 'RemoteText',\n      getterName: 'remoteTextTracks',\n      privateName: 'remoteTextTracks_'\n    },\n    remoteTextEl: {\n      ListClass: HtmlTrackElementList,\n      TrackClass: HTMLTrackElement,\n      capitalName: 'RemoteTextTrackEls',\n      getterName: 'remoteTextTrackEls',\n      privateName: 'remoteTextTrackEls_'\n    }\n  };\n  const ALL = Object.assign({}, NORMAL, REMOTE);\n  REMOTE.names = Object.keys(REMOTE);\n  NORMAL.names = Object.keys(NORMAL);\n  ALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n  var minDoc = {};\n\n  var topLevel = typeof commonjsGlobal !== 'undefined' ? commonjsGlobal : typeof window !== 'undefined' ? window : {};\n  var doccy;\n  if (typeof document !== 'undefined') {\n    doccy = document;\n  } else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n    if (!doccy) {\n      doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n  }\n  var document_1 = doccy;\n\n  /**\n   * Copyright 2013 vtt.js Contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  /* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n  /* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\n\n  var _objCreate = Object.create || function () {\n    function F() {}\n    return function (o) {\n      if (arguments.length !== 1) {\n        throw new Error('Object.create shim only accepts one parameter.');\n      }\n      F.prototype = o;\n      return new F();\n    };\n  }();\n\n  // Creates a new ParserError object from an errorData object. The errorData\n  // object should have default code and message properties. The default message\n  // property can be overriden by passing in a message parameter.\n  // See ParsingError.Errors below for acceptable errors.\n  function ParsingError(errorData, message) {\n    this.name = \"ParsingError\";\n    this.code = errorData.code;\n    this.message = message || errorData.message;\n  }\n  ParsingError.prototype = _objCreate(Error.prototype);\n  ParsingError.prototype.constructor = ParsingError;\n\n  // ParsingError metadata for acceptable ParsingErrors.\n  ParsingError.Errors = {\n    BadSignature: {\n      code: 0,\n      message: \"Malformed WebVTT signature.\"\n    },\n    BadTimeStamp: {\n      code: 1,\n      message: \"Malformed time stamp.\"\n    }\n  };\n\n  // Try to parse input as a time stamp.\n  function parseTimeStamp(input) {\n    function computeSeconds(h, m, s, f) {\n      return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n    }\n    var m = input.match(/^(\\d+):(\\d{1,2})(:\\d{1,2})?\\.(\\d{3})/);\n    if (!m) {\n      return null;\n    }\n    if (m[3]) {\n      // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n      return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n    } else if (m[1] > 59) {\n      // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n      // First position is hours as it's over 59.\n      return computeSeconds(m[1], m[2], 0, m[4]);\n    } else {\n      // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n      return computeSeconds(0, m[1], m[2], m[4]);\n    }\n  }\n\n  // A settings object holds key/value pairs and will ignore anything but the first\n  // assignment to a specific key.\n  function Settings() {\n    this.values = _objCreate(null);\n  }\n  Settings.prototype = {\n    // Only accept the first assignment to any key.\n    set: function (k, v) {\n      if (!this.get(k) && v !== \"\") {\n        this.values[k] = v;\n      }\n    },\n    // Return the value for a key, or a default value.\n    // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n    // a number of possible default values as properties where 'defaultKey' is\n    // the key of the property that will be chosen; otherwise it's assumed to be\n    // a single value.\n    get: function (k, dflt, defaultKey) {\n      if (defaultKey) {\n        return this.has(k) ? this.values[k] : dflt[defaultKey];\n      }\n      return this.has(k) ? this.values[k] : dflt;\n    },\n    // Check whether we have a value for a key.\n    has: function (k) {\n      return k in this.values;\n    },\n    // Accept a setting if its one of the given alternatives.\n    alt: function (k, v, a) {\n      for (var n = 0; n < a.length; ++n) {\n        if (v === a[n]) {\n          this.set(k, v);\n          break;\n        }\n      }\n    },\n    // Accept a setting if its a valid (signed) integer.\n    integer: function (k, v) {\n      if (/^-?\\d+$/.test(v)) {\n        // integer\n        this.set(k, parseInt(v, 10));\n      }\n    },\n    // Accept a setting if its a valid percentage.\n    percent: function (k, v) {\n      if (v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/)) {\n        v = parseFloat(v);\n        if (v >= 0 && v <= 100) {\n          this.set(k, v);\n          return true;\n        }\n      }\n      return false;\n    }\n  };\n\n  // Helper function to parse input into groups separated by 'groupDelim', and\n  // interprete each group as a key/value pair separated by 'keyValueDelim'.\n  function parseOptions(input, callback, keyValueDelim, groupDelim) {\n    var groups = groupDelim ? input.split(groupDelim) : [input];\n    for (var i in groups) {\n      if (typeof groups[i] !== \"string\") {\n        continue;\n      }\n      var kv = groups[i].split(keyValueDelim);\n      if (kv.length !== 2) {\n        continue;\n      }\n      var k = kv[0].trim();\n      var v = kv[1].trim();\n      callback(k, v);\n    }\n  }\n  function parseCue(input, cue, regionList) {\n    // Remember the original input if we need to throw an error.\n    var oInput = input;\n    // 4.1 WebVTT timestamp\n    function consumeTimeStamp() {\n      var ts = parseTimeStamp(input);\n      if (ts === null) {\n        throw new ParsingError(ParsingError.Errors.BadTimeStamp, \"Malformed timestamp: \" + oInput);\n      }\n      // Remove time stamp from input.\n      input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n      return ts;\n    }\n\n    // 4.4.2 WebVTT cue settings\n    function consumeCueSettings(input, cue) {\n      var settings = new Settings();\n      parseOptions(input, function (k, v) {\n        switch (k) {\n          case \"region\":\n            // Find the last region we parsed with the same region id.\n            for (var i = regionList.length - 1; i >= 0; i--) {\n              if (regionList[i].id === v) {\n                settings.set(k, regionList[i].region);\n                break;\n              }\n            }\n            break;\n          case \"vertical\":\n            settings.alt(k, v, [\"rl\", \"lr\"]);\n            break;\n          case \"line\":\n            var vals = v.split(\",\"),\n              vals0 = vals[0];\n            settings.integer(k, vals0);\n            settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n            settings.alt(k, vals0, [\"auto\"]);\n            if (vals.length === 2) {\n              settings.alt(\"lineAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n            }\n            break;\n          case \"position\":\n            vals = v.split(\",\");\n            settings.percent(k, vals[0]);\n            if (vals.length === 2) {\n              settings.alt(\"positionAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n            }\n            break;\n          case \"size\":\n            settings.percent(k, v);\n            break;\n          case \"align\":\n            settings.alt(k, v, [\"start\", \"center\", \"end\", \"left\", \"right\"]);\n            break;\n        }\n      }, /:/, /\\s/);\n\n      // Apply default values for any missing fields.\n      cue.region = settings.get(\"region\", null);\n      cue.vertical = settings.get(\"vertical\", \"\");\n      try {\n        cue.line = settings.get(\"line\", \"auto\");\n      } catch (e) {}\n      cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n      cue.snapToLines = settings.get(\"snapToLines\", true);\n      cue.size = settings.get(\"size\", 100);\n      // Safari still uses the old middle value and won't accept center\n      try {\n        cue.align = settings.get(\"align\", \"center\");\n      } catch (e) {\n        cue.align = settings.get(\"align\", \"middle\");\n      }\n      try {\n        cue.position = settings.get(\"position\", \"auto\");\n      } catch (e) {\n        cue.position = settings.get(\"position\", {\n          start: 0,\n          left: 0,\n          center: 50,\n          middle: 50,\n          end: 100,\n          right: 100\n        }, cue.align);\n      }\n      cue.positionAlign = settings.get(\"positionAlign\", {\n        start: \"start\",\n        left: \"start\",\n        center: \"center\",\n        middle: \"center\",\n        end: \"end\",\n        right: \"end\"\n      }, cue.align);\n    }\n    function skipWhitespace() {\n      input = input.replace(/^\\s+/, \"\");\n    }\n\n    // 4.1 WebVTT cue timings.\n    skipWhitespace();\n    cue.startTime = consumeTimeStamp(); // (1) collect cue start time\n    skipWhitespace();\n    if (input.substr(0, 3) !== \"-->\") {\n      // (3) next characters must match \"-->\"\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp, \"Malformed time stamp (time stamps must be separated by '-->'): \" + oInput);\n    }\n    input = input.substr(3);\n    skipWhitespace();\n    cue.endTime = consumeTimeStamp(); // (5) collect cue end time\n\n    // 4.1 WebVTT cue settings list.\n    skipWhitespace();\n    consumeCueSettings(input, cue);\n  }\n\n  // When evaluating this file as part of a Webpack bundle for server\n  // side rendering, `document` is an empty object.\n  var TEXTAREA_ELEMENT = document_1.createElement && document_1.createElement(\"textarea\");\n  var TAG_NAME = {\n    c: \"span\",\n    i: \"i\",\n    b: \"b\",\n    u: \"u\",\n    ruby: \"ruby\",\n    rt: \"rt\",\n    v: \"span\",\n    lang: \"span\"\n  };\n\n  // 5.1 default text color\n  // 5.2 default text background color is equivalent to text color with bg_ prefix\n  var DEFAULT_COLOR_CLASS = {\n    white: 'rgba(255,255,255,1)',\n    lime: 'rgba(0,255,0,1)',\n    cyan: 'rgba(0,255,255,1)',\n    red: 'rgba(255,0,0,1)',\n    yellow: 'rgba(255,255,0,1)',\n    magenta: 'rgba(255,0,255,1)',\n    blue: 'rgba(0,0,255,1)',\n    black: 'rgba(0,0,0,1)'\n  };\n  var TAG_ANNOTATION = {\n    v: \"title\",\n    lang: \"lang\"\n  };\n  var NEEDS_PARENT = {\n    rt: \"ruby\"\n  };\n\n  // Parse content into a document fragment.\n  function parseContent(window, input) {\n    function nextToken() {\n      // Check for end-of-string.\n      if (!input) {\n        return null;\n      }\n\n      // Consume 'n' characters from the input.\n      function consume(result) {\n        input = input.substr(result.length);\n        return result;\n      }\n      var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n      // If there is some text before the next tag, return it, otherwise return\n      // the tag.\n      return consume(m[1] ? m[1] : m[2]);\n    }\n    function unescape(s) {\n      TEXTAREA_ELEMENT.innerHTML = s;\n      s = TEXTAREA_ELEMENT.textContent;\n      TEXTAREA_ELEMENT.textContent = \"\";\n      return s;\n    }\n    function shouldAdd(current, element) {\n      return !NEEDS_PARENT[element.localName] || NEEDS_PARENT[element.localName] === current.localName;\n    }\n\n    // Create an element for this tag.\n    function createElement(type, annotation) {\n      var tagName = TAG_NAME[type];\n      if (!tagName) {\n        return null;\n      }\n      var element = window.document.createElement(tagName);\n      var name = TAG_ANNOTATION[type];\n      if (name && annotation) {\n        element[name] = annotation.trim();\n      }\n      return element;\n    }\n    var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n    while ((t = nextToken()) !== null) {\n      if (t[0] === '<') {\n        if (t[1] === \"/\") {\n          // If the closing tag matches, move back up to the parent node.\n          if (tagStack.length && tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n            tagStack.pop();\n            current = current.parentNode;\n          }\n          // Otherwise just ignore the end tag.\n          continue;\n        }\n        var ts = parseTimeStamp(t.substr(1, t.length - 2));\n        var node;\n        if (ts) {\n          // Timestamps are lead nodes as well.\n          node = window.document.createProcessingInstruction(\"timestamp\", ts);\n          current.appendChild(node);\n          continue;\n        }\n        var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n        // If we can't parse the tag, skip to the next tag.\n        if (!m) {\n          continue;\n        }\n        // Try to construct an element, and ignore the tag if we couldn't.\n        node = createElement(m[1], m[3]);\n        if (!node) {\n          continue;\n        }\n        // Determine if the tag should be added based on the context of where it\n        // is placed in the cuetext.\n        if (!shouldAdd(current, node)) {\n          continue;\n        }\n        // Set the class list (as a list of classes, separated by space).\n        if (m[2]) {\n          var classes = m[2].split('.');\n          classes.forEach(function (cl) {\n            var bgColor = /^bg_/.test(cl);\n            // slice out `bg_` if it's a background color\n            var colorName = bgColor ? cl.slice(3) : cl;\n            if (DEFAULT_COLOR_CLASS.hasOwnProperty(colorName)) {\n              var propName = bgColor ? 'background-color' : 'color';\n              var propValue = DEFAULT_COLOR_CLASS[colorName];\n              node.style[propName] = propValue;\n            }\n          });\n          node.className = classes.join(' ');\n        }\n        // Append the node to the current node, and enter the scope of the new\n        // node.\n        tagStack.push(m[1]);\n        current.appendChild(node);\n        current = node;\n        continue;\n      }\n\n      // Text nodes are leaf nodes.\n      current.appendChild(window.document.createTextNode(unescape(t)));\n    }\n    return rootDiv;\n  }\n\n  // This is a list of all the Unicode characters that have a strong\n  // right-to-left category. What this means is that these characters are\n  // written right-to-left for sure. It was generated by pulling all the strong\n  // right-to-left characters out of the Unicode data table. That table can\n  // found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\n  var strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6], [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d], [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6], [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5], [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815], [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858], [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f], [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c], [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1], [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc], [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808], [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855], [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f], [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13], [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58], [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72], [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f], [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32], [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42], [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f], [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59], [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62], [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77], [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b], [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n  function isStrongRTLChar(charCode) {\n    for (var i = 0; i < strongRTLRanges.length; i++) {\n      var currentRange = strongRTLRanges[i];\n      if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n        return true;\n      }\n    }\n    return false;\n  }\n  function determineBidi(cueDiv) {\n    var nodeStack = [],\n      text = \"\",\n      charCode;\n    if (!cueDiv || !cueDiv.childNodes) {\n      return \"ltr\";\n    }\n    function pushNodes(nodeStack, node) {\n      for (var i = node.childNodes.length - 1; i >= 0; i--) {\n        nodeStack.push(node.childNodes[i]);\n      }\n    }\n    function nextTextNode(nodeStack) {\n      if (!nodeStack || !nodeStack.length) {\n        return null;\n      }\n      var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n      if (text) {\n        // TODO: This should match all unicode type B characters (paragraph\n        // separator characters). See issue #115.\n        var m = text.match(/^.*(\\n|\\r)/);\n        if (m) {\n          nodeStack.length = 0;\n          return m[0];\n        }\n        return text;\n      }\n      if (node.tagName === \"ruby\") {\n        return nextTextNode(nodeStack);\n      }\n      if (node.childNodes) {\n        pushNodes(nodeStack, node);\n        return nextTextNode(nodeStack);\n      }\n    }\n    pushNodes(nodeStack, cueDiv);\n    while (text = nextTextNode(nodeStack)) {\n      for (var i = 0; i < text.length; i++) {\n        charCode = text.charCodeAt(i);\n        if (isStrongRTLChar(charCode)) {\n          return \"rtl\";\n        }\n      }\n    }\n    return \"ltr\";\n  }\n  function computeLinePos(cue) {\n    if (typeof cue.line === \"number\" && (cue.snapToLines || cue.line >= 0 && cue.line <= 100)) {\n      return cue.line;\n    }\n    if (!cue.track || !cue.track.textTrackList || !cue.track.textTrackList.mediaElement) {\n      return -1;\n    }\n    var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n    for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n      if (trackList[i].mode === \"showing\") {\n        count++;\n      }\n    }\n    return ++count * -1;\n  }\n  function StyleBox() {}\n\n  // Apply styles to a div. If there is no div passed then it defaults to the\n  // div on 'this'.\n  StyleBox.prototype.applyStyles = function (styles, div) {\n    div = div || this.div;\n    for (var prop in styles) {\n      if (styles.hasOwnProperty(prop)) {\n        div.style[prop] = styles[prop];\n      }\n    }\n  };\n  StyleBox.prototype.formatStyle = function (val, unit) {\n    return val === 0 ? 0 : val + unit;\n  };\n\n  // Constructs the computed display state of the cue (a div). Places the div\n  // into the overlay which should be a block level element (usually a div).\n  function CueStyleBox(window, cue, styleOptions) {\n    StyleBox.call(this);\n    this.cue = cue;\n\n    // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n    // have inline positioning and will function as the cue background box.\n    this.cueDiv = parseContent(window, cue.text);\n    var styles = {\n      color: \"rgba(255, 255, 255, 1)\",\n      backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n      position: \"relative\",\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      display: \"inline\",\n      writingMode: cue.vertical === \"\" ? \"horizontal-tb\" : cue.vertical === \"lr\" ? \"vertical-lr\" : \"vertical-rl\",\n      unicodeBidi: \"plaintext\"\n    };\n    this.applyStyles(styles, this.cueDiv);\n\n    // Create an absolutely positioned div that will be used to position the cue\n    // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n    // mirrors of them except middle instead of center on Safari.\n    this.div = window.document.createElement(\"div\");\n    styles = {\n      direction: determineBidi(this.cueDiv),\n      writingMode: cue.vertical === \"\" ? \"horizontal-tb\" : cue.vertical === \"lr\" ? \"vertical-lr\" : \"vertical-rl\",\n      unicodeBidi: \"plaintext\",\n      textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n      font: styleOptions.font,\n      whiteSpace: \"pre-line\",\n      position: \"absolute\"\n    };\n    this.applyStyles(styles);\n    this.div.appendChild(this.cueDiv);\n\n    // Calculate the distance from the reference edge of the viewport to the text\n    // position of the cue box. The reference edge will be resolved later when\n    // the box orientation styles are applied.\n    var textPos = 0;\n    switch (cue.positionAlign) {\n      case \"start\":\n      case \"line-left\":\n        textPos = cue.position;\n        break;\n      case \"center\":\n        textPos = cue.position - cue.size / 2;\n        break;\n      case \"end\":\n      case \"line-right\":\n        textPos = cue.position - cue.size;\n        break;\n    }\n\n    // Horizontal box orientation; textPos is the distance from the left edge of the\n    // area to the left edge of the box and cue.size is the distance extending to\n    // the right from there.\n    if (cue.vertical === \"\") {\n      this.applyStyles({\n        left: this.formatStyle(textPos, \"%\"),\n        width: this.formatStyle(cue.size, \"%\")\n      });\n      // Vertical box orientation; textPos is the distance from the top edge of the\n      // area to the top edge of the box and cue.size is the height extending\n      // downwards from there.\n    } else {\n      this.applyStyles({\n        top: this.formatStyle(textPos, \"%\"),\n        height: this.formatStyle(cue.size, \"%\")\n      });\n    }\n    this.move = function (box) {\n      this.applyStyles({\n        top: this.formatStyle(box.top, \"px\"),\n        bottom: this.formatStyle(box.bottom, \"px\"),\n        left: this.formatStyle(box.left, \"px\"),\n        right: this.formatStyle(box.right, \"px\"),\n        height: this.formatStyle(box.height, \"px\"),\n        width: this.formatStyle(box.width, \"px\")\n      });\n    };\n  }\n  CueStyleBox.prototype = _objCreate(StyleBox.prototype);\n  CueStyleBox.prototype.constructor = CueStyleBox;\n\n  // Represents the co-ordinates of an Element in a way that we can easily\n  // compute things with such as if it overlaps or intersects with another Element.\n  // Can initialize it with either a StyleBox or another BoxPosition.\n  function BoxPosition(obj) {\n    // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n    // was passed in and we need to copy the results of 'getBoundingClientRect'\n    // as the object returned is readonly. All co-ordinate values are in reference\n    // to the viewport origin (top left).\n    var lh, height, width, top;\n    if (obj.div) {\n      height = obj.div.offsetHeight;\n      width = obj.div.offsetWidth;\n      top = obj.div.offsetTop;\n      var rects = (rects = obj.div.childNodes) && (rects = rects[0]) && rects.getClientRects && rects.getClientRects();\n      obj = obj.div.getBoundingClientRect();\n      // In certain cases the outter div will be slightly larger then the sum of\n      // the inner div's lines. This could be due to bold text, etc, on some platforms.\n      // In this case we should get the average line height and use that. This will\n      // result in the desired behaviour.\n      lh = rects ? Math.max(rects[0] && rects[0].height || 0, obj.height / rects.length) : 0;\n    }\n    this.left = obj.left;\n    this.right = obj.right;\n    this.top = obj.top || top;\n    this.height = obj.height || height;\n    this.bottom = obj.bottom || top + (obj.height || height);\n    this.width = obj.width || width;\n    this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n  }\n\n  // Move the box along a particular axis. Optionally pass in an amount to move\n  // the box. If no amount is passed then the default is the line height of the\n  // box.\n  BoxPosition.prototype.move = function (axis, toMove) {\n    toMove = toMove !== undefined ? toMove : this.lineHeight;\n    switch (axis) {\n      case \"+x\":\n        this.left += toMove;\n        this.right += toMove;\n        break;\n      case \"-x\":\n        this.left -= toMove;\n        this.right -= toMove;\n        break;\n      case \"+y\":\n        this.top += toMove;\n        this.bottom += toMove;\n        break;\n      case \"-y\":\n        this.top -= toMove;\n        this.bottom -= toMove;\n        break;\n    }\n  };\n\n  // Check if this box overlaps another box, b2.\n  BoxPosition.prototype.overlaps = function (b2) {\n    return this.left < b2.right && this.right > b2.left && this.top < b2.bottom && this.bottom > b2.top;\n  };\n\n  // Check if this box overlaps any other boxes in boxes.\n  BoxPosition.prototype.overlapsAny = function (boxes) {\n    for (var i = 0; i < boxes.length; i++) {\n      if (this.overlaps(boxes[i])) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  // Check if this box is within another box.\n  BoxPosition.prototype.within = function (container) {\n    return this.top >= container.top && this.bottom <= container.bottom && this.left >= container.left && this.right <= container.right;\n  };\n\n  // Check if this box is entirely within the container or it is overlapping\n  // on the edge opposite of the axis direction passed. For example, if \"+x\" is\n  // passed and the box is overlapping on the left edge of the container, then\n  // return true.\n  BoxPosition.prototype.overlapsOppositeAxis = function (container, axis) {\n    switch (axis) {\n      case \"+x\":\n        return this.left < container.left;\n      case \"-x\":\n        return this.right > container.right;\n      case \"+y\":\n        return this.top < container.top;\n      case \"-y\":\n        return this.bottom > container.bottom;\n    }\n  };\n\n  // Find the percentage of the area that this box is overlapping with another\n  // box.\n  BoxPosition.prototype.intersectPercentage = function (b2) {\n    var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n    return intersectArea / (this.height * this.width);\n  };\n\n  // Convert the positions from this box to CSS compatible positions using\n  // the reference container's positions. This has to be done because this\n  // box's positions are in reference to the viewport origin, whereas, CSS\n  // values are in referecne to their respective edges.\n  BoxPosition.prototype.toCSSCompatValues = function (reference) {\n    return {\n      top: this.top - reference.top,\n      bottom: reference.bottom - this.bottom,\n      left: this.left - reference.left,\n      right: reference.right - this.right,\n      height: this.height,\n      width: this.width\n    };\n  };\n\n  // Get an object that represents the box's position without anything extra.\n  // Can pass a StyleBox, HTMLElement, or another BoxPositon.\n  BoxPosition.getSimpleBoxPosition = function (obj) {\n    var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n    var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n    var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n    obj = obj.div ? obj.div.getBoundingClientRect() : obj.tagName ? obj.getBoundingClientRect() : obj;\n    var ret = {\n      left: obj.left,\n      right: obj.right,\n      top: obj.top || top,\n      height: obj.height || height,\n      bottom: obj.bottom || top + (obj.height || height),\n      width: obj.width || width\n    };\n    return ret;\n  };\n\n  // Move a StyleBox to its specified, or next best, position. The containerBox\n  // is the box that contains the StyleBox, such as a div. boxPositions are\n  // a list of other boxes that the styleBox can't overlap with.\n  function moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n    // Find the best position for a cue box, b, on the video. The axis parameter\n    // is a list of axis, the order of which, it will move the box along. For example:\n    // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n    // direction. If it doesn't find a good position for it there it will then move\n    // it along the x axis in the negative direction.\n    function findBestPosition(b, axis) {\n      var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n      for (var i = 0; i < axis.length; i++) {\n        while (b.overlapsOppositeAxis(containerBox, axis[i]) || b.within(containerBox) && b.overlapsAny(boxPositions)) {\n          b.move(axis[i]);\n        }\n        // We found a spot where we aren't overlapping anything. This is our\n        // best position.\n        if (b.within(containerBox)) {\n          return b;\n        }\n        var p = b.intersectPercentage(containerBox);\n        // If we're outside the container box less then we were on our last try\n        // then remember this position as the best position.\n        if (percentage > p) {\n          bestPosition = new BoxPosition(b);\n          percentage = p;\n        }\n        // Reset the box position to the specified position.\n        b = new BoxPosition(specifiedPosition);\n      }\n      return bestPosition || specifiedPosition;\n    }\n    var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n    // If we have a line number to align the cue to.\n    if (cue.snapToLines) {\n      var size;\n      switch (cue.vertical) {\n        case \"\":\n          axis = [\"+y\", \"-y\"];\n          size = \"height\";\n          break;\n        case \"rl\":\n          axis = [\"+x\", \"-x\"];\n          size = \"width\";\n          break;\n        case \"lr\":\n          axis = [\"-x\", \"+x\"];\n          size = \"width\";\n          break;\n      }\n      var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n      // If the specified intial position is greater then the max position then\n      // clamp the box to the amount of steps it would take for the box to\n      // reach the max position.\n      if (Math.abs(position) > maxPosition) {\n        position = position < 0 ? -1 : 1;\n        position *= Math.ceil(maxPosition / step) * step;\n      }\n\n      // If computed line position returns negative then line numbers are\n      // relative to the bottom of the video instead of the top. Therefore, we\n      // need to increase our initial position by the length or width of the\n      // video, depending on the writing direction, and reverse our axis directions.\n      if (linePos < 0) {\n        position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n        axis = axis.reverse();\n      }\n\n      // Move the box to the specified position. This may not be its best\n      // position.\n      boxPosition.move(initialAxis, position);\n    } else {\n      // If we have a percentage line value for the cue.\n      var calculatedPercentage = boxPosition.lineHeight / containerBox.height * 100;\n      switch (cue.lineAlign) {\n        case \"center\":\n          linePos -= calculatedPercentage / 2;\n          break;\n        case \"end\":\n          linePos -= calculatedPercentage;\n          break;\n      }\n\n      // Apply initial line position to the cue box.\n      switch (cue.vertical) {\n        case \"\":\n          styleBox.applyStyles({\n            top: styleBox.formatStyle(linePos, \"%\")\n          });\n          break;\n        case \"rl\":\n          styleBox.applyStyles({\n            left: styleBox.formatStyle(linePos, \"%\")\n          });\n          break;\n        case \"lr\":\n          styleBox.applyStyles({\n            right: styleBox.formatStyle(linePos, \"%\")\n          });\n          break;\n      }\n      axis = [\"+y\", \"-x\", \"+x\", \"-y\"];\n\n      // Get the box position again after we've applied the specified positioning\n      // to it.\n      boxPosition = new BoxPosition(styleBox);\n    }\n    var bestPosition = findBestPosition(boxPosition, axis);\n    styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n  }\n  function WebVTT$1() {\n    // Nothing\n  }\n\n  // Helper to allow strings to be decoded instead of the default binary utf8 data.\n  WebVTT$1.StringDecoder = function () {\n    return {\n      decode: function (data) {\n        if (!data) {\n          return \"\";\n        }\n        if (typeof data !== \"string\") {\n          throw new Error(\"Error - expected string data.\");\n        }\n        return decodeURIComponent(encodeURIComponent(data));\n      }\n    };\n  };\n  WebVTT$1.convertCueToDOMTree = function (window, cuetext) {\n    if (!window || !cuetext) {\n      return null;\n    }\n    return parseContent(window, cuetext);\n  };\n  var FONT_SIZE_PERCENT = 0.05;\n  var FONT_STYLE = \"sans-serif\";\n  var CUE_BACKGROUND_PADDING = \"1.5%\";\n\n  // Runs the processing model over the cues and regions passed to it.\n  // @param overlay A block level element (usually a div) that the computed cues\n  //                and regions will be placed into.\n  WebVTT$1.processCues = function (window, cues, overlay) {\n    if (!window || !cues || !overlay) {\n      return null;\n    }\n\n    // Remove all previous children.\n    while (overlay.firstChild) {\n      overlay.removeChild(overlay.firstChild);\n    }\n    var paddedOverlay = window.document.createElement(\"div\");\n    paddedOverlay.style.position = \"absolute\";\n    paddedOverlay.style.left = \"0\";\n    paddedOverlay.style.right = \"0\";\n    paddedOverlay.style.top = \"0\";\n    paddedOverlay.style.bottom = \"0\";\n    paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n    overlay.appendChild(paddedOverlay);\n\n    // Determine if we need to compute the display states of the cues. This could\n    // be the case if a cue's state has been changed since the last computation or\n    // if it has not been computed yet.\n    function shouldCompute(cues) {\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i].hasBeenReset || !cues[i].displayState) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    // We don't need to recompute the cues' display states. Just reuse them.\n    if (!shouldCompute(cues)) {\n      for (var i = 0; i < cues.length; i++) {\n        paddedOverlay.appendChild(cues[i].displayState);\n      }\n      return;\n    }\n    var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n    var styleOptions = {\n      font: fontSize + \"px \" + FONT_STYLE\n    };\n    (function () {\n      var styleBox, cue;\n      for (var i = 0; i < cues.length; i++) {\n        cue = cues[i];\n\n        // Compute the intial position and styles of the cue div.\n        styleBox = new CueStyleBox(window, cue, styleOptions);\n        paddedOverlay.appendChild(styleBox.div);\n\n        // Move the cue div to it's correct line position.\n        moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n        // Remember the computed div so that we don't have to recompute it later\n        // if we don't have too.\n        cue.displayState = styleBox.div;\n        boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n      }\n    })();\n  };\n  WebVTT$1.Parser = function (window, vttjs, decoder) {\n    if (!decoder) {\n      decoder = vttjs;\n      vttjs = {};\n    }\n    if (!vttjs) {\n      vttjs = {};\n    }\n    this.window = window;\n    this.vttjs = vttjs;\n    this.state = \"INITIAL\";\n    this.buffer = \"\";\n    this.decoder = decoder || new TextDecoder(\"utf8\");\n    this.regionList = [];\n  };\n  WebVTT$1.Parser.prototype = {\n    // If the error is a ParsingError then report it to the consumer if\n    // possible. If it's not a ParsingError then throw it like normal.\n    reportOrThrowError: function (e) {\n      if (e instanceof ParsingError) {\n        this.onparsingerror && this.onparsingerror(e);\n      } else {\n        throw e;\n      }\n    },\n    parse: function (data) {\n      var self = this;\n\n      // If there is no data then we won't decode it, but will just try to parse\n      // whatever is in buffer already. This may occur in circumstances, for\n      // example when flush() is called.\n      if (data) {\n        // Try to decode the data that we received.\n        self.buffer += self.decoder.decode(data, {\n          stream: true\n        });\n      }\n      function collectNextLine() {\n        var buffer = self.buffer;\n        var pos = 0;\n        while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n          ++pos;\n        }\n        var line = buffer.substr(0, pos);\n        // Advance the buffer early in case we fail below.\n        if (buffer[pos] === '\\r') {\n          ++pos;\n        }\n        if (buffer[pos] === '\\n') {\n          ++pos;\n        }\n        self.buffer = buffer.substr(pos);\n        return line;\n      }\n\n      // 3.4 WebVTT region and WebVTT region settings syntax\n      function parseRegion(input) {\n        var settings = new Settings();\n        parseOptions(input, function (k, v) {\n          switch (k) {\n            case \"id\":\n              settings.set(k, v);\n              break;\n            case \"width\":\n              settings.percent(k, v);\n              break;\n            case \"lines\":\n              settings.integer(k, v);\n              break;\n            case \"regionanchor\":\n            case \"viewportanchor\":\n              var xy = v.split(',');\n              if (xy.length !== 2) {\n                break;\n              }\n              // We have to make sure both x and y parse, so use a temporary\n              // settings object here.\n              var anchor = new Settings();\n              anchor.percent(\"x\", xy[0]);\n              anchor.percent(\"y\", xy[1]);\n              if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n                break;\n              }\n              settings.set(k + \"X\", anchor.get(\"x\"));\n              settings.set(k + \"Y\", anchor.get(\"y\"));\n              break;\n            case \"scroll\":\n              settings.alt(k, v, [\"up\"]);\n              break;\n          }\n        }, /=/, /\\s/);\n\n        // Create the region, using default values for any values that were not\n        // specified.\n        if (settings.has(\"id\")) {\n          var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n          region.width = settings.get(\"width\", 100);\n          region.lines = settings.get(\"lines\", 3);\n          region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n          region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n          region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n          region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n          region.scroll = settings.get(\"scroll\", \"\");\n          // Register the region.\n          self.onregion && self.onregion(region);\n          // Remember the VTTRegion for later in case we parse any VTTCues that\n          // reference it.\n          self.regionList.push({\n            id: settings.get(\"id\"),\n            region: region\n          });\n        }\n      }\n\n      // draft-pantos-http-live-streaming-20\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n      // 3.5 WebVTT\n      function parseTimestampMap(input) {\n        var settings = new Settings();\n        parseOptions(input, function (k, v) {\n          switch (k) {\n            case \"MPEGT\":\n              settings.integer(k + 'S', v);\n              break;\n            case \"LOCA\":\n              settings.set(k + 'L', parseTimeStamp(v));\n              break;\n          }\n        }, /[^\\d]:/, /,/);\n        self.ontimestampmap && self.ontimestampmap({\n          \"MPEGTS\": settings.get(\"MPEGTS\"),\n          \"LOCAL\": settings.get(\"LOCAL\")\n        });\n      }\n\n      // 3.2 WebVTT metadata header syntax\n      function parseHeader(input) {\n        if (input.match(/X-TIMESTAMP-MAP/)) {\n          // This line contains HLS X-TIMESTAMP-MAP metadata\n          parseOptions(input, function (k, v) {\n            switch (k) {\n              case \"X-TIMESTAMP-MAP\":\n                parseTimestampMap(v);\n                break;\n            }\n          }, /=/);\n        } else {\n          parseOptions(input, function (k, v) {\n            switch (k) {\n              case \"Region\":\n                // 3.3 WebVTT region metadata header syntax\n                parseRegion(v);\n                break;\n            }\n          }, /:/);\n        }\n      }\n\n      // 5.1 WebVTT file parsing.\n      try {\n        var line;\n        if (self.state === \"INITIAL\") {\n          // We can't start parsing until we have the first line.\n          if (!/\\r\\n|\\n/.test(self.buffer)) {\n            return this;\n          }\n          line = collectNextLine();\n          var m = line.match(/^WEBVTT([ \\t].*)?$/);\n          if (!m || !m[0]) {\n            throw new ParsingError(ParsingError.Errors.BadSignature);\n          }\n          self.state = \"HEADER\";\n        }\n        var alreadyCollectedLine = false;\n        while (self.buffer) {\n          // We can't parse a line until we have the full line.\n          if (!/\\r\\n|\\n/.test(self.buffer)) {\n            return this;\n          }\n          if (!alreadyCollectedLine) {\n            line = collectNextLine();\n          } else {\n            alreadyCollectedLine = false;\n          }\n          switch (self.state) {\n            case \"HEADER\":\n              // 13-18 - Allow a header (metadata) under the WEBVTT line.\n              if (/:/.test(line)) {\n                parseHeader(line);\n              } else if (!line) {\n                // An empty line terminates the header and starts the body (cues).\n                self.state = \"ID\";\n              }\n              continue;\n            case \"NOTE\":\n              // Ignore NOTE blocks.\n              if (!line) {\n                self.state = \"ID\";\n              }\n              continue;\n            case \"ID\":\n              // Check for the start of NOTE blocks.\n              if (/^NOTE($|[ \\t])/.test(line)) {\n                self.state = \"NOTE\";\n                break;\n              }\n              // 19-29 - Allow any number of line terminators, then initialize new cue values.\n              if (!line) {\n                continue;\n              }\n              self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n              // Safari still uses the old middle value and won't accept center\n              try {\n                self.cue.align = \"center\";\n              } catch (e) {\n                self.cue.align = \"middle\";\n              }\n              self.state = \"CUE\";\n              // 30-39 - Check if self line contains an optional identifier or timing data.\n              if (line.indexOf(\"-->\") === -1) {\n                self.cue.id = line;\n                continue;\n              }\n            // Process line as start of a cue.\n            /*falls through*/\n            case \"CUE\":\n              // 40 - Collect cue timings and settings.\n              try {\n                parseCue(line, self.cue, self.regionList);\n              } catch (e) {\n                self.reportOrThrowError(e);\n                // In case of an error ignore rest of the cue.\n                self.cue = null;\n                self.state = \"BADCUE\";\n                continue;\n              }\n              self.state = \"CUETEXT\";\n              continue;\n            case \"CUETEXT\":\n              var hasSubstring = line.indexOf(\"-->\") !== -1;\n              // 34 - If we have an empty line then report the cue.\n              // 35 - If we have the special substring '-->' then report the cue,\n              // but do not collect the line as we need to process the current\n              // one as a new cue.\n              if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n                // We are done parsing self cue.\n                self.oncue && self.oncue(self.cue);\n                self.cue = null;\n                self.state = \"ID\";\n                continue;\n              }\n              if (self.cue.text) {\n                self.cue.text += \"\\n\";\n              }\n              self.cue.text += line.replace(/\\u2028/g, '\\n').replace(/u2029/g, '\\n');\n              continue;\n            case \"BADCUE\":\n              // BADCUE\n              // 54-62 - Collect and discard the remaining cue.\n              if (!line) {\n                self.state = \"ID\";\n              }\n              continue;\n          }\n        }\n      } catch (e) {\n        self.reportOrThrowError(e);\n\n        // If we are currently parsing a cue, report what we have.\n        if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n          self.oncue(self.cue);\n        }\n        self.cue = null;\n        // Enter BADWEBVTT state if header was not parsed correctly otherwise\n        // another exception occurred so enter BADCUE state.\n        self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n      }\n      return this;\n    },\n    flush: function () {\n      var self = this;\n      try {\n        // Finish decoding the stream.\n        self.buffer += self.decoder.decode();\n        // Synthesize the end of the current cue or region.\n        if (self.cue || self.state === \"HEADER\") {\n          self.buffer += \"\\n\\n\";\n          self.parse();\n        }\n        // If we've flushed, parsed, and we're still on the INITIAL state then\n        // that means we don't have enough of the stream to parse the first\n        // line.\n        if (self.state === \"INITIAL\") {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n      } catch (e) {\n        self.reportOrThrowError(e);\n      }\n      self.onflush && self.onflush();\n      return this;\n    }\n  };\n  var vtt = WebVTT$1;\n\n  /**\n   * Copyright 2013 vtt.js Contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  var autoKeyword = \"auto\";\n  var directionSetting = {\n    \"\": 1,\n    \"lr\": 1,\n    \"rl\": 1\n  };\n  var alignSetting = {\n    \"start\": 1,\n    \"center\": 1,\n    \"end\": 1,\n    \"left\": 1,\n    \"right\": 1,\n    \"auto\": 1,\n    \"line-left\": 1,\n    \"line-right\": 1\n  };\n  function findDirectionSetting(value) {\n    if (typeof value !== \"string\") {\n      return false;\n    }\n    var dir = directionSetting[value.toLowerCase()];\n    return dir ? value.toLowerCase() : false;\n  }\n  function findAlignSetting(value) {\n    if (typeof value !== \"string\") {\n      return false;\n    }\n    var align = alignSetting[value.toLowerCase()];\n    return align ? value.toLowerCase() : false;\n  }\n  function VTTCue(startTime, endTime, text) {\n    /**\n     * Shim implementation specific properties. These properties are not in\n     * the spec.\n     */\n\n    // Lets us know when the VTTCue's data has changed in such a way that we need\n    // to recompute its display state. This lets us compute its display state\n    // lazily.\n    this.hasBeenReset = false;\n\n    /**\n     * VTTCue and TextTrackCue properties\n     * http://dev.w3.org/html5/webvtt/#vttcue-interface\n     */\n\n    var _id = \"\";\n    var _pauseOnExit = false;\n    var _startTime = startTime;\n    var _endTime = endTime;\n    var _text = text;\n    var _region = null;\n    var _vertical = \"\";\n    var _snapToLines = true;\n    var _line = \"auto\";\n    var _lineAlign = \"start\";\n    var _position = \"auto\";\n    var _positionAlign = \"auto\";\n    var _size = 100;\n    var _align = \"center\";\n    Object.defineProperties(this, {\n      \"id\": {\n        enumerable: true,\n        get: function () {\n          return _id;\n        },\n        set: function (value) {\n          _id = \"\" + value;\n        }\n      },\n      \"pauseOnExit\": {\n        enumerable: true,\n        get: function () {\n          return _pauseOnExit;\n        },\n        set: function (value) {\n          _pauseOnExit = !!value;\n        }\n      },\n      \"startTime\": {\n        enumerable: true,\n        get: function () {\n          return _startTime;\n        },\n        set: function (value) {\n          if (typeof value !== \"number\") {\n            throw new TypeError(\"Start time must be set to a number.\");\n          }\n          _startTime = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"endTime\": {\n        enumerable: true,\n        get: function () {\n          return _endTime;\n        },\n        set: function (value) {\n          if (typeof value !== \"number\") {\n            throw new TypeError(\"End time must be set to a number.\");\n          }\n          _endTime = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"text\": {\n        enumerable: true,\n        get: function () {\n          return _text;\n        },\n        set: function (value) {\n          _text = \"\" + value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"region\": {\n        enumerable: true,\n        get: function () {\n          return _region;\n        },\n        set: function (value) {\n          _region = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"vertical\": {\n        enumerable: true,\n        get: function () {\n          return _vertical;\n        },\n        set: function (value) {\n          var setting = findDirectionSetting(value);\n          // Have to check for false because the setting an be an empty string.\n          if (setting === false) {\n            throw new SyntaxError(\"Vertical: an invalid or illegal direction string was specified.\");\n          }\n          _vertical = setting;\n          this.hasBeenReset = true;\n        }\n      },\n      \"snapToLines\": {\n        enumerable: true,\n        get: function () {\n          return _snapToLines;\n        },\n        set: function (value) {\n          _snapToLines = !!value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"line\": {\n        enumerable: true,\n        get: function () {\n          return _line;\n        },\n        set: function (value) {\n          if (typeof value !== \"number\" && value !== autoKeyword) {\n            throw new SyntaxError(\"Line: an invalid number or illegal string was specified.\");\n          }\n          _line = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"lineAlign\": {\n        enumerable: true,\n        get: function () {\n          return _lineAlign;\n        },\n        set: function (value) {\n          var setting = findAlignSetting(value);\n          if (!setting) {\n            console.warn(\"lineAlign: an invalid or illegal string was specified.\");\n          } else {\n            _lineAlign = setting;\n            this.hasBeenReset = true;\n          }\n        }\n      },\n      \"position\": {\n        enumerable: true,\n        get: function () {\n          return _position;\n        },\n        set: function (value) {\n          if (value < 0 || value > 100) {\n            throw new Error(\"Position must be between 0 and 100.\");\n          }\n          _position = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"positionAlign\": {\n        enumerable: true,\n        get: function () {\n          return _positionAlign;\n        },\n        set: function (value) {\n          var setting = findAlignSetting(value);\n          if (!setting) {\n            console.warn(\"positionAlign: an invalid or illegal string was specified.\");\n          } else {\n            _positionAlign = setting;\n            this.hasBeenReset = true;\n          }\n        }\n      },\n      \"size\": {\n        enumerable: true,\n        get: function () {\n          return _size;\n        },\n        set: function (value) {\n          if (value < 0 || value > 100) {\n            throw new Error(\"Size must be between 0 and 100.\");\n          }\n          _size = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"align\": {\n        enumerable: true,\n        get: function () {\n          return _align;\n        },\n        set: function (value) {\n          var setting = findAlignSetting(value);\n          if (!setting) {\n            throw new SyntaxError(\"align: an invalid or illegal alignment string was specified.\");\n          }\n          _align = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    });\n\n    /**\n     * Other <track> spec defined properties\n     */\n\n    // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n    this.displayState = undefined;\n  }\n\n  /**\n   * VTTCue methods\n   */\n\n  VTTCue.prototype.getCueAsHTML = function () {\n    // Assume WebVTT.convertCueToDOMTree is on the global.\n    return WebVTT.convertCueToDOMTree(window, this.text);\n  };\n  var vttcue = VTTCue;\n\n  /**\n   * Copyright 2013 vtt.js Contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  var scrollSetting = {\n    \"\": true,\n    \"up\": true\n  };\n  function findScrollSetting(value) {\n    if (typeof value !== \"string\") {\n      return false;\n    }\n    var scroll = scrollSetting[value.toLowerCase()];\n    return scroll ? value.toLowerCase() : false;\n  }\n  function isValidPercentValue(value) {\n    return typeof value === \"number\" && value >= 0 && value <= 100;\n  }\n\n  // VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\n  function VTTRegion() {\n    var _width = 100;\n    var _lines = 3;\n    var _regionAnchorX = 0;\n    var _regionAnchorY = 100;\n    var _viewportAnchorX = 0;\n    var _viewportAnchorY = 100;\n    var _scroll = \"\";\n    Object.defineProperties(this, {\n      \"width\": {\n        enumerable: true,\n        get: function () {\n          return _width;\n        },\n        set: function (value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"Width must be between 0 and 100.\");\n          }\n          _width = value;\n        }\n      },\n      \"lines\": {\n        enumerable: true,\n        get: function () {\n          return _lines;\n        },\n        set: function (value) {\n          if (typeof value !== \"number\") {\n            throw new TypeError(\"Lines must be set to a number.\");\n          }\n          _lines = value;\n        }\n      },\n      \"regionAnchorY\": {\n        enumerable: true,\n        get: function () {\n          return _regionAnchorY;\n        },\n        set: function (value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n          }\n          _regionAnchorY = value;\n        }\n      },\n      \"regionAnchorX\": {\n        enumerable: true,\n        get: function () {\n          return _regionAnchorX;\n        },\n        set: function (value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n          }\n          _regionAnchorX = value;\n        }\n      },\n      \"viewportAnchorY\": {\n        enumerable: true,\n        get: function () {\n          return _viewportAnchorY;\n        },\n        set: function (value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n          }\n          _viewportAnchorY = value;\n        }\n      },\n      \"viewportAnchorX\": {\n        enumerable: true,\n        get: function () {\n          return _viewportAnchorX;\n        },\n        set: function (value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n          }\n          _viewportAnchorX = value;\n        }\n      },\n      \"scroll\": {\n        enumerable: true,\n        get: function () {\n          return _scroll;\n        },\n        set: function (value) {\n          var setting = findScrollSetting(value);\n          // Have to check for false as an empty string is a legal value.\n          if (setting === false) {\n            console.warn(\"Scroll: an invalid or illegal string was specified.\");\n          } else {\n            _scroll = setting;\n          }\n        }\n      }\n    });\n  }\n  var vttregion = VTTRegion;\n\n  var browserIndex = createCommonjsModule(function (module) {\n    /**\n     * Copyright 2013 vtt.js Contributors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n\n    // Default exports for Node. Export the extended versions of VTTCue and\n    // VTTRegion in Node since we likely want the capability to convert back and\n    // forth between JSON. If we don't then it's not that big of a deal since we're\n    // off browser.\n\n    var vttjs = module.exports = {\n      WebVTT: vtt,\n      VTTCue: vttcue,\n      VTTRegion: vttregion\n    };\n    window_1.vttjs = vttjs;\n    window_1.WebVTT = vttjs.WebVTT;\n    var cueShim = vttjs.VTTCue;\n    var regionShim = vttjs.VTTRegion;\n    var nativeVTTCue = window_1.VTTCue;\n    var nativeVTTRegion = window_1.VTTRegion;\n    vttjs.shim = function () {\n      window_1.VTTCue = cueShim;\n      window_1.VTTRegion = regionShim;\n    };\n    vttjs.restore = function () {\n      window_1.VTTCue = nativeVTTCue;\n      window_1.VTTRegion = nativeVTTRegion;\n    };\n    if (!window_1.VTTCue) {\n      vttjs.shim();\n    }\n  });\n  browserIndex.WebVTT;\n  browserIndex.VTTCue;\n  browserIndex.VTTRegion;\n\n  /**\n   * @file tech.js\n   */\n\n  /** @import { TimeRange } from '../utils/time' */\n\n  /**\n   * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n   * that just contains the src url alone.\n   * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n     * `var SourceString = 'http://example.com/some-video.mp4';`\n   *\n   * @typedef {Object|string} SourceObject\n   *\n   * @property {string} src\n   *           The url to the source\n   *\n   * @property {string} type\n   *           The mime type of the source\n   */\n\n  /**\n   * A function used by {@link Tech} to create a new {@link TextTrack}.\n   *\n   * @private\n   *\n   * @param {Tech} self\n   *        An instance of the Tech class.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @param {Object} [options={}]\n   *        An object with additional text track options\n   *\n   * @return {TextTrack}\n   *          The text track that was created.\n   */\n  function createTrackHelper(self, kind, label, language, options = {}) {\n    const tracks = self.textTracks();\n    options.kind = kind;\n    if (label) {\n      options.label = label;\n    }\n    if (language) {\n      options.language = language;\n    }\n    options.tech = self;\n    const track = new ALL.text.TrackClass(options);\n    tracks.addTrack(track);\n    return track;\n  }\n\n  /**\n   * This is the base class for media playback technology controllers, such as\n   * {@link HTML5}\n   *\n   * @extends Component\n   */\n  class Tech extends Component$1 {\n    /**\n    * Create an instance of this Tech.\n    *\n    * @param {Object} [options]\n    *        The key/value store of player options.\n    *\n    * @param {Function} [ready]\n    *        Callback function to call when the `HTML5` Tech is ready.\n    */\n    constructor(options = {}, ready = function () {}) {\n      // we don't want the tech to report user activity automatically.\n      // This is done manually in addControlsListeners\n      options.reportTouchActivity = false;\n      super(null, options, ready);\n      this.onDurationChange_ = e => this.onDurationChange(e);\n      this.trackProgress_ = e => this.trackProgress(e);\n      this.trackCurrentTime_ = e => this.trackCurrentTime(e);\n      this.stopTrackingCurrentTime_ = e => this.stopTrackingCurrentTime(e);\n      this.disposeSourceHandler_ = e => this.disposeSourceHandler(e);\n      this.queuedHanders_ = new Set();\n\n      // keep track of whether the current source has played at all to\n      // implement a very limited played()\n      this.hasStarted_ = false;\n      this.on('playing', function () {\n        this.hasStarted_ = true;\n      });\n      this.on('loadstart', function () {\n        this.hasStarted_ = false;\n      });\n      ALL.names.forEach(name => {\n        const props = ALL[name];\n        if (options && options[props.getterName]) {\n          this[props.privateName] = options[props.getterName];\n        }\n      });\n\n      // Manually track progress in cases where the browser/tech doesn't report it.\n      if (!this.featuresProgressEvents) {\n        this.manualProgressOn();\n      }\n\n      // Manually track timeupdates in cases where the browser/tech doesn't report it.\n      if (!this.featuresTimeupdateEvents) {\n        this.manualTimeUpdatesOn();\n      }\n      ['Text', 'Audio', 'Video'].forEach(track => {\n        if (options[`native${track}Tracks`] === false) {\n          this[`featuresNative${track}Tracks`] = false;\n        }\n      });\n      if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n        this.featuresNativeTextTracks = false;\n      } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n        this.featuresNativeTextTracks = true;\n      }\n      if (!this.featuresNativeTextTracks) {\n        this.emulateTextTracks();\n      }\n      this.preloadTextTracks = options.preloadTextTracks !== false;\n      this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n      this.initTrackListeners();\n\n      // Turn on component tap events only if not using native controls\n      if (!options.nativeControlsForTouch) {\n        this.emitTapEvents();\n      }\n      if (this.constructor) {\n        this.name_ = this.constructor.name || 'Unknown Tech';\n      }\n    }\n\n    /**\n     * A special function to trigger source set in a way that will allow player\n     * to re-trigger if the player or tech are not ready yet.\n     *\n     * @fires Tech#sourceset\n     * @param {string} src The source string at the time of the source changing.\n     */\n    triggerSourceset(src) {\n      if (!this.isReady_) {\n        // on initial ready we have to trigger source set\n        // 1ms after ready so that player can watch for it.\n        this.one('ready', () => this.setTimeout(() => this.triggerSourceset(src), 1));\n      }\n\n      /**\n       * Fired when the source is set on the tech causing the media element\n       * to reload.\n       *\n       * @see {@link Player#event:sourceset}\n       * @event Tech#sourceset\n       * @type {Event}\n       */\n      this.trigger({\n        src,\n        type: 'sourceset'\n      });\n    }\n\n    /* Fallbacks for unsupported event types\n    ================================================================================ */\n\n    /**\n     * Polyfill the `progress` event for browsers that don't support it natively.\n     *\n     * @see {@link Tech#trackProgress}\n     */\n    manualProgressOn() {\n      this.on('durationchange', this.onDurationChange_);\n      this.manualProgress = true;\n\n      // Trigger progress watching when a source begins loading\n      this.one('ready', this.trackProgress_);\n    }\n\n    /**\n     * Turn off the polyfill for `progress` events that was created in\n     * {@link Tech#manualProgressOn}\n     */\n    manualProgressOff() {\n      this.manualProgress = false;\n      this.stopTrackingProgress();\n      this.off('durationchange', this.onDurationChange_);\n    }\n\n    /**\n     * This is used to trigger a `progress` event when the buffered percent changes. It\n     * sets an interval function that will be called every 500 milliseconds to check if the\n     * buffer end percent has changed.\n     *\n     * > This function is called by {@link Tech#manualProgressOn}\n     *\n     * @param {Event} event\n     *        The `ready` event that caused this to run.\n     *\n     * @listens Tech#ready\n     * @fires Tech#progress\n     */\n    trackProgress(event) {\n      this.stopTrackingProgress();\n      this.progressInterval = this.setInterval(bind_(this, function () {\n        // Don't trigger unless buffered amount is greater than last time\n\n        const numBufferedPercent = this.bufferedPercent();\n        if (this.bufferedPercent_ !== numBufferedPercent) {\n          /**\n           * See {@link Player#progress}\n           *\n           * @event Tech#progress\n           * @type {Event}\n           */\n          this.trigger('progress');\n        }\n        this.bufferedPercent_ = numBufferedPercent;\n        if (numBufferedPercent === 1) {\n          this.stopTrackingProgress();\n        }\n      }), 500);\n    }\n\n    /**\n     * Update our internal duration on a `durationchange` event by calling\n     * {@link Tech#duration}.\n     *\n     * @param {Event} event\n     *        The `durationchange` event that caused this to run.\n     *\n     * @listens Tech#durationchange\n     */\n    onDurationChange(event) {\n      this.duration_ = this.duration();\n    }\n\n    /**\n     * Get and create a `TimeRange` object for buffering.\n     *\n     * @return {TimeRange}\n     *         The time range object that was created.\n     */\n    buffered() {\n      return createTimeRanges$1(0, 0);\n    }\n\n    /**\n     * Get the percentage of the current video that is currently buffered.\n     *\n     * @return {number}\n     *         A number from 0 to 1 that represents the decimal percentage of the\n     *         video that is buffered.\n     *\n     */\n    bufferedPercent() {\n      return bufferedPercent(this.buffered(), this.duration_);\n    }\n\n    /**\n     * Turn off the polyfill for `progress` events that was created in\n     * {@link Tech#manualProgressOn}\n     * Stop manually tracking progress events by clearing the interval that was set in\n     * {@link Tech#trackProgress}.\n     */\n    stopTrackingProgress() {\n      this.clearInterval(this.progressInterval);\n    }\n\n    /**\n     * Polyfill the `timeupdate` event for browsers that don't support it.\n     *\n     * @see {@link Tech#trackCurrentTime}\n     */\n    manualTimeUpdatesOn() {\n      this.manualTimeUpdates = true;\n      this.on('play', this.trackCurrentTime_);\n      this.on('pause', this.stopTrackingCurrentTime_);\n    }\n\n    /**\n     * Turn off the polyfill for `timeupdate` events that was created in\n     * {@link Tech#manualTimeUpdatesOn}\n     */\n    manualTimeUpdatesOff() {\n      this.manualTimeUpdates = false;\n      this.stopTrackingCurrentTime();\n      this.off('play', this.trackCurrentTime_);\n      this.off('pause', this.stopTrackingCurrentTime_);\n    }\n\n    /**\n     * Sets up an interval function to track current time and trigger `timeupdate` every\n     * 250 milliseconds.\n     *\n     * @listens Tech#play\n     * @triggers Tech#timeupdate\n     */\n    trackCurrentTime() {\n      if (this.currentTimeInterval) {\n        this.stopTrackingCurrentTime();\n      }\n      this.currentTimeInterval = this.setInterval(function () {\n        /**\n         * Triggered at an interval of 250ms to indicated that time is passing in the video.\n         *\n         * @event Tech#timeupdate\n         * @type {Event}\n         */\n        this.trigger({\n          type: 'timeupdate',\n          target: this,\n          manuallyTriggered: true\n        });\n\n        // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n      }, 250);\n    }\n\n    /**\n     * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n     * `timeupdate` event is no longer triggered.\n     *\n     * @listens {Tech#pause}\n     */\n    stopTrackingCurrentTime() {\n      this.clearInterval(this.currentTimeInterval);\n\n      // #1002 - if the video ends right before the next timeupdate would happen,\n      // the progress bar won't make it all the way to the end\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n\n    /**\n     * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n     * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n     *\n     * @fires Component#dispose\n     */\n    dispose() {\n      // clear out all tracks because we can't reuse them between techs\n      this.clearTracks(NORMAL.names);\n\n      // Turn off any manual progress or timeupdate tracking\n      if (this.manualProgress) {\n        this.manualProgressOff();\n      }\n      if (this.manualTimeUpdates) {\n        this.manualTimeUpdatesOff();\n      }\n      super.dispose();\n    }\n\n    /**\n     * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n     *\n     * > Note: Techs without source handlers should call this between sources for `video`\n     *         & `audio` tracks. You don't want to use them between tracks!\n     *\n     * @param {string[]|string} types\n     *        TrackList names to clear, valid names are `video`, `audio`, and\n     *        `text`.\n     */\n    clearTracks(types) {\n      types = [].concat(types);\n      // clear out all tracks because we can't reuse them between techs\n      types.forEach(type => {\n        const list = this[`${type}Tracks`]() || [];\n        let i = list.length;\n        while (i--) {\n          const track = list[i];\n          if (type === 'text') {\n            this.removeRemoteTextTrack(track);\n          }\n          list.removeTrack(track);\n        }\n      });\n    }\n\n    /**\n     * Remove any TextTracks added via addRemoteTextTrack that are\n     * flagged for automatic garbage collection\n     */\n    cleanupAutoTextTracks() {\n      const list = this.autoRemoteTextTracks_ || [];\n      let i = list.length;\n      while (i--) {\n        const track = list[i];\n        this.removeRemoteTextTrack(track);\n      }\n    }\n\n    /**\n     * Reset the tech, which will removes all sources and reset the internal readyState.\n     *\n     * @abstract\n     */\n    reset() {}\n\n    /**\n     * Get the value of `crossOrigin` from the tech.\n     *\n     * @abstract\n     *\n     * @see {Html5#crossOrigin}\n     */\n    crossOrigin() {}\n\n    /**\n     * Set the value of `crossOrigin` on the tech.\n     *\n     * @abstract\n     *\n     * @param {string} crossOrigin the crossOrigin value\n     * @see {Html5#setCrossOrigin}\n     */\n    setCrossOrigin() {}\n\n    /**\n     * Get or set an error on the Tech.\n     *\n     * @param {MediaError} [err]\n     *        Error to set on the Tech\n     *\n     * @return {MediaError|null}\n     *         The current error object on the tech, or null if there isn't one.\n     */\n    error(err) {\n      if (err !== undefined) {\n        this.error_ = new MediaError(err);\n        this.trigger('error');\n      }\n      return this.error_;\n    }\n\n    /**\n     * Returns the `TimeRange`s that have been played through for the current source.\n     *\n     * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n     *         It only checks whether the source has played at all or not.\n     *\n     * @return {TimeRange}\n     *         - A single time range if this video has played\n     *         - An empty set of ranges if not.\n     */\n    played() {\n      if (this.hasStarted_) {\n        return createTimeRanges$1(0, 0);\n      }\n      return createTimeRanges$1();\n    }\n\n    /**\n     * Start playback\n     *\n     * @abstract\n     *\n     * @see {Html5#play}\n     */\n    play() {}\n\n    /**\n     * Set whether we are scrubbing or not\n     *\n     * @abstract\n     * @param {boolean} _isScrubbing\n     *                  - true for we are currently scrubbing\n     *                  - false for we are no longer scrubbing\n     *\n     * @see {Html5#setScrubbing}\n     */\n    setScrubbing(_isScrubbing) {}\n\n    /**\n     * Get whether we are scrubbing or not\n     *\n     * @abstract\n     *\n     * @see {Html5#scrubbing}\n     */\n    scrubbing() {}\n\n    /**\n     * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n     * previously called.\n     *\n     * @param {number} _seconds\n     *        Set the current time of the media to this.\n     * @fires Tech#timeupdate\n     */\n    setCurrentTime(_seconds) {\n      // improve the accuracy of manual timeupdates\n      if (this.manualTimeUpdates) {\n        /**\n         * A manual `timeupdate` event.\n         *\n         * @event Tech#timeupdate\n         * @type {Event}\n         */\n        this.trigger({\n          type: 'timeupdate',\n          target: this,\n          manuallyTriggered: true\n        });\n      }\n    }\n\n    /**\n     * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n     * {@link TextTrackList} events.\n     *\n     * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n     *\n     * @fires Tech#audiotrackchange\n     * @fires Tech#videotrackchange\n     * @fires Tech#texttrackchange\n     */\n    initTrackListeners() {\n      /**\n        * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n        *\n        * @event Tech#audiotrackchange\n        * @type {Event}\n        */\n\n      /**\n        * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n        *\n        * @event Tech#videotrackchange\n        * @type {Event}\n        */\n\n      /**\n        * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n        *\n        * @event Tech#texttrackchange\n        * @type {Event}\n        */\n      NORMAL.names.forEach(name => {\n        const props = NORMAL[name];\n        const trackListChanges = () => {\n          this.trigger(`${name}trackchange`);\n        };\n        const tracks = this[props.getterName]();\n        tracks.addEventListener('removetrack', trackListChanges);\n        tracks.addEventListener('addtrack', trackListChanges);\n        this.on('dispose', () => {\n          tracks.removeEventListener('removetrack', trackListChanges);\n          tracks.removeEventListener('addtrack', trackListChanges);\n        });\n      });\n    }\n\n    /**\n     * Emulate TextTracks using vtt.js if necessary\n     *\n     * @fires Tech#vttjsloaded\n     * @fires Tech#vttjserror\n     */\n    addWebVttScript_() {\n      if (window.WebVTT) {\n        return;\n      }\n\n      // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n      // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n      // before inserting the WebVTT script\n      if (document.body.contains(this.el())) {\n        // load via require if available and vtt.js script location was not passed in\n        // as an option. novtt builds will turn the above require call into an empty object\n        // which will cause this if check to always fail.\n        if (!this.options_['vtt.js'] && isPlain(browserIndex) && Object.keys(browserIndex).length > 0) {\n          this.trigger('vttjsloaded');\n          return;\n        }\n\n        // load vtt.js via the script location option or the cdn of no location was\n        // passed in\n        const script = document.createElement('script');\n        script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n        script.onload = () => {\n          /**\n           * Fired when vtt.js is loaded.\n           *\n           * @event Tech#vttjsloaded\n           * @type {Event}\n           */\n          this.trigger('vttjsloaded');\n        };\n        script.onerror = () => {\n          /**\n           * Fired when vtt.js was not loaded due to an error\n           *\n           * @event Tech#vttjsloaded\n           * @type {Event}\n           */\n          this.trigger('vttjserror');\n        };\n        this.on('dispose', () => {\n          script.onload = null;\n          script.onerror = null;\n        });\n        // but have not loaded yet and we set it to true before the inject so that\n        // we don't overwrite the injected window.WebVTT if it loads right away\n        window.WebVTT = true;\n        this.el().parentNode.appendChild(script);\n      } else {\n        this.ready(this.addWebVttScript_);\n      }\n    }\n\n    /**\n     * Emulate texttracks\n     *\n     */\n    emulateTextTracks() {\n      const tracks = this.textTracks();\n      const remoteTracks = this.remoteTextTracks();\n      const handleAddTrack = e => tracks.addTrack(e.track);\n      const handleRemoveTrack = e => tracks.removeTrack(e.track);\n      remoteTracks.on('addtrack', handleAddTrack);\n      remoteTracks.on('removetrack', handleRemoveTrack);\n      this.addWebVttScript_();\n      const updateDisplay = () => this.trigger('texttrackchange');\n      const textTracksChanges = () => {\n        updateDisplay();\n        for (let i = 0; i < tracks.length; i++) {\n          const track = tracks[i];\n          track.removeEventListener('cuechange', updateDisplay);\n          if (track.mode === 'showing') {\n            track.addEventListener('cuechange', updateDisplay);\n          }\n        }\n      };\n      textTracksChanges();\n      tracks.addEventListener('change', textTracksChanges);\n      tracks.addEventListener('addtrack', textTracksChanges);\n      tracks.addEventListener('removetrack', textTracksChanges);\n      this.on('dispose', function () {\n        remoteTracks.off('addtrack', handleAddTrack);\n        remoteTracks.off('removetrack', handleRemoveTrack);\n        tracks.removeEventListener('change', textTracksChanges);\n        tracks.removeEventListener('addtrack', textTracksChanges);\n        tracks.removeEventListener('removetrack', textTracksChanges);\n        for (let i = 0; i < tracks.length; i++) {\n          const track = tracks[i];\n          track.removeEventListener('cuechange', updateDisplay);\n        }\n      });\n    }\n\n    /**\n     * Create and returns a remote {@link TextTrack} object.\n     *\n     * @param {string} kind\n     *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n     *\n     * @param {string} [label]\n     *        Label to identify the text track\n     *\n     * @param {string} [language]\n     *        Two letter language abbreviation\n     *\n     * @return {TextTrack}\n     *         The TextTrack that gets created.\n     */\n    addTextTrack(kind, label, language) {\n      if (!kind) {\n        throw new Error('TextTrack kind is required but was not provided');\n      }\n      return createTrackHelper(this, kind, label, language);\n    }\n\n    /**\n     * Create an emulated TextTrack for use by addRemoteTextTrack\n     *\n     * This is intended to be overridden by classes that inherit from\n     * Tech in order to create native or custom TextTracks.\n     *\n     * @param {Object} options\n     *        The object should contain the options to initialize the TextTrack with.\n     *\n     * @param {string} [options.kind]\n     *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n     *\n     * @param {string} [options.label].\n     *        Label to identify the text track\n     *\n     * @param {string} [options.language]\n     *        Two letter language abbreviation.\n     *\n     * @return {HTMLTrackElement}\n     *         The track element that gets created.\n     */\n    createRemoteTextTrack(options) {\n      const track = merge$2(options, {\n        tech: this\n      });\n      return new REMOTE.remoteTextEl.TrackClass(track);\n    }\n\n    /**\n     * Creates a remote text track object and returns an html track element.\n     *\n     * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n     *\n     * @param {Object} options\n     *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n     *\n     * @param {boolean} [manualCleanup=false]\n     *        - When false: the TextTrack will be automatically removed from the video\n     *          element whenever the source changes\n     *        - When True: The TextTrack will have to be cleaned up manually\n     *\n     * @return {HTMLTrackElement}\n     *         An Html Track Element.\n     *\n     */\n    addRemoteTextTrack(options = {}, manualCleanup) {\n      const htmlTrackElement = this.createRemoteTextTrack(options);\n      if (typeof manualCleanup !== 'boolean') {\n        manualCleanup = false;\n      }\n\n      // store HTMLTrackElement and TextTrack to remote list\n      this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n      this.remoteTextTracks().addTrack(htmlTrackElement.track);\n      if (manualCleanup === false) {\n        // create the TextTrackList if it doesn't exist\n        this.ready(() => this.autoRemoteTextTracks_.addTrack(htmlTrackElement.track));\n      }\n      return htmlTrackElement;\n    }\n\n    /**\n     * Remove a remote text track from the remote `TextTrackList`.\n     *\n     * @param {TextTrack} track\n     *        `TextTrack` to remove from the `TextTrackList`\n     */\n    removeRemoteTextTrack(track) {\n      const trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n      // remove HTMLTrackElement and TextTrack from remote list\n      this.remoteTextTrackEls().removeTrackElement_(trackElement);\n      this.remoteTextTracks().removeTrack(track);\n      this.autoRemoteTextTracks_.removeTrack(track);\n    }\n\n    /**\n     * Gets available media playback quality metrics as specified by the W3C's Media\n     * Playback Quality API.\n     *\n     * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n     *\n     * @return {Object}\n     *         An object with supported media playback quality metrics\n     *\n     * @abstract\n     */\n    getVideoPlaybackQuality() {\n      return {};\n    }\n\n    /**\n     * Attempt to create a floating video window always on top of other windows\n     * so that users may continue consuming media while they interact with other\n     * content sites, or applications on their device.\n     *\n     * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n     *\n     * @return {Promise|undefined}\n     *         A promise with a Picture-in-Picture window if the browser supports\n     *         Promises (or one was passed in as an option). It returns undefined\n     *         otherwise.\n     *\n     * @abstract\n     */\n    requestPictureInPicture() {\n      return Promise.reject();\n    }\n\n    /**\n     * A method to check for the value of the 'disablePictureInPicture' <video> property.\n     * Defaults to true, as it should be considered disabled if the tech does not support pip\n     *\n     * @abstract\n     */\n    disablePictureInPicture() {\n      return true;\n    }\n\n    /**\n     * A method to set or unset the 'disablePictureInPicture' <video> property.\n     *\n     * @abstract\n     */\n    setDisablePictureInPicture() {}\n\n    /**\n     * A fallback implementation of requestVideoFrameCallback using requestAnimationFrame\n     *\n     * @param {function} cb\n     * @return {number} request id\n     */\n    requestVideoFrameCallback(cb) {\n      const id = newGUID();\n      if (!this.isReady_ || this.paused()) {\n        this.queuedHanders_.add(id);\n        this.one('playing', () => {\n          if (this.queuedHanders_.has(id)) {\n            this.queuedHanders_.delete(id);\n            cb();\n          }\n        });\n      } else {\n        this.requestNamedAnimationFrame(id, cb);\n      }\n      return id;\n    }\n\n    /**\n     * A fallback implementation of cancelVideoFrameCallback\n     *\n     * @param {number} id id of callback to be cancelled\n     */\n    cancelVideoFrameCallback(id) {\n      if (this.queuedHanders_.has(id)) {\n        this.queuedHanders_.delete(id);\n      } else {\n        this.cancelNamedAnimationFrame(id);\n      }\n    }\n\n    /**\n     * A method to set a poster from a `Tech`.\n     *\n     * @abstract\n     */\n    setPoster() {}\n\n    /**\n     * A method to check for the presence of the 'playsinline' <video> attribute.\n     *\n     * @abstract\n     */\n    playsinline() {}\n\n    /**\n     * A method to set or unset the 'playsinline' <video> attribute.\n     *\n     * @abstract\n     */\n    setPlaysinline() {}\n\n    /**\n     * Attempt to force override of native audio tracks.\n     *\n     * @param {boolean} override - If set to true native audio will be overridden,\n     * otherwise native audio will potentially be used.\n     *\n     * @abstract\n     */\n    overrideNativeAudioTracks(override) {}\n\n    /**\n     * Attempt to force override of native video tracks.\n     *\n     * @param {boolean} override - If set to true native video will be overridden,\n     * otherwise native video will potentially be used.\n     *\n     * @abstract\n     */\n    overrideNativeVideoTracks(override) {}\n\n    /**\n     * Check if the tech can support the given mime-type.\n     *\n     * The base tech does not support any type, but source handlers might\n     * overwrite this.\n     *\n     * @param  {string} _type\n     *         The mimetype to check for support\n     *\n     * @return {string}\n     *         'probably', 'maybe', or empty string\n     *\n     * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n     *\n     * @abstract\n     */\n    canPlayType(_type) {\n      return '';\n    }\n\n    /**\n     * Check if the type is supported by this tech.\n     *\n     * The base tech does not support any type, but source handlers might\n     * overwrite this.\n     *\n     * @param {string} _type\n     *        The media type to check\n     * @return {string} Returns the native video element's response\n     */\n    static canPlayType(_type) {\n      return '';\n    }\n\n    /**\n     * Check if the tech can support the given source\n     *\n     * @param {Object} srcObj\n     *        The source object\n     * @param {Object} options\n     *        The options passed to the tech\n     * @return {string} 'probably', 'maybe', or '' (empty string)\n     */\n    static canPlaySource(srcObj, options) {\n      return Tech.canPlayType(srcObj.type);\n    }\n\n    /*\n     * Return whether the argument is a Tech or not.\n     * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n     *\n     * @param {Object} component\n     *        The item to check\n     *\n     * @return {boolean}\n     *         Whether it is a tech or not\n     *         - True if it is a tech\n     *         - False if it is not\n     */\n    static isTech(component) {\n      return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n    }\n\n    /**\n     * Registers a `Tech` into a shared list for videojs.\n     *\n     * @param {string} name\n     *        Name of the `Tech` to register.\n     *\n     * @param {Object} tech\n     *        The `Tech` class to register.\n     */\n    static registerTech(name, tech) {\n      if (!Tech.techs_) {\n        Tech.techs_ = {};\n      }\n      if (!Tech.isTech(tech)) {\n        throw new Error(`Tech ${name} must be a Tech`);\n      }\n      if (!Tech.canPlayType) {\n        throw new Error('Techs must have a static canPlayType method on them');\n      }\n      if (!Tech.canPlaySource) {\n        throw new Error('Techs must have a static canPlaySource method on them');\n      }\n      name = toTitleCase$1(name);\n      Tech.techs_[name] = tech;\n      Tech.techs_[toLowerCase(name)] = tech;\n      if (name !== 'Tech') {\n        // camel case the techName for use in techOrder\n        Tech.defaultTechOrder_.push(name);\n      }\n      return tech;\n    }\n\n    /**\n     * Get a `Tech` from the shared list by name.\n     *\n     * @param {string} name\n     *        `camelCase` or `TitleCase` name of the Tech to get\n     *\n     * @return {Tech|undefined}\n     *         The `Tech` or undefined if there was no tech with the name requested.\n     */\n    static getTech(name) {\n      if (!name) {\n        return;\n      }\n      if (Tech.techs_ && Tech.techs_[name]) {\n        return Tech.techs_[name];\n      }\n      name = toTitleCase$1(name);\n      if (window && window.videojs && window.videojs[name]) {\n        log$1.warn(`The ${name} tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)`);\n        return window.videojs[name];\n      }\n    }\n  }\n\n  /**\n   * Get the {@link VideoTrackList}\n   *\n   * @returns {VideoTrackList}\n   * @method Tech.prototype.videoTracks\n   */\n\n  /**\n   * Get the {@link AudioTrackList}\n   *\n   * @returns {AudioTrackList}\n   * @method Tech.prototype.audioTracks\n   */\n\n  /**\n   * Get the {@link TextTrackList}\n   *\n   * @returns {TextTrackList}\n   * @method Tech.prototype.textTracks\n   */\n\n  /**\n   * Get the remote element {@link TextTrackList}\n   *\n   * @returns {TextTrackList}\n   * @method Tech.prototype.remoteTextTracks\n   */\n\n  /**\n   * Get the remote element {@link HtmlTrackElementList}\n   *\n   * @returns {HtmlTrackElementList}\n   * @method Tech.prototype.remoteTextTrackEls\n   */\n\n  ALL.names.forEach(function (name) {\n    const props = ALL[name];\n    Tech.prototype[props.getterName] = function () {\n      this[props.privateName] = this[props.privateName] || new props.ListClass();\n      return this[props.privateName];\n    };\n  });\n\n  /**\n   * List of associated text tracks\n   *\n   * @type {TextTrackList}\n   * @private\n   * @property Tech#textTracks_\n   */\n\n  /**\n   * List of associated audio tracks.\n   *\n   * @type {AudioTrackList}\n   * @private\n   * @property Tech#audioTracks_\n   */\n\n  /**\n   * List of associated video tracks.\n   *\n   * @type {VideoTrackList}\n   * @private\n   * @property Tech#videoTracks_\n   */\n\n  /**\n   * Boolean indicating whether the `Tech` supports volume control.\n   *\n   * @type {boolean}\n   * @default\n   */\n  Tech.prototype.featuresVolumeControl = true;\n\n  /**\n   * Boolean indicating whether the `Tech` supports muting volume.\n   *\n   * @type {boolean}\n   * @default\n   */\n  Tech.prototype.featuresMuteControl = true;\n\n  /**\n   * Boolean indicating whether the `Tech` supports fullscreen resize control.\n   * Resizing plugins using request fullscreen reloads the plugin\n   *\n   * @type {boolean}\n   * @default\n   */\n  Tech.prototype.featuresFullscreenResize = false;\n\n  /**\n   * Boolean indicating whether the `Tech` supports changing the speed at which the video\n   * plays. Examples:\n   *   - Set player to play 2x (twice) as fast\n   *   - Set player to play 0.5x (half) as fast\n   *\n   * @type {boolean}\n   * @default\n   */\n  Tech.prototype.featuresPlaybackRate = false;\n\n  /**\n   * Boolean indicating whether the `Tech` supports the `progress` event.\n   * This will be used to determine if {@link Tech#manualProgressOn} should be called.\n   *\n   * @type {boolean}\n   * @default\n   */\n  Tech.prototype.featuresProgressEvents = false;\n\n  /**\n   * Boolean indicating whether the `Tech` supports the `sourceset` event.\n   *\n   * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n   * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n   * a new source.\n   *\n   * @type {boolean}\n   * @default\n   */\n  Tech.prototype.featuresSourceset = false;\n\n  /**\n   * Boolean indicating whether the `Tech` supports the `timeupdate` event.\n   * This will be used to determine if {@link Tech#manualTimeUpdates} should be called.\n   *\n   * @type {boolean}\n   * @default\n   */\n  Tech.prototype.featuresTimeupdateEvents = false;\n\n  /**\n   * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n   * This will help us integrate with native `TextTrack`s if the browser supports them.\n   *\n   * @type {boolean}\n   * @default\n   */\n  Tech.prototype.featuresNativeTextTracks = false;\n\n  /**\n   * Boolean indicating whether the `Tech` supports `requestVideoFrameCallback`.\n   *\n   * @type {boolean}\n   * @default\n   */\n  Tech.prototype.featuresVideoFrameCallback = false;\n\n  /**\n   * A functional mixin for techs that want to use the Source Handler pattern.\n   * Source handlers are scripts for handling specific formats.\n   * The source handler pattern is used for adaptive formats (HLS, DASH) that\n   * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n   * Example: `Tech.withSourceHandlers.call(MyTech);`\n   *\n   * @param {Tech} _Tech\n   *        The tech to add source handler functions to.\n   *\n   * @mixes Tech~SourceHandlerAdditions\n   */\n  Tech.withSourceHandlers = function (_Tech) {\n    /**\n     * Register a source handler\n     *\n     * @param {Function} handler\n     *        The source handler class\n     *\n     * @param {number} [index]\n     *        Register it at the following index\n     */\n    _Tech.registerSourceHandler = function (handler, index) {\n      let handlers = _Tech.sourceHandlers;\n      if (!handlers) {\n        handlers = _Tech.sourceHandlers = [];\n      }\n      if (index === undefined) {\n        // add to the end of the list\n        index = handlers.length;\n      }\n      handlers.splice(index, 0, handler);\n    };\n\n    /**\n     * Check if the tech can support the given type. Also checks the\n     * Techs sourceHandlers.\n     *\n     * @param {string} type\n     *         The mimetype to check.\n     *\n     * @return {string}\n     *         'probably', 'maybe', or '' (empty string)\n     */\n    _Tech.canPlayType = function (type) {\n      const handlers = _Tech.sourceHandlers || [];\n      let can;\n      for (let i = 0; i < handlers.length; i++) {\n        can = handlers[i].canPlayType(type);\n        if (can) {\n          return can;\n        }\n      }\n      return '';\n    };\n\n    /**\n     * Returns the first source handler that supports the source.\n     *\n     * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n     *\n     * @param {SourceObject} source\n     *        The source object\n     *\n     * @param {Object} options\n     *        The options passed to the tech\n     *\n     * @return {SourceHandler|null}\n     *          The first source handler that supports the source or null if\n     *          no SourceHandler supports the source\n     */\n    _Tech.selectSourceHandler = function (source, options) {\n      const handlers = _Tech.sourceHandlers || [];\n      let can;\n      for (let i = 0; i < handlers.length; i++) {\n        can = handlers[i].canHandleSource(source, options);\n        if (can) {\n          return handlers[i];\n        }\n      }\n      return null;\n    };\n\n    /**\n     * Check if the tech can support the given source.\n     *\n     * @param {SourceObject} srcObj\n     *        The source object\n     *\n     * @param {Object} options\n     *        The options passed to the tech\n     *\n     * @return {string}\n     *         'probably', 'maybe', or '' (empty string)\n     */\n    _Tech.canPlaySource = function (srcObj, options) {\n      const sh = _Tech.selectSourceHandler(srcObj, options);\n      if (sh) {\n        return sh.canHandleSource(srcObj, options);\n      }\n      return '';\n    };\n\n    /**\n     * When using a source handler, prefer its implementation of\n     * any function normally provided by the tech.\n     */\n    const deferrable = ['seekable', 'seeking', 'duration'];\n\n    /**\n     * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n     * function if it exists, with a fallback to the Techs seekable function.\n     *\n     * @method _Tech.seekable\n     */\n\n    /**\n     * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n     * function if it exists, otherwise it will fallback to the techs duration function.\n     *\n     * @method _Tech.duration\n     */\n\n    deferrable.forEach(function (fnName) {\n      const originalFn = this[fnName];\n      if (typeof originalFn !== 'function') {\n        return;\n      }\n      this[fnName] = function () {\n        if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n          return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n        }\n        return originalFn.apply(this, arguments);\n      };\n    }, _Tech.prototype);\n\n    /**\n     * Create a function for setting the source using a source object\n     * and source handlers.\n     * Should never be called unless a source handler was found.\n     *\n     * @param {SourceObject} source\n     *        A source object with src and type keys\n     */\n    _Tech.prototype.setSource = function (source) {\n      let sh = _Tech.selectSourceHandler(source, this.options_);\n      if (!sh) {\n        // Fall back to a native source handler when unsupported sources are\n        // deliberately set\n        if (_Tech.nativeSourceHandler) {\n          sh = _Tech.nativeSourceHandler;\n        } else {\n          log$1.error('No source handler found for the current source.');\n        }\n      }\n\n      // Dispose any existing source handler\n      this.disposeSourceHandler();\n      this.off('dispose', this.disposeSourceHandler_);\n      if (sh !== _Tech.nativeSourceHandler) {\n        this.currentSource_ = source;\n      }\n      this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n      this.one('dispose', this.disposeSourceHandler_);\n    };\n\n    /**\n     * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n     *\n     * @listens Tech#dispose\n     */\n    _Tech.prototype.disposeSourceHandler = function () {\n      // if we have a source and get another one\n      // then we are loading something new\n      // than clear all of our current tracks\n      if (this.currentSource_) {\n        this.clearTracks(['audio', 'video']);\n        this.currentSource_ = null;\n      }\n\n      // always clean up auto-text tracks\n      this.cleanupAutoTextTracks();\n      if (this.sourceHandler_) {\n        if (this.sourceHandler_.dispose) {\n          this.sourceHandler_.dispose();\n        }\n        this.sourceHandler_ = null;\n      }\n    };\n  };\n\n  // The base Tech class needs to be registered as a Component. It is the only\n  // Tech that can be registered as a Component.\n  Component$1.registerComponent('Tech', Tech);\n  Tech.registerTech('Tech', Tech);\n\n  /**\n   * A list of techs that should be added to techOrder on Players\n   *\n   * @private\n   */\n  Tech.defaultTechOrder_ = [];\n\n  /**\n   * @file middleware.js\n   * @module middleware\n   */\n\n  /** @import Player from '../player' */\n  /** @import Tech from '../tech/tech' */\n\n  const middlewares = {};\n  const middlewareInstances = {};\n  const TERMINATOR = {};\n\n  /**\n   * A middleware object is a plain JavaScript object that has methods that\n   * match the {@link Tech} methods found in the lists of allowed\n   * {@link module:middleware.allowedGetters|getters},\n   * {@link module:middleware.allowedSetters|setters}, and\n   * {@link module:middleware.allowedMediators|mediators}.\n   *\n   * @typedef {Object} MiddlewareObject\n   */\n\n  /**\n   * A middleware factory function that should return a\n   * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n   *\n   * This factory will be called for each player when needed, with the player\n   * passed in as an argument.\n   *\n   * @callback MiddlewareFactory\n   * @param {Player} player\n   *        A Video.js player.\n   */\n\n  /**\n   * Define a middleware that the player should use by way of a factory function\n   * that returns a middleware object.\n   *\n   * @param  {string} type\n   *         The MIME type to match or `\"*\"` for all MIME types.\n   *\n   * @param  {MiddlewareFactory} middleware\n   *         A middleware factory function that will be executed for\n   *         matching types.\n   */\n  function use(type, middleware) {\n    middlewares[type] = middlewares[type] || [];\n    middlewares[type].push(middleware);\n  }\n\n  /**\n   * Asynchronously sets a source using middleware by recursing through any\n   * matching middlewares and calling `setSource` on each, passing along the\n   * previous returned value each time.\n   *\n   * @param  {Player} player\n   *         A {@link Player} instance.\n   *\n   * @param  {Tech~SourceObject} src\n   *         A source object.\n   *\n   * @param  {Function}\n   *         The next middleware to run.\n   */\n  function setSource(player, src, next) {\n    player.setTimeout(() => setSourceHelper(src, middlewares[src.type], next, player), 1);\n  }\n\n  /**\n   * When the tech is set, passes the tech to each middleware's `setTech` method.\n   *\n   * @param {Object[]} middleware\n   *        An array of middleware instances.\n   *\n   * @param {Tech} tech\n   *        A Video.js tech.\n   */\n  function setTech(middleware, tech) {\n    middleware.forEach(mw => mw.setTech && mw.setTech(tech));\n  }\n\n  /**\n   * Calls a getter on the tech first, through each middleware\n   * from right to left to the player.\n   *\n   * @param  {Object[]} middleware\n   *         An array of middleware instances.\n   *\n   * @param  {Tech} tech\n   *         The current tech.\n   *\n   * @param  {string} method\n   *         A method name.\n   *\n   * @return {*}\n   *         The final value from the tech after middleware has intercepted it.\n   */\n  function get(middleware, tech, method) {\n    return middleware.reduceRight(middlewareIterator(method), tech[method]());\n  }\n\n  /**\n   * Takes the argument given to the player and calls the setter method on each\n   * middleware from left to right to the tech.\n   *\n   * @param  {Object[]} middleware\n   *         An array of middleware instances.\n   *\n   * @param  {Tech} tech\n   *         The current tech.\n   *\n   * @param  {string} method\n   *         A method name.\n   *\n   * @param  {*} arg\n   *         The value to set on the tech.\n   *\n   * @return {*}\n   *         The return value of the `method` of the `tech`.\n   */\n  function set(middleware, tech, method, arg) {\n    return tech[method](middleware.reduce(middlewareIterator(method), arg));\n  }\n\n  /**\n   * Takes the argument given to the player and calls the `call` version of the\n   * method on each middleware from left to right.\n   *\n   * Then, call the passed in method on the tech and return the result unchanged\n   * back to the player, through middleware, this time from right to left.\n   *\n   * @param  {Object[]} middleware\n   *         An array of middleware instances.\n   *\n   * @param  {Tech} tech\n   *         The current tech.\n   *\n   * @param  {string} method\n   *         A method name.\n   *\n   * @param  {*} arg\n   *         The value to set on the tech.\n   *\n   * @return {*}\n   *         The return value of the `method` of the `tech`, regardless of the\n   *         return values of middlewares.\n   */\n  function mediate(middleware, tech, method, arg = null) {\n    const callMethod = 'call' + toTitleCase$1(method);\n    const middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n    const terminated = middlewareValue === TERMINATOR;\n    // deprecated. The `null` return value should instead return TERMINATOR to\n    // prevent confusion if a techs method actually returns null.\n    const returnValue = terminated ? null : tech[method](middlewareValue);\n    executeRight(middleware, method, returnValue, terminated);\n    return returnValue;\n  }\n\n  /**\n   * Enumeration of allowed getters where the keys are method names.\n   *\n   * @type {Object}\n   */\n  const allowedGetters = {\n    buffered: 1,\n    currentTime: 1,\n    duration: 1,\n    muted: 1,\n    played: 1,\n    paused: 1,\n    seekable: 1,\n    volume: 1,\n    ended: 1\n  };\n\n  /**\n   * Enumeration of allowed setters where the keys are method names.\n   *\n   * @type {Object}\n   */\n  const allowedSetters = {\n    setCurrentTime: 1,\n    setMuted: 1,\n    setVolume: 1\n  };\n\n  /**\n   * Enumeration of allowed mediators where the keys are method names.\n   *\n   * @type {Object}\n   */\n  const allowedMediators = {\n    play: 1,\n    pause: 1\n  };\n  function middlewareIterator(method) {\n    return (value, mw) => {\n      // if the previous middleware terminated, pass along the termination\n      if (value === TERMINATOR) {\n        return TERMINATOR;\n      }\n      if (mw[method]) {\n        return mw[method](value);\n      }\n      return value;\n    };\n  }\n  function executeRight(mws, method, value, terminated) {\n    for (let i = mws.length - 1; i >= 0; i--) {\n      const mw = mws[i];\n      if (mw[method]) {\n        mw[method](terminated, value);\n      }\n    }\n  }\n\n  /**\n   * Clear the middleware cache for a player.\n   *\n   * @param  {Player} player\n   *         A {@link Player} instance.\n   */\n  function clearCacheForPlayer(player) {\n    if (middlewareInstances.hasOwnProperty(player.id())) {\n      delete middlewareInstances[player.id()];\n    }\n  }\n\n  /**\n   * {\n   *  [playerId]: [[mwFactory, mwInstance], ...]\n   * }\n   *\n   * @private\n   */\n  function getOrCreateFactory(player, mwFactory) {\n    const mws = middlewareInstances[player.id()];\n    let mw = null;\n    if (mws === undefined || mws === null) {\n      mw = mwFactory(player);\n      middlewareInstances[player.id()] = [[mwFactory, mw]];\n      return mw;\n    }\n    for (let i = 0; i < mws.length; i++) {\n      const [mwf, mwi] = mws[i];\n      if (mwf !== mwFactory) {\n        continue;\n      }\n      mw = mwi;\n    }\n    if (mw === null) {\n      mw = mwFactory(player);\n      mws.push([mwFactory, mw]);\n    }\n    return mw;\n  }\n  function setSourceHelper(src = {}, middleware = [], next, player, acc = [], lastRun = false) {\n    const [mwFactory, ...mwrest] = middleware;\n\n    // if mwFactory is a string, then we're at a fork in the road\n    if (typeof mwFactory === 'string') {\n      setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n      // if we have an mwFactory, call it with the player to get the mw,\n      // then call the mw's setSource method\n    } else if (mwFactory) {\n      const mw = getOrCreateFactory(player, mwFactory);\n\n      // if setSource isn't present, implicitly select this middleware\n      if (!mw.setSource) {\n        acc.push(mw);\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n      mw.setSource(Object.assign({}, src), function (err, _src) {\n        // something happened, try the next middleware on the current level\n        // make sure to use the old src\n        if (err) {\n          return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n        }\n\n        // we've succeeded, now we need to go deeper\n        acc.push(mw);\n\n        // if it's the same type, continue down the current chain\n        // otherwise, we want to go down the new chain\n        setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n      });\n    } else if (mwrest.length) {\n      setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    } else if (lastRun) {\n      next(src, acc);\n    } else {\n      setSourceHelper(src, middlewares['*'], next, player, acc, true);\n    }\n  }\n\n  /** @import Player from '../player' */\n\n  /**\n   * Mimetypes\n   *\n   * @see https://www.iana.org/assignments/media-types/media-types.xhtml\n   * @typedef Mimetypes~Kind\n   * @enum\n   */\n  const MimetypesKind = {\n    opus: 'video/ogg',\n    ogv: 'video/ogg',\n    mp4: 'video/mp4',\n    mov: 'video/mp4',\n    m4v: 'video/mp4',\n    mkv: 'video/x-matroska',\n    m4a: 'audio/mp4',\n    mp3: 'audio/mpeg',\n    aac: 'audio/aac',\n    caf: 'audio/x-caf',\n    flac: 'audio/flac',\n    oga: 'audio/ogg',\n    wav: 'audio/wav',\n    m3u8: 'application/x-mpegURL',\n    mpd: 'application/dash+xml',\n    jpg: 'image/jpeg',\n    jpeg: 'image/jpeg',\n    gif: 'image/gif',\n    png: 'image/png',\n    svg: 'image/svg+xml',\n    webp: 'image/webp'\n  };\n\n  /**\n   * Get the mimetype of a given src url if possible\n   *\n   * @param {string} src\n   *        The url to the src\n   *\n   * @return {string}\n   *         return the mimetype if it was known or empty string otherwise\n   */\n  const getMimetype = function (src = '') {\n    const ext = getFileExtension(src);\n    const mimetype = MimetypesKind[ext.toLowerCase()];\n    return mimetype || '';\n  };\n\n  /**\n   * Find the mime type of a given source string if possible. Uses the player\n   * source cache.\n   *\n   * @param {Player} player\n   *        The player object\n   *\n   * @param {string} src\n   *        The source string\n   *\n   * @return {string}\n   *         The type that was found\n   */\n  const findMimetype = (player, src) => {\n    if (!src) {\n      return '';\n    }\n\n    // 1. check for the type in the `source` cache\n    if (player.cache_.source.src === src && player.cache_.source.type) {\n      return player.cache_.source.type;\n    }\n\n    // 2. see if we have this source in our `currentSources` cache\n    const matchingSources = player.cache_.sources.filter(s => s.src === src);\n    if (matchingSources.length) {\n      return matchingSources[0].type;\n    }\n\n    // 3. look for the src url in source elements and use the type there\n    const sources = player.$$('source');\n    for (let i = 0; i < sources.length; i++) {\n      const s = sources[i];\n      if (s.type && s.src && s.src === src) {\n        return s.type;\n      }\n    }\n\n    // 4. finally fallback to our list of mime types based on src url extension\n    return getMimetype(src);\n  };\n\n  /**\n   * @module filter-source\n   */\n\n  /**\n   * Filter out single bad source objects or multiple source objects in an\n   * array. Also flattens nested source object arrays into a 1 dimensional\n   * array of source objects.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]} src\n   *        The src object to filter\n   *\n   * @return {Tech~SourceObject[]}\n   *         An array of sourceobjects containing only valid sources\n   *\n   * @private\n   */\n  const filterSource = function (src) {\n    // traverse array\n    if (Array.isArray(src)) {\n      let newsrc = [];\n      src.forEach(function (srcobj) {\n        srcobj = filterSource(srcobj);\n        if (Array.isArray(srcobj)) {\n          newsrc = newsrc.concat(srcobj);\n        } else if (isObject$1(srcobj)) {\n          newsrc.push(srcobj);\n        }\n      });\n      src = newsrc;\n    } else if (typeof src === 'string' && src.trim()) {\n      // convert string into object\n      src = [fixSource({\n        src\n      })];\n    } else if (isObject$1(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n      // src is already valid\n      src = [fixSource(src)];\n    } else {\n      // invalid source, turn it into an empty array\n      src = [];\n    }\n    return src;\n  };\n\n  /**\n   * Checks src mimetype, adding it when possible\n   *\n   * @param {Tech~SourceObject} src\n   *        The src object to check\n   * @return {Tech~SourceObject}\n   *        src Object with known type\n   */\n  function fixSource(src) {\n    if (!src.type) {\n      const mimetype = getMimetype(src.src);\n      if (mimetype) {\n        src.type = mimetype;\n      }\n    }\n    return src;\n  }\n\n  var icons = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n  <defs>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-play\\\">\\n      <path d=\\\"M16 10v28l22-14z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-pause\\\">\\n      <path d=\\\"M12 38h8V10h-8v28zm16-28v28h8V10h-8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-audio\\\">\\n      <path d=\\\"M24 2C14.06 2 6 10.06 6 20v14c0 3.31 2.69 6 6 6h6V24h-8v-4c0-7.73 6.27-14 14-14s14 6.27 14 14v4h-8v16h6c3.31 0 6-2.69 6-6V20c0-9.94-8.06-18-18-18z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-captions\\\">\\n      <path d=\\\"M38 8H10c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h28c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zM22 22h-3v-1h-4v6h4v-1h3v2a2 2 0 0 1-2 2h-6a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2zm14 0h-3v-1h-4v6h4v-1h3v2a2 2 0 0 1-2 2h-6a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-subtitles\\\">\\n      <path d=\\\"M40 8H8c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h32c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zM8 24h8v4H8v-4zm20 12H8v-4h20v4zm12 0h-8v-4h8v4zm0-8H20v-4h20v4z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-fullscreen-enter\\\">\\n      <path d=\\\"M14 28h-4v10h10v-4h-6v-6zm-4-8h4v-6h6v-4H10v10zm24 14h-6v4h10V28h-4v6zm-6-24v4h6v6h4V10H28z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-fullscreen-exit\\\">\\n      <path d=\\\"M10 32h6v6h4V28H10v4zm6-16h-6v4h10V10h-4v6zm12 22h4v-6h6v-4H28v10zm4-22v-6h-4v10h10v-4h-6z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-play-circle\\\">\\n      <path d=\\\"M20 33l12-9-12-9v18zm4-29C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-volume-mute\\\">\\n      <path d=\\\"M33 24c0-3.53-2.04-6.58-5-8.05v4.42l4.91 4.91c.06-.42.09-.85.09-1.28zm5 0c0 1.88-.41 3.65-1.08 5.28l3.03 3.03C41.25 29.82 42 27 42 24c0-8.56-5.99-15.72-14-17.54v4.13c5.78 1.72 10 7.07 10 13.41zM8.55 6L6 8.55 15.45 18H6v12h8l10 10V26.55l8.51 8.51c-1.34 1.03-2.85 1.86-4.51 2.36v4.13a17.94 17.94 0 0 0 7.37-3.62L39.45 42 42 39.45l-18-18L8.55 6zM24 8l-4.18 4.18L24 16.36V8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-volume-low\\\">\\n      <path d=\\\"M14 18v12h8l10 10V8L22 18h-8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-volume-medium\\\">\\n      <path d=\\\"M37 24c0-3.53-2.04-6.58-5-8.05v16.11c2.96-1.48 5-4.53 5-8.06zm-27-6v12h8l10 10V8L18 18h-8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-volume-high\\\">\\n      <path d=\\\"M6 18v12h8l10 10V8L14 18H6zm27 6c0-3.53-2.04-6.58-5-8.05v16.11c2.96-1.48 5-4.53 5-8.06zM28 6.46v4.13c5.78 1.72 10 7.07 10 13.41s-4.22 11.69-10 13.41v4.13c8.01-1.82 14-8.97 14-17.54S36.01 8.28 28 6.46z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-spinner\\\">\\n      <path d=\\\"M18.8 21l9.53-16.51C26.94 4.18 25.49 4 24 4c-4.8 0-9.19 1.69-12.64 4.51l7.33 12.69.11-.2zm24.28-3c-1.84-5.85-6.3-10.52-11.99-12.68L23.77 18h19.31zm.52 2H28.62l.58 1 9.53 16.5C41.99 33.94 44 29.21 44 24c0-1.37-.14-2.71-.4-4zm-26.53 4l-7.8-13.5C6.01 14.06 4 18.79 4 24c0 1.37.14 2.71.4 4h14.98l-2.31-4zM4.92 30c1.84 5.85 6.3 10.52 11.99 12.68L24.23 30H4.92zm22.54 0l-7.8 13.51c1.4.31 2.85.49 4.34.49 4.8 0 9.19-1.69 12.64-4.51L29.31 26.8 27.46 30z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 24 24\\\" id=\\\"vjs-icon-hd\\\">\\n      <path d=\\\"M19 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-8 12H9.5v-2h-2v2H6V9h1.5v2.5h2V9H11v6zm2-6h4c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1h-4V9zm1.5 4.5h2v-3h-2v3z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-chapters\\\">\\n      <path d=\\\"M6 26h4v-4H6v4zm0 8h4v-4H6v4zm0-16h4v-4H6v4zm8 8h28v-4H14v4zm0 8h28v-4H14v4zm0-20v4h28v-4H14z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 40 40\\\" id=\\\"vjs-icon-downloading\\\">\\n      <path d=\\\"M18.208 36.875q-3.208-.292-5.979-1.729-2.771-1.438-4.812-3.729-2.042-2.292-3.188-5.229-1.146-2.938-1.146-6.23 0-6.583 4.334-11.416 4.333-4.834 10.833-5.5v3.166q-5.167.75-8.583 4.646Q6.25 14.75 6.25 19.958q0 5.209 3.396 9.104 3.396 3.896 8.562 4.646zM20 28.417L11.542 20l2.083-2.083 4.917 4.916v-11.25h2.916v11.25l4.875-4.916L28.417 20zm1.792 8.458v-3.167q1.833-.25 3.541-.958 1.709-.708 3.167-1.875l2.333 2.292q-1.958 1.583-4.25 2.541-2.291.959-4.791 1.167zm6.791-27.792q-1.541-1.125-3.25-1.854-1.708-.729-3.541-1.021V3.042q2.5.25 4.77 1.208 2.271.958 4.271 2.5zm4.584 21.584l-2.25-2.25q1.166-1.5 1.854-3.209.687-1.708.937-3.541h3.209q-.292 2.5-1.229 4.791-.938 2.292-2.521 4.209zm.541-12.417q-.291-1.833-.958-3.562-.667-1.73-1.833-3.188l2.375-2.208q1.541 1.916 2.458 4.208.917 2.292 1.167 4.75z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-file-download\\\">\\n      <path d=\\\"M10.8 40.55q-1.35 0-2.375-1T7.4 37.15v-7.7h3.4v7.7h26.35v-7.7h3.4v7.7q0 1.4-1 2.4t-2.4 1zM24 32.1L13.9 22.05l2.45-2.45 5.95 5.95V7.15h3.4v18.4l5.95-5.95 2.45 2.45z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-file-download-done\\\">\\n      <path d=\\\"M9.8 40.5v-3.45h28.4v3.45zm9.2-9.05L7.4 19.85l2.45-2.35L19 26.65l19.2-19.2 2.4 2.4z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-file-download-off\\\">\\n      <path d=\\\"M4.9 4.75L43.25 43.1 41 45.3l-4.75-4.75q-.05.05-.075.025-.025-.025-.075-.025H10.8q-1.35 0-2.375-1T7.4 37.15v-7.7h3.4v7.7h22.05l-7-7-1.85 1.8L13.9 21.9l1.85-1.85L2.7 7zm26.75 14.7l2.45 2.45-3.75 3.8-2.45-2.5zM25.7 7.15V21.1l-3.4-3.45V7.15z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-share\\\">\\n      <path d=\\\"M36 32.17c-1.52 0-2.89.59-3.93 1.54L17.82 25.4c.11-.45.18-.92.18-1.4s-.07-.95-.18-1.4l14.1-8.23c1.07 1 2.5 1.62 4.08 1.62 3.31 0 6-2.69 6-6s-2.69-6-6-6-6 2.69-6 6c0 .48.07.95.18 1.4l-14.1 8.23c-1.07-1-2.5-1.62-4.08-1.62-3.31 0-6 2.69-6 6s2.69 6 6 6c1.58 0 3.01-.62 4.08-1.62l14.25 8.31c-.1.42-.16.86-.16 1.31A5.83 5.83 0 1 0 36 32.17z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-cog\\\">\\n      <path d=\\\"M38.86 25.95c.08-.64.14-1.29.14-1.95s-.06-1.31-.14-1.95l4.23-3.31c.38-.3.49-.84.24-1.28l-4-6.93c-.25-.43-.77-.61-1.22-.43l-4.98 2.01c-1.03-.79-2.16-1.46-3.38-1.97L29 4.84c-.09-.47-.5-.84-1-.84h-8c-.5 0-.91.37-.99.84l-.75 5.3a14.8 14.8 0 0 0-3.38 1.97L9.9 10.1a1 1 0 0 0-1.22.43l-4 6.93c-.25.43-.14.97.24 1.28l4.22 3.31C9.06 22.69 9 23.34 9 24s.06 1.31.14 1.95l-4.22 3.31c-.38.3-.49.84-.24 1.28l4 6.93c.25.43.77.61 1.22.43l4.98-2.01c1.03.79 2.16 1.46 3.38 1.97l.75 5.3c.08.47.49.84.99.84h8c.5 0 .91-.37.99-.84l.75-5.3a14.8 14.8 0 0 0 3.38-1.97l4.98 2.01a1 1 0 0 0 1.22-.43l4-6.93c.25-.43.14-.97-.24-1.28l-4.22-3.31zM24 31c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-square\\\">\\n      <path d=\\\"M36 8H12c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h24c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zm0 28H12V12h24v24z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-circle\\\">\\n      <circle cx=\\\"24\\\" cy=\\\"24\\\" r=\\\"20\\\"></circle>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-circle-outline\\\">\\n      <path d=\\\"M24 4C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-circle-inner-circle\\\">\\n      <path d=\\\"M24 4C12.97 4 4 12.97 4 24s8.97 20 20 20 20-8.97 20-20S35.03 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16zm6-16c0 3.31-2.69 6-6 6s-6-2.69-6-6 2.69-6 6-6 6 2.69 6 6z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-cancel\\\">\\n      <path d=\\\"M24 4C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm10 27.17L31.17 34 24 26.83 16.83 34 14 31.17 21.17 24 14 16.83 16.83 14 24 21.17 31.17 14 34 16.83 26.83 24 34 31.17z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-replay\\\">\\n      <path d=\\\"M24 10V2L14 12l10 10v-8c6.63 0 12 5.37 12 12s-5.37 12-12 12-12-5.37-12-12H8c0 8.84 7.16 16 16 16s16-7.16 16-16-7.16-16-16-16z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-repeat\\\">\\n      <path d=\\\"M14 14h20v6l8-8-8-8v6H10v12h4v-8zm20 20H14v-6l-8 8 8 8v-6h24V26h-4v8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-replay-5\\\">\\n      <path d=\\\"M17.689 98l-8.697 8.696 8.697 8.697 2.486-2.485-4.32-4.319h1.302c4.93 0 9.071 1.722 12.424 5.165 3.352 3.443 5.029 7.638 5.029 12.584h3.55c0-2.958-.553-5.73-1.658-8.313-1.104-2.583-2.622-4.841-4.555-6.774-1.932-1.932-4.19-3.45-6.773-4.555-2.584-1.104-5.355-1.657-8.313-1.657H15.5l4.615-4.615zm-8.08 21.659v13.861h11.357v5.008H9.609V143h12.7c.834 0 1.55-.298 2.146-.894.596-.597.895-1.31.895-2.145v-7.781c0-.835-.299-1.55-.895-2.147a2.929 2.929 0 0 0-2.147-.894h-8.227v-5.096H25.35v-4.384z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-replay-10\\\">\\n      <path d=\\\"M42.315 125.63c0-4.997-1.694-9.235-5.08-12.713-3.388-3.479-7.571-5.218-12.552-5.218h-1.315l4.363 4.363-2.51 2.51-8.787-8.786L25.221 97l2.45 2.45-4.662 4.663h1.375c2.988 0 5.788.557 8.397 1.673 2.61 1.116 4.892 2.65 6.844 4.602 1.953 1.953 3.487 4.234 4.602 6.844 1.116 2.61 1.674 5.41 1.674 8.398zM8.183 142v-19.657H3.176V117.8h9.643V142zm13.63 0c-1.156 0-2.127-.393-2.912-1.178-.778-.778-1.168-1.746-1.168-2.902v-16.04c0-1.156.393-2.127 1.178-2.912.779-.779 1.746-1.168 2.902-1.168h7.696c1.156 0 2.126.392 2.911 1.177.779.78 1.168 1.747 1.168 2.903v16.04c0 1.156-.392 2.127-1.177 2.912-.779.779-1.746 1.168-2.902 1.168zm.556-4.636h6.583v-15.02H22.37z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-replay-30\\\">\\n      <path d=\\\"M26.047 97l-8.733 8.732 8.733 8.733 2.496-2.494-4.336-4.338h1.307c4.95 0 9.108 1.73 12.474 5.187 3.367 3.458 5.051 7.668 5.051 12.635h3.565c0-2.97-.556-5.751-1.665-8.346-1.109-2.594-2.633-4.862-4.574-6.802-1.94-1.941-4.208-3.466-6.803-4.575-2.594-1.109-5.375-1.664-8.345-1.664H23.85l4.634-4.634zM2.555 117.531v4.688h10.297v5.25H5.873v4.687h6.979v5.156H2.555V142H13.36c1.061 0 1.95-.395 2.668-1.186.718-.79 1.076-1.772 1.076-2.94v-16.218c0-1.168-.358-2.149-1.076-2.94-.717-.79-1.607-1.185-2.668-1.185zm22.482.14c-1.149 0-2.11.39-2.885 1.165-.78.78-1.172 1.744-1.172 2.893v15.943c0 1.149.388 2.11 1.163 2.885.78.78 1.745 1.172 2.894 1.172h7.649c1.148 0 2.11-.388 2.884-1.163.78-.78 1.17-1.745 1.17-2.894v-15.943c0-1.15-.386-2.111-1.16-2.885-.78-.78-1.746-1.172-2.894-1.172zm.553 4.518h6.545v14.93H25.59z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-forward-5\\\">\\n      <path d=\\\"M29.508 97l-2.431 2.43 4.625 4.625h-1.364c-2.965 0-5.742.554-8.332 1.66-2.589 1.107-4.851 2.629-6.788 4.566-1.937 1.937-3.458 4.2-4.565 6.788-1.107 2.59-1.66 5.367-1.66 8.331h3.557c0-4.957 1.68-9.16 5.04-12.611 3.36-3.45 7.51-5.177 12.451-5.177h1.304l-4.326 4.33 2.49 2.49 8.715-8.716zm-9.783 21.61v13.89h11.382v5.018H19.725V142h12.727a2.93 2.93 0 0 0 2.15-.896 2.93 2.93 0 0 0 .896-2.15v-7.798c0-.837-.299-1.554-.896-2.152a2.93 2.93 0 0 0-2.15-.896h-8.245V123h11.29v-4.392z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-forward-10\\\">\\n      <path d=\\\"M23.119 97l-2.386 2.383 4.538 4.538h-1.339c-2.908 0-5.633.543-8.173 1.63-2.54 1.085-4.76 2.577-6.66 4.478-1.9 1.9-3.392 4.12-4.478 6.66-1.085 2.54-1.629 5.264-1.629 8.172h3.49c0-4.863 1.648-8.986 4.944-12.372 3.297-3.385 7.368-5.078 12.216-5.078h1.279l-4.245 4.247 2.443 2.442 8.55-8.55zm-9.52 21.45v4.42h4.871V142h4.513v-23.55zm18.136 0c-1.125 0-2.066.377-2.824 1.135-.764.764-1.148 1.709-1.148 2.834v15.612c0 1.124.38 2.066 1.139 2.824.764.764 1.708 1.145 2.833 1.145h7.489c1.125 0 2.066-.378 2.824-1.136.764-.764 1.145-1.709 1.145-2.833v-15.612c0-1.125-.378-2.067-1.136-2.825-.764-.764-1.708-1.145-2.833-1.145zm.54 4.42h6.408v14.617h-6.407z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-forward-30\\\">\\n      <path d=\\\"M25.549 97l-2.437 2.434 4.634 4.635H26.38c-2.97 0-5.753.555-8.347 1.664-2.594 1.109-4.861 2.633-6.802 4.574-1.94 1.94-3.465 4.207-4.574 6.802-1.109 2.594-1.664 5.377-1.664 8.347h3.565c0-4.967 1.683-9.178 5.05-12.636 3.366-3.458 7.525-5.187 12.475-5.187h1.307l-4.335 4.338 2.495 2.494 8.732-8.732zm-11.553 20.53v4.689h10.297v5.249h-6.978v4.688h6.978v5.156H13.996V142h10.808c1.06 0 1.948-.395 2.666-1.186.718-.79 1.077-1.771 1.077-2.94v-16.217c0-1.169-.36-2.15-1.077-2.94-.718-.79-1.605-1.186-2.666-1.186zm21.174.168c-1.149 0-2.11.389-2.884 1.163-.78.78-1.172 1.745-1.172 2.894v15.942c0 1.15.388 2.11 1.162 2.885.78.78 1.745 1.17 2.894 1.17h7.649c1.149 0 2.11-.386 2.885-1.16.78-.78 1.17-1.746 1.17-2.895v-15.942c0-1.15-.387-2.11-1.161-2.885-.78-.78-1.745-1.172-2.894-1.172zm.552 4.516h6.542v14.931h-6.542z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 512 512\\\" id=\\\"vjs-icon-audio-description\\\">\\n      <g fill-rule=\\\"evenodd\\\"><path d=\\\"M227.29 381.351V162.993c50.38-1.017 89.108-3.028 117.631 17.126 27.374 19.342 48.734 56.965 44.89 105.325-4.067 51.155-41.335 94.139-89.776 98.475-24.085 2.155-71.972 0-71.972 0s-.84-1.352-.773-2.568m48.755-54.804c31.43 1.26 53.208-16.633 56.495-45.386 4.403-38.51-21.188-63.552-58.041-60.796v103.612c-.036 1.466.575 2.22 1.546 2.57\\\"></path><path d=\\\"M383.78 381.328c13.336 3.71 17.387-11.06 23.215-21.408 12.722-22.571 22.294-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.51c-.587 3.874 2.226 7.315 3.865 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894\\\"></path><path d=\\\"M425.154 381.328c13.336 3.71 17.384-11.061 23.215-21.408 12.721-22.571 22.291-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.511c-.586 3.874 2.226 7.315 3.866 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894\\\"></path><path d=\\\"M466.26 381.328c13.337 3.71 17.385-11.061 23.216-21.408 12.722-22.571 22.292-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.51c-.587 3.874 2.225 7.315 3.865 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894M4.477 383.005H72.58l18.573-28.484 64.169-.135s.065 19.413.065 28.62h48.756V160.307h-58.816c-5.653 9.537-140.85 222.697-140.85 222.697zm152.667-145.282v71.158l-40.453-.27 40.453-70.888z\\\"></path></g>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-next-item\\\">\\n      <path d=\\\"M12 36l17-12-17-12v24zm20-24v24h4V12h-4z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-previous-item\\\">\\n      <path d=\\\"M12 12h4v24h-4zm7 12l17 12V12z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-shuffle\\\">\\n      <path d=\\\"M21.17 18.34L10.83 8 8 10.83l10.34 10.34 2.83-2.83zM29 8l4.09 4.09L8 37.17 10.83 40l25.09-25.09L40 19V8H29zm.66 18.83l-2.83 2.83 6.26 6.26L29 40h11V29l-4.09 4.09-6.25-6.26z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-cast\\\">\\n      <path d=\\\"M42 6H6c-2.21 0-4 1.79-4 4v6h4v-6h36v28H28v4h14c2.21 0 4-1.79 4-4V10c0-2.21-1.79-4-4-4zM2 36v6h6c0-3.31-2.69-6-6-6zm0-8v4c5.52 0 10 4.48 10 10h4c0-7.73-6.27-14-14-14zm0-8v4c9.94 0 18 8.06 18 18h4c0-12.15-9.85-22-22-22z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-picture-in-picture-enter\\\">\\n      <path d=\\\"M38 22H22v11.99h16V22zm8 16V9.96C46 7.76 44.2 6 42 6H6C3.8 6 2 7.76 2 9.96V38c0 2.2 1.8 4 4 4h36c2.2 0 4-1.8 4-4zm-4 .04H6V9.94h36v28.1z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 22 18\\\" id=\\\"vjs-icon-picture-in-picture-exit\\\">\\n      <path d=\\\"M18 4H4v10h14V4zm4 12V1.98C22 .88 21.1 0 20 0H2C.9 0 0 .88 0 1.98V16c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2zm-2 .02H2V1.97h18v14.05z\\\"></path>\\n      <path fill=\\\"none\\\" d=\\\"M-1-3h24v24H-1z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-facebook\\\">\\n      <path d=\\\"M1343 12v264h-157q-86 0-116 36t-30 108v189h293l-39 296h-254v759H734V905H479V609h255V391q0-186 104-288.5T1115 0q147 0 228 12z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-linkedin\\\">\\n      <path d=\\\"M477 625v991H147V625h330zm21-306q1 73-50.5 122T312 490h-2q-82 0-132-49t-50-122q0-74 51.5-122.5T314 148t133 48.5T498 319zm1166 729v568h-329v-530q0-105-40.5-164.5T1168 862q-63 0-105.5 34.5T999 982q-11 30-11 81v553H659q2-399 2-647t-1-296l-1-48h329v144h-2q20-32 41-56t56.5-52 87-43.5T1285 602q171 0 275 113.5t104 332.5z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1200 1227\\\" id=\\\"vjs-icon-twitter\\\">\\n      <path d=\\\"M714.163 519.284L1160.89 0H1055.03L667.137 450.887L357.328 0H0L468.492 681.821L0 1226.37H105.866L515.491 750.218L842.672 1226.37H1200L714.137 519.284H714.163ZM569.165 687.828L521.697 619.934L144.011 79.6944H306.615L611.412 515.685L658.88 583.579L1055.08 1150.3H892.476L569.165 687.854V687.828Z\\\"/>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-tumblr\\\">\\n      <path d=\\\"M1328 1329l80 237q-23 35-111 66t-177 32q-104 2-190.5-26T787 1564t-95-106-55.5-120-16.5-118V676H452V461q72-26 129-69.5t91-90 58-102 34-99T779 12q1-5 4.5-8.5T791 0h244v424h333v252h-334v518q0 30 6.5 56t22.5 52.5 49.5 41.5 81.5 14q78-2 134-29z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-pinterest\\\">\\n      <path d=\\\"M1664 896q0 209-103 385.5T1281.5 1561 896 1664q-111 0-218-32 59-93 78-164 9-34 54-211 20 39 73 67.5t114 28.5q121 0 216-68.5t147-188.5 52-270q0-114-59.5-214T1180 449t-255-63q-105 0-196 29t-154.5 77-109 110.5-67 129.5T377 866q0 104 40 183t117 111q30 12 38-20 2-7 8-31t8-30q6-23-11-43-51-61-51-151 0-151 104.5-259.5T904 517q151 0 235.5 82t84.5 213q0 170-68.5 289T980 1220q-61 0-98-43.5T859 1072q8-35 26.5-93.5t30-103T927 800q0-50-27-83t-77-33q-62 0-105 57t-43 142q0 73 25 122l-99 418q-17 70-13 177-206-91-333-281T128 896q0-209 103-385.5T510.5 231 896 128t385.5 103T1561 510.5 1664 896z\\\"></path>\\n    </symbol>\\n  </defs>\\n</svg>\";\n\n  // /**\n\n  // Determine the keycode for the 'back' key based on the platform\n  const backKeyCode = IS_TIZEN ? 10009 : IS_WEBOS ? 461 : 8;\n  const SpatialNavKeyCodes = {\n    codes: {\n      play: 415,\n      pause: 19,\n      ff: 417,\n      rw: 412,\n      back: backKeyCode\n    },\n    names: {\n      415: 'play',\n      19: 'pause',\n      417: 'ff',\n      412: 'rw',\n      [backKeyCode]: 'back'\n    },\n    isEventKey(event, keyName) {\n      keyName = keyName.toLowerCase();\n      if (this.names[event.keyCode] && this.names[event.keyCode] === keyName) {\n        return true;\n      }\n      return false;\n    },\n    getEventName(event) {\n      if (this.names[event.keyCode]) {\n        return this.names[event.keyCode];\n      } else if (this.codes[event.code]) {\n        const code = this.codes[event.code];\n        return this.names[code];\n      }\n      return null;\n    }\n  };\n\n  /**\n   * @file spatial-navigation.js\n   */\n\n  /** @import Component from './component' */\n  /** @import Player from './player' */\n\n  // The number of seconds the `step*` functions move the timeline.\n  const STEP_SECONDS$1 = 5;\n\n  /**\n   * Spatial Navigation in Video.js enhances user experience and accessibility on smartTV devices,\n   * enabling seamless navigation through interactive elements within the player using remote control arrow keys.\n   * This functionality allows users to effortlessly navigate through focusable components.\n   *\n   * @extends EventTarget\n   */\n  class SpatialNavigation extends EventTarget$2 {\n    /**\n     * Constructs a SpatialNavigation instance with initial settings.\n     * Sets up the player instance, and prepares the spatial navigation system.\n     *\n     * @class\n     * @param {Player} player - The Video.js player instance to which the spatial navigation is attached.\n     */\n    constructor(player) {\n      super();\n      this.player_ = player;\n      this.focusableComponents = [];\n      this.isListening_ = false;\n      this.isPaused_ = false;\n      this.onKeyDown_ = this.onKeyDown_.bind(this);\n      this.lastFocusedComponent_ = null;\n    }\n\n    /**\n     * Starts the spatial navigation by adding a keydown event listener to the video container.\n     * This method ensures that the event listener is added only once.\n     */\n    start() {\n      // If the listener is already active, exit early.\n      if (this.isListening_) {\n        return;\n      }\n\n      // Add the event listener since the listener is not yet active.\n      this.player_.on('keydown', this.onKeyDown_);\n      this.player_.on('modalKeydown', this.onKeyDown_);\n      // Listen for source change events\n      this.player_.on('loadedmetadata', () => {\n        this.focus(this.updateFocusableComponents()[0]);\n      });\n      this.player_.on('modalclose', () => {\n        this.refocusComponent();\n      });\n      this.player_.on('focusin', this.handlePlayerFocus_.bind(this));\n      this.player_.on('focusout', this.handlePlayerBlur_.bind(this));\n      this.isListening_ = true;\n      this.player_.errorDisplay.on('aftermodalfill', () => {\n        this.updateFocusableComponents();\n        if (this.focusableComponents.length) {\n          // The modal has focusable components:\n\n          if (this.focusableComponents.length > 1) {\n            // The modal has close button + some additional buttons.\n            // Focusing first additional button:\n\n            this.focusableComponents[1].focus();\n          } else {\n            // The modal has only close button,\n            // Focusing it:\n\n            this.focusableComponents[0].focus();\n          }\n        }\n      });\n    }\n\n    /**\n     * Stops the spatial navigation by removing the keydown event listener from the video container.\n     * Also sets the `isListening_` flag to false.\n     */\n    stop() {\n      this.player_.off('keydown', this.onKeyDown_);\n      this.isListening_ = false;\n    }\n\n    /**\n     * Responds to keydown events for spatial navigation and media control.\n     *\n     * Determines if spatial navigation or media control is active and handles key inputs accordingly.\n     *\n     * @param {KeyboardEvent} event - The keydown event to be handled.\n     */\n    onKeyDown_(event) {\n      // Determine if the event is a custom modalKeydown event\n      const actualEvent = event.originalEvent ? event.originalEvent : event;\n      if (['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown'].includes(actualEvent.key)) {\n        // Handle directional navigation\n        if (this.isPaused_) {\n          return;\n        }\n        actualEvent.preventDefault();\n\n        // \"ArrowLeft\" => \"left\" etc\n        const direction = actualEvent.key.substring(5).toLowerCase();\n        this.move(direction);\n      } else if (SpatialNavKeyCodes.isEventKey(actualEvent, 'play') || SpatialNavKeyCodes.isEventKey(actualEvent, 'pause') || SpatialNavKeyCodes.isEventKey(actualEvent, 'ff') || SpatialNavKeyCodes.isEventKey(actualEvent, 'rw')) {\n        // Handle media actions\n        actualEvent.preventDefault();\n        const action = SpatialNavKeyCodes.getEventName(actualEvent);\n        this.performMediaAction_(action);\n      } else if (SpatialNavKeyCodes.isEventKey(actualEvent, 'Back') && event.target && event.target.closeable()) {\n        actualEvent.preventDefault();\n        event.target.close();\n      }\n    }\n\n    /**\n     * Performs media control actions based on the given key input.\n     *\n     * Controls the playback and seeking functionalities of the media player.\n     *\n     * @param {string} key - The key representing the media action to be performed.\n     *   Accepted keys: 'play', 'pause', 'ff' (fast-forward), 'rw' (rewind).\n     */\n    performMediaAction_(key) {\n      if (this.player_) {\n        switch (key) {\n          case 'play':\n            if (this.player_.paused()) {\n              this.player_.play();\n            }\n            break;\n          case 'pause':\n            if (!this.player_.paused()) {\n              this.player_.pause();\n            }\n            break;\n          case 'ff':\n            this.userSeek_(this.player_.currentTime() + STEP_SECONDS$1);\n            break;\n          case 'rw':\n            this.userSeek_(this.player_.currentTime() - STEP_SECONDS$1);\n            break;\n        }\n      }\n    }\n\n    /**\n     * Prevent liveThreshold from causing seeks to seem like they\n     * are not happening from a user perspective.\n     *\n     * @param {number} ct\n     *        current time to seek to\n     */\n    userSeek_(ct) {\n      if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n        this.player_.liveTracker.nextSeekedFromUser();\n      }\n      this.player_.currentTime(ct);\n    }\n\n    /**\n     * Pauses the spatial navigation functionality.\n     * This method sets a flag that can be used to temporarily disable the navigation logic.\n     */\n    pause() {\n      this.isPaused_ = true;\n    }\n\n    /**\n     * Resumes the spatial navigation functionality if it has been paused.\n     * This method resets the pause flag, re-enabling the navigation logic.\n     */\n    resume() {\n      this.isPaused_ = false;\n    }\n\n    /**\n     * Handles Player Blur.\n     *\n     * @param {string|Event|Object} event\n     *        The name of the event, an `Event`, or an object with a key of type set to\n     *        an event name.\n     *\n     * Calls for handling of the Player Blur if:\n     * *The next focused element is not a child of current focused element &\n     * The next focused element is not a child of the Player.\n     * *There is no next focused element\n     */\n    handlePlayerBlur_(event) {\n      const nextFocusedElement = event.relatedTarget;\n      let isChildrenOfPlayer = null;\n      const currentComponent = this.getCurrentComponent(event.target);\n      if (nextFocusedElement) {\n        isChildrenOfPlayer = Boolean(nextFocusedElement.closest('.video-js'));\n\n        // If nextFocusedElement is the 'TextTrackSettings' component\n        if (nextFocusedElement.classList.contains('vjs-text-track-settings') && !this.isPaused_) {\n          this.searchForTrackSelect_();\n        }\n      }\n      if (!event.currentTarget.contains(event.relatedTarget) && !isChildrenOfPlayer || !nextFocusedElement) {\n        if (currentComponent && currentComponent.name() === 'CloseButton') {\n          this.refocusComponent();\n        } else {\n          this.pause();\n          if (currentComponent && currentComponent.el()) {\n            // Store last focused component\n            this.lastFocusedComponent_ = currentComponent;\n          }\n        }\n      }\n    }\n\n    /**\n     * Handles the Player focus event.\n     *\n     * Calls for handling of the Player Focus if current element is focusable.\n     */\n    handlePlayerFocus_() {\n      if (this.getCurrentComponent() && this.getCurrentComponent().getIsFocusable()) {\n        this.resume();\n      }\n    }\n\n    /**\n     * Gets a set of focusable components.\n     *\n     * @return {Array}\n     *         Returns an array of focusable components.\n     */\n    updateFocusableComponents() {\n      const player = this.player_;\n      const focusableComponents = [];\n\n      /**\n       * Searches for children candidates.\n       *\n       * Pushes Components to array of 'focusableComponents'.\n       * Calls itself if there is children elements inside iterated component.\n       *\n       * @param {Array} componentsArray - The array of components to search for focusable children.\n       */\n      function searchForChildrenCandidates(componentsArray) {\n        for (const i of componentsArray) {\n          if (i.hasOwnProperty('el_') && i.getIsFocusable() && i.getIsAvailableToBeFocused(i.el())) {\n            focusableComponents.push(i);\n          }\n          if (i.hasOwnProperty('children_') && i.children_.length > 0) {\n            searchForChildrenCandidates(i.children_);\n          }\n        }\n      }\n\n      // Iterate inside all children components of the player.\n      player.children_.forEach(value => {\n        if (value.hasOwnProperty('el_')) {\n          // If component has required functions 'getIsFocusable' & 'getIsAvailableToBeFocused', is focusable & available to be focused.\n          if (value.getIsFocusable && value.getIsAvailableToBeFocused && value.getIsFocusable() && value.getIsAvailableToBeFocused(value.el())) {\n            focusableComponents.push(value);\n            return;\n            // If component has posible children components as candidates.\n          } else if (value.hasOwnProperty('children_') && value.children_.length > 0) {\n            searchForChildrenCandidates(value.children_);\n            // If component has posible item components as candidates.\n          } else if (value.hasOwnProperty('items') && value.items.length > 0) {\n            searchForChildrenCandidates(value.items);\n            // If there is a suitable child element within the component's DOM element.\n          } else if (this.findSuitableDOMChild(value)) {\n            focusableComponents.push(value);\n          }\n        }\n\n        // TODO - Refactor the following logic after refactor of videojs-errors elements to be components is done.\n        if (value.name_ === 'ErrorDisplay' && value.opened_) {\n          const buttonContainer = value.el_.querySelector('.vjs-errors-ok-button-container');\n          if (buttonContainer) {\n            const modalButtons = buttonContainer.querySelectorAll('button');\n            modalButtons.forEach((element, index) => {\n              // Add elements as objects to be handled by the spatial navigation\n              focusableComponents.push({\n                name: () => {\n                  return 'ModalButton' + (index + 1);\n                },\n                el: () => element,\n                getPositions: () => {\n                  const rect = element.getBoundingClientRect();\n\n                  // Creating objects that mirror DOMRectReadOnly for boundingClientRect and center\n                  const boundingClientRect = {\n                    x: rect.x,\n                    y: rect.y,\n                    width: rect.width,\n                    height: rect.height,\n                    top: rect.top,\n                    right: rect.right,\n                    bottom: rect.bottom,\n                    left: rect.left\n                  };\n\n                  // Calculating the center position\n                  const center = {\n                    x: rect.left + rect.width / 2,\n                    y: rect.top + rect.height / 2,\n                    width: 0,\n                    height: 0,\n                    top: rect.top + rect.height / 2,\n                    right: rect.left + rect.width / 2,\n                    bottom: rect.top + rect.height / 2,\n                    left: rect.left + rect.width / 2\n                  };\n                  return {\n                    boundingClientRect,\n                    center\n                  };\n                },\n                // Asume that the following are always focusable\n                getIsAvailableToBeFocused: () => true,\n                getIsFocusable: el => true,\n                focus: () => element.focus()\n              });\n            });\n          }\n        }\n      });\n      this.focusableComponents = focusableComponents;\n      return this.focusableComponents;\n    }\n\n    /**\n     * Finds a suitable child element within the provided component's DOM element.\n     *\n     * @param {Object} component - The component containing the DOM element to search within.\n     * @return {HTMLElement|null} Returns the suitable child element if found, or null if not found.\n     */\n    findSuitableDOMChild(component) {\n      /**\n       * Recursively searches for a suitable child node that can be focused within a given component.\n       * It first checks if the provided node itself can be focused according to the component's\n       * `getIsFocusable` and `getIsAvailableToBeFocused` methods. If not, it recursively searches\n       * through the node's children to find a suitable child node that meets the focusability criteria.\n       *\n       * @param {HTMLElement} node - The DOM node to start the search from.\n       * @return {HTMLElement|null} The first child node that is focusable and available to be focused,\n       * or `null` if no suitable child is found.\n       */\n      function searchForSuitableChild(node) {\n        if (component.getIsFocusable(node) && component.getIsAvailableToBeFocused(node)) {\n          return node;\n        }\n        for (let i = 0; i < node.children.length; i++) {\n          const child = node.children[i];\n          const suitableChild = searchForSuitableChild(child);\n          if (suitableChild) {\n            return suitableChild;\n          }\n        }\n        return null;\n      }\n      if (component.el()) {\n        return searchForSuitableChild(component.el());\n      }\n      return null;\n    }\n\n    /**\n     * Gets the currently focused component from the list of focusable components.\n     * If a target element is provided, it uses that element to find the corresponding\n     * component. If no target is provided, it defaults to using the document's currently\n     * active element.\n     *\n     * @param {HTMLElement} [target] - The DOM element to check against the focusable components.\n     *                                 If not provided, `document.activeElement` is used.\n     * @return {Component|null} - Returns the focused component if found among the focusable components,\n     *                            otherwise returns null if no matching component is found.\n     */\n    getCurrentComponent(target) {\n      this.updateFocusableComponents();\n      // eslint-disable-next-line\n      const curComp = target || document.activeElement;\n      if (this.focusableComponents.length) {\n        for (const i of this.focusableComponents) {\n          // If component Node is equal to the current active element.\n          if (i.el() === curComp) {\n            return i;\n          }\n        }\n      }\n    }\n\n    /**\n     * Adds a component to the array of focusable components.\n     *\n     * @param {Component} component\n     *        The `Component` to be added.\n     */\n    add(component) {\n      const focusableComponents = [...this.focusableComponents];\n      if (component.hasOwnProperty('el_') && component.getIsFocusable() && component.getIsAvailableToBeFocused(component.el())) {\n        focusableComponents.push(component);\n      }\n      this.focusableComponents = focusableComponents;\n      // Trigger the notification manually\n      this.trigger({\n        type: 'focusableComponentsChanged',\n        focusableComponents: this.focusableComponents\n      });\n    }\n\n    /**\n     * Removes component from the array of focusable components.\n     *\n     * @param {Component} component - The component to be removed from the focusable components array.\n     */\n    remove(component) {\n      for (let i = 0; i < this.focusableComponents.length; i++) {\n        if (this.focusableComponents[i].name() === component.name()) {\n          this.focusableComponents.splice(i, 1);\n          // Trigger the notification manually\n          this.trigger({\n            type: 'focusableComponentsChanged',\n            focusableComponents: this.focusableComponents\n          });\n          return;\n        }\n      }\n    }\n\n    /**\n     * Clears array of focusable components.\n     */\n    clear() {\n      // Check if the array is already empty to avoid unnecessary event triggering\n      if (this.focusableComponents.length > 0) {\n        // Clear the array\n        this.focusableComponents = [];\n\n        // Trigger the notification manually\n        this.trigger({\n          type: 'focusableComponentsChanged',\n          focusableComponents: this.focusableComponents\n        });\n      }\n    }\n\n    /**\n     * Navigates to the next focusable component based on the specified direction.\n     *\n     * @param {string} direction 'up', 'down', 'left', 'right'\n     */\n    move(direction) {\n      const currentFocusedComponent = this.getCurrentComponent();\n      if (!currentFocusedComponent) {\n        return;\n      }\n      const currentPositions = currentFocusedComponent.getPositions();\n      const candidates = this.focusableComponents.filter(component => component !== currentFocusedComponent && this.isInDirection_(currentPositions.boundingClientRect, component.getPositions().boundingClientRect, direction));\n      const bestCandidate = this.findBestCandidate_(currentPositions.center, candidates, direction);\n      if (bestCandidate) {\n        this.focus(bestCandidate);\n      } else {\n        this.trigger({\n          type: 'endOfFocusableComponents',\n          direction,\n          focusedComponent: currentFocusedComponent\n        });\n      }\n    }\n\n    /**\n     * Finds the best candidate on the current center position,\n     * the list of candidates, and the specified navigation direction.\n     *\n     * @param {Object} currentCenter The center position of the current focused component element.\n     * @param {Array} candidates An array of candidate components to receive focus.\n     * @param {string} direction The direction of navigation ('up', 'down', 'left', 'right').\n     * @return {Object|null} The component that is the best candidate for receiving focus.\n     */\n    findBestCandidate_(currentCenter, candidates, direction) {\n      let minDistance = Infinity;\n      let bestCandidate = null;\n      for (const candidate of candidates) {\n        const candidateCenter = candidate.getPositions().center;\n        const distance = this.calculateDistance_(currentCenter, candidateCenter, direction);\n        if (distance < minDistance) {\n          minDistance = distance;\n          bestCandidate = candidate;\n        }\n      }\n      return bestCandidate;\n    }\n\n    /**\n     * Determines if a target rectangle is in the specified navigation direction\n     * relative to a source rectangle.\n     *\n     * @param {Object} srcRect The bounding rectangle of the source element.\n     * @param {Object} targetRect The bounding rectangle of the target element.\n     * @param {string} direction The navigation direction ('up', 'down', 'left', 'right').\n     * @return {boolean} True if the target is in the specified direction relative to the source.\n     */\n    isInDirection_(srcRect, targetRect, direction) {\n      switch (direction) {\n        case 'right':\n          return targetRect.left >= srcRect.right;\n        case 'left':\n          return targetRect.right <= srcRect.left;\n        case 'down':\n          return targetRect.top >= srcRect.bottom;\n        case 'up':\n          return targetRect.bottom <= srcRect.top;\n        default:\n          return false;\n      }\n    }\n\n    /**\n     * Focus the last focused component saved before blur on player.\n     */\n    refocusComponent() {\n      if (this.lastFocusedComponent_) {\n        // If user is not active, set it to active.\n        if (!this.player_.userActive()) {\n          this.player_.userActive(true);\n        }\n        this.updateFocusableComponents();\n\n        // Search inside array of 'focusableComponents' for a match of name of\n        // the last focused component.\n        for (let i = 0; i < this.focusableComponents.length; i++) {\n          if (this.focusableComponents[i].name() === this.lastFocusedComponent_.name()) {\n            this.focus(this.focusableComponents[i]);\n            return;\n          }\n        }\n      } else {\n        this.focus(this.updateFocusableComponents()[0]);\n      }\n    }\n\n    /**\n     * Focuses on a given component.\n     * If the component is available to be focused, it focuses on the component.\n     * If not, it attempts to find a suitable DOM child within the component and focuses on it.\n     *\n     * @param {Component} component - The component to be focused.\n     */\n    focus(component) {\n      if (typeof component !== 'object') {\n        return;\n      }\n      if (component.getIsAvailableToBeFocused(component.el())) {\n        component.focus();\n      } else if (this.findSuitableDOMChild(component)) {\n        this.findSuitableDOMChild(component).focus();\n      }\n    }\n\n    /**\n     * Calculates the distance between two points, adjusting the calculation based on\n     * the specified navigation direction.\n     *\n     * @param {Object} center1 The center point of the first element.\n     * @param {Object} center2 The center point of the second element.\n     * @param {string} direction The direction of navigation ('up', 'down', 'left', 'right').\n     * @return {number} The calculated distance between the two centers.\n     */\n    calculateDistance_(center1, center2, direction) {\n      const dx = Math.abs(center1.x - center2.x);\n      const dy = Math.abs(center1.y - center2.y);\n      let distance;\n      switch (direction) {\n        case 'right':\n        case 'left':\n          // Higher weight for vertical distance in horizontal navigation.\n          distance = dx + dy * 100;\n          break;\n        case 'up':\n          // Strongly prioritize vertical proximity for UP navigation.\n          // Adjust the weight to ensure that elements directly above are favored.\n          distance = dy * 2 + dx * 0.5;\n          break;\n        case 'down':\n          // More balanced weight for vertical and horizontal distances.\n          // Adjust the weights here to find the best balance.\n          distance = dy * 5 + dx;\n          break;\n        default:\n          distance = dx + dy;\n      }\n      return distance;\n    }\n\n    /**\n     * This gets called by 'handlePlayerBlur_' if 'spatialNavigation' is enabled.\n     * Searches for the first 'TextTrackSelect' inside of modal to focus.\n     *\n     * @private\n     */\n    searchForTrackSelect_() {\n      const spatialNavigation = this;\n      for (const component of spatialNavigation.updateFocusableComponents()) {\n        if (component.constructor.name === 'TextTrackSelect') {\n          spatialNavigation.focus(component);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @file loader.js\n   */\n\n  /** @import Player from '../player' */\n\n  /**\n   * The `MediaLoader` is the `Component` that decides which playback technology to load\n   * when a player is initialized.\n   *\n   * @extends Component\n   */\n  class MediaLoader extends Component$1 {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should attach to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Function} [ready]\n     *        The function that is run when this component is ready.\n     */\n    constructor(player, options, ready) {\n      // MediaLoader has no element\n      const options_ = merge$2({\n        createEl: false\n      }, options);\n      super(player, options_, ready);\n\n      // If there are no sources when the player is initialized,\n      // load the first supported playback technology.\n\n      if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n        for (let i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n          const techName = toTitleCase$1(j[i]);\n          let tech = Tech.getTech(techName);\n\n          // Support old behavior of techs being registered as components.\n          // Remove once that deprecated behavior is removed.\n          if (!techName) {\n            tech = Component$1.getComponent(techName);\n          }\n\n          // Check if the browser supports this technology\n          if (tech && tech.isSupported()) {\n            player.loadTech_(techName);\n            break;\n          }\n        }\n      } else {\n        // Loop through playback technologies (e.g. HTML5) and check for support.\n        // Then load the best source.\n        // A few assumptions here:\n        //   All playback technologies respect preload false.\n        player.src(options.playerOptions.sources);\n      }\n    }\n  }\n  Component$1.registerComponent('MediaLoader', MediaLoader);\n\n  /**\n   * @file clickable-component.js\n   */\n\n  /** @import Player from './player' */\n\n  /**\n   * Component which is clickable or keyboard actionable, but is not a\n   * native HTML button.\n   *\n   * @extends Component\n   */\n  class ClickableComponent extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param  {Player} player\n     *         The `Player` that this class should be attached to.\n     *\n     * @param  {Object} [options]\n     *         The key/value store of component options.\n     *\n     * @param  {function} [options.clickHandler]\n     *         The function to call when the button is clicked / activated\n     *\n     * @param  {string} [options.controlText]\n     *         The text to set on the button\n     *\n     * @param  {string} [options.className]\n     *         A class or space separated list of classes to add the component\n     *\n     */\n    constructor(player, options) {\n      super(player, options);\n      if (this.options_.controlText) {\n        this.controlText(this.options_.controlText);\n      }\n      this.handleMouseOver_ = e => this.handleMouseOver(e);\n      this.handleMouseOut_ = e => this.handleMouseOut(e);\n      this.handleClick_ = e => this.handleClick(e);\n      this.handleKeyDown_ = e => this.handleKeyDown(e);\n      this.emitTapEvents();\n      this.enable();\n    }\n\n    /**\n     * Create the `ClickableComponent`s DOM element.\n     *\n     * @param {string} [tag=div]\n     *        The element's node type.\n     *\n     * @param {Object} [props={}]\n     *        An object of properties that should be set on the element.\n     *\n     * @param {Object} [attributes={}]\n     *        An object of attributes that should be set on the element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    createEl(tag = 'div', props = {}, attributes = {}) {\n      props = Object.assign({\n        className: this.buildCSSClass(),\n        tabIndex: 0\n      }, props);\n      if (tag === 'button') {\n        log$1.error(`Creating a ClickableComponent with an HTML element of ${tag} is not supported; use a Button instead.`);\n      }\n\n      // Add ARIA attributes for clickable element which is not a native HTML button\n      attributes = Object.assign({\n        role: 'button'\n      }, attributes);\n      this.tabIndex_ = props.tabIndex;\n      const el = createEl(tag, props, attributes);\n      if (!this.player_.options_.experimentalSvgIcons) {\n        el.appendChild(createEl('span', {\n          className: 'vjs-icon-placeholder'\n        }, {\n          'aria-hidden': true\n        }));\n      }\n      this.createControlTextEl(el);\n      return el;\n    }\n    dispose() {\n      // remove controlTextEl_ on dispose\n      this.controlTextEl_ = null;\n      super.dispose();\n    }\n\n    /**\n     * Create a control text element on this `ClickableComponent`\n     *\n     * @param {Element} [el]\n     *        Parent element for the control text.\n     *\n     * @return {Element}\n     *         The control text element that gets created.\n     */\n    createControlTextEl(el) {\n      this.controlTextEl_ = createEl('span', {\n        className: 'vjs-control-text'\n      }, {\n        // let the screen reader user know that the text of the element may change\n        'aria-live': 'polite'\n      });\n      if (el) {\n        el.appendChild(this.controlTextEl_);\n      }\n      this.controlText(this.controlText_, el);\n      return this.controlTextEl_;\n    }\n\n    /**\n     * Get or set the localize text to use for the controls on the `ClickableComponent`.\n     *\n     * @param {string} [text]\n     *        Control text for element.\n     *\n     * @param {Element} [el=this.el()]\n     *        Element to set the title on.\n     *\n     * @return {string}\n     *         - The control text when getting\n     */\n    controlText(text, el = this.el()) {\n      if (text === undefined) {\n        return this.controlText_ || 'Need Text';\n      }\n      const localizedText = this.localize(text);\n\n      /** @protected */\n      this.controlText_ = text;\n      textContent(this.controlTextEl_, localizedText);\n      if (!this.nonIconControl && !this.player_.options_.noUITitleAttributes) {\n        // Set title attribute if only an icon is shown\n        el.setAttribute('title', localizedText);\n      }\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return `vjs-control vjs-button ${super.buildCSSClass()}`;\n    }\n\n    /**\n     * Enable this `ClickableComponent`\n     */\n    enable() {\n      if (!this.enabled_) {\n        this.enabled_ = true;\n        this.removeClass('vjs-disabled');\n        this.el_.setAttribute('aria-disabled', 'false');\n        if (typeof this.tabIndex_ !== 'undefined') {\n          this.el_.setAttribute('tabIndex', this.tabIndex_);\n        }\n        this.on(['tap', 'click'], this.handleClick_);\n        this.on('keydown', this.handleKeyDown_);\n      }\n    }\n\n    /**\n     * Disable this `ClickableComponent`\n     */\n    disable() {\n      this.enabled_ = false;\n      this.addClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'true');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.removeAttribute('tabIndex');\n      }\n      this.off('mouseover', this.handleMouseOver_);\n      this.off('mouseout', this.handleMouseOut_);\n      this.off(['tap', 'click'], this.handleClick_);\n      this.off('keydown', this.handleKeyDown_);\n    }\n\n    /**\n     * Handles language change in ClickableComponent for the player in components\n     *\n     *\n     */\n    handleLanguagechange() {\n      this.controlText(this.controlText_);\n    }\n\n    /**\n     * Event handler that is called when a `ClickableComponent` receives a\n     * `click` or `tap` event.\n     *\n     * @param {Event} event\n     *        The `tap` or `click` event that caused this function to be called.\n     *\n     * @listens tap\n     * @listens click\n     * @abstract\n     */\n    handleClick(event) {\n      if (this.options_.clickHandler) {\n        this.options_.clickHandler.call(this, arguments);\n      }\n    }\n\n    /**\n     * Event handler that is called when a `ClickableComponent` receives a\n     * `keydown` event.\n     *\n     * By default, if the key is Space or Enter, it will trigger a `click` event.\n     *\n     * @param {KeyboardEvent} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    handleKeyDown(event) {\n      // Support Space or Enter key operation to fire a click event. Also,\n      // prevent the event from propagating through the DOM and triggering\n      // Player hotkeys.\n      if (event.key === ' ' || event.key === 'Enter') {\n        event.preventDefault();\n        event.stopPropagation();\n        this.trigger('click');\n      } else {\n        // Pass keypress handling up for unsupported keys\n        super.handleKeyDown(event);\n      }\n    }\n  }\n  Component$1.registerComponent('ClickableComponent', ClickableComponent);\n\n  /**\n   * @file poster-image.js\n   */\n\n  /** @import Player from './player' */\n\n  /**\n   * A `ClickableComponent` that handles showing the poster image for the player.\n   *\n   * @extends ClickableComponent\n   */\n  class PosterImage extends ClickableComponent {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should attach to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.update();\n      this.update_ = e => this.update(e);\n      player.on('posterchange', this.update_);\n    }\n\n    /**\n     * Clean up and dispose of the `PosterImage`.\n     */\n    dispose() {\n      this.player().off('posterchange', this.update_);\n      super.dispose();\n    }\n\n    /**\n     * Create the `PosterImage`s DOM element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    createEl() {\n      // The el is an empty div to keep position in the DOM\n      // A picture and img el will be inserted when a source is set\n      return createEl('div', {\n        className: 'vjs-poster'\n      });\n    }\n\n    /**\n     * Get or set the `PosterImage`'s crossOrigin option.\n     *\n     * @param {string|null} [value]\n     *        The value to set the crossOrigin to. If an argument is\n     *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n     *\n     * @return {string|null}\n     *         - The current crossOrigin value of the `Player` when getting.\n     *         - undefined when setting\n     */\n    crossOrigin(value) {\n      // `null` can be set to unset a value\n      if (typeof value === 'undefined') {\n        if (this.$('img')) {\n          // If the poster's element exists, give its value\n          return this.$('img').crossOrigin;\n        } else if (this.player_.tech_ && this.player_.tech_.isReady_) {\n          // If not but the tech is ready, query the tech\n          return this.player_.crossOrigin();\n        }\n        // Otherwise check options as the  poster is usually set before the state of crossorigin\n        // can be retrieved by the getter\n        return this.player_.options_.crossOrigin || this.player_.options_.crossorigin || null;\n      }\n      if (value !== null && value !== 'anonymous' && value !== 'use-credentials') {\n        this.player_.log.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);\n        return;\n      }\n      if (this.$('img')) {\n        this.$('img').crossOrigin = value;\n      }\n      return;\n    }\n\n    /**\n     * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n     *\n     * @listens Player#posterchange\n     *\n     * @param {Event} [event]\n     *        The `Player#posterchange` event that triggered this function.\n     */\n    update(event) {\n      const url = this.player().poster();\n      this.setSrc(url);\n\n      // If there's no poster source we should display:none on this component\n      // so it's not still clickable or right-clickable\n      if (url) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    }\n\n    /**\n     * Set the source of the `PosterImage` depending on the display method. (Re)creates\n     * the inner picture and img elementss when needed.\n     *\n     * @param {string} [url]\n     *        The URL to the source for the `PosterImage`. If not specified or falsy,\n     *        any source and ant inner picture/img are removed.\n     */\n    setSrc(url) {\n      if (!url) {\n        this.el_.textContent = '';\n        return;\n      }\n      if (!this.$('img')) {\n        this.el_.appendChild(createEl('picture', {\n          className: 'vjs-poster',\n          // Don't want poster to be tabbable.\n          tabIndex: -1\n        }, {}, createEl('img', {\n          loading: 'lazy',\n          crossOrigin: this.crossOrigin()\n        }, {\n          alt: ''\n        })));\n      }\n      this.$('img').src = url;\n    }\n\n    /**\n     * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n     * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n     *\n     * @listens tap\n     * @listens click\n     * @listens keydown\n     *\n     * @param {Event} event\n     +        The `click`, `tap` or `keydown` event that caused this function to be called.\n     */\n    handleClick(event) {\n      // We don't want a click to trigger playback when controls are disabled\n      if (!this.player_.controls()) {\n        return;\n      }\n      if (this.player_.tech(true)) {\n        this.player_.tech(true).focus();\n      }\n      if (this.player_.paused()) {\n        silencePromise(this.player_.play());\n      } else {\n        this.player_.pause();\n      }\n    }\n  }\n\n  /**\n   * Get or set the `PosterImage`'s crossorigin option. For the HTML5 player, this\n   * sets the `crossOrigin` property on the `<img>` tag to control the CORS\n   * behavior.\n   *\n   * @param {string|null} [value]\n   *        The value to set the `PosterImages`'s crossorigin to. If an argument is\n   *        given, must be one of `anonymous` or `use-credentials`.\n   *\n   * @return {string|null|undefined}\n   *         - The current crossorigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  PosterImage.prototype.crossorigin = PosterImage.prototype.crossOrigin;\n  Component$1.registerComponent('PosterImage', PosterImage);\n\n  /**\n   * @file text-track-display.js\n   */\n\n  /** @import Player from '../player' */\n\n  const darkGray = '#222';\n  const lightGray = '#ccc';\n  const fontMap = {\n    monospace: 'monospace',\n    sansSerif: 'sans-serif',\n    serif: 'serif',\n    monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n    monospaceSerif: '\"Courier New\", monospace',\n    proportionalSansSerif: 'sans-serif',\n    proportionalSerif: 'serif',\n    casual: '\"Comic Sans MS\", Impact, fantasy',\n    script: '\"Monotype Corsiva\", cursive',\n    smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n  };\n\n  /**\n   * Construct an rgba color from a given hex color code.\n   *\n   * @param {number} color\n   *        Hex number for color, like #f0e or #f604e2.\n   *\n   * @param {number} opacity\n   *        Value for opacity, 0.0 - 1.0.\n   *\n   * @return {string}\n   *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n   */\n  function constructColor(color, opacity) {\n    let hex;\n    if (color.length === 4) {\n      // color looks like \"#f0e\"\n      hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n    } else if (color.length === 7) {\n      // color looks like \"#f604e2\"\n      hex = color.slice(1);\n    } else {\n      throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n    }\n    return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n  }\n\n  /**\n   * Try to update the style of a DOM element. Some style changes will throw an error,\n   * particularly in IE8. Those should be noops.\n   *\n   * @param {Element} el\n   *        The DOM element to be styled.\n   *\n   * @param {string} style\n   *        The CSS property on the element that should be styled.\n   *\n   * @param {string} rule\n   *        The style rule that should be applied to the property.\n   *\n   * @private\n   */\n  function tryUpdateStyle(el, style, rule) {\n    try {\n      el.style[style] = rule;\n    } catch (e) {\n      // Satisfies linter.\n      return;\n    }\n  }\n\n  /**\n   * Converts the CSS top/right/bottom/left property numeric value to string in pixels.\n   *\n   * @param {number} position\n   *        The CSS top/right/bottom/left property value.\n   *\n   * @return {string}\n   *          The CSS property value that was created, like '10px'.\n   *\n   * @private\n   */\n  function getCSSPositionValue(position) {\n    return position ? `${position}px` : '';\n  }\n\n  /**\n   * The component for displaying text track cues.\n   *\n   * @extends Component\n   */\n  class TextTrackDisplay extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Function} [ready]\n     *        The function to call when `TextTrackDisplay` is ready.\n     */\n    constructor(player, options, ready) {\n      super(player, options, ready);\n      const updateDisplayTextHandler = e => this.updateDisplay(e);\n      const updateDisplayHandler = e => {\n        this.updateDisplayOverlay();\n        this.updateDisplay(e);\n      };\n      player.on('loadstart', e => this.toggleDisplay(e));\n      player.on('texttrackchange', updateDisplayTextHandler);\n      player.on('loadedmetadata', e => {\n        this.updateDisplayOverlay();\n        this.preselectTrack(e);\n      });\n\n      // This used to be called during player init, but was causing an error\n      // if a track should show by default and the display hadn't loaded yet.\n      // Should probably be moved to an external track loader when we support\n      // tracks that don't need a display.\n      player.ready(bind_(this, function () {\n        if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n          this.hide();\n          return;\n        }\n        player.on('fullscreenchange', updateDisplayHandler);\n        player.on('playerresize', updateDisplayHandler);\n        const screenOrientation = window.screen.orientation || window;\n        const changeOrientationEvent = window.screen.orientation ? 'change' : 'orientationchange';\n        screenOrientation.addEventListener(changeOrientationEvent, updateDisplayHandler);\n        player.on('dispose', () => screenOrientation.removeEventListener(changeOrientationEvent, updateDisplayHandler));\n        const tracks = this.options_.playerOptions.tracks || [];\n        for (let i = 0; i < tracks.length; i++) {\n          this.player_.addRemoteTextTrack(tracks[i], true);\n        }\n        this.preselectTrack();\n      }));\n    }\n\n    /**\n    * Preselect a track following this precedence:\n    * - matches the previously selected {@link TextTrack}'s language and kind\n    * - matches the previously selected {@link TextTrack}'s language only\n    * - is the first default captions track\n    * - is the first default descriptions track\n    *\n    * @listens Player#loadstart\n    */\n    preselectTrack() {\n      const modes = {\n        captions: 1,\n        subtitles: 1\n      };\n      const trackList = this.player_.textTracks();\n      const userPref = this.player_.cache_.selectedLanguage;\n      let firstDesc;\n      let firstCaptions;\n      let preferredTrack;\n      for (let i = 0; i < trackList.length; i++) {\n        const track = trackList[i];\n        if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n          // Always choose the track that matches both language and kind\n          if (track.kind === userPref.kind) {\n            preferredTrack = track;\n            // or choose the first track that matches language\n          } else if (!preferredTrack) {\n            preferredTrack = track;\n          }\n\n          // clear everything if offTextTrackMenuItem was clicked\n        } else if (userPref && !userPref.enabled) {\n          preferredTrack = null;\n          firstDesc = null;\n          firstCaptions = null;\n        } else if (track.default) {\n          if (track.kind === 'descriptions' && !firstDesc) {\n            firstDesc = track;\n          } else if (track.kind in modes && !firstCaptions) {\n            firstCaptions = track;\n          }\n        }\n      }\n\n      // The preferredTrack matches the user preference and takes\n      // precedence over all the other tracks.\n      // So, display the preferredTrack before the first default track\n      // and the subtitles/captions track before the descriptions track\n      if (preferredTrack) {\n        preferredTrack.mode = 'showing';\n      } else if (firstCaptions) {\n        firstCaptions.mode = 'showing';\n      } else if (firstDesc) {\n        firstDesc.mode = 'showing';\n      }\n    }\n\n    /**\n     * Turn display of {@link TextTrack}'s from the current state into the other state.\n     * There are only two states:\n     * - 'shown'\n     * - 'hidden'\n     *\n     * @listens Player#loadstart\n     */\n    toggleDisplay() {\n      if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    }\n\n    /**\n     * Create the {@link Component}'s DOM element.\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      return super.createEl('div', {\n        className: 'vjs-text-track-display'\n      }, {\n        'translate': 'yes',\n        'aria-live': 'off',\n        'aria-atomic': 'true'\n      });\n    }\n\n    /**\n     * Clear all displayed {@link TextTrack}s.\n     */\n    clearDisplay() {\n      if (typeof window.WebVTT === 'function') {\n        window.WebVTT.processCues(window, [], this.el_);\n      }\n    }\n\n    /**\n     * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n     * a {@link Player#fullscreenchange} is fired.\n     *\n     * @listens Player#texttrackchange\n     * @listens Player#fullscreenchange\n     */\n    updateDisplay() {\n      const tracks = this.player_.textTracks();\n      const allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n      this.clearDisplay();\n      if (allowMultipleShowingTracks) {\n        const showingTracks = [];\n        for (let i = 0; i < tracks.length; ++i) {\n          const track = tracks[i];\n          if (track.mode !== 'showing') {\n            continue;\n          }\n          showingTracks.push(track);\n        }\n        this.updateForTrack(showingTracks);\n        return;\n      }\n\n      //  Track display prioritization model: if multiple tracks are 'showing',\n      //  display the first 'subtitles' or 'captions' track which is 'showing',\n      //  otherwise display the first 'descriptions' track which is 'showing'\n\n      let descriptionsTrack = null;\n      let captionsSubtitlesTrack = null;\n      let i = tracks.length;\n      while (i--) {\n        const track = tracks[i];\n        if (track.mode === 'showing') {\n          if (track.kind === 'descriptions') {\n            descriptionsTrack = track;\n          } else {\n            captionsSubtitlesTrack = track;\n          }\n        }\n      }\n      if (captionsSubtitlesTrack) {\n        if (this.getAttribute('aria-live') !== 'off') {\n          this.setAttribute('aria-live', 'off');\n        }\n        this.updateForTrack(captionsSubtitlesTrack);\n      } else if (descriptionsTrack) {\n        if (this.getAttribute('aria-live') !== 'assertive') {\n          this.setAttribute('aria-live', 'assertive');\n        }\n        this.updateForTrack(descriptionsTrack);\n      }\n    }\n\n    /**\n     * Updates the displayed TextTrack to be sure it overlays the video when a either\n     * a {@link Player#texttrackchange} or a {@link Player#fullscreenchange} is fired.\n     */\n    updateDisplayOverlay() {\n      // inset-inline and inset-block are not supprted on old chrome, but these are\n      // only likely to be used on TV devices\n      if (!this.player_.videoHeight() || !window.CSS.supports('inset-inline: 10px')) {\n        return;\n      }\n      const playerWidth = this.player_.currentWidth();\n      const playerHeight = this.player_.currentHeight();\n      const playerAspectRatio = playerWidth / playerHeight;\n      const videoAspectRatio = this.player_.videoWidth() / this.player_.videoHeight();\n      let insetInlineMatch = 0;\n      let insetBlockMatch = 0;\n      if (Math.abs(playerAspectRatio - videoAspectRatio) > 0.1) {\n        if (playerAspectRatio > videoAspectRatio) {\n          insetInlineMatch = Math.round((playerWidth - playerHeight * videoAspectRatio) / 2);\n        } else {\n          insetBlockMatch = Math.round((playerHeight - playerWidth / videoAspectRatio) / 2);\n        }\n      }\n      tryUpdateStyle(this.el_, 'insetInline', getCSSPositionValue(insetInlineMatch));\n      tryUpdateStyle(this.el_, 'insetBlock', getCSSPositionValue(insetBlockMatch));\n    }\n\n    /**\n     * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n     *\n     * @param {TextTrack} track\n     *        Text track object containing active cues to style.\n     */\n    updateDisplayState(track) {\n      const overrides = this.player_.textTrackSettings.getValues();\n      const cues = track.activeCues;\n      let i = cues.length;\n      while (i--) {\n        const cue = cues[i];\n        if (!cue) {\n          continue;\n        }\n        const cueDiv = cue.displayState;\n        if (overrides.color) {\n          cueDiv.firstChild.style.color = overrides.color;\n        }\n        if (overrides.textOpacity) {\n          tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n        }\n        if (overrides.backgroundColor) {\n          cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n        }\n        if (overrides.backgroundOpacity) {\n          tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n        }\n        if (overrides.windowColor) {\n          if (overrides.windowOpacity) {\n            tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n          } else {\n            cueDiv.style.backgroundColor = overrides.windowColor;\n          }\n        }\n        if (overrides.edgeStyle) {\n          if (overrides.edgeStyle === 'dropshadow') {\n            cueDiv.firstChild.style.textShadow = `2px 2px 3px ${darkGray}, 2px 2px 4px ${darkGray}, 2px 2px 5px ${darkGray}`;\n          } else if (overrides.edgeStyle === 'raised') {\n            cueDiv.firstChild.style.textShadow = `1px 1px ${darkGray}, 2px 2px ${darkGray}, 3px 3px ${darkGray}`;\n          } else if (overrides.edgeStyle === 'depressed') {\n            cueDiv.firstChild.style.textShadow = `1px 1px ${lightGray}, 0 1px ${lightGray}, -1px -1px ${darkGray}, 0 -1px ${darkGray}`;\n          } else if (overrides.edgeStyle === 'uniform') {\n            cueDiv.firstChild.style.textShadow = `0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}`;\n          }\n        }\n        if (overrides.fontPercent && overrides.fontPercent !== 1) {\n          const fontSize = window.parseFloat(cueDiv.style.fontSize);\n          cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n          cueDiv.style.height = 'auto';\n          cueDiv.style.top = 'auto';\n        }\n        if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n          if (overrides.fontFamily === 'small-caps') {\n            cueDiv.firstChild.style.fontVariant = 'small-caps';\n          } else {\n            cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n          }\n        }\n      }\n    }\n\n    /**\n     * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n     *\n     * @param {TextTrack|TextTrack[]} tracks\n     *        Text track object or text track array to be added to the list.\n     */\n    updateForTrack(tracks) {\n      if (!Array.isArray(tracks)) {\n        tracks = [tracks];\n      }\n      if (typeof window.WebVTT !== 'function' || tracks.every(track => {\n        return !track.activeCues;\n      })) {\n        return;\n      }\n      const cues = [];\n\n      // push all active track cues\n      for (let i = 0; i < tracks.length; ++i) {\n        const track = tracks[i];\n        for (let j = 0; j < track.activeCues.length; ++j) {\n          cues.push(track.activeCues[j]);\n        }\n      }\n\n      // removes all cues before it processes new ones\n      window.WebVTT.processCues(window, cues, this.el_);\n\n      // add unique class to each language text track & add settings styling if necessary\n      for (let i = 0; i < tracks.length; ++i) {\n        const track = tracks[i];\n        for (let j = 0; j < track.activeCues.length; ++j) {\n          const cueEl = track.activeCues[j].displayState;\n          addClass(cueEl, 'vjs-text-track-cue', 'vjs-text-track-cue-' + (track.language ? track.language : i));\n          if (track.language) {\n            setAttribute(cueEl, 'lang', track.language);\n          }\n        }\n        if (this.player_.textTrackSettings) {\n          this.updateDisplayState(track);\n        }\n      }\n    }\n  }\n  Component$1.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n  /**\n   * @file loading-spinner.js\n   */\n\n  /**\n   * A loading spinner for use during waiting/loading events.\n   *\n   * @extends Component\n   */\n  class LoadingSpinner extends Component$1 {\n    /**\n     * Create the `LoadingSpinner`s DOM element.\n     *\n     * @return {Element}\n     *         The dom element that gets created.\n     */\n    createEl() {\n      const isAudio = this.player_.isAudio();\n      const playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n      const controlText = createEl('span', {\n        className: 'vjs-control-text',\n        textContent: this.localize('{1} is loading.', [playerType])\n      });\n      const el = super.createEl('div', {\n        className: 'vjs-loading-spinner',\n        dir: 'ltr'\n      });\n      el.appendChild(controlText);\n      return el;\n    }\n\n    /**\n     * Update control text on languagechange\n     */\n    handleLanguagechange() {\n      this.$('.vjs-control-text').textContent = this.localize('{1} is loading.', [this.player_.isAudio() ? 'Audio Player' : 'Video Player']);\n    }\n  }\n  Component$1.registerComponent('LoadingSpinner', LoadingSpinner);\n\n  /**\n   * @file button.js\n   */\n\n  /**\n   * Base class for all buttons.\n   *\n   * @extends ClickableComponent\n   */\n  class Button extends ClickableComponent {\n    /**\n     * Create the `Button`s DOM element.\n     *\n     * @param {string} [tag=\"button\"]\n     *        The element's node type. This argument is IGNORED: no matter what\n     *        is passed, it will always create a `button` element.\n     *\n     * @param {Object} [props={}]\n     *        An object of properties that should be set on the element.\n     *\n     * @param {Object} [attributes={}]\n     *        An object of attributes that should be set on the element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    createEl(tag, props = {}, attributes = {}) {\n      tag = 'button';\n      props = Object.assign({\n        className: this.buildCSSClass()\n      }, props);\n\n      // Add attributes for button element\n      attributes = Object.assign({\n        // Necessary since the default button type is \"submit\"\n        type: 'button'\n      }, attributes);\n      const el = createEl(tag, props, attributes);\n      if (!this.player_.options_.experimentalSvgIcons) {\n        el.appendChild(createEl('span', {\n          className: 'vjs-icon-placeholder'\n        }, {\n          'aria-hidden': true\n        }));\n      }\n      this.createControlTextEl(el);\n      return el;\n    }\n\n    /**\n     * Add a child `Component` inside of this `Button`.\n     *\n     * @param {string|Component} child\n     *        The name or instance of a child to add.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of options that will get passed to children of\n     *        the child.\n     *\n     * @return {Component}\n     *         The `Component` that gets added as a child. When using a string the\n     *         `Component` will get created by this process.\n     *\n     * @deprecated since version 5\n     */\n    addChild(child, options = {}) {\n      const className = this.constructor.name;\n      log$1.warn(`Adding an actionable (user controllable) child to a Button (${className}) is not supported; use a ClickableComponent instead.`);\n\n      // Avoid the error message generated by ClickableComponent's addChild method\n      return Component$1.prototype.addChild.call(this, child, options);\n    }\n\n    /**\n     * Enable the `Button` element so that it can be activated or clicked. Use this with\n     * {@link Button#disable}.\n     */\n    enable() {\n      super.enable();\n      this.el_.removeAttribute('disabled');\n    }\n\n    /**\n     * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n     * {@link Button#enable}.\n     */\n    disable() {\n      super.disable();\n      this.el_.setAttribute('disabled', 'disabled');\n    }\n\n    /**\n     * This gets called when a `Button` has focus and `keydown` is triggered via a key\n     * press.\n     *\n     * @param {KeyboardEvent} event\n     *        The event that caused this function to get called.\n     *\n     * @listens keydown\n     */\n    handleKeyDown(event) {\n      // Ignore Space or Enter key operation, which is handled by the browser for\n      // a button - though not for its super class, ClickableComponent. Also,\n      // prevent the event from propagating through the DOM and triggering Player\n      // hotkeys. We do not preventDefault here because we _want_ the browser to\n      // handle it.\n      if (event.key === ' ' || event.key === 'Enter') {\n        event.stopPropagation();\n        return;\n      }\n\n      // Pass keypress handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n  Component$1.registerComponent('Button', Button);\n\n  /**\n   * @file big-play-button.js\n   */\n\n  /**\n   * The initial play button that shows before the video has played. The hiding of the\n   * `BigPlayButton` get done via CSS and `Player` states.\n   *\n   * @extends Button\n   */\n  class BigPlayButton extends Button {\n    constructor(player, options) {\n      super(player, options);\n      this.mouseused_ = false;\n      this.setIcon('play');\n      this.on('mousedown', e => this.handleMouseDown(e));\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n     */\n    buildCSSClass() {\n      return 'vjs-big-play-button';\n    }\n\n    /**\n     * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n     * for more detailed information on what a click can be.\n     *\n     * @param {KeyboardEvent|MouseEvent|TouchEvent} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    handleClick(event) {\n      const playPromise = this.player_.play();\n\n      // exit early if clicked via the mouse\n      if (this.mouseused_ && 'clientX' in event && 'clientY' in event) {\n        silencePromise(playPromise);\n        if (this.player_.tech(true)) {\n          this.player_.tech(true).focus();\n        }\n        return;\n      }\n      const cb = this.player_.getChild('controlBar');\n      const playToggle = cb && cb.getChild('playToggle');\n      if (!playToggle) {\n        this.player_.tech(true).focus();\n        return;\n      }\n      const playFocus = () => playToggle.focus();\n      if (isPromise(playPromise)) {\n        playPromise.then(playFocus, () => {});\n      } else {\n        this.setTimeout(playFocus, 1);\n      }\n    }\n\n    /**\n     * Event handler that is called when a `BigPlayButton` receives a\n     * `keydown` event.\n     *\n     * @param {KeyboardEvent} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    handleKeyDown(event) {\n      this.mouseused_ = false;\n      super.handleKeyDown(event);\n    }\n\n    /**\n     * Handle `mousedown` events on the `BigPlayButton`.\n     *\n     * @param {MouseEvent} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     */\n    handleMouseDown(event) {\n      this.mouseused_ = true;\n    }\n  }\n\n  /**\n   * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @protected\n   */\n  BigPlayButton.prototype.controlText_ = 'Play Video';\n  Component$1.registerComponent('BigPlayButton', BigPlayButton);\n\n  /**\n   * @file close-button.js\n   */\n\n  /** @import Player from './player' */\n\n  /**\n   * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n   * it gets clicked.\n   *\n   * @extends Button\n   */\n  class CloseButton extends Button {\n    /**\n    * Creates an instance of the this class.\n    *\n    * @param  {Player} player\n    *         The `Player` that this class should be attached to.\n    *\n    * @param  {Object} [options]\n    *         The key/value store of player options.\n    */\n    constructor(player, options) {\n      super(player, options);\n      this.setIcon('cancel');\n      this.controlText(options && options.controlText || this.localize('Close'));\n    }\n\n    /**\n    * Builds the default DOM `className`.\n    *\n    * @return {string}\n    *         The DOM `className` for this object.\n    */\n    buildCSSClass() {\n      return `vjs-close-button ${super.buildCSSClass()}`;\n    }\n\n    /**\n     * This gets called when a `CloseButton` gets clicked. See\n     * {@link ClickableComponent#handleClick} for more information on when\n     * this will be triggered\n     *\n     * @param {Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     * @fires CloseButton#close\n     */\n    handleClick(event) {\n      /**\n       * Triggered when the a `CloseButton` is clicked.\n       *\n       * @event CloseButton#close\n       * @type {Event}\n       *\n       * @property {boolean} [bubbles=false]\n       *           set to false so that the close event does not\n       *           bubble up to parents if there is no listener\n       */\n      this.trigger({\n        type: 'close',\n        bubbles: false\n      });\n    }\n    /**\n     * Event handler that is called when a `CloseButton` receives a\n     * `keydown` event.\n     *\n     * By default, if the key is Esc, it will trigger a `click` event.\n     *\n     * @param {KeyboardEvent} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    handleKeyDown(event) {\n      // Esc button will trigger `click` event\n      if (event.key === 'Escape') {\n        event.preventDefault();\n        event.stopPropagation();\n        this.trigger('click');\n      } else {\n        // Pass keypress handling up for unsupported keys\n        super.handleKeyDown(event);\n      }\n    }\n  }\n  Component$1.registerComponent('CloseButton', CloseButton);\n\n  /**\n   * @file play-toggle.js\n   */\n\n  /** @import Player from './player' */\n\n  /**\n   * Button to toggle between play and pause.\n   *\n   * @extends Button\n   */\n  class PlayToggle extends Button {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    constructor(player, options = {}) {\n      super(player, options);\n\n      // show or hide replay icon\n      options.replay = options.replay === undefined || options.replay;\n      this.setIcon('play');\n      this.on(player, 'play', e => this.handlePlay(e));\n      this.on(player, 'pause', e => this.handlePause(e));\n      if (options.replay) {\n        this.on(player, 'ended', e => this.handleEnded(e));\n      }\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return `vjs-play-control ${super.buildCSSClass()}`;\n    }\n\n    /**\n     * This gets called when an `PlayToggle` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    handleClick(event) {\n      if (this.player_.paused()) {\n        silencePromise(this.player_.play());\n      } else {\n        this.player_.pause();\n      }\n    }\n\n    /**\n     * This gets called once after the video has ended and the user seeks so that\n     * we can change the replay button back to a play button.\n     *\n     * @param {Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#seeked\n     */\n    handleSeeked(event) {\n      this.removeClass('vjs-ended');\n      if (this.player_.paused()) {\n        this.handlePause(event);\n      } else {\n        this.handlePlay(event);\n      }\n    }\n\n    /**\n     * Add the vjs-playing class to the element so it can change appearance.\n     *\n     * @param {Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#play\n     */\n    handlePlay(event) {\n      this.removeClass('vjs-ended', 'vjs-paused');\n      this.addClass('vjs-playing');\n      // change the button text to \"Pause\"\n      this.setIcon('pause');\n      this.controlText('Pause');\n    }\n\n    /**\n     * Add the vjs-paused class to the element so it can change appearance.\n     *\n     * @param {Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#pause\n     */\n    handlePause(event) {\n      this.removeClass('vjs-playing');\n      this.addClass('vjs-paused');\n      // change the button text to \"Play\"\n      this.setIcon('play');\n      this.controlText('Play');\n    }\n\n    /**\n     * Add the vjs-ended class to the element so it can change appearance\n     *\n     * @param {Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#ended\n     */\n    handleEnded(event) {\n      this.removeClass('vjs-playing');\n      this.addClass('vjs-ended');\n      // change the button text to \"Replay\"\n      this.setIcon('replay');\n      this.controlText('Replay');\n\n      // on the next seek remove the replay button\n      this.one(this.player_, 'seeked', e => this.handleSeeked(e));\n    }\n  }\n\n  /**\n   * The text that should display over the `PlayToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @protected\n   */\n  PlayToggle.prototype.controlText_ = 'Play';\n  Component$1.registerComponent('PlayToggle', PlayToggle);\n\n  /**\n   * @file time-display.js\n   */\n\n  /** @import Player from '../../player' */\n\n  /**\n   * Displays time information about the video\n   *\n   * @extends Component\n   */\n  class TimeDisplay extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.on(player, ['timeupdate', 'ended', 'seeking'], e => this.update(e));\n      this.updateTextNode_();\n    }\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      const className = this.buildCSSClass();\n      const el = super.createEl('div', {\n        className: `${className} vjs-time-control vjs-control`\n      });\n      const span = createEl('span', {\n        className: 'vjs-control-text',\n        textContent: `${this.localize(this.labelText_)}\\u00a0`\n      }, {\n        role: 'presentation'\n      });\n      el.appendChild(span);\n      this.contentEl_ = createEl('span', {\n        className: `${className}-display`\n      }, {\n        // span elements have no implicit role, but some screen readers (notably VoiceOver)\n        // treat them as a break between items in the DOM when using arrow keys\n        // (or left-to-right swipes on iOS) to read contents of a page. Using\n        // role='presentation' causes VoiceOver to NOT treat this span as a break.\n        role: 'presentation'\n      });\n      el.appendChild(this.contentEl_);\n      return el;\n    }\n    dispose() {\n      this.contentEl_ = null;\n      this.textNode_ = null;\n      super.dispose();\n    }\n\n    /**\n     * Updates the displayed time according to the `updateContent` function which is defined in the child class.\n     *\n     * @param {Event} [event]\n     *          The `timeupdate`, `ended` or `seeking` (if enableSmoothSeeking is true) event that caused this function to be called.\n     */\n    update(event) {\n      if (!this.player_.options_.enableSmoothSeeking && event.type === 'seeking') {\n        return;\n      }\n      this.updateContent(event);\n    }\n\n    /**\n     * Updates the time display text node with a new time\n     *\n     * @param {number} [time=0] the time to update to\n     *\n     * @private\n     */\n    updateTextNode_(time = 0) {\n      time = formatTime(time);\n      if (this.formattedTime_ === time) {\n        return;\n      }\n      this.formattedTime_ = time;\n      this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', () => {\n        if (!this.contentEl_) {\n          return;\n        }\n        let oldNode = this.textNode_;\n        if (oldNode && this.contentEl_.firstChild !== oldNode) {\n          oldNode = null;\n          log$1.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');\n        }\n        this.textNode_ = document.createTextNode(this.formattedTime_);\n        if (!this.textNode_) {\n          return;\n        }\n        if (oldNode) {\n          this.contentEl_.replaceChild(this.textNode_, oldNode);\n        } else {\n          this.contentEl_.appendChild(this.textNode_);\n        }\n      });\n    }\n\n    /**\n     * To be filled out in the child class, should update the displayed time\n     * in accordance with the fact that the current time has changed.\n     *\n     * @param {Event} [event]\n     *        The `timeupdate`  event that caused this to run.\n     *\n     * @listens Player#timeupdate\n     */\n    updateContent(event) {}\n  }\n\n  /**\n   * The text that is added to the `TimeDisplay` for screen reader users.\n   *\n   * @type {string}\n   * @private\n   */\n  TimeDisplay.prototype.labelText_ = 'Time';\n\n  /**\n   * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @protected\n   *\n   * @deprecated in v7; controlText_ is not used in non-active display Components\n   */\n  TimeDisplay.prototype.controlText_ = 'Time';\n  Component$1.registerComponent('TimeDisplay', TimeDisplay);\n\n  /**\n   * @file current-time-display.js\n   */\n\n  /**\n   * Displays the current time\n   *\n   * @extends Component\n   */\n  class CurrentTimeDisplay extends TimeDisplay {\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return 'vjs-current-time';\n    }\n\n    /**\n     * Update current time display\n     *\n     * @param {Event} [event]\n     *        The `timeupdate` event that caused this function to run.\n     *\n     * @listens Player#timeupdate\n     */\n    updateContent(event) {\n      // Allows for smooth scrubbing, when player can't keep up.\n      let time;\n      if (this.player_.ended()) {\n        time = this.player_.duration();\n      } else {\n        time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n      }\n      this.updateTextNode_(time);\n    }\n  }\n\n  /**\n   * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n   *\n   * @type {string}\n   * @private\n   */\n  CurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n  /**\n   * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @protected\n   *\n   * @deprecated in v7; controlText_ is not used in non-active display Components\n   */\n  CurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n  Component$1.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n  /**\n   * @file duration-display.js\n   */\n\n  /** @import Player from '../../player' */\n\n  /**\n   * Displays the duration\n   *\n   * @extends Component\n   */\n  class DurationDisplay extends TimeDisplay {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      const updateContent = e => this.updateContent(e);\n\n      // we do not want to/need to throttle duration changes,\n      // as they should always display the changed duration as\n      // it has changed\n      this.on(player, 'durationchange', updateContent);\n\n      // Listen to loadstart because the player duration is reset when a new media element is loaded,\n      // but the durationchange on the user agent will not fire.\n      // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n      this.on(player, 'loadstart', updateContent);\n\n      // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n      // listeners could have broken dependent applications/libraries. These\n      // can likely be removed for 7.0.\n      this.on(player, 'loadedmetadata', updateContent);\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return 'vjs-duration';\n    }\n\n    /**\n     * Update duration time display.\n     *\n     * @param {Event} [event]\n     *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n     *        this function to be called.\n     *\n     * @listens Player#durationchange\n     * @listens Player#timeupdate\n     * @listens Player#loadedmetadata\n     */\n    updateContent(event) {\n      const duration = this.player_.duration();\n      this.updateTextNode_(duration);\n    }\n  }\n\n  /**\n   * The text that is added to the `DurationDisplay` for screen reader users.\n   *\n   * @type {string}\n   * @private\n   */\n  DurationDisplay.prototype.labelText_ = 'Duration';\n\n  /**\n   * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @protected\n   *\n   * @deprecated in v7; controlText_ is not used in non-active display Components\n   */\n  DurationDisplay.prototype.controlText_ = 'Duration';\n  Component$1.registerComponent('DurationDisplay', DurationDisplay);\n\n  /**\n   * @file time-divider.js\n   */\n\n  /**\n   * The separator between the current time and duration.\n   * Can be hidden if it's not needed in the design.\n   *\n   * @extends Component\n   */\n  class TimeDivider extends Component$1 {\n    /**\n     * Create the component's DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      const el = super.createEl('div', {\n        className: 'vjs-time-control vjs-time-divider'\n      }, {\n        // this element and its contents can be hidden from assistive techs since\n        // it is made extraneous by the announcement of the control text\n        // for the current time and duration displays\n        'aria-hidden': true\n      });\n      const div = super.createEl('div');\n      const span = super.createEl('span', {\n        textContent: '/'\n      });\n      div.appendChild(span);\n      el.appendChild(div);\n      return el;\n    }\n  }\n  Component$1.registerComponent('TimeDivider', TimeDivider);\n\n  /**\n   * @file remaining-time-display.js\n   */\n\n  /** @import Player from '../../player' */\n\n  /**\n   * Displays the time left in the video\n   *\n   * @extends Component\n   */\n  class RemainingTimeDisplay extends TimeDisplay {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.on(player, 'durationchange', e => this.updateContent(e));\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return 'vjs-remaining-time';\n    }\n\n    /**\n     * Create the `Component`'s DOM element with the \"minus\" character prepend to the time\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      const el = super.createEl();\n      if (this.options_.displayNegative !== false) {\n        el.insertBefore(createEl('span', {}, {\n          'aria-hidden': true\n        }, '-'), this.contentEl_);\n      }\n      return el;\n    }\n\n    /**\n     * Update remaining time display.\n     *\n     * @param {Event} [event]\n     *        The `timeupdate` or `durationchange` event that caused this to run.\n     *\n     * @listens Player#timeupdate\n     * @listens Player#durationchange\n     */\n    updateContent(event) {\n      if (typeof this.player_.duration() !== 'number') {\n        return;\n      }\n      let time;\n\n      // @deprecated We should only use remainingTimeDisplay\n      // as of video.js 7\n      if (this.player_.ended()) {\n        time = 0;\n      } else if (this.player_.remainingTimeDisplay) {\n        time = this.player_.remainingTimeDisplay();\n      } else {\n        time = this.player_.remainingTime();\n      }\n      this.updateTextNode_(time);\n    }\n  }\n\n  /**\n   * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n   *\n   * @type {string}\n   * @private\n   */\n  RemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n  /**\n   * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @protected\n   *\n   * @deprecated in v7; controlText_ is not used in non-active display Components\n   */\n  RemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n  Component$1.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n  /**\n   * @file live-display.js\n   */\n\n  /** @import Player from './player' */\n\n  // TODO - Future make it click to snap to live\n\n  /**\n   * Displays the live indicator when duration is Infinity.\n   *\n   * @extends Component\n   */\n  class LiveDisplay extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.updateShowing();\n      this.on(this.player(), 'durationchange', e => this.updateShowing(e));\n    }\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      const el = super.createEl('div', {\n        className: 'vjs-live-control vjs-control'\n      });\n      this.contentEl_ = createEl('div', {\n        className: 'vjs-live-display'\n      }, {\n        'aria-live': 'off'\n      });\n      this.contentEl_.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        textContent: `${this.localize('Stream Type')}\\u00a0`\n      }));\n      this.contentEl_.appendChild(document.createTextNode(this.localize('LIVE')));\n      el.appendChild(this.contentEl_);\n      return el;\n    }\n    dispose() {\n      this.contentEl_ = null;\n      super.dispose();\n    }\n\n    /**\n     * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n     * it accordingly\n     *\n     * @param {Event} [event]\n     *        The {@link Player#durationchange} event that caused this function to run.\n     *\n     * @listens Player#durationchange\n     */\n    updateShowing(event) {\n      if (this.player().duration() === Infinity) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    }\n  }\n  Component$1.registerComponent('LiveDisplay', LiveDisplay);\n\n  /**\n   * @file seek-to-live.js\n   */\n\n  /** @import Player from './player' */\n\n  /**\n   * Displays the live indicator when duration is Infinity.\n   *\n   * @extends Component\n   */\n  class SeekToLive extends Button {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.updateLiveEdgeStatus();\n      if (this.player_.liveTracker) {\n        this.updateLiveEdgeStatusHandler_ = e => this.updateLiveEdgeStatus(e);\n        this.on(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n      }\n    }\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      const el = super.createEl('button', {\n        className: 'vjs-seek-to-live-control vjs-control'\n      });\n      this.setIcon('circle', el);\n      this.textEl_ = createEl('span', {\n        className: 'vjs-seek-to-live-text',\n        textContent: this.localize('LIVE')\n      }, {\n        'aria-hidden': 'true'\n      });\n      el.appendChild(this.textEl_);\n      return el;\n    }\n\n    /**\n     * Update the state of this button if we are at the live edge\n     * or not\n     */\n    updateLiveEdgeStatus() {\n      // default to live edge\n      if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n        this.setAttribute('aria-disabled', true);\n        this.addClass('vjs-at-live-edge');\n        this.controlText('Seek to live, currently playing live');\n      } else {\n        this.setAttribute('aria-disabled', false);\n        this.removeClass('vjs-at-live-edge');\n        this.controlText('Seek to live, currently behind live');\n      }\n    }\n\n    /**\n     * On click bring us as near to the live point as possible.\n     * This requires that we wait for the next `live-seekable-change`\n     * event which will happen every segment length seconds.\n     */\n    handleClick() {\n      this.player_.liveTracker.seekToLiveEdge();\n    }\n\n    /**\n     * Dispose of the element and stop tracking\n     */\n    dispose() {\n      if (this.player_.liveTracker) {\n        this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n      }\n      this.textEl_ = null;\n      super.dispose();\n    }\n  }\n  /**\n   * The text that should display over the `SeekToLive`s control. Added for localization.\n   *\n   * @type {string}\n   * @protected\n   */\n  SeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\n  Component$1.registerComponent('SeekToLive', SeekToLive);\n\n  /**\n   * @file num.js\n   * @module num\n   */\n\n  /**\n   * Keep a number between a min and a max value\n   *\n   * @param {number} number\n   *        The number to clamp\n   *\n   * @param {number} min\n   *        The minimum value\n   * @param {number} max\n   *        The maximum value\n   *\n   * @return {number}\n   *         the clamped number\n   */\n  function clamp(number, min, max) {\n    number = Number(number);\n    return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n  }\n\n  var Num = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    clamp: clamp\n  });\n\n  /**\n   * @file slider.js\n   */\n\n  /** @import Player from '../player' */\n\n  /**\n   * The base functionality for a slider. Can be vertical or horizontal.\n   * For instance the volume bar or the seek bar on a video is a slider.\n   *\n   * @extends Component\n   */\n  class Slider extends Component$1 {\n    /**\n    * Create an instance of this class\n    *\n    * @param {Player} player\n    *        The `Player` that this class should be attached to.\n    *\n    * @param {Object} [options]\n    *        The key/value store of player options.\n    */\n    constructor(player, options) {\n      super(player, options);\n      this.handleMouseDown_ = e => this.handleMouseDown(e);\n      this.handleMouseUp_ = e => this.handleMouseUp(e);\n      this.handleKeyDown_ = e => this.handleKeyDown(e);\n      this.handleClick_ = e => this.handleClick(e);\n      this.handleMouseMove_ = e => this.handleMouseMove(e);\n      this.update_ = e => this.update(e);\n\n      // Set property names to bar to match with the child Slider class is looking for\n      this.bar = this.getChild(this.options_.barName);\n\n      // Set a horizontal or vertical class on the slider depending on the slider type\n      this.vertical(!!this.options_.vertical);\n      this.enable();\n    }\n\n    /**\n     * Are controls are currently enabled for this slider or not.\n     *\n     * @return {boolean}\n     *         true if controls are enabled, false otherwise\n     */\n    enabled() {\n      return this.enabled_;\n    }\n\n    /**\n     * Enable controls for this slider if they are disabled\n     */\n    enable() {\n      if (this.enabled()) {\n        return;\n      }\n      this.on('mousedown', this.handleMouseDown_);\n      this.on('touchstart', this.handleMouseDown_);\n      this.on('keydown', this.handleKeyDown_);\n      this.on('click', this.handleClick_);\n\n      // TODO: deprecated, controlsvisible does not seem to be fired\n      this.on(this.player_, 'controlsvisible', this.update);\n      if (this.playerEvent) {\n        this.on(this.player_, this.playerEvent, this.update);\n      }\n      this.removeClass('disabled');\n      this.setAttribute('tabindex', 0);\n      this.enabled_ = true;\n    }\n\n    /**\n     * Disable controls for this slider if they are enabled\n     */\n    disable() {\n      if (!this.enabled()) {\n        return;\n      }\n      const doc = this.bar.el_.ownerDocument;\n      this.off('mousedown', this.handleMouseDown_);\n      this.off('touchstart', this.handleMouseDown_);\n      this.off('keydown', this.handleKeyDown_);\n      this.off('click', this.handleClick_);\n      this.off(this.player_, 'controlsvisible', this.update_);\n      this.off(doc, 'mousemove', this.handleMouseMove_);\n      this.off(doc, 'mouseup', this.handleMouseUp_);\n      this.off(doc, 'touchmove', this.handleMouseMove_);\n      this.off(doc, 'touchend', this.handleMouseUp_);\n      this.removeAttribute('tabindex');\n      this.addClass('disabled');\n      if (this.playerEvent) {\n        this.off(this.player_, this.playerEvent, this.update);\n      }\n      this.enabled_ = false;\n    }\n\n    /**\n     * Create the `Slider`s DOM element.\n     *\n     * @param {string} type\n     *        Type of element to create.\n     *\n     * @param {Object} [props={}]\n     *        List of properties in Object form.\n     *\n     * @param {Object} [attributes={}]\n     *        list of attributes in Object form.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    createEl(type, props = {}, attributes = {}) {\n      // Add the slider element class to all sub classes\n      props.className = props.className + ' vjs-slider';\n      props = Object.assign({\n        tabIndex: 0\n      }, props);\n      attributes = Object.assign({\n        'role': 'slider',\n        'aria-valuenow': 0,\n        'aria-valuemin': 0,\n        'aria-valuemax': 100\n      }, attributes);\n      return super.createEl(type, props, attributes);\n    }\n\n    /**\n     * Handle `mousedown` or `touchstart` events on the `Slider`.\n     *\n     * @param {MouseEvent} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     * @listens touchstart\n     * @fires Slider#slideractive\n     */\n    handleMouseDown(event) {\n      const doc = this.bar.el_.ownerDocument;\n      if (event.type === 'mousedown') {\n        event.preventDefault();\n      }\n      // Do not call preventDefault() on touchstart in Chrome\n      // to avoid console warnings. Use a 'touch-action: none' style\n      // instead to prevent unintended scrolling.\n      // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n      if (event.type === 'touchstart' && !IS_CHROME) {\n        event.preventDefault();\n      }\n      blockTextSelection();\n      this.addClass('vjs-sliding');\n      /**\n       * Triggered when the slider is in an active state\n       *\n       * @event Slider#slideractive\n       * @type {MouseEvent}\n       */\n      this.trigger('slideractive');\n      this.on(doc, 'mousemove', this.handleMouseMove_);\n      this.on(doc, 'mouseup', this.handleMouseUp_);\n      this.on(doc, 'touchmove', this.handleMouseMove_);\n      this.on(doc, 'touchend', this.handleMouseUp_);\n      this.handleMouseMove(event, true);\n    }\n\n    /**\n     * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n     * The `mousemove` and `touchmove` events will only only trigger this function during\n     * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n     * {@link Slider#handleMouseUp}.\n     *\n     * @param {MouseEvent} event\n     *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n     *        this function\n     * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false.\n     *\n     * @listens mousemove\n     * @listens touchmove\n     */\n    handleMouseMove(event) {}\n\n    /**\n     * Handle `mouseup` or `touchend` events on the `Slider`.\n     *\n     * @param {MouseEvent} event\n     *        `mouseup` or `touchend` event that triggered this function.\n     *\n     * @listens touchend\n     * @listens mouseup\n     * @fires Slider#sliderinactive\n     */\n    handleMouseUp(event) {\n      const doc = this.bar.el_.ownerDocument;\n      unblockTextSelection();\n      this.removeClass('vjs-sliding');\n      /**\n       * Triggered when the slider is no longer in an active state.\n       *\n       * @event Slider#sliderinactive\n       * @type {Event}\n       */\n      this.trigger('sliderinactive');\n      this.off(doc, 'mousemove', this.handleMouseMove_);\n      this.off(doc, 'mouseup', this.handleMouseUp_);\n      this.off(doc, 'touchmove', this.handleMouseMove_);\n      this.off(doc, 'touchend', this.handleMouseUp_);\n      this.update();\n    }\n\n    /**\n     * Update the progress bar of the `Slider`.\n     *\n     * @return {number}\n     *          The percentage of progress the progress bar represents as a\n     *          number from 0 to 1.\n     */\n    update() {\n      // In VolumeBar init we have a setTimeout for update that pops and update\n      // to the end of the execution stack. The player is destroyed before then\n      // update will cause an error\n      // If there's no bar...\n      if (!this.el_ || !this.bar) {\n        return;\n      }\n\n      // clamp progress between 0 and 1\n      // and only round to four decimal places, as we round to two below\n      const progress = this.getProgress();\n      if (progress === this.progress_) {\n        return progress;\n      }\n      this.progress_ = progress;\n      this.requestNamedAnimationFrame('Slider#update', () => {\n        // Set the new bar width or height\n        const sizeKey = this.vertical() ? 'height' : 'width';\n\n        // Convert to a percentage for css value\n        this.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n      });\n      return progress;\n    }\n\n    /**\n     * Get the percentage of the bar that should be filled\n     * but clamped and rounded.\n     *\n     * @return {number}\n     *         percentage filled that the slider is\n     */\n    getProgress() {\n      return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n    }\n\n    /**\n     * Calculate distance for slider\n     *\n     * @param {Event} event\n     *        The event that caused this function to run.\n     *\n     * @return {number}\n     *         The current position of the Slider.\n     *         - position.x for vertical `Slider`s\n     *         - position.y for horizontal `Slider`s\n     */\n    calculateDistance(event) {\n      const position = getPointerPosition(this.el_, event);\n      if (this.vertical()) {\n        return position.y;\n      }\n      return position.x;\n    }\n\n    /**\n     * Handle a `keydown` event on the `Slider`. Watches for left, right, up, and down\n     * arrow keys. This function will only be called when the slider has focus. See\n     * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n     *\n     * @param {KeyboardEvent} event\n     *        the `keydown` event that caused this function to run.\n     *\n     * @listens keydown\n     */\n    handleKeyDown(event) {\n      const spatialNavOptions = this.options_.playerOptions.spatialNavigation;\n      const spatialNavEnabled = spatialNavOptions && spatialNavOptions.enabled;\n      const horizontalSeek = spatialNavOptions && spatialNavOptions.horizontalSeek;\n      if (spatialNavEnabled) {\n        if (horizontalSeek && event.key === 'ArrowLeft' || !horizontalSeek && event.key === 'ArrowDown') {\n          event.preventDefault();\n          event.stopPropagation();\n          this.stepBack();\n        } else if (horizontalSeek && event.key === 'ArrowRight' || !horizontalSeek && event.key === 'ArrowUp') {\n          event.preventDefault();\n          event.stopPropagation();\n          this.stepForward();\n        } else {\n          super.handleKeyDown(event);\n        }\n\n        // Left and Down Arrows\n      } else if (event.key === 'ArrowLeft' || event.key === 'ArrowDown') {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepBack();\n\n        // Up and Right Arrows\n      } else if (event.key === 'ArrowUp' || event.key === 'ArrowRight') {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepForward();\n      } else {\n        // Pass keydown handling up for unsupported keys\n        super.handleKeyDown(event);\n      }\n    }\n\n    /**\n     * Listener for click events on slider, used to prevent clicks\n     *   from bubbling up to parent elements like button menus.\n     *\n     * @param {Object} event\n     *        Event that caused this object to run\n     */\n    handleClick(event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n\n    /**\n     * Get/set if slider is horizontal for vertical\n     *\n     * @param {boolean} [bool]\n     *        - true if slider is vertical,\n     *        - false is horizontal\n     *\n     * @return {boolean}\n     *         - true if slider is vertical, and getting\n     *         - false if the slider is horizontal, and getting\n     */\n    vertical(bool) {\n      if (bool === undefined) {\n        return this.vertical_ || false;\n      }\n      this.vertical_ = !!bool;\n      if (this.vertical_) {\n        this.addClass('vjs-slider-vertical');\n      } else {\n        this.addClass('vjs-slider-horizontal');\n      }\n    }\n  }\n  Component$1.registerComponent('Slider', Slider);\n\n  /**\n   * @file load-progress-bar.js\n   */\n\n  /** @import Player from '../../player' */\n\n  // get the percent width of a time compared to the total end\n  const percentify = (time, end) => clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n\n  /**\n   * Shows loading progress\n   *\n   * @extends Component\n   */\n  class LoadProgressBar extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.partEls_ = [];\n      this.on(player, 'progress', e => this.update(e));\n    }\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      const el = super.createEl('div', {\n        className: 'vjs-load-progress'\n      });\n      const wrapper = createEl('span', {\n        className: 'vjs-control-text'\n      });\n      const loadedText = createEl('span', {\n        textContent: this.localize('Loaded')\n      });\n      const separator = document.createTextNode(': ');\n      this.percentageEl_ = createEl('span', {\n        className: 'vjs-control-text-loaded-percentage',\n        textContent: '0%'\n      });\n      el.appendChild(wrapper);\n      wrapper.appendChild(loadedText);\n      wrapper.appendChild(separator);\n      wrapper.appendChild(this.percentageEl_);\n      return el;\n    }\n    dispose() {\n      this.partEls_ = null;\n      this.percentageEl_ = null;\n      super.dispose();\n    }\n\n    /**\n     * Update progress bar\n     *\n     * @param {Event} [event]\n     *        The `progress` event that caused this function to run.\n     *\n     * @listens Player#progress\n     */\n    update(event) {\n      this.requestNamedAnimationFrame('LoadProgressBar#update', () => {\n        const liveTracker = this.player_.liveTracker;\n        const buffered = this.player_.buffered();\n        const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n        const bufferedEnd = this.player_.bufferedEnd();\n        const children = this.partEls_;\n        const percent = percentify(bufferedEnd, duration);\n        if (this.percent_ !== percent) {\n          // update the width of the progress bar\n          this.el_.style.width = percent;\n          // update the control-text\n          textContent(this.percentageEl_, percent);\n          this.percent_ = percent;\n        }\n\n        // add child elements to represent the individual buffered time ranges\n        for (let i = 0; i < buffered.length; i++) {\n          const start = buffered.start(i);\n          const end = buffered.end(i);\n          let part = children[i];\n          if (!part) {\n            part = this.el_.appendChild(createEl());\n            children[i] = part;\n          }\n\n          //  only update if changed\n          if (part.dataset.start === start && part.dataset.end === end) {\n            continue;\n          }\n          part.dataset.start = start;\n          part.dataset.end = end;\n\n          // set the percent based on the width of the progress bar (bufferedEnd)\n          part.style.left = percentify(start, bufferedEnd);\n          part.style.width = percentify(end - start, bufferedEnd);\n        }\n\n        // remove unused buffered range elements\n        for (let i = children.length; i > buffered.length; i--) {\n          this.el_.removeChild(children[i - 1]);\n        }\n        children.length = buffered.length;\n      });\n    }\n  }\n  Component$1.registerComponent('LoadProgressBar', LoadProgressBar);\n\n  /**\n   * @file time-tooltip.js\n   */\n\n  /** @import Player from '../../player' */\n\n  /**\n   * Time tooltips display a time above the progress bar.\n   *\n   * @extends Component\n   */\n  class TimeTooltip extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n    }\n\n    /**\n     * Create the time tooltip DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      return super.createEl('div', {\n        className: 'vjs-time-tooltip'\n      }, {\n        'aria-hidden': 'true'\n      });\n    }\n\n    /**\n     * Updates the position of the time tooltip relative to the `SeekBar`.\n     *\n     * @param {Object} seekBarRect\n     *        The `ClientRect` for the {@link SeekBar} element.\n     *\n     * @param {number} seekBarPoint\n     *        A number from 0 to 1, representing a horizontal reference point\n     *        from the left edge of the {@link SeekBar}\n     */\n    update(seekBarRect, seekBarPoint, content) {\n      const tooltipRect = findPosition(this.el_);\n      const playerRect = getBoundingClientRect(this.player_.el());\n      const seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n      // do nothing if either rect isn't available\n      // for example, if the player isn't in the DOM for testing\n      if (!playerRect || !tooltipRect) {\n        return;\n      }\n\n      // This is the space left of the `seekBarPoint` available within the bounds\n      // of the player. We calculate any gap between the left edge of the player\n      // and the left edge of the `SeekBar` and add the number of pixels in the\n      // `SeekBar` before hitting the `seekBarPoint`\n      let spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n      // This is the space right of the `seekBarPoint` available within the bounds\n      // of the player. We calculate the number of pixels from the `seekBarPoint`\n      // to the right edge of the `SeekBar` and add to that any gap between the\n      // right edge of the `SeekBar` and the player.\n      let spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n      // spaceRightOfPoint is always NaN for mouse time display\n      // because the seekbarRect does not have a right property. This causes\n      // the mouse tool tip to be truncated when it's close to the right edge of the player.\n      // In such cases, we ignore the `playerRect.right - seekBarRect.right` value when calculating.\n      // For the sake of consistency, we ignore seekBarRect.left - playerRect.left for the left edge.\n      if (!spaceRightOfPoint) {\n        spaceRightOfPoint = seekBarRect.width - seekBarPointPx;\n        spaceLeftOfPoint = seekBarPointPx;\n      }\n      // This is the number of pixels by which the tooltip will need to be pulled\n      // further to the right to center it over the `seekBarPoint`.\n      let pullTooltipBy = tooltipRect.width / 2;\n\n      // Adjust the `pullTooltipBy` distance to the left or right depending on\n      // the results of the space calculations above.\n      if (spaceLeftOfPoint < pullTooltipBy) {\n        pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n      } else if (spaceRightOfPoint < pullTooltipBy) {\n        pullTooltipBy = spaceRightOfPoint;\n      }\n\n      // Due to the imprecision of decimal/ratio based calculations and varying\n      // rounding behaviors, there are cases where the spacing adjustment is off\n      // by a pixel or two. This adds insurance to these calculations.\n      if (pullTooltipBy < 0) {\n        pullTooltipBy = 0;\n      } else if (pullTooltipBy > tooltipRect.width) {\n        pullTooltipBy = tooltipRect.width;\n      }\n\n      // prevent small width fluctuations within 0.4px from\n      // changing the value below.\n      // This really helps for live to prevent the play\n      // progress time tooltip from jittering\n      pullTooltipBy = Math.round(pullTooltipBy);\n      this.el_.style.right = `-${pullTooltipBy}px`;\n      this.write(content);\n    }\n\n    /**\n     * Write the time to the tooltip DOM element.\n     *\n     * @param {string} content\n     *        The formatted time for the tooltip.\n     */\n    write(content) {\n      textContent(this.el_, content);\n    }\n\n    /**\n     * Updates the position of the time tooltip relative to the `SeekBar`.\n     *\n     * @param {Object} seekBarRect\n     *        The `ClientRect` for the {@link SeekBar} element.\n     *\n     * @param {number} seekBarPoint\n     *        A number from 0 to 1, representing a horizontal reference point\n     *        from the left edge of the {@link SeekBar}\n     *\n     * @param {number} time\n     *        The time to update the tooltip to, not used during live playback\n     *\n     * @param {Function} cb\n     *        A function that will be called during the request animation frame\n     *        for tooltips that need to do additional animations from the default\n     */\n    updateTime(seekBarRect, seekBarPoint, time, cb) {\n      this.requestNamedAnimationFrame('TimeTooltip#updateTime', () => {\n        let content;\n        const duration = this.player_.duration();\n        if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n          const liveWindow = this.player_.liveTracker.liveWindow();\n          const secondsBehind = liveWindow - seekBarPoint * liveWindow;\n          content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n        } else {\n          content = formatTime(time, duration);\n        }\n        this.update(seekBarRect, seekBarPoint, content);\n        if (cb) {\n          cb();\n        }\n      });\n    }\n  }\n  Component$1.registerComponent('TimeTooltip', TimeTooltip);\n\n  /**\n   * @file play-progress-bar.js\n   */\n\n  /**\n   * Used by {@link SeekBar} to display media playback progress as part of the\n   * {@link ProgressControl}.\n   *\n   * @extends Component\n   */\n  class PlayProgressBar extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.setIcon('circle');\n      this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n    }\n\n    /**\n     * Create the the DOM element for this class.\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      return super.createEl('div', {\n        className: 'vjs-play-progress vjs-slider-bar'\n      }, {\n        'aria-hidden': 'true'\n      });\n    }\n\n    /**\n     * Enqueues updates to its own DOM as well as the DOM of its\n     * {@link TimeTooltip} child.\n     *\n     * @param {Object} seekBarRect\n     *        The `ClientRect` for the {@link SeekBar} element.\n     *\n     * @param {number} seekBarPoint\n     *        A number from 0 to 1, representing a horizontal reference point\n     *        from the left edge of the {@link SeekBar}\n     */\n    update(seekBarRect, seekBarPoint) {\n      const timeTooltip = this.getChild('timeTooltip');\n      if (!timeTooltip) {\n        return;\n      }\n      const time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n      timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n    }\n  }\n\n  /**\n   * Default options for {@link PlayProgressBar}.\n   *\n   * @type {Object}\n   * @private\n   */\n  PlayProgressBar.prototype.options_ = {\n    children: []\n  };\n\n  // Time tooltips should not be added to a player on mobile devices\n  if (!IS_IOS && !IS_ANDROID) {\n    PlayProgressBar.prototype.options_.children.push('timeTooltip');\n  }\n  Component$1.registerComponent('PlayProgressBar', PlayProgressBar);\n\n  /**\n   * @file mouse-time-display.js\n   */\n\n  /**\n   * The {@link MouseTimeDisplay} component tracks mouse movement over the\n   * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n   * indicating the time which is represented by a given point in the\n   * {@link ProgressControl}.\n   *\n   * @extends Component\n   */\n  class MouseTimeDisplay extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n    }\n\n    /**\n     * Create the DOM element for this class.\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      return super.createEl('div', {\n        className: 'vjs-mouse-display'\n      });\n    }\n\n    /**\n     * Enqueues updates to its own DOM as well as the DOM of its\n     * {@link TimeTooltip} child.\n     *\n     * @param {Object} seekBarRect\n     *        The `ClientRect` for the {@link SeekBar} element.\n     *\n     * @param {number} seekBarPoint\n     *        A number from 0 to 1, representing a horizontal reference point\n     *        from the left edge of the {@link SeekBar}\n     */\n    update(seekBarRect, seekBarPoint) {\n      const time = seekBarPoint * this.player_.duration();\n      this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, () => {\n        this.el_.style.left = `${seekBarRect.width * seekBarPoint}px`;\n      });\n    }\n  }\n\n  /**\n   * Default options for `MouseTimeDisplay`\n   *\n   * @type {Object}\n   * @private\n   */\n  MouseTimeDisplay.prototype.options_ = {\n    children: ['timeTooltip']\n  };\n  Component$1.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n  /**\n   * @file seek-bar.js\n   */\n\n  // The number of seconds the `step*` functions move the timeline.\n  const STEP_SECONDS = 5;\n\n  // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n  const PAGE_KEY_MULTIPLIER = 12;\n\n  /**\n   * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n   * as its `bar`.\n   *\n   * @extends Slider\n   */\n  class SeekBar extends Slider {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.setEventHandlers_();\n    }\n\n    /**\n     * Sets the event handlers\n     *\n     * @private\n     */\n    setEventHandlers_() {\n      this.update_ = bind_(this, this.update);\n      this.update = throttle(this.update_, UPDATE_REFRESH_INTERVAL);\n      this.on(this.player_, ['durationchange', 'timeupdate'], this.update);\n      this.on(this.player_, ['ended'], this.update_);\n      if (this.player_.liveTracker) {\n        this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n      }\n\n      // when playing, let's ensure we smoothly update the play progress bar\n      // via an interval\n      this.updateInterval = null;\n      this.enableIntervalHandler_ = e => this.enableInterval_(e);\n      this.disableIntervalHandler_ = e => this.disableInterval_(e);\n      this.on(this.player_, ['playing'], this.enableIntervalHandler_);\n      this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n      // we don't need to update the play progress if the document is hidden,\n      // also, this causes the CPU to spike and eventually crash the page on IE11.\n      if ('hidden' in document && 'visibilityState' in document) {\n        this.on(document, 'visibilitychange', this.toggleVisibility_);\n      }\n    }\n    toggleVisibility_(e) {\n      if (document.visibilityState === 'hidden') {\n        this.cancelNamedAnimationFrame('SeekBar#update');\n        this.cancelNamedAnimationFrame('Slider#update');\n        this.disableInterval_(e);\n      } else {\n        if (!this.player_.ended() && !this.player_.paused()) {\n          this.enableInterval_();\n        }\n\n        // we just switched back to the page and someone may be looking, so, update ASAP\n        this.update();\n      }\n    }\n    enableInterval_() {\n      if (this.updateInterval) {\n        return;\n      }\n      this.updateInterval = this.setInterval(this.update, UPDATE_REFRESH_INTERVAL);\n    }\n    disableInterval_(e) {\n      if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n        return;\n      }\n      if (!this.updateInterval) {\n        return;\n      }\n      this.clearInterval(this.updateInterval);\n      this.updateInterval = null;\n    }\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      return super.createEl('div', {\n        className: 'vjs-progress-holder'\n      }, {\n        'aria-label': this.localize('Progress Bar')\n      });\n    }\n\n    /**\n     * This function updates the play progress bar and accessibility\n     * attributes to whatever is passed in.\n     *\n     * @param {Event} [event]\n     *        The `timeupdate` or `ended` event that caused this to run.\n     *\n     * @listens Player#timeupdate\n     *\n     * @return {number}\n     *          The current percent at a number from 0-1\n     */\n    update(event) {\n      // ignore updates while the tab is hidden\n      if (document.visibilityState === 'hidden') {\n        return;\n      }\n      const percent = super.update();\n      this.requestNamedAnimationFrame('SeekBar#update', () => {\n        const currentTime = this.player_.ended() ? this.player_.duration() : this.getCurrentTime_();\n        const liveTracker = this.player_.liveTracker;\n        let duration = this.player_.duration();\n        if (liveTracker && liveTracker.isLive()) {\n          duration = this.player_.liveTracker.liveCurrentTime();\n        }\n        if (this.percent_ !== percent) {\n          // machine readable value of progress bar (percentage complete)\n          this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n          this.percent_ = percent;\n        }\n        if (this.currentTime_ !== currentTime || this.duration_ !== duration) {\n          // human readable value of progress bar (time complete)\n          this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n          this.currentTime_ = currentTime;\n          this.duration_ = duration;\n        }\n\n        // update the progress bar time tooltip with the current time\n        if (this.bar) {\n          this.bar.update(getBoundingClientRect(this.el()), this.getProgress());\n        }\n      });\n      return percent;\n    }\n\n    /**\n     * Prevent liveThreshold from causing seeks to seem like they\n     * are not happening from a user perspective.\n     *\n     * @param {number} ct\n     *        current time to seek to\n     */\n    userSeek_(ct) {\n      if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n        this.player_.liveTracker.nextSeekedFromUser();\n      }\n      this.player_.currentTime(ct);\n    }\n\n    /**\n     * Get the value of current time but allows for smooth scrubbing,\n     * when player can't keep up.\n     *\n     * @return {number}\n     *         The current time value to display\n     *\n     * @private\n     */\n    getCurrentTime_() {\n      return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    }\n\n    /**\n     * Get the percentage of media played so far.\n     *\n     * @return {number}\n     *         The percentage of media played so far (0 to 1).\n     */\n    getPercent() {\n      const currentTime = this.getCurrentTime_();\n      let percent;\n      const liveTracker = this.player_.liveTracker;\n      if (liveTracker && liveTracker.isLive()) {\n        percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow();\n\n        // prevent the percent from changing at the live edge\n        if (liveTracker.atLiveEdge()) {\n          percent = 1;\n        }\n      } else {\n        percent = currentTime / this.player_.duration();\n      }\n      return percent;\n    }\n\n    /**\n     * Handle mouse down on seek bar\n     *\n     * @param {MouseEvent} event\n     *        The `mousedown` event that caused this to run.\n     *\n     * @listens mousedown\n     */\n    handleMouseDown(event) {\n      if (!isSingleLeftClick(event)) {\n        return;\n      }\n\n      // Stop event propagation to prevent double fire in progress-control.js\n      event.stopPropagation();\n      this.videoWasPlaying = !this.player_.paused();\n      this.player_.pause();\n      super.handleMouseDown(event);\n    }\n\n    /**\n     * Handle mouse move on seek bar\n     *\n     * @param {MouseEvent} event\n     *        The `mousemove` event that caused this to run.\n     * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false\n     *\n     * @listens mousemove\n     */\n    handleMouseMove(event, mouseDown = false) {\n      if (!isSingleLeftClick(event) || isNaN(this.player_.duration())) {\n        return;\n      }\n      if (!mouseDown && !this.player_.scrubbing()) {\n        this.player_.scrubbing(true);\n      }\n      let newTime;\n      const distance = this.calculateDistance(event);\n      const liveTracker = this.player_.liveTracker;\n      if (!liveTracker || !liveTracker.isLive()) {\n        newTime = distance * this.player_.duration();\n\n        // Don't let video end while scrubbing.\n        if (newTime === this.player_.duration()) {\n          newTime = newTime - 0.1;\n        }\n      } else {\n        if (distance >= 0.99) {\n          liveTracker.seekToLiveEdge();\n          return;\n        }\n        const seekableStart = liveTracker.seekableStart();\n        const seekableEnd = liveTracker.liveCurrentTime();\n        newTime = seekableStart + distance * liveTracker.liveWindow();\n\n        // Don't let video end while scrubbing.\n        if (newTime >= seekableEnd) {\n          newTime = seekableEnd;\n        }\n\n        // Compensate for precision differences so that currentTime is not less\n        // than seekable start\n        if (newTime <= seekableStart) {\n          newTime = seekableStart + 0.1;\n        }\n\n        // On android seekableEnd can be Infinity sometimes,\n        // this will cause newTime to be Infinity, which is\n        // not a valid currentTime.\n        if (newTime === Infinity) {\n          return;\n        }\n      }\n\n      // Set new time (tell player to seek to new time)\n      this.userSeek_(newTime);\n      if (this.player_.options_.enableSmoothSeeking) {\n        this.update();\n      }\n    }\n    enable() {\n      super.enable();\n      const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n      if (!mouseTimeDisplay) {\n        return;\n      }\n      mouseTimeDisplay.show();\n    }\n    disable() {\n      super.disable();\n      const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n      if (!mouseTimeDisplay) {\n        return;\n      }\n      mouseTimeDisplay.hide();\n    }\n\n    /**\n     * Handle mouse up on seek bar\n     *\n     * @param {MouseEvent} event\n     *        The `mouseup` event that caused this to run.\n     *\n     * @listens mouseup\n     */\n    handleMouseUp(event) {\n      super.handleMouseUp(event);\n\n      // Stop event propagation to prevent double fire in progress-control.js\n      if (event) {\n        event.stopPropagation();\n      }\n      this.player_.scrubbing(false);\n\n      /**\n       * Trigger timeupdate because we're done seeking and the time has changed.\n       * This is particularly useful for if the player is paused to time the time displays.\n       *\n       * @event Tech#timeupdate\n       * @type {Event}\n       */\n      this.player_.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n      if (this.videoWasPlaying) {\n        silencePromise(this.player_.play());\n      } else {\n        // We're done seeking and the time has changed.\n        // If the player is paused, make sure we display the correct time on the seek bar.\n        this.update_();\n      }\n    }\n\n    /**\n     * Move more quickly fast forward for keyboard-only users\n     */\n    stepForward() {\n      this.userSeek_(this.player_.currentTime() + STEP_SECONDS);\n    }\n\n    /**\n     * Move more quickly rewind for keyboard-only users\n     */\n    stepBack() {\n      this.userSeek_(this.player_.currentTime() - STEP_SECONDS);\n    }\n\n    /**\n     * Toggles the playback state of the player\n     * This gets called when enter or space is used on the seekbar\n     *\n     * @param {KeyboardEvent} event\n     *        The `keydown` event that caused this function to be called\n     *\n     */\n    handleAction(event) {\n      if (this.player_.paused()) {\n        this.player_.play();\n      } else {\n        this.player_.pause();\n      }\n    }\n\n    /**\n     * Called when this SeekBar has focus and a key gets pressed down.\n     * Supports the following keys:\n     *\n     *   Space or Enter key fire a click event\n     *   Home key moves to start of the timeline\n     *   End key moves to end of the timeline\n     *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n     *   PageDown key moves back a larger step than ArrowDown\n     *   PageUp key moves forward a large step\n     *\n     * @param {KeyboardEvent} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    handleKeyDown(event) {\n      const liveTracker = this.player_.liveTracker;\n      if (event.key === ' ' || event.key === 'Enter') {\n        event.preventDefault();\n        event.stopPropagation();\n        this.handleAction(event);\n      } else if (event.key === 'Home') {\n        event.preventDefault();\n        event.stopPropagation();\n        this.userSeek_(0);\n      } else if (event.key === 'End') {\n        event.preventDefault();\n        event.stopPropagation();\n        if (liveTracker && liveTracker.isLive()) {\n          this.userSeek_(liveTracker.liveCurrentTime());\n        } else {\n          this.userSeek_(this.player_.duration());\n        }\n      } else if (/^[0-9]$/.test(event.key)) {\n        event.preventDefault();\n        event.stopPropagation();\n        const gotoFraction = parseInt(event.key, 10) * 0.1;\n        if (liveTracker && liveTracker.isLive()) {\n          this.userSeek_(liveTracker.seekableStart() + liveTracker.liveWindow() * gotoFraction);\n        } else {\n          this.userSeek_(this.player_.duration() * gotoFraction);\n        }\n      } else if (event.key === 'PageDown') {\n        event.preventDefault();\n        event.stopPropagation();\n        this.userSeek_(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n      } else if (event.key === 'PageUp') {\n        event.preventDefault();\n        event.stopPropagation();\n        this.userSeek_(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n      } else {\n        // Pass keydown handling up for unsupported keys\n        super.handleKeyDown(event);\n      }\n    }\n    dispose() {\n      this.disableInterval_();\n      this.off(this.player_, ['durationchange', 'timeupdate'], this.update);\n      this.off(this.player_, ['ended'], this.update_);\n      if (this.player_.liveTracker) {\n        this.off(this.player_.liveTracker, 'liveedgechange', this.update);\n      }\n      this.off(this.player_, ['playing'], this.enableIntervalHandler_);\n      this.off(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n      // we don't need to update the play progress if the document is hidden,\n      // also, this causes the CPU to spike and eventually crash the page on IE11.\n      if ('hidden' in document && 'visibilityState' in document) {\n        this.off(document, 'visibilitychange', this.toggleVisibility_);\n      }\n      super.dispose();\n    }\n  }\n\n  /**\n   * Default options for the `SeekBar`\n   *\n   * @type {Object}\n   * @private\n   */\n  SeekBar.prototype.options_ = {\n    children: ['loadProgressBar', 'playProgressBar'],\n    barName: 'playProgressBar'\n  };\n\n  // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n  if (!IS_IOS && !IS_ANDROID) {\n    SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n  }\n  Component$1.registerComponent('SeekBar', SeekBar);\n\n  /**\n   * @file progress-control.js\n   */\n\n  /**\n   * The Progress Control component contains the seek bar, load progress,\n   * and play progress.\n   *\n   * @extends Component\n   */\n  class ProgressControl extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.handleMouseMove = throttle(bind_(this, this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n      this.throttledHandleMouseSeek = throttle(bind_(this, this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n      this.handleMouseUpHandler_ = e => this.handleMouseUp(e);\n      this.handleMouseDownHandler_ = e => this.handleMouseDown(e);\n      this.enable();\n    }\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      return super.createEl('div', {\n        className: 'vjs-progress-control vjs-control'\n      });\n    }\n\n    /**\n     * When the mouse moves over the `ProgressControl`, the pointer position\n     * gets passed down to the `MouseTimeDisplay` component.\n     *\n     * @param {Event} event\n     *        The `mousemove` event that caused this function to run.\n     *\n     * @listen mousemove\n     */\n    handleMouseMove(event) {\n      const seekBar = this.getChild('seekBar');\n      if (!seekBar) {\n        return;\n      }\n      const playProgressBar = seekBar.getChild('playProgressBar');\n      const mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      if (!playProgressBar && !mouseTimeDisplay) {\n        return;\n      }\n      const seekBarEl = seekBar.el();\n      const seekBarRect = findPosition(seekBarEl);\n      let seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n      // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n      seekBarPoint = clamp(seekBarPoint, 0, 1);\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n      if (playProgressBar) {\n        playProgressBar.update(seekBarRect, seekBar.getProgress());\n      }\n    }\n\n    /**\n     * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n     *\n     * @method ProgressControl#throttledHandleMouseSeek\n     * @param {Event} event\n     *        The `mousemove` event that caused this function to run.\n     *\n     * @listen mousemove\n     * @listen touchmove\n     */\n\n    /**\n     * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n     *\n     * @param {Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousemove\n     * @listens touchmove\n     */\n    handleMouseSeek(event) {\n      const seekBar = this.getChild('seekBar');\n      if (seekBar) {\n        seekBar.handleMouseMove(event);\n      }\n    }\n\n    /**\n     * Are controls are currently enabled for this progress control.\n     *\n     * @return {boolean}\n     *         true if controls are enabled, false otherwise\n     */\n    enabled() {\n      return this.enabled_;\n    }\n\n    /**\n     * Disable all controls on the progress control and its children\n     */\n    disable() {\n      this.children().forEach(child => child.disable && child.disable());\n      if (!this.enabled()) {\n        return;\n      }\n      this.off(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n      this.off(this.el_, 'mousemove', this.handleMouseMove);\n      this.removeListenersAddedOnMousedownAndTouchstart();\n      this.addClass('disabled');\n      this.enabled_ = false;\n\n      // Restore normal playback state if controls are disabled while scrubbing\n      if (this.player_.scrubbing()) {\n        const seekBar = this.getChild('seekBar');\n        this.player_.scrubbing(false);\n        if (seekBar.videoWasPlaying) {\n          silencePromise(this.player_.play());\n        }\n      }\n    }\n\n    /**\n     * Enable all controls on the progress control and its children\n     */\n    enable() {\n      this.children().forEach(child => child.enable && child.enable());\n      if (this.enabled()) {\n        return;\n      }\n      this.on(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n      this.on(this.el_, 'mousemove', this.handleMouseMove);\n      this.removeClass('disabled');\n      this.enabled_ = true;\n    }\n\n    /**\n     * Cleanup listeners after the user finishes interacting with the progress controls\n     */\n    removeListenersAddedOnMousedownAndTouchstart() {\n      const doc = this.el_.ownerDocument;\n      this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n      this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n      this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n      this.off(doc, 'touchend', this.handleMouseUpHandler_);\n    }\n\n    /**\n     * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n     *\n     * @param {Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     * @listens touchstart\n     */\n    handleMouseDown(event) {\n      const doc = this.el_.ownerDocument;\n      const seekBar = this.getChild('seekBar');\n      if (seekBar) {\n        seekBar.handleMouseDown(event);\n      }\n      this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n      this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n      this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n      this.on(doc, 'touchend', this.handleMouseUpHandler_);\n    }\n\n    /**\n     * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n     *\n     * @param {Event} event\n     *        `mouseup` or `touchend` event that triggered this function.\n     *\n     * @listens touchend\n     * @listens mouseup\n     */\n    handleMouseUp(event) {\n      const seekBar = this.getChild('seekBar');\n      if (seekBar) {\n        seekBar.handleMouseUp(event);\n      }\n      this.removeListenersAddedOnMousedownAndTouchstart();\n    }\n  }\n\n  /**\n   * Default options for `ProgressControl`\n   *\n   * @type {Object}\n   * @private\n   */\n  ProgressControl.prototype.options_ = {\n    children: ['seekBar']\n  };\n  Component$1.registerComponent('ProgressControl', ProgressControl);\n\n  /**\n   * @file picture-in-picture-toggle.js\n   */\n\n  /** @import Player from './player' */\n\n  /**\n   * Toggle Picture-in-Picture mode\n   *\n   * @extends Button\n   */\n  class PictureInPictureToggle extends Button {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @listens Player#enterpictureinpicture\n     * @listens Player#leavepictureinpicture\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.setIcon('picture-in-picture-enter');\n      this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], e => this.handlePictureInPictureChange(e));\n      this.on(player, ['disablepictureinpicturechanged', 'loadedmetadata'], e => this.handlePictureInPictureEnabledChange(e));\n      this.on(player, ['loadedmetadata', 'audioonlymodechange', 'audiopostermodechange'], () => this.handlePictureInPictureAudioModeChange());\n\n      // TODO: Deactivate button on player emptied event.\n      this.disable();\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return `vjs-picture-in-picture-control vjs-hidden ${super.buildCSSClass()}`;\n    }\n\n    /**\n     * Displays or hides the button depending on the audio mode detection.\n     * Exits picture-in-picture if it is enabled when switching to audio mode.\n     */\n    handlePictureInPictureAudioModeChange() {\n      // This audio detection will not detect HLS or DASH audio-only streams because there was no reliable way to detect them at the time\n      const isSourceAudio = this.player_.currentType().substring(0, 5) === 'audio';\n      const isAudioMode = isSourceAudio || this.player_.audioPosterMode() || this.player_.audioOnlyMode();\n      if (!isAudioMode) {\n        this.show();\n        return;\n      }\n      if (this.player_.isInPictureInPicture()) {\n        this.player_.exitPictureInPicture();\n      }\n      this.hide();\n    }\n\n    /**\n     * Enables or disables button based on availability of a Picture-In-Picture mode.\n     *\n     * Enabled if\n     * - `player.options().enableDocumentPictureInPicture` is true and\n     *   window.documentPictureInPicture is available; or\n     * - `player.disablePictureInPicture()` is false and\n     *   element.requestPictureInPicture is available\n     */\n    handlePictureInPictureEnabledChange() {\n      if (document.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false || this.player_.options_.enableDocumentPictureInPicture && 'documentPictureInPicture' in window) {\n        this.enable();\n      } else {\n        this.disable();\n      }\n    }\n\n    /**\n     * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n     *\n     * @param {Event} [event]\n     *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n     *        called.\n     *\n     * @listens Player#enterpictureinpicture\n     * @listens Player#leavepictureinpicture\n     */\n    handlePictureInPictureChange(event) {\n      if (this.player_.isInPictureInPicture()) {\n        this.setIcon('picture-in-picture-exit');\n        this.controlText('Exit Picture-in-Picture');\n      } else {\n        this.setIcon('picture-in-picture-enter');\n        this.controlText('Picture-in-Picture');\n      }\n      this.handlePictureInPictureEnabledChange();\n    }\n\n    /**\n     * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    handleClick(event) {\n      if (!this.player_.isInPictureInPicture()) {\n        this.player_.requestPictureInPicture();\n      } else {\n        this.player_.exitPictureInPicture();\n      }\n    }\n\n    /**\n     * Show the `Component`s element if it is hidden by removing the\n     * 'vjs-hidden' class name from it only in browsers that support the Picture-in-Picture API.\n     */\n    show() {\n      // Does not allow to display the pictureInPictureToggle in browsers that do not support the Picture-in-Picture API, e.g. Firefox.\n      if (typeof document.exitPictureInPicture !== 'function') {\n        return;\n      }\n      super.show();\n    }\n  }\n\n  /**\n   * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @protected\n   */\n  PictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\n  Component$1.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n  /**\n   * @file fullscreen-toggle.js\n   */\n\n  /** @import Player from './player' */\n\n  /**\n   * Toggle fullscreen video\n   *\n   * @extends Button\n   */\n  class FullscreenToggle extends Button {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.setIcon('fullscreen-enter');\n      this.on(player, 'fullscreenchange', e => this.handleFullscreenChange(e));\n      if (document[player.fsApi_.fullscreenEnabled] === false) {\n        this.disable();\n      }\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return `vjs-fullscreen-control ${super.buildCSSClass()}`;\n    }\n\n    /**\n     * Handles fullscreenchange on the player and change control text accordingly.\n     *\n     * @param {Event} [event]\n     *        The {@link Player#fullscreenchange} event that caused this function to be\n     *        called.\n     *\n     * @listens Player#fullscreenchange\n     */\n    handleFullscreenChange(event) {\n      if (this.player_.isFullscreen()) {\n        this.controlText('Exit Fullscreen');\n        this.setIcon('fullscreen-exit');\n      } else {\n        this.controlText('Fullscreen');\n        this.setIcon('fullscreen-enter');\n      }\n    }\n\n    /**\n     * This gets called when an `FullscreenToggle` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    handleClick(event) {\n      if (!this.player_.isFullscreen()) {\n        this.player_.requestFullscreen();\n      } else {\n        this.player_.exitFullscreen();\n      }\n    }\n  }\n\n  /**\n   * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @protected\n   */\n  FullscreenToggle.prototype.controlText_ = 'Fullscreen';\n  Component$1.registerComponent('FullscreenToggle', FullscreenToggle);\n\n  /** @import Component from '../../component' */\n  /** @import Player from '../../player' */\n\n  /**\n   * Check if volume control is supported and if it isn't hide the\n   * `Component` that was passed  using the `vjs-hidden` class.\n   *\n   * @param {Component} self\n   *        The component that should be hidden if volume is unsupported\n   *\n   * @param {Player} player\n   *        A reference to the player\n   *\n   * @private\n   */\n  const checkVolumeSupport = function (self, player) {\n    // hide volume controls when they're not supported by the current tech\n    if (player.tech_ && !player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    }\n    self.on(player, 'loadstart', function () {\n      if (!player.tech_.featuresVolumeControl) {\n        self.addClass('vjs-hidden');\n      } else {\n        self.removeClass('vjs-hidden');\n      }\n    });\n  };\n\n  /**\n   * @file volume-level.js\n   */\n\n  /**\n   * Shows volume level\n   *\n   * @extends Component\n   */\n  class VolumeLevel extends Component$1 {\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      const el = super.createEl('div', {\n        className: 'vjs-volume-level'\n      });\n      this.setIcon('circle', el);\n      el.appendChild(super.createEl('span', {\n        className: 'vjs-control-text'\n      }));\n      return el;\n    }\n  }\n  Component$1.registerComponent('VolumeLevel', VolumeLevel);\n\n  /**\n   * @file volume-level-tooltip.js\n   */\n\n  /** @import Player from '../../player' */\n\n  /**\n   * Volume level tooltips display a volume above or side by side the volume bar.\n   *\n   * @extends Component\n   */\n  class VolumeLevelTooltip extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n    }\n\n    /**\n     * Create the volume tooltip DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      return super.createEl('div', {\n        className: 'vjs-volume-tooltip'\n      }, {\n        'aria-hidden': 'true'\n      });\n    }\n\n    /**\n     * Updates the position of the tooltip relative to the `VolumeBar` and\n     * its content text.\n     *\n     * @param {Object} rangeBarRect\n     *        The `ClientRect` for the {@link VolumeBar} element.\n     *\n     * @param {number} rangeBarPoint\n     *        A number from 0 to 1, representing a horizontal/vertical reference point\n     *        from the left edge of the {@link VolumeBar}\n     *\n     * @param {boolean} vertical\n     *        Referees to the Volume control position\n     *        in the control bar{@link VolumeControl}\n     *\n     */\n    update(rangeBarRect, rangeBarPoint, vertical, content) {\n      if (!vertical) {\n        const tooltipRect = getBoundingClientRect(this.el_);\n        const playerRect = getBoundingClientRect(this.player_.el());\n        const volumeBarPointPx = rangeBarRect.width * rangeBarPoint;\n        if (!playerRect || !tooltipRect) {\n          return;\n        }\n        const spaceLeftOfPoint = rangeBarRect.left - playerRect.left + volumeBarPointPx;\n        const spaceRightOfPoint = rangeBarRect.width - volumeBarPointPx + (playerRect.right - rangeBarRect.right);\n        let pullTooltipBy = tooltipRect.width / 2;\n        if (spaceLeftOfPoint < pullTooltipBy) {\n          pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n        } else if (spaceRightOfPoint < pullTooltipBy) {\n          pullTooltipBy = spaceRightOfPoint;\n        }\n        if (pullTooltipBy < 0) {\n          pullTooltipBy = 0;\n        } else if (pullTooltipBy > tooltipRect.width) {\n          pullTooltipBy = tooltipRect.width;\n        }\n        this.el_.style.right = `-${pullTooltipBy}px`;\n      }\n      this.write(`${content}%`);\n    }\n\n    /**\n     * Write the volume to the tooltip DOM element.\n     *\n     * @param {string} content\n     *        The formatted volume for the tooltip.\n     */\n    write(content) {\n      textContent(this.el_, content);\n    }\n\n    /**\n     * Updates the position of the volume tooltip relative to the `VolumeBar`.\n     *\n     * @param {Object} rangeBarRect\n     *        The `ClientRect` for the {@link VolumeBar} element.\n     *\n     * @param {number} rangeBarPoint\n     *        A number from 0 to 1, representing a horizontal/vertical reference point\n     *        from the left edge of the {@link VolumeBar}\n     *\n     * @param {boolean} vertical\n     *        Referees to the Volume control position\n     *        in the control bar{@link VolumeControl}\n     *\n     * @param {number} volume\n     *        The volume level to update the tooltip to\n     *\n     * @param {Function} cb\n     *        A function that will be called during the request animation frame\n     *        for tooltips that need to do additional animations from the default\n     */\n    updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, cb) {\n      this.requestNamedAnimationFrame('VolumeLevelTooltip#updateVolume', () => {\n        this.update(rangeBarRect, rangeBarPoint, vertical, volume.toFixed(0));\n        if (cb) {\n          cb();\n        }\n      });\n    }\n  }\n  Component$1.registerComponent('VolumeLevelTooltip', VolumeLevelTooltip);\n\n  /**\n   * @file mouse-volume-level-display.js\n   */\n\n  /**\n   * The {@link MouseVolumeLevelDisplay} component tracks mouse movement over the\n   * {@link VolumeControl}. It displays an indicator and a {@link VolumeLevelTooltip}\n   * indicating the volume level which is represented by a given point in the\n   * {@link VolumeBar}.\n   *\n   * @extends Component\n   */\n  class MouseVolumeLevelDisplay extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n    }\n\n    /**\n     * Create the DOM element for this class.\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      return super.createEl('div', {\n        className: 'vjs-mouse-display'\n      });\n    }\n\n    /**\n     * Enquires updates to its own DOM as well as the DOM of its\n     * {@link VolumeLevelTooltip} child.\n     *\n     * @param {Object} rangeBarRect\n     *        The `ClientRect` for the {@link VolumeBar} element.\n     *\n     * @param {number} rangeBarPoint\n     *        A number from 0 to 1, representing a horizontal/vertical reference point\n     *        from the left edge of the {@link VolumeBar}\n     *\n     * @param {boolean} vertical\n     *        Referees to the Volume control position\n     *        in the control bar{@link VolumeControl}\n     *\n     */\n    update(rangeBarRect, rangeBarPoint, vertical) {\n      const volume = 100 * rangeBarPoint;\n      this.getChild('volumeLevelTooltip').updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, () => {\n        if (vertical) {\n          this.el_.style.bottom = `${rangeBarRect.height * rangeBarPoint}px`;\n        } else {\n          this.el_.style.left = `${rangeBarRect.width * rangeBarPoint}px`;\n        }\n      });\n    }\n  }\n\n  /**\n   * Default options for `MouseVolumeLevelDisplay`\n   *\n   * @type {Object}\n   * @private\n   */\n  MouseVolumeLevelDisplay.prototype.options_ = {\n    children: ['volumeLevelTooltip']\n  };\n  Component$1.registerComponent('MouseVolumeLevelDisplay', MouseVolumeLevelDisplay);\n\n  /**\n   * @file volume-bar.js\n   */\n\n  /**\n   * The bar that contains the volume level and can be clicked on to adjust the level\n   *\n   * @extends Slider\n   */\n  class VolumeBar extends Slider {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.on('slideractive', e => this.updateLastVolume_(e));\n      this.on(player, 'volumechange', e => this.updateARIAAttributes(e));\n      player.ready(() => this.updateARIAAttributes());\n    }\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      return super.createEl('div', {\n        className: 'vjs-volume-bar vjs-slider-bar'\n      }, {\n        'aria-label': this.localize('Volume Level'),\n        'aria-live': 'polite'\n      });\n    }\n\n    /**\n     * Handle mouse down on volume bar\n     *\n     * @param {Event} event\n     *        The `mousedown` event that caused this to run.\n     *\n     * @listens mousedown\n     */\n    handleMouseDown(event) {\n      if (!isSingleLeftClick(event)) {\n        return;\n      }\n      super.handleMouseDown(event);\n    }\n\n    /**\n     * Handle movement events on the {@link VolumeMenuButton}.\n     *\n     * @param {Event} event\n     *        The event that caused this function to run.\n     *\n     * @listens mousemove\n     */\n    handleMouseMove(event) {\n      const mouseVolumeLevelDisplay = this.getChild('mouseVolumeLevelDisplay');\n      if (mouseVolumeLevelDisplay) {\n        const volumeBarEl = this.el();\n        const volumeBarRect = getBoundingClientRect(volumeBarEl);\n        const vertical = this.vertical();\n        let volumeBarPoint = getPointerPosition(volumeBarEl, event);\n        volumeBarPoint = vertical ? volumeBarPoint.y : volumeBarPoint.x;\n        // The default skin has a gap on either side of the `VolumeBar`. This means\n        // that it's possible to trigger this behavior outside the boundaries of\n        // the `VolumeBar`. This ensures we stay within it at all times.\n        volumeBarPoint = clamp(volumeBarPoint, 0, 1);\n        mouseVolumeLevelDisplay.update(volumeBarRect, volumeBarPoint, vertical);\n      }\n      if (!isSingleLeftClick(event)) {\n        return;\n      }\n      this.checkMuted();\n      this.player_.volume(this.calculateDistance(event));\n    }\n\n    /**\n     * If the player is muted unmute it.\n     */\n    checkMuted() {\n      if (this.player_.muted()) {\n        this.player_.muted(false);\n      }\n    }\n\n    /**\n     * Get percent of volume level\n     *\n     * @return {number}\n     *         Volume level percent as a decimal number.\n     */\n    getPercent() {\n      if (this.player_.muted()) {\n        return 0;\n      }\n      return this.player_.volume();\n    }\n\n    /**\n     * Increase volume level for keyboard users\n     */\n    stepForward() {\n      this.checkMuted();\n      this.player_.volume(this.player_.volume() + 0.1);\n    }\n\n    /**\n     * Decrease volume level for keyboard users\n     */\n    stepBack() {\n      this.checkMuted();\n      this.player_.volume(this.player_.volume() - 0.1);\n    }\n\n    /**\n     * Update ARIA accessibility attributes\n     *\n     * @param {Event} [event]\n     *        The `volumechange` event that caused this function to run.\n     *\n     * @listens Player#volumechange\n     */\n    updateARIAAttributes(event) {\n      const ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n      this.el_.setAttribute('aria-valuenow', ariaValue);\n      this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n    }\n\n    /**\n     * Returns the current value of the player volume as a percentage\n     *\n     * @private\n     */\n    volumeAsPercentage_() {\n      return Math.round(this.player_.volume() * 100);\n    }\n\n    /**\n     * When user starts dragging the VolumeBar, store the volume and listen for\n     * the end of the drag. When the drag ends, if the volume was set to zero,\n     * set lastVolume to the stored volume.\n     *\n     * @listens slideractive\n     * @private\n     */\n    updateLastVolume_() {\n      const volumeBeforeDrag = this.player_.volume();\n      this.one('sliderinactive', () => {\n        if (this.player_.volume() === 0) {\n          this.player_.lastVolume_(volumeBeforeDrag);\n        }\n      });\n    }\n  }\n\n  /**\n   * Default options for the `VolumeBar`\n   *\n   * @type {Object}\n   * @private\n   */\n  VolumeBar.prototype.options_ = {\n    children: ['volumeLevel'],\n    barName: 'volumeLevel'\n  };\n\n  // MouseVolumeLevelDisplay tooltip should not be added to a player on mobile devices\n  if (!IS_IOS && !IS_ANDROID) {\n    VolumeBar.prototype.options_.children.splice(0, 0, 'mouseVolumeLevelDisplay');\n  }\n\n  /**\n   * Call the update event for this Slider when this event happens on the player.\n   *\n   * @type {string}\n   */\n  VolumeBar.prototype.playerEvent = 'volumechange';\n  Component$1.registerComponent('VolumeBar', VolumeBar);\n\n  /**\n   * @file volume-control.js\n   */\n\n  /**\n   * The component for controlling the volume level\n   *\n   * @extends Component\n   */\n  class VolumeControl extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    constructor(player, options = {}) {\n      options.vertical = options.vertical || false;\n\n      // Pass the vertical option down to the VolumeBar if\n      // the VolumeBar is turned on.\n      if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n        options.volumeBar = options.volumeBar || {};\n        options.volumeBar.vertical = options.vertical;\n      }\n      super(player, options);\n\n      // hide this control if volume support is missing\n      checkVolumeSupport(this, player);\n      this.throttledHandleMouseMove = throttle(bind_(this, this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n      this.handleMouseUpHandler_ = e => this.handleMouseUp(e);\n      this.on('mousedown', e => this.handleMouseDown(e));\n      this.on('touchstart', e => this.handleMouseDown(e));\n      this.on('mousemove', e => this.handleMouseMove(e));\n\n      // while the slider is active (the mouse has been pressed down and\n      // is dragging) or in focus we do not want to hide the VolumeBar\n      this.on(this.volumeBar, ['focus', 'slideractive'], () => {\n        this.volumeBar.addClass('vjs-slider-active');\n        this.addClass('vjs-slider-active');\n        this.trigger('slideractive');\n      });\n      this.on(this.volumeBar, ['blur', 'sliderinactive'], () => {\n        this.volumeBar.removeClass('vjs-slider-active');\n        this.removeClass('vjs-slider-active');\n        this.trigger('sliderinactive');\n      });\n    }\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      let orientationClass = 'vjs-volume-horizontal';\n      if (this.options_.vertical) {\n        orientationClass = 'vjs-volume-vertical';\n      }\n      return super.createEl('div', {\n        className: `vjs-volume-control vjs-control ${orientationClass}`\n      });\n    }\n\n    /**\n     * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n     *\n     * @param {Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     * @listens touchstart\n     */\n    handleMouseDown(event) {\n      const doc = this.el_.ownerDocument;\n      this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n      this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n      this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n      this.on(doc, 'touchend', this.handleMouseUpHandler_);\n    }\n\n    /**\n     * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n     *\n     * @param {Event} event\n     *        `mouseup` or `touchend` event that triggered this function.\n     *\n     * @listens touchend\n     * @listens mouseup\n     */\n    handleMouseUp(event) {\n      const doc = this.el_.ownerDocument;\n      this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n      this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n      this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n      this.off(doc, 'touchend', this.handleMouseUpHandler_);\n    }\n\n    /**\n     * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n     *\n     * @param {Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     * @listens touchstart\n     */\n    handleMouseMove(event) {\n      this.volumeBar.handleMouseMove(event);\n    }\n  }\n\n  /**\n   * Default options for the `VolumeControl`\n   *\n   * @type {Object}\n   * @private\n   */\n  VolumeControl.prototype.options_ = {\n    children: ['volumeBar']\n  };\n  Component$1.registerComponent('VolumeControl', VolumeControl);\n\n  /** @import Component from '../../component' */\n  /** @import Player from '../../player' */\n\n  /**\n   * Check if muting volume is supported and if it isn't hide the mute toggle\n   * button.\n   *\n   * @param {Component} self\n   *        A reference to the mute toggle button\n   *\n   * @param {Player} player\n   *        A reference to the player\n   *\n   * @private\n   */\n  const checkMuteSupport = function (self, player) {\n    // hide mute toggle button if it's not supported by the current tech\n    if (player.tech_ && !player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    }\n    self.on(player, 'loadstart', function () {\n      if (!player.tech_.featuresMuteControl) {\n        self.addClass('vjs-hidden');\n      } else {\n        self.removeClass('vjs-hidden');\n      }\n    });\n  };\n\n  /**\n   * @file mute-toggle.js\n   */\n\n  /** @import Player from './player' */\n\n  /**\n   * A button component for muting the audio.\n   *\n   * @extends Button\n   */\n  class MuteToggle extends Button {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n\n      // hide this control if volume support is missing\n      checkMuteSupport(this, player);\n      this.on(player, ['loadstart', 'volumechange'], e => this.update(e));\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return `vjs-mute-control ${super.buildCSSClass()}`;\n    }\n\n    /**\n     * This gets called when an `MuteToggle` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    handleClick(event) {\n      const vol = this.player_.volume();\n      const lastVolume = this.player_.lastVolume_();\n      if (vol === 0) {\n        const volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n        this.player_.volume(volumeToSet);\n        this.player_.muted(false);\n      } else {\n        this.player_.muted(this.player_.muted() ? false : true);\n      }\n    }\n\n    /**\n     * Update the `MuteToggle` button based on the state of `volume` and `muted`\n     * on the player.\n     *\n     * @param {Event} [event]\n     *        The {@link Player#loadstart} event if this function was called\n     *        through an event.\n     *\n     * @listens Player#loadstart\n     * @listens Player#volumechange\n     */\n    update(event) {\n      this.updateIcon_();\n      this.updateControlText_();\n    }\n\n    /**\n     * Update the appearance of the `MuteToggle` icon.\n     *\n     * Possible states (given `level` variable below):\n     * - 0: crossed out\n     * - 1: zero bars of volume\n     * - 2: one bar of volume\n     * - 3: two bars of volume\n     *\n     * @private\n     */\n    updateIcon_() {\n      const vol = this.player_.volume();\n      let level = 3;\n      this.setIcon('volume-high');\n\n      // in iOS when a player is loaded with muted attribute\n      // and volume is changed with a native mute button\n      // we want to make sure muted state is updated\n      if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n        this.player_.muted(this.player_.tech_.el_.muted);\n      }\n      if (vol === 0 || this.player_.muted()) {\n        this.setIcon('volume-mute');\n        level = 0;\n      } else if (vol < 0.33) {\n        this.setIcon('volume-low');\n        level = 1;\n      } else if (vol < 0.67) {\n        this.setIcon('volume-medium');\n        level = 2;\n      }\n      removeClass(this.el_, [0, 1, 2, 3].reduce((str, i) => str + `${i ? ' ' : ''}vjs-vol-${i}`, ''));\n      addClass(this.el_, `vjs-vol-${level}`);\n    }\n\n    /**\n     * If `muted` has changed on the player, update the control text\n     * (`title` attribute on `vjs-mute-control` element and content of\n     * `vjs-control-text` element).\n     *\n     * @private\n     */\n    updateControlText_() {\n      const soundOff = this.player_.muted() || this.player_.volume() === 0;\n      const text = soundOff ? 'Unmute' : 'Mute';\n      if (this.controlText() !== text) {\n        this.controlText(text);\n      }\n    }\n  }\n\n  /**\n   * The text that should display over the `MuteToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @protected\n   */\n  MuteToggle.prototype.controlText_ = 'Mute';\n  Component$1.registerComponent('MuteToggle', MuteToggle);\n\n  /**\n   * @file volume-control.js\n   */\n\n  /**\n   * A Component to contain the MuteToggle and VolumeControl so that\n   * they can work together.\n   *\n   * @extends Component\n   */\n  class VolumePanel extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    constructor(player, options = {}) {\n      if (typeof options.inline !== 'undefined') {\n        options.inline = options.inline;\n      } else {\n        options.inline = true;\n      }\n\n      // pass the inline option down to the VolumeControl as vertical if\n      // the VolumeControl is on.\n      if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n        options.volumeControl = options.volumeControl || {};\n        options.volumeControl.vertical = !options.inline;\n      }\n      super(player, options);\n\n      // this handler is used by mouse handler methods below\n      this.handleKeyPressHandler_ = e => this.handleKeyPress(e);\n      this.on(player, ['loadstart'], e => this.volumePanelState_(e));\n      this.on(this.muteToggle, 'keyup', e => this.handleKeyPress(e));\n      this.on(this.volumeControl, 'keyup', e => this.handleVolumeControlKeyUp(e));\n      this.on('keydown', e => this.handleKeyPress(e));\n      this.on('mouseover', e => this.handleMouseOver(e));\n      this.on('mouseout', e => this.handleMouseOut(e));\n\n      // while the slider is active (the mouse has been pressed down and\n      // is dragging) we do not want to hide the VolumeBar\n      this.on(this.volumeControl, ['slideractive'], this.sliderActive_);\n      this.on(this.volumeControl, ['sliderinactive'], this.sliderInactive_);\n    }\n\n    /**\n     * Add vjs-slider-active class to the VolumePanel\n     *\n     * @listens VolumeControl#slideractive\n     * @private\n     */\n    sliderActive_() {\n      this.addClass('vjs-slider-active');\n    }\n\n    /**\n     * Removes vjs-slider-active class to the VolumePanel\n     *\n     * @listens VolumeControl#sliderinactive\n     * @private\n     */\n    sliderInactive_() {\n      this.removeClass('vjs-slider-active');\n    }\n\n    /**\n     * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n     * depending on MuteToggle and VolumeControl state\n     *\n     * @listens Player#loadstart\n     * @private\n     */\n    volumePanelState_() {\n      // hide volume panel if neither volume control or mute toggle\n      // are displayed\n      if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n        this.addClass('vjs-hidden');\n      }\n\n      // if only mute toggle is visible we don't want\n      // volume panel expanding when hovered or active\n      if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n        this.addClass('vjs-mute-toggle-only');\n      }\n    }\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      let orientationClass = 'vjs-volume-panel-horizontal';\n      if (!this.options_.inline) {\n        orientationClass = 'vjs-volume-panel-vertical';\n      }\n      return super.createEl('div', {\n        className: `vjs-volume-panel vjs-control ${orientationClass}`\n      });\n    }\n\n    /**\n     * Dispose of the `volume-panel` and all child components.\n     */\n    dispose() {\n      this.handleMouseOut();\n      super.dispose();\n    }\n\n    /**\n     * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n     * the volume panel and sets focus on `MuteToggle`.\n     *\n     * @param {Event} event\n     *        The `keyup` event that caused this function to be called.\n     *\n     * @listens keyup\n     */\n    handleVolumeControlKeyUp(event) {\n      if (event.key === 'Escape') {\n        this.muteToggle.focus();\n      }\n    }\n\n    /**\n     * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n     * Turns on listening for `mouseover` event. When they happen it\n     * calls `this.handleMouseOver`.\n     *\n     * @param {Event} event\n     *        The `mouseover` event that caused this function to be called.\n     *\n     * @listens mouseover\n     */\n    handleMouseOver(event) {\n      this.addClass('vjs-hover');\n      on(document, 'keyup', this.handleKeyPressHandler_);\n    }\n\n    /**\n     * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n     * Turns on listening for `mouseout` event. When they happen it\n     * calls `this.handleMouseOut`.\n     *\n     * @param {Event} event\n     *        The `mouseout` event that caused this function to be called.\n     *\n     * @listens mouseout\n     */\n    handleMouseOut(event) {\n      this.removeClass('vjs-hover');\n      off(document, 'keyup', this.handleKeyPressHandler_);\n    }\n\n    /**\n     * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n     * looking for ESC, which hides the `VolumeControl`.\n     *\n     * @param {Event} event\n     *        The keypress that triggered this event.\n     *\n     * @listens keydown | keyup\n     */\n    handleKeyPress(event) {\n      if (event.key === 'Escape') {\n        this.handleMouseOut();\n      }\n    }\n  }\n\n  /**\n   * Default options for the `VolumeControl`\n   *\n   * @type {Object}\n   * @private\n   */\n  VolumePanel.prototype.options_ = {\n    children: ['muteToggle', 'volumeControl']\n  };\n  Component$1.registerComponent('VolumePanel', VolumePanel);\n\n  /**\n   * Button to skip forward a configurable amount of time\n   * through a video. Renders in the control bar.\n   *\n   * e.g. options: {controlBar: {skipButtons: forward: 5}}\n   *\n   * @extends Button\n   */\n  class SkipForward extends Button {\n    constructor(player, options) {\n      super(player, options);\n      this.validOptions = [5, 10, 30];\n      this.skipTime = this.getSkipForwardTime();\n      if (this.skipTime && this.validOptions.includes(this.skipTime)) {\n        this.setIcon(`forward-${this.skipTime}`);\n        this.controlText(this.localize('Skip forward {1} seconds', [this.skipTime.toLocaleString(player.language())]));\n        this.show();\n      } else {\n        this.hide();\n      }\n    }\n    getSkipForwardTime() {\n      const playerOptions = this.options_.playerOptions;\n      return playerOptions.controlBar && playerOptions.controlBar.skipButtons && playerOptions.controlBar.skipButtons.forward;\n    }\n    buildCSSClass() {\n      return `vjs-skip-forward-${this.getSkipForwardTime()} ${super.buildCSSClass()}`;\n    }\n\n    /**\n     * On click, skips forward in the duration/seekable range by a configurable amount of seconds.\n     * If the time left in the duration/seekable range is less than the configured 'skip forward' time,\n     * skips to end of duration/seekable range.\n     *\n     * Handle a click on a `SkipForward` button\n     *\n     * @param {EventTarget~Event} event\n     *        The `click` event that caused this function\n     *        to be called\n     */\n    handleClick(event) {\n      if (isNaN(this.player_.duration())) {\n        return;\n      }\n      const currentVideoTime = this.player_.currentTime();\n      const liveTracker = this.player_.liveTracker;\n      const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n      let newTime;\n      if (currentVideoTime + this.skipTime <= duration) {\n        newTime = currentVideoTime + this.skipTime;\n      } else {\n        newTime = duration;\n      }\n      this.player_.currentTime(newTime);\n    }\n\n    /**\n     * Update control text on languagechange\n     */\n    handleLanguagechange() {\n      this.controlText(this.localize('Skip forward {1} seconds', [this.skipTime]));\n    }\n  }\n  SkipForward.prototype.controlText_ = 'Skip Forward';\n  Component$1.registerComponent('SkipForward', SkipForward);\n\n  /**\n   * Button to skip backward a configurable amount of time\n   * through a video. Renders in the control bar.\n   *\n   *  * e.g. options: {controlBar: {skipButtons: backward: 5}}\n   *\n   * @extends Button\n   */\n  class SkipBackward extends Button {\n    constructor(player, options) {\n      super(player, options);\n      this.validOptions = [5, 10, 30];\n      this.skipTime = this.getSkipBackwardTime();\n      if (this.skipTime && this.validOptions.includes(this.skipTime)) {\n        this.setIcon(`replay-${this.skipTime}`);\n        this.controlText(this.localize('Skip backward {1} seconds', [this.skipTime.toLocaleString(player.language())]));\n        this.show();\n      } else {\n        this.hide();\n      }\n    }\n    getSkipBackwardTime() {\n      const playerOptions = this.options_.playerOptions;\n      return playerOptions.controlBar && playerOptions.controlBar.skipButtons && playerOptions.controlBar.skipButtons.backward;\n    }\n    buildCSSClass() {\n      return `vjs-skip-backward-${this.getSkipBackwardTime()} ${super.buildCSSClass()}`;\n    }\n\n    /**\n     * On click, skips backward in the video by a configurable amount of seconds.\n     * If the current time in the video is less than the configured 'skip backward' time,\n     * skips to beginning of video or seekable range.\n     *\n     * Handle a click on a `SkipBackward` button\n     *\n     * @param {EventTarget~Event} event\n     *        The `click` event that caused this function\n     *        to be called\n     */\n    handleClick(event) {\n      const currentVideoTime = this.player_.currentTime();\n      const liveTracker = this.player_.liveTracker;\n      const seekableStart = liveTracker && liveTracker.isLive() && liveTracker.seekableStart();\n      let newTime;\n      if (seekableStart && currentVideoTime - this.skipTime <= seekableStart) {\n        newTime = seekableStart;\n      } else if (currentVideoTime >= this.skipTime) {\n        newTime = currentVideoTime - this.skipTime;\n      } else {\n        newTime = 0;\n      }\n      this.player_.currentTime(newTime);\n    }\n\n    /**\n     * Update control text on languagechange\n     */\n    handleLanguagechange() {\n      this.controlText(this.localize('Skip backward {1} seconds', [this.skipTime]));\n    }\n  }\n  SkipBackward.prototype.controlText_ = 'Skip Backward';\n  Component$1.registerComponent('SkipBackward', SkipBackward);\n\n  /**\n   * @file menu.js\n   */\n\n  /** @import Player from '../player' */\n\n  /**\n   * The Menu component is used to build popup menus, including subtitle and\n   * captions selection menus.\n   *\n   * @extends Component\n   */\n  class Menu extends Component$1 {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Player} player\n     *        the player that this component should attach to\n     *\n     * @param {Object} [options]\n     *        Object of option names and values\n     *\n     */\n    constructor(player, options) {\n      super(player, options);\n      if (options) {\n        this.menuButton_ = options.menuButton;\n      }\n      this.focusedChild_ = -1;\n      this.on('keydown', e => this.handleKeyDown(e));\n\n      // All the menu item instances share the same blur handler provided by the menu container.\n      this.boundHandleBlur_ = e => this.handleBlur(e);\n      this.boundHandleTapClick_ = e => this.handleTapClick(e);\n    }\n\n    /**\n     * Add event listeners to the {@link MenuItem}.\n     *\n     * @param {Object} component\n     *        The instance of the `MenuItem` to add listeners to.\n     *\n     */\n    addEventListenerForItem(component) {\n      if (!(component instanceof Component$1)) {\n        return;\n      }\n      this.on(component, 'blur', this.boundHandleBlur_);\n      this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n    }\n\n    /**\n     * Remove event listeners from the {@link MenuItem}.\n     *\n     * @param {Object} component\n     *        The instance of the `MenuItem` to remove listeners.\n     *\n     */\n    removeEventListenerForItem(component) {\n      if (!(component instanceof Component$1)) {\n        return;\n      }\n      this.off(component, 'blur', this.boundHandleBlur_);\n      this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n    }\n\n    /**\n     * This method will be called indirectly when the component has been added\n     * before the component adds to the new menu instance by `addItem`.\n     * In this case, the original menu instance will remove the component\n     * by calling `removeChild`.\n     *\n     * @param {Object} component\n     *        The instance of the `MenuItem`\n     */\n    removeChild(component) {\n      if (typeof component === 'string') {\n        component = this.getChild(component);\n      }\n      this.removeEventListenerForItem(component);\n      super.removeChild(component);\n    }\n\n    /**\n     * Add a {@link MenuItem} to the menu.\n     *\n     * @param {Object|string} component\n     *        The name or instance of the `MenuItem` to add.\n     *\n     */\n    addItem(component) {\n      const childComponent = this.addChild(component);\n      if (childComponent) {\n        this.addEventListenerForItem(childComponent);\n      }\n    }\n\n    /**\n     * Create the `Menu`s DOM element.\n     *\n     * @return {Element}\n     *         the element that was created\n     */\n    createEl() {\n      const contentElType = this.options_.contentElType || 'ul';\n      this.contentEl_ = createEl(contentElType, {\n        className: 'vjs-menu-content'\n      });\n      this.contentEl_.setAttribute('role', 'menu');\n      const el = super.createEl('div', {\n        append: this.contentEl_,\n        className: 'vjs-menu'\n      });\n      el.appendChild(this.contentEl_);\n\n      // Prevent clicks from bubbling up. Needed for Menu Buttons,\n      // where a click on the parent is significant\n      on(el, 'click', function (event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n      });\n      return el;\n    }\n    dispose() {\n      this.contentEl_ = null;\n      this.boundHandleBlur_ = null;\n      this.boundHandleTapClick_ = null;\n      super.dispose();\n    }\n\n    /**\n     * Called when a `MenuItem` loses focus.\n     *\n     * @param {Event} event\n     *        The `blur` event that caused this function to be called.\n     *\n     * @listens blur\n     */\n    handleBlur(event) {\n      const relatedTarget = event.relatedTarget || document.activeElement;\n\n      // Close menu popup when a user clicks outside the menu\n      if (!this.children().some(element => {\n        return element.el() === relatedTarget;\n      })) {\n        const btn = this.menuButton_;\n        if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n          btn.unpressButton();\n        }\n      }\n    }\n\n    /**\n     * Called when a `MenuItem` gets clicked or tapped.\n     *\n     * @param {Event} event\n     *        The `click` or `tap` event that caused this function to be called.\n     *\n     * @listens click,tap\n     */\n    handleTapClick(event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton();\n        const childComponents = this.children();\n        if (!Array.isArray(childComponents)) {\n          return;\n        }\n        const foundComponent = childComponents.filter(component => component.el() === event.target)[0];\n        if (!foundComponent) {\n          return;\n        }\n\n        // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere\n        if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }\n\n    /**\n     * Handle a `keydown` event on this menu. This listener is added in the constructor.\n     *\n     * @param {KeyboardEvent} event\n     *        A `keydown` event that happened on the menu.\n     *\n     * @listens keydown\n     */\n    handleKeyDown(event) {\n      // Left and Down Arrows\n      if (event.key === 'ArrowLeft' || event.key === 'ArrowDown') {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepForward();\n\n        // Up and Right Arrows\n      } else if (event.key === 'ArrowRight' || event.key === 'ArrowUp') {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepBack();\n      }\n    }\n\n    /**\n     * Move to next (lower) menu item for keyboard users.\n     */\n    stepForward() {\n      let stepChild = 0;\n      if (this.focusedChild_ !== undefined) {\n        stepChild = this.focusedChild_ + 1;\n      }\n      this.focus(stepChild);\n    }\n\n    /**\n     * Move to previous (higher) menu item for keyboard users.\n     */\n    stepBack() {\n      let stepChild = 0;\n      if (this.focusedChild_ !== undefined) {\n        stepChild = this.focusedChild_ - 1;\n      }\n      this.focus(stepChild);\n    }\n\n    /**\n     * Set focus on a {@link MenuItem} in the `Menu`.\n     *\n     * @param {Object|string} [item=0]\n     *        Index of child item set focus on.\n     */\n    focus(item = 0) {\n      const children = this.children().slice();\n      const haveTitle = children.length && children[0].hasClass('vjs-menu-title');\n      if (haveTitle) {\n        children.shift();\n      }\n      if (children.length > 0) {\n        if (item < 0) {\n          item = 0;\n        } else if (item >= children.length) {\n          item = children.length - 1;\n        }\n        this.focusedChild_ = item;\n        children[item].el_.focus();\n      }\n    }\n  }\n  Component$1.registerComponent('Menu', Menu);\n\n  /**\n   * @file menu-button.js\n   */\n\n  /** @import Player from '../player' */\n\n  /**\n   * A `MenuButton` class for any popup {@link Menu}.\n   *\n   * @extends Component\n   */\n  class MenuButton extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    constructor(player, options = {}) {\n      super(player, options);\n      this.menuButton_ = new Button(player, options);\n      this.menuButton_.controlText(this.controlText_);\n      this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n      // Add buildCSSClass values to the button, not the wrapper\n      const buttonClass = Button.prototype.buildCSSClass();\n      this.menuButton_.el_.className = this.buildCSSClass() + ' ' + buttonClass;\n      this.menuButton_.removeClass('vjs-control');\n      this.addChild(this.menuButton_);\n      this.update();\n      this.enabled_ = true;\n      const handleClick = e => this.handleClick(e);\n      this.handleMenuKeyUp_ = e => this.handleMenuKeyUp(e);\n      this.on(this.menuButton_, 'tap', handleClick);\n      this.on(this.menuButton_, 'click', handleClick);\n      this.on(this.menuButton_, 'keydown', e => this.handleKeyDown(e));\n      this.on(this.menuButton_, 'mouseenter', () => {\n        this.addClass('vjs-hover');\n        this.menu.show();\n        on(document, 'keyup', this.handleMenuKeyUp_);\n      });\n      this.on('mouseleave', e => this.handleMouseLeave(e));\n      this.on('keydown', e => this.handleSubmenuKeyDown(e));\n    }\n\n    /**\n     * Update the menu based on the current state of its items.\n     */\n    update() {\n      const menu = this.createMenu();\n      if (this.menu) {\n        this.menu.dispose();\n        this.removeChild(this.menu);\n      }\n      this.menu = menu;\n      this.addChild(menu);\n\n      /**\n       * Track the state of the menu button\n       *\n       * @type {Boolean}\n       * @private\n       */\n      this.buttonPressed_ = false;\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n      if (this.items && this.items.length <= this.hideThreshold_) {\n        this.hide();\n        this.menu.contentEl_.removeAttribute('role');\n      } else {\n        this.show();\n        this.menu.contentEl_.setAttribute('role', 'menu');\n      }\n    }\n\n    /**\n     * Create the menu and add all items to it.\n     *\n     * @return {Menu}\n     *         The constructed menu\n     */\n    createMenu() {\n      const menu = new Menu(this.player_, {\n        menuButton: this\n      });\n\n      /**\n       * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n       * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n       * it here because every time we run `createMenu` we need to reset the value.\n       *\n       * @protected\n       * @type {Number}\n       */\n      this.hideThreshold_ = 0;\n\n      // Add a title list item to the top\n      if (this.options_.title) {\n        const titleEl = createEl('li', {\n          className: 'vjs-menu-title',\n          textContent: toTitleCase$1(this.options_.title),\n          tabIndex: -1\n        });\n        const titleComponent = new Component$1(this.player_, {\n          el: titleEl\n        });\n        menu.addItem(titleComponent);\n      }\n      this.items = this.createItems();\n      if (this.items) {\n        // Add menu items to the menu\n        for (let i = 0; i < this.items.length; i++) {\n          menu.addItem(this.items[i]);\n        }\n      }\n      return menu;\n    }\n\n    /**\n     * Create the list of menu items. Specific to each subclass.\n     *\n     * @abstract\n     */\n    createItems() {}\n\n    /**\n     * Create the `MenuButtons`s DOM element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    createEl() {\n      return super.createEl('div', {\n        className: this.buildWrapperCSSClass()\n      }, {});\n    }\n\n    /**\n     * Overwrites the `setIcon` method from `Component`.\n     * In this case, we want the icon to be appended to the menuButton.\n     *\n     * @param {string} name\n     *         The icon name to be added.\n     */\n    setIcon(name) {\n      super.setIcon(name, this.menuButton_.el_);\n    }\n\n    /**\n     * Allow sub components to stack CSS class names for the wrapper element\n     *\n     * @return {string}\n     *         The constructed wrapper DOM `className`\n     */\n    buildWrapperCSSClass() {\n      let menuButtonClass = 'vjs-menu-button';\n\n      // If the inline option is passed, we want to use different styles altogether.\n      if (this.options_.inline === true) {\n        menuButtonClass += '-inline';\n      } else {\n        menuButtonClass += '-popup';\n      }\n\n      // TODO: Fix the CSS so that this isn't necessary\n      const buttonClass = Button.prototype.buildCSSClass();\n      return `vjs-menu-button ${menuButtonClass} ${buttonClass} ${super.buildCSSClass()}`;\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      let menuButtonClass = 'vjs-menu-button';\n\n      // If the inline option is passed, we want to use different styles altogether.\n      if (this.options_.inline === true) {\n        menuButtonClass += '-inline';\n      } else {\n        menuButtonClass += '-popup';\n      }\n      return `vjs-menu-button ${menuButtonClass} ${super.buildCSSClass()}`;\n    }\n\n    /**\n     * Get or set the localized control text that will be used for accessibility.\n     *\n     * > NOTE: This will come from the internal `menuButton_` element.\n     *\n     * @param {string} [text]\n     *        Control text for element.\n     *\n     * @param {Element} [el=this.menuButton_.el()]\n     *        Element to set the title on.\n     *\n     * @return {string}\n     *         - The control text when getting\n     */\n    controlText(text, el = this.menuButton_.el()) {\n      return this.menuButton_.controlText(text, el);\n    }\n\n    /**\n     * Dispose of the `menu-button` and all child components.\n     */\n    dispose() {\n      this.handleMouseLeave();\n      super.dispose();\n    }\n\n    /**\n     * Handle a click on a `MenuButton`.\n     * See {@link ClickableComponent#handleClick} for instances where this is called.\n     *\n     * @param {Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    handleClick(event) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } else {\n        this.pressButton();\n      }\n    }\n\n    /**\n     * Handle `mouseleave` for `MenuButton`.\n     *\n     * @param {Event} event\n     *        The `mouseleave` event that caused this function to be called.\n     *\n     * @listens mouseleave\n     */\n    handleMouseLeave(event) {\n      this.removeClass('vjs-hover');\n      off(document, 'keyup', this.handleMenuKeyUp_);\n    }\n\n    /**\n     * Set the focus to the actual button, not to this element\n     */\n    focus() {\n      this.menuButton_.focus();\n    }\n\n    /**\n     * Remove the focus from the actual button, not this element\n     */\n    blur() {\n      this.menuButton_.blur();\n    }\n\n    /**\n     * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n     * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n     *\n     * @param {Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    handleKeyDown(event) {\n      // Escape or Tab unpress the 'button'\n      if (event.key === 'Esc' || event.key === 'Tab') {\n        if (this.buttonPressed_) {\n          this.unpressButton();\n        }\n\n        // Don't preventDefault for Tab key - we still want to lose focus\n        if (!event.key === 'Tab') {\n          event.preventDefault();\n          // Set focus back to the menu button's button\n          this.menuButton_.focus();\n        }\n        // Up Arrow or Down Arrow also 'press' the button to open the menu\n      } else if (event.key === 'Up' || event.key === 'Down' && !(this.player_.options_.playerOptions.spatialNavigation && this.player_.options_.playerOptions.spatialNavigation.enabled)) {\n        if (!this.buttonPressed_) {\n          event.preventDefault();\n          this.pressButton();\n        }\n      }\n    }\n\n    /**\n     * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n     * the constructor.\n     *\n     * @param {Event} event\n     *        Key press event\n     *\n     * @listens keyup\n     */\n    handleMenuKeyUp(event) {\n      // Escape hides popup menu\n      if (event.key === 'Esc' || event.key === 'Tab') {\n        this.removeClass('vjs-hover');\n      }\n    }\n\n    /**\n     * This method name now delegates to `handleSubmenuKeyDown`. This means\n     * anyone calling `handleSubmenuKeyPress` will not see their method calls\n     * stop working.\n     *\n     * @param {Event} event\n     *        The event that caused this function to be called.\n     */\n    handleSubmenuKeyPress(event) {\n      this.handleSubmenuKeyDown(event);\n    }\n\n    /**\n     * Handle a `keydown` event on a sub-menu. The listener for this is added in\n     * the constructor.\n     *\n     * @param {Event} event\n     *        Key press event\n     *\n     * @listens keydown\n     */\n    handleSubmenuKeyDown(event) {\n      // Escape or Tab unpress the 'button'\n      if (event.key === 'Esc' || event.key === 'Tab') {\n        if (this.buttonPressed_) {\n          this.unpressButton();\n        }\n        // Don't preventDefault for Tab key - we still want to lose focus\n        if (!event.key === 'Tab') {\n          event.preventDefault();\n          // Set focus back to the menu button's button\n          this.menuButton_.focus();\n        }\n      }\n    }\n\n    /**\n     * Put the current `MenuButton` into a pressed state.\n     */\n    pressButton() {\n      if (this.enabled_) {\n        this.buttonPressed_ = true;\n        this.menu.show();\n        this.menu.lockShowing();\n        this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n        // set the focus into the submenu, except on iOS where it is resulting in\n        // undesired scrolling behavior when the player is in an iframe\n        if (IS_IOS && isInFrame()) {\n          // Return early so that the menu isn't focused\n          return;\n        }\n        this.menu.focus();\n      }\n    }\n\n    /**\n     * Take the current `MenuButton` out of a pressed state.\n     */\n    unpressButton() {\n      if (this.enabled_) {\n        this.buttonPressed_ = false;\n        this.menu.unlockShowing();\n        this.menu.hide();\n        this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n      }\n    }\n\n    /**\n     * Disable the `MenuButton`. Don't allow it to be clicked.\n     */\n    disable() {\n      this.unpressButton();\n      this.enabled_ = false;\n      this.addClass('vjs-disabled');\n      this.menuButton_.disable();\n    }\n\n    /**\n     * Enable the `MenuButton`. Allow it to be clicked.\n     */\n    enable() {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.menuButton_.enable();\n    }\n  }\n  Component$1.registerComponent('MenuButton', MenuButton);\n\n  /**\n   * @file track-button.js\n   */\n\n  /** @import Player from './player' */\n\n  /**\n   * The base class for buttons that toggle specific  track types (e.g. subtitles).\n   *\n   * @extends MenuButton\n   */\n  class TrackButton extends MenuButton {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      const tracks = options.tracks;\n      super(player, options);\n      if (this.items.length <= 1) {\n        this.hide();\n      }\n      if (!tracks) {\n        return;\n      }\n      const updateHandler = bind_(this, this.update);\n      tracks.addEventListener('removetrack', updateHandler);\n      tracks.addEventListener('addtrack', updateHandler);\n      tracks.addEventListener('labelchange', updateHandler);\n      this.player_.on('ready', updateHandler);\n      this.player_.on('dispose', function () {\n        tracks.removeEventListener('removetrack', updateHandler);\n        tracks.removeEventListener('addtrack', updateHandler);\n        tracks.removeEventListener('labelchange', updateHandler);\n      });\n    }\n  }\n  Component$1.registerComponent('TrackButton', TrackButton);\n\n  /**\n   * @file menu-item.js\n   */\n\n  /** @import Player from '../player' */\n\n  /**\n   * The component for a menu item. `<li>`\n   *\n   * @extends ClickableComponent\n   */\n  class MenuItem extends ClickableComponent {\n    /**\n     * Creates an instance of the this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     *\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.selectable = options.selectable;\n      this.isSelected_ = options.selected || false;\n      this.multiSelectable = options.multiSelectable;\n      this.selected(this.isSelected_);\n      if (this.selectable) {\n        if (this.multiSelectable) {\n          this.el_.setAttribute('role', 'menuitemcheckbox');\n        } else {\n          this.el_.setAttribute('role', 'menuitemradio');\n        }\n      } else {\n        this.el_.setAttribute('role', 'menuitem');\n      }\n    }\n\n    /**\n     * Create the `MenuItem's DOM element\n     *\n     * @param {string} [type=li]\n     *        Element's node type, not actually used, always set to `li`.\n     *\n     * @param {Object} [props={}]\n     *        An object of properties that should be set on the element\n     *\n     * @param {Object} [attrs={}]\n     *        An object of attributes that should be set on the element\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    createEl(type, props, attrs) {\n      // The control is textual, not just an icon\n      this.nonIconControl = true;\n      const el = super.createEl('li', Object.assign({\n        className: 'vjs-menu-item',\n        tabIndex: -1\n      }, props), attrs);\n\n      // swap icon with menu item text.\n      const menuItemEl = createEl('span', {\n        className: 'vjs-menu-item-text',\n        textContent: this.localize(this.options_.label)\n      });\n\n      // If using SVG icons, the element with vjs-icon-placeholder will be added separately.\n      if (this.player_.options_.experimentalSvgIcons) {\n        el.appendChild(menuItemEl);\n      } else {\n        el.replaceChild(menuItemEl, el.querySelector('.vjs-icon-placeholder'));\n      }\n      return el;\n    }\n\n    /**\n     * Ignore keys which are used by the menu, but pass any other ones up. See\n     * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n     *\n     * @param {KeyboardEvent} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    handleKeyDown(event) {\n      if (!['Tab', 'Escape', 'ArrowUp', 'ArrowLeft', 'ArrowRight', 'ArrowDown'].includes(event.key)) {\n        // Pass keydown handling up for unused keys\n        super.handleKeyDown(event);\n      }\n    }\n\n    /**\n     * Any click on a `MenuItem` puts it into the selected state.\n     * See {@link ClickableComponent#handleClick} for instances where this is called.\n     *\n     * @param {Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    handleClick(event) {\n      this.selected(true);\n    }\n\n    /**\n     * Set the state for this menu item as selected or not.\n     *\n     * @param {boolean} selected\n     *        if the menu item is selected or not\n     */\n    selected(selected) {\n      if (this.selectable) {\n        if (selected) {\n          this.addClass('vjs-selected');\n          this.el_.setAttribute('aria-checked', 'true');\n          // aria-checked isn't fully supported by browsers/screen readers,\n          // so indicate selected state to screen reader in the control text.\n          this.controlText(', selected');\n          this.isSelected_ = true;\n        } else {\n          this.removeClass('vjs-selected');\n          this.el_.setAttribute('aria-checked', 'false');\n          // Indicate un-selected state to screen reader\n          this.controlText('');\n          this.isSelected_ = false;\n        }\n      }\n    }\n  }\n  Component$1.registerComponent('MenuItem', MenuItem);\n\n  /**\n   * @file text-track-menu-item.js\n   */\n\n  /** @import Player from '../../player' */\n\n  /**\n   * The specific menu item type for selecting a language within a text track kind\n   *\n   * @extends MenuItem\n   */\n  class TextTrackMenuItem extends MenuItem {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      const track = options.track;\n      const tracks = player.textTracks();\n\n      // Modify options for parent MenuItem class's init.\n      options.label = track.label || track.language || 'Unknown';\n      options.selected = track.mode === 'showing';\n      super(player, options);\n      this.track = track;\n      // Determine the relevant kind(s) of tracks for this component and filter\n      // out empty kinds.\n      this.kinds = (options.kinds || [options.kind || this.track.kind]).filter(Boolean);\n      const changeHandler = (...args) => {\n        this.handleTracksChange.apply(this, args);\n      };\n      const selectedLanguageChangeHandler = (...args) => {\n        this.handleSelectedLanguageChange.apply(this, args);\n      };\n      player.on(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.addEventListener('change', changeHandler);\n      tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n      this.on('dispose', function () {\n        player.off(['loadstart', 'texttrackchange'], changeHandler);\n        tracks.removeEventListener('change', changeHandler);\n        tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n      });\n\n      // iOS7 doesn't dispatch change events to TextTrackLists when an\n      // associated track's mode changes. Without something like\n      // Object.observe() (also not present on iOS7), it's not\n      // possible to detect changes to the mode attribute and polyfill\n      // the change event. As a poor substitute, we manually dispatch\n      // change events whenever the controls modify the mode.\n      if (tracks.onchange === undefined) {\n        let event;\n        this.on(['tap', 'click'], function () {\n          if (typeof window.Event !== 'object') {\n            // Android 2.3 throws an Illegal Constructor error for window.Event\n            try {\n              event = new window.Event('change');\n            } catch (err) {\n              // continue regardless of error\n            }\n          }\n          if (!event) {\n            event = document.createEvent('Event');\n            event.initEvent('change', true, true);\n          }\n          tracks.dispatchEvent(event);\n        });\n      }\n\n      // set the default state based on current tracks\n      this.handleTracksChange();\n    }\n\n    /**\n     * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    handleClick(event) {\n      const referenceTrack = this.track;\n      const tracks = this.player_.textTracks();\n      super.handleClick(event);\n      if (!tracks) {\n        return;\n      }\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n\n        // If the track from the text tracks list is not of the right kind,\n        // skip it. We do not want to affect tracks of incompatible kind(s).\n        if (this.kinds.indexOf(track.kind) === -1) {\n          continue;\n        }\n\n        // If this text track is the component's track and it is not showing,\n        // set it to showing.\n        if (track === referenceTrack) {\n          if (track.mode !== 'showing') {\n            track.mode = 'showing';\n          }\n\n          // If this text track is not the component's track and it is not\n          // disabled, set it to disabled.\n        } else if (track.mode !== 'disabled') {\n          track.mode = 'disabled';\n        }\n      }\n    }\n\n    /**\n     * Handle text track list change\n     *\n     * @param {Event} event\n     *        The `change` event that caused this function to be called.\n     *\n     * @listens TextTrackList#change\n     */\n    handleTracksChange(event) {\n      const shouldBeSelected = this.track.mode === 'showing';\n\n      // Prevent redundant selected() calls because they may cause\n      // screen readers to read the appended control text unnecessarily\n      if (shouldBeSelected !== this.isSelected_) {\n        this.selected(shouldBeSelected);\n      }\n    }\n    handleSelectedLanguageChange(event) {\n      if (this.track.mode === 'showing') {\n        const selectedLanguage = this.player_.cache_.selectedLanguage;\n\n        // Don't replace the kind of track across the same language\n        if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n          return;\n        }\n        this.player_.cache_.selectedLanguage = {\n          enabled: true,\n          language: this.track.language,\n          kind: this.track.kind\n        };\n      }\n    }\n    dispose() {\n      // remove reference to track object on dispose\n      this.track = null;\n      super.dispose();\n    }\n  }\n  Component$1.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n  /**\n   * @file off-text-track-menu-item.js\n   */\n\n  /** @import Player from '../../player' */\n\n  /**\n   * A special menu item for turning off a specific type of text track\n   *\n   * @extends TextTrackMenuItem\n   */\n  class OffTextTrackMenuItem extends TextTrackMenuItem {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      // Create pseudo track info\n      // Requires options['kind']\n      options.track = {\n        player,\n        // it is no longer necessary to store `kind` or `kinds` on the track itself\n        // since they are now stored in the `kinds` property of all instances of\n        // TextTrackMenuItem, but this will remain for backwards compatibility\n        kind: options.kind,\n        kinds: options.kinds,\n        default: false,\n        mode: 'disabled'\n      };\n      if (!options.kinds) {\n        options.kinds = [options.kind];\n      }\n      if (options.label) {\n        options.track.label = options.label;\n      } else {\n        options.track.label = options.kinds.join(' and ') + ' off';\n      }\n\n      // MenuItem is selectable\n      options.selectable = true;\n      // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n      options.multiSelectable = false;\n      super(player, options);\n    }\n\n    /**\n     * Handle text track change\n     *\n     * @param {Event} event\n     *        The event that caused this function to run\n     */\n    handleTracksChange(event) {\n      const tracks = this.player().textTracks();\n      let shouldBeSelected = true;\n      for (let i = 0, l = tracks.length; i < l; i++) {\n        const track = tracks[i];\n        if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n          shouldBeSelected = false;\n          break;\n        }\n      }\n\n      // Prevent redundant selected() calls because they may cause\n      // screen readers to read the appended control text unnecessarily\n      if (shouldBeSelected !== this.isSelected_) {\n        this.selected(shouldBeSelected);\n      }\n    }\n    handleSelectedLanguageChange(event) {\n      const tracks = this.player().textTracks();\n      let allHidden = true;\n      for (let i = 0, l = tracks.length; i < l; i++) {\n        const track = tracks[i];\n        if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n          allHidden = false;\n          break;\n        }\n      }\n      if (allHidden) {\n        this.player_.cache_.selectedLanguage = {\n          enabled: false\n        };\n      }\n    }\n\n    /**\n     * Update control text and label on languagechange\n     */\n    handleLanguagechange() {\n      this.$('.vjs-menu-item-text').textContent = this.player_.localize(this.options_.label);\n      super.handleLanguagechange();\n    }\n  }\n  Component$1.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n  /**\n   * @file text-track-button.js\n   */\n\n  /** @import Player from '../../player' */\n\n  /**\n   * The base class for buttons that toggle specific text track types (e.g. subtitles)\n   *\n   * @extends MenuButton\n   */\n  class TextTrackButton extends TrackButton {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    constructor(player, options = {}) {\n      options.tracks = player.textTracks();\n      super(player, options);\n    }\n\n    /**\n     * Create a menu item for each text track\n     *\n     * @param {TextTrackMenuItem[]} [items=[]]\n     *        Existing array of items to use during creation\n     *\n     * @return {TextTrackMenuItem[]}\n     *         Array of menu items that were created\n     */\n    createItems(items = [], TrackMenuItem = TextTrackMenuItem) {\n      // Label is an override for the [track] off label\n      // USed to localise captions/subtitles\n      let label;\n      if (this.label_) {\n        label = `${this.label_} off`;\n      }\n      // Add an OFF menu item to turn all tracks off\n      items.push(new OffTextTrackMenuItem(this.player_, {\n        kinds: this.kinds_,\n        kind: this.kind_,\n        label\n      }));\n      this.hideThreshold_ += 1;\n      const tracks = this.player_.textTracks();\n      if (!Array.isArray(this.kinds_)) {\n        this.kinds_ = [this.kind_];\n      }\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n\n        // only add tracks that are of an appropriate kind and have a label\n        if (this.kinds_.indexOf(track.kind) > -1) {\n          const item = new TrackMenuItem(this.player_, {\n            track,\n            kinds: this.kinds_,\n            kind: this.kind_,\n            // MenuItem is selectable\n            selectable: true,\n            // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n            multiSelectable: false\n          });\n          item.addClass(`vjs-${track.kind}-menu-item`);\n          items.push(item);\n        }\n      }\n      return items;\n    }\n  }\n  Component$1.registerComponent('TextTrackButton', TextTrackButton);\n\n  /**\n   * @file chapters-track-menu-item.js\n   */\n\n  /** @import Player from '../../player' */\n\n  /**\n   * The chapter track menu item\n   *\n   * @extends MenuItem\n   */\n  class ChaptersTrackMenuItem extends MenuItem {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      const track = options.track;\n      const cue = options.cue;\n      const currentTime = player.currentTime();\n\n      // Modify options for parent MenuItem class's init.\n      options.selectable = true;\n      options.multiSelectable = false;\n      options.label = cue.text;\n      options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n      super(player, options);\n      this.track = track;\n      this.cue = cue;\n    }\n\n    /**\n     * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    handleClick(event) {\n      super.handleClick();\n      this.player_.currentTime(this.cue.startTime);\n    }\n  }\n  Component$1.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n  /**\n   * @file chapters-button.js\n   */\n\n  /** @import Player from '../../player' */\n  /** @import Menu from '../../menu/menu' */\n  /** @import TextTrack from '../../tracks/text-track' */\n  /** @import TextTrackMenuItem from '../text-track-controls/text-track-menu-item' */\n\n  /**\n   * The button component for toggling and selecting chapters\n   * Chapters act much differently than other text tracks\n   * Cues are navigation vs. other tracks of alternative languages\n   *\n   * @extends TextTrackButton\n   */\n  class ChaptersButton extends TextTrackButton {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Function} [ready]\n     *        The function to call when this function is ready.\n     */\n    constructor(player, options, ready) {\n      super(player, options, ready);\n      this.setIcon('chapters');\n      this.selectCurrentItem_ = () => {\n        this.items.forEach(item => {\n          item.selected(this.track_.activeCues[0] === item.cue);\n        });\n      };\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return `vjs-chapters-button ${super.buildCSSClass()}`;\n    }\n    buildWrapperCSSClass() {\n      return `vjs-chapters-button ${super.buildWrapperCSSClass()}`;\n    }\n\n    /**\n     * Update the menu based on the current state of its items.\n     *\n     * @param {Event} [event]\n     *        An event that triggered this function to run.\n     *\n     * @listens TextTrackList#addtrack\n     * @listens TextTrackList#removetrack\n     * @listens TextTrackList#change\n     */\n    update(event) {\n      if (event && event.track && event.track.kind !== 'chapters') {\n        return;\n      }\n      const track = this.findChaptersTrack();\n      if (track !== this.track_) {\n        this.setTrack(track);\n        super.update();\n      } else if (!this.items || track && track.cues && track.cues.length !== this.items.length) {\n        // Update the menu initially or if the number of cues has changed since set\n        super.update();\n      }\n    }\n\n    /**\n     * Set the currently selected track for the chapters button.\n     *\n     * @param {TextTrack} track\n     *        The new track to select. Nothing will change if this is the currently selected\n     *        track.\n     */\n    setTrack(track) {\n      if (this.track_ === track) {\n        return;\n      }\n      if (!this.updateHandler_) {\n        this.updateHandler_ = this.update.bind(this);\n      }\n\n      // here this.track_ refers to the old track instance\n      if (this.track_) {\n        const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n        if (remoteTextTrackEl) {\n          remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n        }\n        this.track_.removeEventListener('cuechange', this.selectCurrentItem_);\n        this.track_ = null;\n      }\n      this.track_ = track;\n\n      // here this.track_ refers to the new track instance\n      if (this.track_) {\n        this.track_.mode = 'hidden';\n        const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n        if (remoteTextTrackEl) {\n          remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n        }\n        this.track_.addEventListener('cuechange', this.selectCurrentItem_);\n      }\n    }\n\n    /**\n     * Find the track object that is currently in use by this ChaptersButton\n     *\n     * @return {TextTrack|undefined}\n     *         The current track or undefined if none was found.\n     */\n    findChaptersTrack() {\n      const tracks = this.player_.textTracks() || [];\n      for (let i = tracks.length - 1; i >= 0; i--) {\n        // We will always choose the last track as our chaptersTrack\n        const track = tracks[i];\n        if (track.kind === this.kind_) {\n          return track;\n        }\n      }\n    }\n\n    /**\n     * Get the caption for the ChaptersButton based on the track label. This will also\n     * use the current tracks localized kind as a fallback if a label does not exist.\n     *\n     * @return {string}\n     *         The tracks current label or the localized track kind.\n     */\n    getMenuCaption() {\n      if (this.track_ && this.track_.label) {\n        return this.track_.label;\n      }\n      return this.localize(toTitleCase$1(this.kind_));\n    }\n\n    /**\n     * Create menu from chapter track\n     *\n     * @return {Menu}\n     *         New menu for the chapter buttons\n     */\n    createMenu() {\n      this.options_.title = this.getMenuCaption();\n      return super.createMenu();\n    }\n\n    /**\n     * Create a menu item for each text track\n     *\n     * @return  {TextTrackMenuItem[]}\n     *         Array of menu items\n     */\n    createItems() {\n      const items = [];\n      if (!this.track_) {\n        return items;\n      }\n      const cues = this.track_.cues;\n      if (!cues) {\n        return items;\n      }\n      for (let i = 0, l = cues.length; i < l; i++) {\n        const cue = cues[i];\n        const mi = new ChaptersTrackMenuItem(this.player_, {\n          track: this.track_,\n          cue\n        });\n        items.push(mi);\n      }\n      return items;\n    }\n  }\n\n  /**\n   * `kind` of TextTrack to look for to associate it with this menu.\n   *\n   * @type {string}\n   * @private\n   */\n  ChaptersButton.prototype.kind_ = 'chapters';\n\n  /**\n   * The text that should display over the `ChaptersButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @protected\n   */\n  ChaptersButton.prototype.controlText_ = 'Chapters';\n  Component$1.registerComponent('ChaptersButton', ChaptersButton);\n\n  /**\n   * @file descriptions-button.js\n   */\n\n  /** @import Player from '../../player' */\n\n  /**\n   * The button component for toggling and selecting descriptions\n   *\n   * @extends TextTrackButton\n   */\n  class DescriptionsButton extends TextTrackButton {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Function} [ready]\n     *        The function to call when this component is ready.\n     */\n    constructor(player, options, ready) {\n      super(player, options, ready);\n      this.setIcon('audio-description');\n      const tracks = player.textTracks();\n      const changeHandler = bind_(this, this.handleTracksChange);\n      tracks.addEventListener('change', changeHandler);\n      this.on('dispose', function () {\n        tracks.removeEventListener('change', changeHandler);\n      });\n    }\n\n    /**\n     * Handle text track change\n     *\n     * @param {Event} event\n     *        The event that caused this function to run\n     *\n     * @listens TextTrackList#change\n     */\n    handleTracksChange(event) {\n      const tracks = this.player().textTracks();\n      let disabled = false;\n\n      // Check whether a track of a different kind is showing\n      for (let i = 0, l = tracks.length; i < l; i++) {\n        const track = tracks[i];\n        if (track.kind !== this.kind_ && track.mode === 'showing') {\n          disabled = true;\n          break;\n        }\n      }\n\n      // If another track is showing, disable this menu button\n      if (disabled) {\n        this.disable();\n      } else {\n        this.enable();\n      }\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return `vjs-descriptions-button ${super.buildCSSClass()}`;\n    }\n    buildWrapperCSSClass() {\n      return `vjs-descriptions-button ${super.buildWrapperCSSClass()}`;\n    }\n  }\n\n  /**\n   * `kind` of TextTrack to look for to associate it with this menu.\n   *\n   * @type {string}\n   * @private\n   */\n  DescriptionsButton.prototype.kind_ = 'descriptions';\n\n  /**\n   * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @protected\n   */\n  DescriptionsButton.prototype.controlText_ = 'Descriptions';\n  Component$1.registerComponent('DescriptionsButton', DescriptionsButton);\n\n  /**\n   * @file subtitles-button.js\n   */\n\n  /** @import Player from '../../player' */\n\n  /**\n   * The button component for toggling and selecting subtitles\n   *\n   * @extends TextTrackButton\n   */\n  class SubtitlesButton extends TextTrackButton {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Function} [ready]\n     *        The function to call when this component is ready.\n     */\n    constructor(player, options, ready) {\n      super(player, options, ready);\n      this.setIcon('subtitles');\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return `vjs-subtitles-button ${super.buildCSSClass()}`;\n    }\n    buildWrapperCSSClass() {\n      return `vjs-subtitles-button ${super.buildWrapperCSSClass()}`;\n    }\n  }\n\n  /**\n   * `kind` of TextTrack to look for to associate it with this menu.\n   *\n   * @type {string}\n   * @private\n   */\n  SubtitlesButton.prototype.kind_ = 'subtitles';\n\n  /**\n   * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @protected\n   */\n  SubtitlesButton.prototype.controlText_ = 'Subtitles';\n  Component$1.registerComponent('SubtitlesButton', SubtitlesButton);\n\n  /**\n   * @file caption-settings-menu-item.js\n   */\n\n  /** @import Player from '../../player' */\n\n  /**\n   * The menu item for caption track settings menu\n   *\n   * @extends TextTrackMenuItem\n   */\n  class CaptionSettingsMenuItem extends TextTrackMenuItem {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      options.track = {\n        player,\n        kind: options.kind,\n        label: options.kind + ' settings',\n        selectable: false,\n        default: false,\n        mode: 'disabled'\n      };\n\n      // CaptionSettingsMenuItem has no concept of 'selected'\n      options.selectable = false;\n      options.name = 'CaptionSettingsMenuItem';\n      super(player, options);\n      this.addClass('vjs-texttrack-settings');\n      this.controlText(', opens ' + options.kind + ' settings dialog');\n    }\n\n    /**\n     * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    handleClick(event) {\n      this.player().getChild('textTrackSettings').open();\n    }\n\n    /**\n     * Update control text and label on languagechange\n     */\n    handleLanguagechange() {\n      this.$('.vjs-menu-item-text').textContent = this.player_.localize(this.options_.kind + ' settings');\n      super.handleLanguagechange();\n    }\n  }\n  Component$1.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n  /**\n   * @file captions-button.js\n   */\n\n  /** @import Player from '../../player' */\n\n  /**\n   * The button component for toggling and selecting captions\n   *\n   * @extends TextTrackButton\n   */\n  class CaptionsButton extends TextTrackButton {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Function} [ready]\n     *        The function to call when this component is ready.\n     */\n    constructor(player, options, ready) {\n      super(player, options, ready);\n      this.setIcon('captions');\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return `vjs-captions-button ${super.buildCSSClass()}`;\n    }\n    buildWrapperCSSClass() {\n      return `vjs-captions-button ${super.buildWrapperCSSClass()}`;\n    }\n\n    /**\n     * Create caption menu items\n     *\n     * @return {CaptionSettingsMenuItem[]}\n     *         The array of current menu items.\n     */\n    createItems() {\n      const items = [];\n      if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n        items.push(new CaptionSettingsMenuItem(this.player_, {\n          kind: this.kind_\n        }));\n        this.hideThreshold_ += 1;\n      }\n      return super.createItems(items);\n    }\n  }\n\n  /**\n   * `kind` of TextTrack to look for to associate it with this menu.\n   *\n   * @type {string}\n   * @private\n   */\n  CaptionsButton.prototype.kind_ = 'captions';\n\n  /**\n   * The text that should display over the `CaptionsButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @protected\n   */\n  CaptionsButton.prototype.controlText_ = 'Captions';\n  Component$1.registerComponent('CaptionsButton', CaptionsButton);\n\n  /**\n   * @file subs-caps-menu-item.js\n   */\n\n  /**\n   * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n   * in the SubsCapsMenu.\n   *\n   * @extends TextTrackMenuItem\n   */\n  class SubsCapsMenuItem extends TextTrackMenuItem {\n    createEl(type, props, attrs) {\n      const el = super.createEl(type, props, attrs);\n      const parentSpan = el.querySelector('.vjs-menu-item-text');\n      if (this.options_.track.kind === 'captions') {\n        if (this.player_.options_.experimentalSvgIcons) {\n          this.setIcon('captions', el);\n        } else {\n          parentSpan.appendChild(createEl('span', {\n            className: 'vjs-icon-placeholder'\n          }, {\n            'aria-hidden': true\n          }));\n        }\n        parentSpan.appendChild(createEl('span', {\n          className: 'vjs-control-text',\n          // space added as the text will visually flow with the\n          // label\n          textContent: ` ${this.localize('Captions')}`\n        }));\n      }\n      return el;\n    }\n  }\n  Component$1.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n  /**\n   * @file sub-caps-button.js\n   */\n\n  /** @import Player from '../../player' */\n\n  /**\n   * The button component for toggling and selecting captions and/or subtitles\n   *\n   * @extends TextTrackButton\n   */\n  class SubsCapsButton extends TextTrackButton {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Function} [ready]\n     *        The function to call when this component is ready.\n     */\n    constructor(player, options = {}) {\n      super(player, options);\n\n      // Although North America uses \"captions\" in most cases for\n      // \"captions and subtitles\" other locales use \"subtitles\"\n      this.label_ = 'subtitles';\n      this.setIcon('subtitles');\n      if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(this.player_.language_) > -1) {\n        this.label_ = 'captions';\n        this.setIcon('captions');\n      }\n      this.menuButton_.controlText(toTitleCase$1(this.label_));\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return `vjs-subs-caps-button ${super.buildCSSClass()}`;\n    }\n    buildWrapperCSSClass() {\n      return `vjs-subs-caps-button ${super.buildWrapperCSSClass()}`;\n    }\n\n    /**\n     * Create caption/subtitles menu items\n     *\n     * @return {CaptionSettingsMenuItem[]}\n     *         The array of current menu items.\n     */\n    createItems() {\n      let items = [];\n      if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n        items.push(new CaptionSettingsMenuItem(this.player_, {\n          kind: this.label_\n        }));\n        this.hideThreshold_ += 1;\n      }\n      items = super.createItems(items, SubsCapsMenuItem);\n      return items;\n    }\n  }\n\n  /**\n   * `kind`s of TextTrack to look for to associate it with this menu.\n   *\n   * @type {array}\n   * @private\n   */\n  SubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n  /**\n   * The text that should display over the `SubsCapsButton`s controls.\n   *\n   *\n   * @type {string}\n   * @protected\n   */\n  SubsCapsButton.prototype.controlText_ = 'Subtitles';\n  Component$1.registerComponent('SubsCapsButton', SubsCapsButton);\n\n  /**\n   * @file audio-track-menu-item.js\n   */\n\n  /** @import Player from '../../player' */\n\n  /**\n   * An {@link AudioTrack} {@link MenuItem}\n   *\n   * @extends MenuItem\n   */\n  class AudioTrackMenuItem extends MenuItem {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      const track = options.track;\n      const tracks = player.audioTracks();\n\n      // Modify options for parent MenuItem class's init.\n      options.label = track.label || track.language || 'Unknown';\n      options.selected = track.enabled;\n      super(player, options);\n      this.track = track;\n      this.addClass(`vjs-${track.kind}-menu-item`);\n      const changeHandler = (...args) => {\n        this.handleTracksChange.apply(this, args);\n      };\n      tracks.addEventListener('change', changeHandler);\n      this.on('dispose', () => {\n        tracks.removeEventListener('change', changeHandler);\n      });\n    }\n    createEl(type, props, attrs) {\n      const el = super.createEl(type, props, attrs);\n      const parentSpan = el.querySelector('.vjs-menu-item-text');\n      if (['main-desc', 'descriptions'].indexOf(this.options_.track.kind) >= 0) {\n        parentSpan.appendChild(createEl('span', {\n          className: 'vjs-icon-placeholder'\n        }, {\n          'aria-hidden': true\n        }));\n        parentSpan.appendChild(createEl('span', {\n          className: 'vjs-control-text',\n          textContent: ' ' + this.localize('Descriptions')\n        }));\n      }\n      return el;\n    }\n\n    /**\n     * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n     * for more detailed information on what a click can be.\n     *\n     * @param {Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    handleClick(event) {\n      super.handleClick(event);\n\n      // the audio track list will automatically toggle other tracks\n      // off for us.\n      this.track.enabled = true;\n\n      // when native audio tracks are used, we want to make sure that other tracks are turned off\n      if (this.player_.tech_.featuresNativeAudioTracks) {\n        const tracks = this.player_.audioTracks();\n        for (let i = 0; i < tracks.length; i++) {\n          const track = tracks[i];\n\n          // skip the current track since we enabled it above\n          if (track === this.track) {\n            continue;\n          }\n          track.enabled = track === this.track;\n        }\n      }\n    }\n\n    /**\n     * Handle any {@link AudioTrack} change.\n     *\n     * @param {Event} [event]\n     *        The {@link AudioTrackList#change} event that caused this to run.\n     *\n     * @listens AudioTrackList#change\n     */\n    handleTracksChange(event) {\n      this.selected(this.track.enabled);\n    }\n  }\n  Component$1.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n  /**\n   * @file audio-track-button.js\n   */\n\n  /**\n   * The base class for buttons that toggle specific {@link AudioTrack} types.\n   *\n   * @extends TrackButton\n   */\n  class AudioTrackButton extends TrackButton {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    constructor(player, options = {}) {\n      options.tracks = player.audioTracks();\n      super(player, options);\n      this.setIcon('audio');\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return `vjs-audio-button ${super.buildCSSClass()}`;\n    }\n    buildWrapperCSSClass() {\n      return `vjs-audio-button ${super.buildWrapperCSSClass()}`;\n    }\n\n    /**\n     * Create a menu item for each audio track\n     *\n     * @param {AudioTrackMenuItem[]} [items=[]]\n     *        An array of existing menu items to use.\n     *\n     * @return {AudioTrackMenuItem[]}\n     *         An array of menu items\n     */\n    createItems(items = []) {\n      // if there's only one audio track, there no point in showing it\n      this.hideThreshold_ = 1;\n      const tracks = this.player_.audioTracks();\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n        items.push(new AudioTrackMenuItem(this.player_, {\n          track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        }));\n      }\n      return items;\n    }\n  }\n\n  /**\n   * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @protected\n   */\n  AudioTrackButton.prototype.controlText_ = 'Audio Track';\n  Component$1.registerComponent('AudioTrackButton', AudioTrackButton);\n\n  /**\n   * @file playback-rate-menu-item.js\n   */\n\n  /** @import Player from '../../player' */\n\n  /**\n   * The specific menu item type for selecting a playback rate.\n   *\n   * @extends MenuItem\n   */\n  class PlaybackRateMenuItem extends MenuItem {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      const label = options.rate;\n      const rate = parseFloat(label, 10);\n\n      // Modify options for parent MenuItem class's init.\n      options.label = label;\n      options.selected = rate === player.playbackRate();\n      options.selectable = true;\n      options.multiSelectable = false;\n      super(player, options);\n      this.label = label;\n      this.rate = rate;\n      this.on(player, 'ratechange', e => this.update(e));\n    }\n\n    /**\n     * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    handleClick(event) {\n      super.handleClick();\n      this.player().playbackRate(this.rate);\n    }\n\n    /**\n     * Update the PlaybackRateMenuItem when the playbackrate changes.\n     *\n     * @param {Event} [event]\n     *        The `ratechange` event that caused this function to run.\n     *\n     * @listens Player#ratechange\n     */\n    update(event) {\n      this.selected(this.player().playbackRate() === this.rate);\n    }\n  }\n\n  /**\n   * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n  PlaybackRateMenuItem.prototype.contentElType = 'button';\n  Component$1.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n  /**\n   * @file playback-rate-menu-button.js\n   */\n\n  /** @import Player from '../../player' */\n\n  /**\n   * The component for controlling the playback rate.\n   *\n   * @extends MenuButton\n   */\n  class PlaybackRateMenuButton extends MenuButton {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.menuButton_.el_.setAttribute('aria-describedby', this.labelElId_);\n      this.updateVisibility();\n      this.updateLabel();\n      this.on(player, 'loadstart', e => this.updateVisibility(e));\n      this.on(player, 'ratechange', e => this.updateLabel(e));\n      this.on(player, 'playbackrateschange', e => this.handlePlaybackRateschange(e));\n    }\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      const el = super.createEl();\n      this.labelElId_ = 'vjs-playback-rate-value-label-' + this.id_;\n      this.labelEl_ = createEl('div', {\n        className: 'vjs-playback-rate-value',\n        id: this.labelElId_,\n        textContent: '1x'\n      });\n      el.appendChild(this.labelEl_);\n      return el;\n    }\n    dispose() {\n      this.labelEl_ = null;\n      super.dispose();\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return `vjs-playback-rate ${super.buildCSSClass()}`;\n    }\n    buildWrapperCSSClass() {\n      return `vjs-playback-rate ${super.buildWrapperCSSClass()}`;\n    }\n\n    /**\n     * Create the list of menu items. Specific to each subclass.\n     *\n     */\n    createItems() {\n      const rates = this.playbackRates();\n      const items = [];\n      for (let i = rates.length - 1; i >= 0; i--) {\n        items.push(new PlaybackRateMenuItem(this.player(), {\n          rate: rates[i] + 'x'\n        }));\n      }\n      return items;\n    }\n\n    /**\n     * On playbackrateschange, update the menu to account for the new items.\n     *\n     * @listens Player#playbackrateschange\n     */\n    handlePlaybackRateschange(event) {\n      this.update();\n    }\n\n    /**\n     * Get possible playback rates\n     *\n     * @return {Array}\n     *         All possible playback rates\n     */\n    playbackRates() {\n      const player = this.player();\n      return player.playbackRates && player.playbackRates() || [];\n    }\n\n    /**\n     * Get whether playback rates is supported by the tech\n     * and an array of playback rates exists\n     *\n     * @return {boolean}\n     *         Whether changing playback rate is supported\n     */\n    playbackRateSupported() {\n      return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n    }\n\n    /**\n     * Hide playback rate controls when they're no playback rate options to select\n     *\n     * @param {Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#loadstart\n     */\n    updateVisibility(event) {\n      if (this.playbackRateSupported()) {\n        this.removeClass('vjs-hidden');\n      } else {\n        this.addClass('vjs-hidden');\n      }\n    }\n\n    /**\n     * Update button label when rate changed\n     *\n     * @param {Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#ratechange\n     */\n    updateLabel(event) {\n      if (this.playbackRateSupported()) {\n        this.labelEl_.textContent = this.player().playbackRate() + 'x';\n      }\n    }\n  }\n\n  /**\n   * The text that should display over the `PlaybackRateMenuButton`s controls.\n   *\n   * Added for localization.\n   *\n   * @type {string}\n   * @protected\n   */\n  PlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n  Component$1.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n  /**\n   * @file spacer.js\n   */\n\n  /**\n   * Just an empty spacer element that can be used as an append point for plugins, etc.\n   * Also can be used to create space between elements when necessary.\n   *\n   * @extends Component\n   */\n  class Spacer extends Component$1 {\n    /**\n    * Builds the default DOM `className`.\n    *\n    * @return {string}\n    *         The DOM `className` for this object.\n    */\n    buildCSSClass() {\n      return `vjs-spacer ${super.buildCSSClass()}`;\n    }\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl(tag = 'div', props = {}, attributes = {}) {\n      if (!props.className) {\n        props.className = this.buildCSSClass();\n      }\n      return super.createEl(tag, props, attributes);\n    }\n  }\n  Component$1.registerComponent('Spacer', Spacer);\n\n  /**\n   * @file custom-control-spacer.js\n   */\n\n  /**\n   * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n   *\n   * @extends Spacer\n   */\n  class CustomControlSpacer extends Spacer {\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return `vjs-custom-control-spacer ${super.buildCSSClass()}`;\n    }\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      return super.createEl('div', {\n        className: this.buildCSSClass(),\n        // No-flex/table-cell mode requires there be some content\n        // in the cell to fill the remaining space of the table.\n        textContent: '\\u00a0'\n      });\n    }\n  }\n  Component$1.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n  /**\n   * @file control-bar.js\n   */\n\n  /**\n   * Container of main controls.\n   *\n   * @extends Component\n   */\n  class ControlBar extends Component$1 {\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      return super.createEl('div', {\n        className: 'vjs-control-bar',\n        dir: 'ltr'\n      });\n    }\n  }\n\n  /**\n   * Default options for `ControlBar`\n   *\n   * @type {Object}\n   * @private\n   */\n  ControlBar.prototype.options_ = {\n    children: ['playToggle', 'skipBackward', 'skipForward', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'pictureInPictureToggle', 'fullscreenToggle']\n  };\n  Component$1.registerComponent('ControlBar', ControlBar);\n\n  /**\n   * @file error-display.js\n   */\n\n  /** @import Player from './player' */\n\n  /**\n   * A display that indicates an error has occurred. This means that the video\n   * is unplayable.\n   *\n   * @extends ModalDialog\n   */\n  class ErrorDisplay extends ModalDialog {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param  {Player} player\n     *         The `Player` that this class should be attached to.\n     *\n     * @param  {Object} [options]\n     *         The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.on(player, 'error', e => {\n        this.open(e);\n      });\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     *\n     * @deprecated Since version 5.\n     */\n    buildCSSClass() {\n      return `vjs-error-display ${super.buildCSSClass()}`;\n    }\n\n    /**\n     * Gets the localized error message based on the `Player`s error.\n     *\n     * @return {string}\n     *         The `Player`s error message localized or an empty string.\n     */\n    content() {\n      const error = this.player().error();\n      return error ? this.localize(error.message) : '';\n    }\n  }\n\n  /**\n   * The default options for an `ErrorDisplay`.\n   *\n   * @private\n   */\n  ErrorDisplay.prototype.options_ = Object.assign({}, ModalDialog.prototype.options_, {\n    pauseOnOpen: false,\n    fillAlways: true,\n    temporary: false,\n    uncloseable: true\n  });\n  Component$1.registerComponent('ErrorDisplay', ErrorDisplay);\n\n  /** @import Player from './player' */\n  /** @import { ContentDescriptor } from  '../utils/dom' */\n\n  /**\n   * Creates DOM element of 'select' & its options.\n   *\n   * @extends Component\n   */\n  class TextTrackSelect extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {ContentDescriptor} [options.content=undefined]\n     *        Provide customized content for this modal.\n     *\n     * @param {string} [options.legendId]\n     *        A text with part of an string to create atribute of aria-labelledby.\n     *\n     * @param {string} [options.id]\n     *        A text with part of an string to create atribute of aria-labelledby.\n     *\n     * @param {Array} [options.SelectOptions]\n     *        Array that contains the value & textContent of for each of the\n     *        options elements.\n     */\n    constructor(player, options = {}) {\n      super(player, options);\n      this.el_.setAttribute('aria-labelledby', this.selectLabelledbyIds);\n    }\n\n    /**\n     * Create the `TextTrackSelect`'s DOM element\n     *\n     * @return {Element}\n     *         The DOM element that gets created.\n     */\n    createEl() {\n      this.selectLabelledbyIds = [this.options_.legendId, this.options_.labelId].join(' ').trim();\n\n      // Create select & inner options\n      const selectoptions = createEl('select', {\n        id: this.options_.id\n      }, {}, this.options_.SelectOptions.map(optionText => {\n        // Constructs an id for the <option>.\n        // For the colour settings that have two <selects> with a <label> each, generates an id based off the label value\n        // For font size/family and edge style with one <select> and no <label>, generates an id with a guid\n        const optionId = (this.options_.labelId ? this.options_.labelId : `vjs-track-option-${newGUID()}`) + '-' + optionText[1].replace(/\\W+/g, '');\n        const option = createEl('option', {\n          id: optionId,\n          value: this.localize(optionText[0]),\n          textContent: optionText[1]\n        });\n        option.setAttribute('aria-labelledby', `${this.selectLabelledbyIds} ${optionId}`);\n        return option;\n      }));\n      return selectoptions;\n    }\n  }\n  Component$1.registerComponent('TextTrackSelect', TextTrackSelect);\n\n  /** @import Player from './player' */\n  /** @import { ContentDescriptor } from '../utils/dom' */\n\n  /**\n   * Creates fieldset section of 'TextTrackSettings'.\n   * Manganes two versions of fieldsets, one for type of 'colors'\n   * & the other for 'font', Component adds diferent DOM elements\n   * to that fieldset  depending on the type.\n   *\n   * @extends Component\n   */\n  class TextTrackFieldset extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {ContentDescriptor} [options.content=undefined]\n     *        Provide customized content for this modal.\n     *\n     * @param {string} [options.legendId]\n     *        A text with part of an string to create atribute of aria-labelledby.\n     *        It passes to 'TextTrackSelect'.\n     *\n     * @param {string} [options.id]\n     *        A text with part of an string to create atribute of aria-labelledby.\n     *        It passes to 'TextTrackSelect'.\n     *\n     * @param {string} [options.legendText]\n     *        A text to use as the text content of the legend element.\n     *\n     * @param {Array} [options.selects]\n     *        Array that contains the selects that are use to create 'selects'\n     *        components.\n     *\n     * @param {Array} [options.SelectOptions]\n     *        Array that contains the value & textContent of for each of the\n     *        options elements, it passes to 'TextTrackSelect'.\n     *\n     * @param {string} [options.type]\n     *        Conditions if some DOM elements will be added to the fieldset\n     *        component.\n     *\n     * @param {Object} [options.selectConfigs]\n     *        Object with the following properties that are the selects configurations:\n     *        backgroundColor, backgroundOpacity, color, edgeStyle, fontFamily,\n     *        fontPercent, textOpacity, windowColor, windowOpacity.\n     *        These properties are use to configure the 'TextTrackSelect' Component.\n     */\n    constructor(player, options = {}) {\n      super(player, options);\n\n      // Add Components & DOM Elements\n      const legendElement = createEl('legend', {\n        textContent: this.localize(this.options_.legendText),\n        id: this.options_.legendId\n      });\n      this.el().appendChild(legendElement);\n      const selects = this.options_.selects;\n\n      // Iterate array of selects to create 'selects' components\n      for (const i of selects) {\n        const selectConfig = this.options_.selectConfigs[i];\n        const selectClassName = selectConfig.className;\n        const id = selectConfig.id.replace('%s', this.options_.id_);\n        let span = null;\n        const guid = `vjs_select_${newGUID()}`;\n\n        // Conditionally create span to add on the component\n        if (this.options_.type === 'colors') {\n          span = createEl('span', {\n            className: selectClassName\n          });\n          const label = createEl('label', {\n            id,\n            className: 'vjs-label',\n            textContent: selectConfig.label\n          });\n          label.setAttribute('for', guid);\n          span.appendChild(label);\n        }\n        const textTrackSelect = new TextTrackSelect(player, {\n          SelectOptions: selectConfig.options,\n          legendId: this.options_.legendId,\n          id: guid,\n          labelId: id\n        });\n        this.addChild(textTrackSelect);\n\n        // Conditionally append to 'select' component to conditionally created span\n        if (this.options_.type === 'colors') {\n          span.appendChild(textTrackSelect.el());\n          this.el().appendChild(span);\n        }\n      }\n    }\n\n    /**\n     * Create the `TextTrackFieldset`'s DOM element\n     *\n     * @return {Element}\n     *         The DOM element that gets created.\n     */\n    createEl() {\n      const el = createEl('fieldset', {\n        // Prefixing classes of elements within a player with \"vjs-\"\n        // is a convention used in Video.js.\n        className: this.options_.className\n      });\n      return el;\n    }\n  }\n  Component$1.registerComponent('TextTrackFieldset', TextTrackFieldset);\n\n  /** @import Player from './player' */\n  /** @import { ContentDescriptor } from  '../utils/dom' */\n\n  /**\n   * The component 'TextTrackSettingsColors' displays a set of 'fieldsets'\n   * using the component 'TextTrackFieldset'.\n   *\n   * @extends Component\n   */\n  class TextTrackSettingsColors extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {ContentDescriptor} [options.content=undefined]\n     *        Provide customized content for this modal.\n     *\n     * @param {Array} [options.fieldSets]\n     *        Array that contains the configurations for the selects.\n     *\n     * @param {Object} [options.selectConfigs]\n     *        Object with the following properties that are the select confugations:\n     *        backgroundColor, backgroundOpacity, color, edgeStyle, fontFamily,\n     *        fontPercent, textOpacity, windowColor, windowOpacity.\n     *        it passes to 'TextTrackFieldset'.\n     */\n    constructor(player, options = {}) {\n      super(player, options);\n      const id_ = this.options_.textTrackComponentid;\n\n      // createElFgColor_\n      const ElFgColorFieldset = new TextTrackFieldset(player, {\n        id_,\n        legendId: `captions-text-legend-${id_}`,\n        legendText: this.localize('Text'),\n        className: 'vjs-fg vjs-track-setting',\n        selects: this.options_.fieldSets[0],\n        selectConfigs: this.options_.selectConfigs,\n        type: 'colors'\n      });\n      this.addChild(ElFgColorFieldset);\n\n      // createElBgColor_\n      const ElBgColorFieldset = new TextTrackFieldset(player, {\n        id_,\n        legendId: `captions-background-${id_}`,\n        legendText: this.localize('Text Background'),\n        className: 'vjs-bg vjs-track-setting',\n        selects: this.options_.fieldSets[1],\n        selectConfigs: this.options_.selectConfigs,\n        type: 'colors'\n      });\n      this.addChild(ElBgColorFieldset);\n\n      // createElWinColor_\n      const ElWinColorFieldset = new TextTrackFieldset(player, {\n        id_,\n        legendId: `captions-window-${id_}`,\n        legendText: this.localize('Caption Area Background'),\n        className: 'vjs-window vjs-track-setting',\n        selects: this.options_.fieldSets[2],\n        selectConfigs: this.options_.selectConfigs,\n        type: 'colors'\n      });\n      this.addChild(ElWinColorFieldset);\n    }\n\n    /**\n     * Create the `TextTrackSettingsColors`'s DOM element\n     *\n     * @return {Element}\n     *         The DOM element that gets created.\n     */\n    createEl() {\n      const el = createEl('div', {\n        className: 'vjs-track-settings-colors'\n      });\n      return el;\n    }\n  }\n  Component$1.registerComponent('TextTrackSettingsColors', TextTrackSettingsColors);\n\n  /** @import Player from './player' */\n  /** @import { ContentDescriptor } from  '../utils/dom' */\n\n  /**\n   * The component 'TextTrackSettingsFont' displays a set of 'fieldsets'\n   * using the component 'TextTrackFieldset'.\n   *\n   * @extends Component\n   */\n  class TextTrackSettingsFont extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {ContentDescriptor} [options.content=undefined]\n     *        Provide customized content for this modal.\n     *\n     * @param {Array} [options.fieldSets]\n     *        Array that contains the configurations for the selects.\n     *\n     * @param {Object} [options.selectConfigs]\n     *        Object with the following properties that are the select confugations:\n     *        backgroundColor, backgroundOpacity, color, edgeStyle, fontFamily,\n     *        fontPercent, textOpacity, windowColor, windowOpacity.\n     *        it passes to 'TextTrackFieldset'.\n     */\n    constructor(player, options = {}) {\n      super(player, options);\n      const id_ = this.options_.textTrackComponentid;\n      const ElFgColorFieldset = new TextTrackFieldset(player, {\n        id_,\n        legendId: `captions-font-size-${id_}`,\n        legendText: 'Font Size',\n        className: 'vjs-font-percent vjs-track-setting',\n        selects: this.options_.fieldSets[0],\n        selectConfigs: this.options_.selectConfigs,\n        type: 'font'\n      });\n      this.addChild(ElFgColorFieldset);\n      const ElBgColorFieldset = new TextTrackFieldset(player, {\n        id_,\n        legendId: `captions-edge-style-${id_}`,\n        legendText: this.localize('Text Edge Style'),\n        className: 'vjs-edge-style vjs-track-setting',\n        selects: this.options_.fieldSets[1],\n        selectConfigs: this.options_.selectConfigs,\n        type: 'font'\n      });\n      this.addChild(ElBgColorFieldset);\n      const ElWinColorFieldset = new TextTrackFieldset(player, {\n        id_,\n        legendId: `captions-font-family-${id_}`,\n        legendText: this.localize('Font Family'),\n        className: 'vjs-font-family vjs-track-setting',\n        selects: this.options_.fieldSets[2],\n        selectConfigs: this.options_.selectConfigs,\n        type: 'font'\n      });\n      this.addChild(ElWinColorFieldset);\n    }\n\n    /**\n     * Create the `TextTrackSettingsFont`'s DOM element\n     *\n     * @return {Element}\n     *         The DOM element that gets created.\n     */\n    createEl() {\n      const el = createEl('div', {\n        className: 'vjs-track-settings-font'\n      });\n      return el;\n    }\n  }\n  Component$1.registerComponent('TextTrackSettingsFont', TextTrackSettingsFont);\n\n  /**\n   * Buttons of reset & done that modal 'TextTrackSettings'\n   * uses as part of its content.\n   *\n   * 'Reset': Resets all settings on 'TextTrackSettings'.\n   * 'Done': Closes 'TextTrackSettings' modal.\n   *\n   * @extends Component\n   */\n  class TrackSettingsControls extends Component$1 {\n    constructor(player, options = {}) {\n      super(player, options);\n\n      // Create DOM elements\n      const defaultsDescription = this.localize('restore all settings to the default values');\n      const resetButton = new Button(player, {\n        controlText: defaultsDescription,\n        className: 'vjs-default-button'\n      });\n      resetButton.el().classList.remove('vjs-control', 'vjs-button');\n      resetButton.el().textContent = this.localize('Reset');\n      this.addChild(resetButton);\n      const doneButton = new Button(player, {\n        controlText: defaultsDescription,\n        className: 'vjs-done-button'\n      });\n\n      // Remove unrequired style classes\n      doneButton.el().classList.remove('vjs-control', 'vjs-button');\n      doneButton.el().textContent = this.localize('Done');\n      this.addChild(doneButton);\n    }\n\n    /**\n     * Create the `TrackSettingsControls`'s DOM element\n     *\n     * @return {Element}\n     *         The DOM element that gets created.\n     */\n    createEl() {\n      const el = createEl('div', {\n        className: 'vjs-track-settings-controls'\n      });\n      return el;\n    }\n  }\n  Component$1.registerComponent('TrackSettingsControls', TrackSettingsControls);\n\n  /**\n   * @file text-track-settings.js\n   */\n\n  /** @import Player from '../player' */\n\n  const LOCAL_STORAGE_KEY$1 = 'vjs-text-track-settings';\n  const COLOR_BLACK = ['#000', 'Black'];\n  const COLOR_BLUE = ['#00F', 'Blue'];\n  const COLOR_CYAN = ['#0FF', 'Cyan'];\n  const COLOR_GREEN = ['#0F0', 'Green'];\n  const COLOR_MAGENTA = ['#F0F', 'Magenta'];\n  const COLOR_RED = ['#F00', 'Red'];\n  const COLOR_WHITE = ['#FFF', 'White'];\n  const COLOR_YELLOW = ['#FF0', 'Yellow'];\n  const OPACITY_OPAQUE = ['1', 'Opaque'];\n  const OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\n  const OPACITY_TRANS = ['0', 'Transparent'];\n\n  // Configuration for the various <select> elements in the DOM of this component.\n  //\n  // Possible keys include:\n  //\n  // `default`:\n  //   The default option index. Only needs to be provided if not zero.\n  // `parser`:\n  //   A function which is used to parse the value from the selected option in\n  //   a customized way.\n  // `selector`:\n  //   The selector used to find the associated <select> element.\n  const selectConfigs = {\n    backgroundColor: {\n      selector: '.vjs-bg-color > select',\n      id: 'captions-background-color-%s',\n      label: 'Color',\n      options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN],\n      className: 'vjs-bg-color'\n    },\n    backgroundOpacity: {\n      selector: '.vjs-bg-opacity > select',\n      id: 'captions-background-opacity-%s',\n      label: 'Opacity',\n      options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS],\n      className: 'vjs-bg-opacity vjs-opacity'\n    },\n    color: {\n      selector: '.vjs-text-color > select',\n      id: 'captions-foreground-color-%s',\n      label: 'Color',\n      options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN],\n      className: 'vjs-text-color'\n    },\n    edgeStyle: {\n      selector: '.vjs-edge-style > select',\n      id: '',\n      label: 'Text Edge Style',\n      options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Drop shadow']]\n    },\n    fontFamily: {\n      selector: '.vjs-font-family > select',\n      id: '',\n      label: 'Font Family',\n      options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n    },\n    fontPercent: {\n      selector: '.vjs-font-percent > select',\n      id: '',\n      label: 'Font Size',\n      options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n      default: 2,\n      parser: v => v === '1.00' ? null : Number(v)\n    },\n    textOpacity: {\n      selector: '.vjs-text-opacity > select',\n      id: 'captions-foreground-opacity-%s',\n      label: 'Opacity',\n      options: [OPACITY_OPAQUE, OPACITY_SEMI],\n      className: 'vjs-text-opacity vjs-opacity'\n    },\n    // Options for this object are defined below.\n    windowColor: {\n      selector: '.vjs-window-color > select',\n      id: 'captions-window-color-%s',\n      label: 'Color',\n      className: 'vjs-window-color'\n    },\n    // Options for this object are defined below.\n    windowOpacity: {\n      selector: '.vjs-window-opacity > select',\n      id: 'captions-window-opacity-%s',\n      label: 'Opacity',\n      options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE],\n      className: 'vjs-window-opacity vjs-opacity'\n    }\n  };\n  selectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n  /**\n   * Get the actual value of an option.\n   *\n   * @param  {string} value\n   *         The value to get\n   *\n   * @param  {Function} [parser]\n   *         Optional function to adjust the value.\n   *\n   * @return {*}\n   *         - Will be `undefined` if no value exists\n   *         - Will be `undefined` if the given value is \"none\".\n   *         - Will be the actual value otherwise.\n   *\n   * @private\n   */\n  function parseOptionValue(value, parser) {\n    if (parser) {\n      value = parser(value);\n    }\n    if (value && value !== 'none') {\n      return value;\n    }\n  }\n\n  /**\n   * Gets the value of the selected <option> element within a <select> element.\n   *\n   * @param  {Element} el\n   *         the element to look in\n   *\n   * @param  {Function} [parser]\n   *         Optional function to adjust the value.\n   *\n   * @return {*}\n   *         - Will be `undefined` if no value exists\n   *         - Will be `undefined` if the given value is \"none\".\n   *         - Will be the actual value otherwise.\n   *\n   * @private\n   */\n  function getSelectedOptionValue(el, parser) {\n    const value = el.options[el.options.selectedIndex].value;\n    return parseOptionValue(value, parser);\n  }\n\n  /**\n   * Sets the selected <option> element within a <select> element based on a\n   * given value.\n   *\n   * @param {Element} el\n   *        The element to look in.\n   *\n   * @param {string} value\n   *        the property to look on.\n   *\n   * @param {Function} [parser]\n   *        Optional function to adjust the value before comparing.\n   *\n   * @private\n   */\n  function setSelectedOption(el, value, parser) {\n    if (!value) {\n      return;\n    }\n    for (let i = 0; i < el.options.length; i++) {\n      if (parseOptionValue(el.options[i].value, parser) === value) {\n        el.selectedIndex = i;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Manipulate Text Tracks settings.\n   *\n   * @extends ModalDialog\n   */\n  class TextTrackSettings extends ModalDialog {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *         The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *         The key/value store of player options.\n     */\n    constructor(player, options) {\n      options.temporary = false;\n      super(player, options);\n      this.updateDisplay = this.updateDisplay.bind(this);\n\n      // fill the modal and pretend we have opened it\n      this.fill();\n      this.hasBeenOpened_ = this.hasBeenFilled_ = true;\n      this.renderModalComponents(player);\n      this.endDialog = createEl('p', {\n        className: 'vjs-control-text',\n        textContent: this.localize('End of dialog window.')\n      });\n      this.el().appendChild(this.endDialog);\n      this.setDefaults();\n\n      // Grab `persistTextTrackSettings` from the player options if not passed in child options\n      if (options.persistTextTrackSettings === undefined) {\n        this.options_.persistTextTrackSettings = this.options_.playerOptions.persistTextTrackSettings;\n      }\n      this.bindFunctionsToSelectsAndButtons();\n      if (this.options_.persistTextTrackSettings) {\n        this.restoreSettings();\n      }\n    }\n    renderModalComponents(player) {\n      const textTrackSettingsColors = new TextTrackSettingsColors(player, {\n        textTrackComponentid: this.id_,\n        selectConfigs,\n        fieldSets: [['color', 'textOpacity'], ['backgroundColor', 'backgroundOpacity'], ['windowColor', 'windowOpacity']]\n      });\n      this.addChild(textTrackSettingsColors);\n      const textTrackSettingsFont = new TextTrackSettingsFont(player, {\n        textTrackComponentid: this.id_,\n        selectConfigs,\n        fieldSets: [['fontPercent'], ['edgeStyle'], ['fontFamily']]\n      });\n      this.addChild(textTrackSettingsFont);\n      const trackSettingsControls = new TrackSettingsControls(player);\n      this.addChild(trackSettingsControls);\n    }\n    bindFunctionsToSelectsAndButtons() {\n      this.on(this.$('.vjs-done-button'), ['click', 'tap'], () => {\n        this.saveSettings();\n        this.close();\n      });\n      this.on(this.$('.vjs-default-button'), ['click', 'tap'], () => {\n        this.setDefaults();\n        this.updateDisplay();\n      });\n      each(selectConfigs, config => {\n        this.on(this.$(config.selector), 'change', this.updateDisplay);\n      });\n    }\n    dispose() {\n      this.endDialog = null;\n      super.dispose();\n    }\n    label() {\n      return this.localize('Caption Settings Dialog');\n    }\n    description() {\n      return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n    }\n    buildCSSClass() {\n      return super.buildCSSClass() + ' vjs-text-track-settings';\n    }\n\n    /**\n     * Gets an object of text track settings (or null).\n     *\n     * @return {Object}\n     *         An object with config values parsed from the DOM or localStorage.\n     */\n    getValues() {\n      return reduce(selectConfigs, (accum, config, key) => {\n        const value = getSelectedOptionValue(this.$(config.selector), config.parser);\n        if (value !== undefined) {\n          accum[key] = value;\n        }\n        return accum;\n      }, {});\n    }\n\n    /**\n     * Sets text track settings from an object of values.\n     *\n     * @param {Object} values\n     *        An object with config values parsed from the DOM or localStorage.\n     */\n    setValues(values) {\n      each(selectConfigs, (config, key) => {\n        setSelectedOption(this.$(config.selector), values[key], config.parser);\n      });\n    }\n\n    /**\n     * Sets all `<select>` elements to their default values.\n     */\n    setDefaults() {\n      each(selectConfigs, config => {\n        const index = config.hasOwnProperty('default') ? config.default : 0;\n        this.$(config.selector).selectedIndex = index;\n      });\n    }\n\n    /**\n     * Restore texttrack settings from localStorage\n     */\n    restoreSettings() {\n      let values;\n      try {\n        values = JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_KEY$1));\n      } catch (err) {\n        log$1.warn(err);\n      }\n      if (values) {\n        this.setValues(values);\n      }\n    }\n\n    /**\n     * Save text track settings to localStorage\n     */\n    saveSettings() {\n      if (!this.options_.persistTextTrackSettings) {\n        return;\n      }\n      const values = this.getValues();\n      try {\n        if (Object.keys(values).length) {\n          window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(values));\n        } else {\n          window.localStorage.removeItem(LOCAL_STORAGE_KEY$1);\n        }\n      } catch (err) {\n        log$1.warn(err);\n      }\n    }\n\n    /**\n     * Update display of text track settings\n     */\n    updateDisplay() {\n      const ttDisplay = this.player_.getChild('textTrackDisplay');\n      if (ttDisplay) {\n        ttDisplay.updateDisplay();\n      }\n    }\n\n    /**\n     * Repopulate dialog with new localizations on languagechange\n     */\n    handleLanguagechange() {\n      this.fill();\n      this.renderModalComponents(this.player_);\n      this.bindFunctionsToSelectsAndButtons();\n    }\n  }\n  Component$1.registerComponent('TextTrackSettings', TextTrackSettings);\n\n  /**\n   * @file resize-manager.js\n   */\n\n  /**\n   * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n   *\n   * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n   *\n   * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n   * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n   *\n   * @example <caption>How to disable the resize manager</caption>\n   * const player = videojs('#vid', {\n   *   resizeManager: false\n   * });\n   *\n   * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n   *\n   * @extends Component\n   */\n  class ResizeManager extends Component$1 {\n    /**\n     * Create the ResizeManager.\n     *\n     * @param {Object} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of ResizeManager options.\n     *\n     * @param {Object} [options.ResizeObserver]\n     *        A polyfill for ResizeObserver can be passed in here.\n     *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n     */\n    constructor(player, options) {\n      let RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window.ResizeObserver;\n\n      // if `null` was passed, we want to disable the ResizeObserver\n      if (options.ResizeObserver === null) {\n        RESIZE_OBSERVER_AVAILABLE = false;\n      }\n\n      // Only create an element when ResizeObserver isn't available\n      const options_ = merge$2({\n        createEl: !RESIZE_OBSERVER_AVAILABLE,\n        reportTouchActivity: false\n      }, options);\n      super(player, options_);\n      this.ResizeObserver = options.ResizeObserver || window.ResizeObserver;\n      this.loadListener_ = null;\n      this.resizeObserver_ = null;\n      this.debouncedHandler_ = debounce(() => {\n        this.resizeHandler();\n      }, 100, false, this);\n      if (RESIZE_OBSERVER_AVAILABLE) {\n        this.resizeObserver_ = new this.ResizeObserver(this.debouncedHandler_);\n        this.resizeObserver_.observe(player.el());\n      } else {\n        this.loadListener_ = () => {\n          if (!this.el_ || !this.el_.contentWindow) {\n            return;\n          }\n          const debouncedHandler_ = this.debouncedHandler_;\n          let unloadListener_ = this.unloadListener_ = function () {\n            off(this, 'resize', debouncedHandler_);\n            off(this, 'unload', unloadListener_);\n            unloadListener_ = null;\n          };\n\n          // safari and edge can unload the iframe before resizemanager dispose\n          // we have to dispose of event handlers correctly before that happens\n          on(this.el_.contentWindow, 'unload', unloadListener_);\n          on(this.el_.contentWindow, 'resize', debouncedHandler_);\n        };\n        this.one('load', this.loadListener_);\n      }\n    }\n    createEl() {\n      return super.createEl('iframe', {\n        className: 'vjs-resize-manager',\n        tabIndex: -1,\n        title: this.localize('No content')\n      }, {\n        'aria-hidden': 'true'\n      });\n    }\n\n    /**\n     * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n     *\n     * @fires Player#playerresize\n     */\n    resizeHandler() {\n      /**\n       * Called when the player size has changed\n       *\n       * @event Player#playerresize\n       * @type {Event}\n       */\n      // make sure player is still around to trigger\n      // prevents this from causing an error after dispose\n      if (!this.player_ || !this.player_.trigger) {\n        return;\n      }\n      this.player_.trigger('playerresize');\n    }\n    dispose() {\n      if (this.debouncedHandler_) {\n        this.debouncedHandler_.cancel();\n      }\n      if (this.resizeObserver_) {\n        if (this.player_.el()) {\n          this.resizeObserver_.unobserve(this.player_.el());\n        }\n        this.resizeObserver_.disconnect();\n      }\n      if (this.loadListener_) {\n        this.off('load', this.loadListener_);\n      }\n      if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n        this.unloadListener_.call(this.el_.contentWindow);\n      }\n      this.ResizeObserver = null;\n      this.resizeObserver = null;\n      this.debouncedHandler_ = null;\n      this.loadListener_ = null;\n      super.dispose();\n    }\n  }\n  Component$1.registerComponent('ResizeManager', ResizeManager);\n\n  /** @import Player from './player' */\n\n  const defaults$1 = {\n    trackingThreshold: 20,\n    liveTolerance: 15\n  };\n\n  /*\n    track when we are at the live edge, and other helpers for live playback */\n\n  /**\n   * A class for checking live current time and determining when the player\n   * is at or behind the live edge.\n   */\n  class LiveTracker extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {number} [options.trackingThreshold=20]\n     *        Number of seconds of live window (seekableEnd - seekableStart) that\n     *        media needs to have before the liveui will be shown.\n     *\n     * @param {number} [options.liveTolerance=15]\n     *        Number of seconds behind live that we have to be\n     *        before we will be considered non-live. Note that this will only\n     *        be used when playing at the live edge. This allows large seekable end\n     *        changes to not effect whether we are live or not.\n     */\n    constructor(player, options) {\n      // LiveTracker does not need an element\n      const options_ = merge$2(defaults$1, options, {\n        createEl: false\n      });\n      super(player, options_);\n      this.trackLiveHandler_ = () => this.trackLive_();\n      this.handlePlay_ = e => this.handlePlay(e);\n      this.handleFirstTimeupdate_ = e => this.handleFirstTimeupdate(e);\n      this.handleSeeked_ = e => this.handleSeeked(e);\n      this.seekToLiveEdge_ = e => this.seekToLiveEdge(e);\n      this.reset_();\n      this.on(this.player_, 'durationchange', e => this.handleDurationchange(e));\n      // we should try to toggle tracking on canplay as native playback engines, like Safari\n      // may not have the proper values for things like seekableEnd until then\n      this.on(this.player_, 'canplay', () => this.toggleTracking());\n    }\n\n    /**\n     * all the functionality for tracking when seek end changes\n     * and for tracking how far past seek end we should be\n     */\n    trackLive_() {\n      const seekable = this.player_.seekable();\n\n      // skip undefined seekable\n      if (!seekable || !seekable.length) {\n        return;\n      }\n      const newTime = Number(window.performance.now().toFixed(4));\n      const deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n      this.lastTime_ = newTime;\n      this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n      const liveCurrentTime = this.liveCurrentTime();\n      const currentTime = this.player_.currentTime();\n\n      // we are behind live if any are true\n      // 1. the player is paused\n      // 2. the user seeked to a location 2 seconds away from live\n      // 3. the difference between live and current time is greater\n      //    liveTolerance which defaults to 15s\n      let isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance;\n\n      // we cannot be behind if\n      // 1. until we have not seen a timeupdate yet\n      // 2. liveCurrentTime is Infinity, which happens on Android and Native Safari\n      if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n        isBehind = false;\n      }\n      if (isBehind !== this.behindLiveEdge_) {\n        this.behindLiveEdge_ = isBehind;\n        this.trigger('liveedgechange');\n      }\n    }\n\n    /**\n     * handle a durationchange event on the player\n     * and start/stop tracking accordingly.\n     */\n    handleDurationchange() {\n      this.toggleTracking();\n    }\n\n    /**\n     * start/stop tracking\n     */\n    toggleTracking() {\n      if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n        if (this.player_.options_.liveui) {\n          this.player_.addClass('vjs-liveui');\n        }\n        this.startTracking();\n      } else {\n        this.player_.removeClass('vjs-liveui');\n        this.stopTracking();\n      }\n    }\n\n    /**\n     * start tracking live playback\n     */\n    startTracking() {\n      if (this.isTracking()) {\n        return;\n      }\n\n      // If we haven't seen a timeupdate, we need to check whether playback\n      // began before this component started tracking. This can happen commonly\n      // when using autoplay.\n      if (!this.timeupdateSeen_) {\n        this.timeupdateSeen_ = this.player_.hasStarted();\n      }\n      this.trackingInterval_ = this.setInterval(this.trackLiveHandler_, UPDATE_REFRESH_INTERVAL);\n      this.trackLive_();\n      this.on(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n      if (!this.timeupdateSeen_) {\n        this.one(this.player_, 'play', this.handlePlay_);\n        this.one(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n      } else {\n        this.on(this.player_, 'seeked', this.handleSeeked_);\n      }\n    }\n\n    /**\n     * handle the first timeupdate on the player if it wasn't already playing\n     * when live tracker started tracking.\n     */\n    handleFirstTimeupdate() {\n      this.timeupdateSeen_ = true;\n      this.on(this.player_, 'seeked', this.handleSeeked_);\n    }\n\n    /**\n     * Keep track of what time a seek starts, and listen for seeked\n     * to find where a seek ends.\n     */\n    handleSeeked() {\n      const timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n      this.seekedBehindLive_ = this.nextSeekedFromUser_ && timeDiff > 2;\n      this.nextSeekedFromUser_ = false;\n      this.trackLive_();\n    }\n\n    /**\n     * handle the first play on the player, and make sure that we seek\n     * right to the live edge.\n     */\n    handlePlay() {\n      this.one(this.player_, 'timeupdate', this.seekToLiveEdge_);\n    }\n\n    /**\n     * Stop tracking, and set all internal variables to\n     * their initial value.\n     */\n    reset_() {\n      this.lastTime_ = -1;\n      this.pastSeekEnd_ = 0;\n      this.lastSeekEnd_ = -1;\n      this.behindLiveEdge_ = true;\n      this.timeupdateSeen_ = false;\n      this.seekedBehindLive_ = false;\n      this.nextSeekedFromUser_ = false;\n      this.clearInterval(this.trackingInterval_);\n      this.trackingInterval_ = null;\n      this.off(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n      this.off(this.player_, 'seeked', this.handleSeeked_);\n      this.off(this.player_, 'play', this.handlePlay_);\n      this.off(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n      this.off(this.player_, 'timeupdate', this.seekToLiveEdge_);\n    }\n\n    /**\n     * The next seeked event is from the user. Meaning that any seek\n     * > 2s behind live will be considered behind live for real and\n     * liveTolerance will be ignored.\n     */\n    nextSeekedFromUser() {\n      this.nextSeekedFromUser_ = true;\n    }\n\n    /**\n     * stop tracking live playback\n     */\n    stopTracking() {\n      if (!this.isTracking()) {\n        return;\n      }\n      this.reset_();\n      this.trigger('liveedgechange');\n    }\n\n    /**\n     * A helper to get the player seekable end\n     * so that we don't have to null check everywhere\n     *\n     * @return {number}\n     *         The furthest seekable end or Infinity.\n     */\n    seekableEnd() {\n      const seekable = this.player_.seekable();\n      const seekableEnds = [];\n      let i = seekable ? seekable.length : 0;\n      while (i--) {\n        seekableEnds.push(seekable.end(i));\n      }\n\n      // grab the furthest seekable end after sorting, or if there are none\n      // default to Infinity\n      return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n    }\n\n    /**\n     * A helper to get the player seekable start\n     * so that we don't have to null check everywhere\n     *\n     * @return {number}\n     *         The earliest seekable start or 0.\n     */\n    seekableStart() {\n      const seekable = this.player_.seekable();\n      const seekableStarts = [];\n      let i = seekable ? seekable.length : 0;\n      while (i--) {\n        seekableStarts.push(seekable.start(i));\n      }\n\n      // grab the first seekable start after sorting, or if there are none\n      // default to 0\n      return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n    }\n\n    /**\n     * Get the live time window aka\n     * the amount of time between seekable start and\n     * live current time.\n     *\n     * @return {number}\n     *         The amount of seconds that are seekable in\n     *         the live video.\n     */\n    liveWindow() {\n      const liveCurrentTime = this.liveCurrentTime();\n\n      // if liveCurrenTime is Infinity then we don't have a liveWindow at all\n      if (liveCurrentTime === Infinity) {\n        return 0;\n      }\n      return liveCurrentTime - this.seekableStart();\n    }\n\n    /**\n     * Determines if the player is live, only checks if this component\n     * is tracking live playback or not\n     *\n     * @return {boolean}\n     *         Whether liveTracker is tracking\n     */\n    isLive() {\n      return this.isTracking();\n    }\n\n    /**\n     * Determines if currentTime is at the live edge and won't fall behind\n     * on each seekableendchange\n     *\n     * @return {boolean}\n     *         Whether playback is at the live edge\n     */\n    atLiveEdge() {\n      return !this.behindLiveEdge();\n    }\n\n    /**\n     * get what we expect the live current time to be\n     *\n     * @return {number}\n     *         The expected live current time\n     */\n    liveCurrentTime() {\n      return this.pastSeekEnd() + this.seekableEnd();\n    }\n\n    /**\n     * The number of seconds that have occurred after seekable end\n     * changed. This will be reset to 0 once seekable end changes.\n     *\n     * @return {number}\n     *         Seconds past the current seekable end\n     */\n    pastSeekEnd() {\n      const seekableEnd = this.seekableEnd();\n      if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n        this.pastSeekEnd_ = 0;\n      }\n      this.lastSeekEnd_ = seekableEnd;\n      return this.pastSeekEnd_;\n    }\n\n    /**\n     * If we are currently behind the live edge, aka currentTime will be\n     * behind on a seekableendchange\n     *\n     * @return {boolean}\n     *         If we are behind the live edge\n     */\n    behindLiveEdge() {\n      return this.behindLiveEdge_;\n    }\n\n    /**\n     * Whether live tracker is currently tracking or not.\n     */\n    isTracking() {\n      return typeof this.trackingInterval_ === 'number';\n    }\n\n    /**\n     * Seek to the live edge if we are behind the live edge\n     */\n    seekToLiveEdge() {\n      this.seekedBehindLive_ = false;\n      if (this.atLiveEdge()) {\n        return;\n      }\n      this.nextSeekedFromUser_ = false;\n      this.player_.currentTime(this.liveCurrentTime());\n    }\n\n    /**\n     * Dispose of liveTracker\n     */\n    dispose() {\n      this.stopTracking();\n      super.dispose();\n    }\n  }\n  Component$1.registerComponent('LiveTracker', LiveTracker);\n\n  /**\n   * Displays an element over the player which contains an optional title and\n   * description for the current content.\n   *\n   * Much of the code for this component originated in the now obsolete\n   * videojs-dock plugin: https://github.com/brightcove/videojs-dock/\n   *\n   * @extends Component\n   */\n  class TitleBar extends Component$1 {\n    constructor(player, options) {\n      super(player, options);\n      this.on('statechanged', e => this.updateDom_());\n      this.updateDom_();\n    }\n\n    /**\n     * Create the `TitleBar`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      this.els = {\n        title: createEl('div', {\n          className: 'vjs-title-bar-title',\n          id: `vjs-title-bar-title-${newGUID()}`\n        }),\n        description: createEl('div', {\n          className: 'vjs-title-bar-description',\n          id: `vjs-title-bar-description-${newGUID()}`\n        })\n      };\n      return createEl('div', {\n        className: 'vjs-title-bar'\n      }, {}, values$1(this.els));\n    }\n\n    /**\n     * Updates the DOM based on the component's state object.\n     */\n    updateDom_() {\n      const tech = this.player_.tech_;\n      const techEl = tech && tech.el_;\n      const techAriaAttrs = {\n        title: 'aria-labelledby',\n        description: 'aria-describedby'\n      };\n      ['title', 'description'].forEach(k => {\n        const value = this.state[k];\n        const el = this.els[k];\n        const techAriaAttr = techAriaAttrs[k];\n        emptyEl(el);\n        if (value) {\n          textContent(el, value);\n        }\n\n        // If there is a tech element available, update its ARIA attributes\n        // according to whether a title and/or description have been provided.\n        if (techEl) {\n          techEl.removeAttribute(techAriaAttr);\n          if (value) {\n            techEl.setAttribute(techAriaAttr, el.id);\n          }\n        }\n      });\n      if (this.state.title || this.state.description) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    }\n\n    /**\n     * Update the contents of the title bar component with new title and\n     * description text.\n     *\n     * If both title and description are missing, the title bar will be hidden.\n     *\n     * If either title or description are present, the title bar will be visible.\n     *\n     * NOTE: Any previously set value will be preserved. To unset a previously\n     * set value, you must pass an empty string or null.\n     *\n     * For example:\n     *\n     * ```\n     * update({title: 'foo', description: 'bar'}) // title: 'foo', description: 'bar'\n     * update({description: 'bar2'}) // title: 'foo', description: 'bar2'\n     * update({title: ''}) // title: '', description: 'bar2'\n     * update({title: 'foo', description: null}) // title: 'foo', description: null\n     * ```\n     *\n     * @param  {Object} [options={}]\n     *         An options object. When empty, the title bar will be hidden.\n     *\n     * @param  {string} [options.title]\n     *         A title to display in the title bar.\n     *\n     * @param  {string} [options.description]\n     *         A description to display in the title bar.\n     */\n    update(options) {\n      this.setState(options);\n    }\n\n    /**\n     * Dispose the component.\n     */\n    dispose() {\n      const tech = this.player_.tech_;\n      const techEl = tech && tech.el_;\n      if (techEl) {\n        techEl.removeAttribute('aria-labelledby');\n        techEl.removeAttribute('aria-describedby');\n      }\n      super.dispose();\n      this.els = null;\n    }\n  }\n  Component$1.registerComponent('TitleBar', TitleBar);\n\n  /** @import Player from './player' */\n\n  /**\n   * @typedef {object} TransientButtonOptions\n   * @property {string} [controlText] Control text, usually visible for these buttons\n   * @property {number} [initialDisplay=4000] Time in ms that button should initially remain visible\n   * @property {Array<'top'|'neartop'|'bottom'|'left'|'right'>} [position] Array of position strings to add basic styles for positioning\n   * @property {string} [className] Class(es) to add\n   * @property {boolean} [takeFocus=false] Whether element sohuld take focus when shown\n   * @property {Function} [clickHandler] Function called on button activation\n   */\n\n  /** @type {TransientButtonOptions} */\n  const defaults = {\n    initialDisplay: 4000,\n    position: [],\n    takeFocus: false\n  };\n\n  /**\n   * A floating transient button.\n   * It's recommended to insert these buttons _before_ the control bar with the this argument to `addChild`\n   * for a logical tab order.\n   *\n   * @example\n   * ```\n   * player.addChild(\n   *   'TransientButton',\n   *   options,\n   *   player.children().indexOf(player.getChild(\"ControlBar\"))\n   * )\n   * ```\n   *\n   * @extends Button\n   */\n  class TransientButton extends Button {\n    /**\n     * TransientButton constructor\n     *\n     * @param {Player} player The button's player\n     * @param {TransientButtonOptions} options Options for the transient button\n     */\n    constructor(player, options) {\n      options = merge$2(defaults, options);\n      super(player, options);\n      this.controlText(options.controlText);\n      this.hide();\n\n      // When shown, the float button will be visible even if the user is inactive.\n      // Clear this if there is any interaction.\n      this.on(this.player_, ['useractive', 'userinactive'], e => {\n        this.removeClass('force-display');\n      });\n    }\n\n    /**\n     * Return CSS class including position classes\n     *\n     * @return {string} CSS class list\n     */\n    buildCSSClass() {\n      return `vjs-transient-button focus-visible ${this.options_.position.map(c => `vjs-${c}`).join(' ')}`;\n    }\n\n    /**\n     * Create the button element\n     *\n     * @return {HTMLButtonElement} The button element\n     */\n    createEl() {\n      /** @type HTMLButtonElement */\n      const el = createEl('button', {}, {\n        type: 'button',\n        class: this.buildCSSClass()\n      }, createEl('span'));\n      this.controlTextEl_ = el.querySelector('span');\n      return el;\n    }\n\n    /**\n     * Show the button. The button will remain visible for the `initialDisplay` time, default 4s,\n     * and when there is user activity.\n     */\n    show() {\n      super.show();\n      this.addClass('force-display');\n      if (this.options_.takeFocus) {\n        this.el().focus({\n          preventScroll: true\n        });\n      }\n      this.forceDisplayTimeout = this.player_.setTimeout(() => {\n        this.removeClass('force-display');\n      }, this.options_.initialDisplay);\n    }\n\n    /**\n     * Hide the display, even if during the `initialDisplay` time.\n     */\n    hide() {\n      this.removeClass('force-display');\n      super.hide();\n    }\n\n    /**\n     * Dispose the component\n     */\n    dispose() {\n      this.player_.clearTimeout(this.forceDisplayTimeout);\n      super.dispose();\n    }\n  }\n  Component$1.registerComponent('TransientButton', TransientButton);\n\n  /** @import Html5 from './html5' */\n\n  /**\n   * This function is used to fire a sourceset when there is something\n   * similar to `mediaEl.load()` being called. It will try to find the source via\n   * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n   * with the source that was found or empty string if we cannot know. If it cannot\n   * find a source then `sourceset` will not be fired.\n   *\n   * @param {Html5} tech\n   *        The tech object that sourceset was setup on\n   *\n   * @return {boolean}\n   *         returns false if the sourceset was not fired and true otherwise.\n   */\n  const sourcesetLoad = tech => {\n    const el = tech.el();\n\n    // if `el.src` is set, that source will be loaded.\n    if (el.hasAttribute('src')) {\n      tech.triggerSourceset(el.src);\n      return true;\n    }\n\n    /**\n     * Since there isn't a src property on the media element, source elements will be used for\n     * implementing the source selection algorithm. This happens asynchronously and\n     * for most cases were there is more than one source we cannot tell what source will\n     * be loaded, without re-implementing the source selection algorithm. At this time we are not\n     * going to do that. There are three special cases that we do handle here though:\n     *\n     * 1. If there are no sources, do not fire `sourceset`.\n     * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n     * 3. If there is more than one `<source>` but all of them have the same `src` url.\n     *    That will be our src.\n     */\n    const sources = tech.$$('source');\n    const srcUrls = [];\n    let src = '';\n\n    // if there are no sources, do not fire sourceset\n    if (!sources.length) {\n      return false;\n    }\n\n    // only count valid/non-duplicate source elements\n    for (let i = 0; i < sources.length; i++) {\n      const url = sources[i].src;\n      if (url && srcUrls.indexOf(url) === -1) {\n        srcUrls.push(url);\n      }\n    }\n\n    // there were no valid sources\n    if (!srcUrls.length) {\n      return false;\n    }\n\n    // there is only one valid source element url\n    // use that\n    if (srcUrls.length === 1) {\n      src = srcUrls[0];\n    }\n    tech.triggerSourceset(src);\n    return true;\n  };\n\n  /**\n   * our implementation of an `innerHTML` descriptor for browsers\n   * that do not have one.\n   */\n  const innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n    get() {\n      return this.cloneNode(true).innerHTML;\n    },\n    set(v) {\n      // make a dummy node to use innerHTML on\n      const dummy = document.createElement(this.nodeName.toLowerCase());\n\n      // set innerHTML to the value provided\n      dummy.innerHTML = v;\n\n      // make a document fragment to hold the nodes from dummy\n      const docFrag = document.createDocumentFragment();\n\n      // copy all of the nodes created by the innerHTML on dummy\n      // to the document fragment\n      while (dummy.childNodes.length) {\n        docFrag.appendChild(dummy.childNodes[0]);\n      }\n\n      // remove content\n      this.innerText = '';\n\n      // now we add all of that html in one by appending the\n      // document fragment. This is how innerHTML does it.\n      window.Element.prototype.appendChild.call(this, docFrag);\n\n      // then return the result that innerHTML's setter would\n      return this.innerHTML;\n    }\n  });\n\n  /**\n   * Get a property descriptor given a list of priorities and the\n   * property to get.\n   */\n  const getDescriptor = (priority, prop) => {\n    let descriptor = {};\n    for (let i = 0; i < priority.length; i++) {\n      descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n      if (descriptor && descriptor.set && descriptor.get) {\n        break;\n      }\n    }\n    descriptor.enumerable = true;\n    descriptor.configurable = true;\n    return descriptor;\n  };\n  const getInnerHTMLDescriptor = tech => getDescriptor([tech.el(), window.HTMLMediaElement.prototype, window.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n\n  /**\n   * Patches browser internal functions so that we can tell synchronously\n   * if a `<source>` was appended to the media element. For some reason this\n   * causes a `sourceset` if the the media element is ready and has no source.\n   * This happens when:\n   * - The page has just loaded and the media element does not have a source.\n   * - The media element was emptied of all sources, then `load()` was called.\n   *\n   * It does this by patching the following functions/properties when they are supported:\n   *\n   * - `append()` - can be used to add a `<source>` element to the media element\n   * - `appendChild()` - can be used to add a `<source>` element to the media element\n   * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n   * - `innerHTML` -  can be used to add a `<source>` element to the media element\n   *\n   * @param {Html5} tech\n   *        The tech object that sourceset is being setup on.\n   */\n  const firstSourceWatch = function (tech) {\n    const el = tech.el();\n\n    // make sure firstSourceWatch isn't setup twice.\n    if (el.resetSourceWatch_) {\n      return;\n    }\n    const old = {};\n    const innerDescriptor = getInnerHTMLDescriptor(tech);\n    const appendWrapper = appendFn => (...args) => {\n      const retval = appendFn.apply(el, args);\n      sourcesetLoad(tech);\n      return retval;\n    };\n    ['append', 'appendChild', 'insertAdjacentHTML'].forEach(k => {\n      if (!el[k]) {\n        return;\n      }\n\n      // store the old function\n      old[k] = el[k];\n\n      // call the old function with a sourceset if a source\n      // was loaded\n      el[k] = appendWrapper(old[k]);\n    });\n    Object.defineProperty(el, 'innerHTML', merge$2(innerDescriptor, {\n      set: appendWrapper(innerDescriptor.set)\n    }));\n    el.resetSourceWatch_ = () => {\n      el.resetSourceWatch_ = null;\n      Object.keys(old).forEach(k => {\n        el[k] = old[k];\n      });\n      Object.defineProperty(el, 'innerHTML', innerDescriptor);\n    };\n\n    // on the first sourceset, we need to revert our changes\n    tech.one('sourceset', el.resetSourceWatch_);\n  };\n\n  /**\n   * our implementation of a `src` descriptor for browsers\n   * that do not have one\n   */\n  const srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n    get() {\n      if (this.hasAttribute('src')) {\n        return getAbsoluteURL(window.Element.prototype.getAttribute.call(this, 'src'));\n      }\n      return '';\n    },\n    set(v) {\n      window.Element.prototype.setAttribute.call(this, 'src', v);\n      return v;\n    }\n  });\n  const getSrcDescriptor = tech => getDescriptor([tech.el(), window.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n\n  /**\n   * setup `sourceset` handling on the `Html5` tech. This function\n   * patches the following element properties/functions:\n   *\n   * - `src` - to determine when `src` is set\n   * - `setAttribute()` - to determine when `src` is set\n   * - `load()` - this re-triggers the source selection algorithm, and can\n   *              cause a sourceset.\n   *\n   * If there is no source when we are adding `sourceset` support or during a `load()`\n   * we also patch the functions listed in `firstSourceWatch`.\n   *\n   * @param {Html5} tech\n   *        The tech to patch\n   */\n  const setupSourceset = function (tech) {\n    if (!tech.featuresSourceset) {\n      return;\n    }\n    const el = tech.el();\n\n    // make sure sourceset isn't setup twice.\n    if (el.resetSourceset_) {\n      return;\n    }\n    const srcDescriptor = getSrcDescriptor(tech);\n    const oldSetAttribute = el.setAttribute;\n    const oldLoad = el.load;\n    Object.defineProperty(el, 'src', merge$2(srcDescriptor, {\n      set: v => {\n        const retval = srcDescriptor.set.call(el, v);\n\n        // we use the getter here to get the actual value set on src\n        tech.triggerSourceset(el.src);\n        return retval;\n      }\n    }));\n    el.setAttribute = (n, v) => {\n      const retval = oldSetAttribute.call(el, n, v);\n      if (/src/i.test(n)) {\n        tech.triggerSourceset(el.src);\n      }\n      return retval;\n    };\n    el.load = () => {\n      const retval = oldLoad.call(el);\n\n      // if load was called, but there was no source to fire\n      // sourceset on. We have to watch for a source append\n      // as that can trigger a `sourceset` when the media element\n      // has no source\n      if (!sourcesetLoad(tech)) {\n        tech.triggerSourceset('');\n        firstSourceWatch(tech);\n      }\n      return retval;\n    };\n    if (el.currentSrc) {\n      tech.triggerSourceset(el.currentSrc);\n    } else if (!sourcesetLoad(tech)) {\n      firstSourceWatch(tech);\n    }\n    el.resetSourceset_ = () => {\n      el.resetSourceset_ = null;\n      el.load = oldLoad;\n      el.setAttribute = oldSetAttribute;\n      Object.defineProperty(el, 'src', srcDescriptor);\n      if (el.resetSourceWatch_) {\n        el.resetSourceWatch_();\n      }\n    };\n  };\n\n  /**\n   * @file html5.js\n   */\n\n  /**\n   * HTML5 Media Controller - Wrapper for HTML5 Media API\n   *\n   * @mixes Tech~SourceHandlerAdditions\n   * @extends Tech\n   */\n  class Html5 extends Tech {\n    /**\n    * Create an instance of this Tech.\n    *\n    * @param {Object} [options]\n    *        The key/value store of player options.\n    *\n    * @param {Function} [ready]\n    *        Callback function to call when the `HTML5` Tech is ready.\n    */\n    constructor(options, ready) {\n      super(options, ready);\n      const source = options.source;\n      let crossoriginTracks = false;\n      this.featuresVideoFrameCallback = this.featuresVideoFrameCallback && this.el_.tagName === 'VIDEO';\n\n      // Set the source if one is provided\n      // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n      // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n      // anyway so the error gets fired.\n      if (source && (this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n        this.setSource(source);\n      } else {\n        this.handleLateInit_(this.el_);\n      }\n\n      // setup sourceset after late sourceset/init\n      if (options.enableSourceset) {\n        this.setupSourcesetHandling_();\n      }\n      this.isScrubbing_ = false;\n      if (this.el_.hasChildNodes()) {\n        const nodes = this.el_.childNodes;\n        let nodesLength = nodes.length;\n        const removeNodes = [];\n        while (nodesLength--) {\n          const node = nodes[nodesLength];\n          const nodeName = node.nodeName.toLowerCase();\n          if (nodeName === 'track') {\n            if (!this.featuresNativeTextTracks) {\n              // Empty video tag tracks so the built-in player doesn't use them also.\n              // This may not be fast enough to stop HTML5 browsers from reading the tags\n              // so we'll need to turn off any default tracks if we're manually doing\n              // captions and subtitles. videoElement.textTracks\n              removeNodes.push(node);\n            } else {\n              // store HTMLTrackElement and TextTrack to remote list\n              this.remoteTextTrackEls().addTrackElement_(node);\n              this.remoteTextTracks().addTrack(node.track);\n              this.textTracks().addTrack(node.track);\n              if (!crossoriginTracks && !this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n                crossoriginTracks = true;\n              }\n            }\n          }\n        }\n        for (let i = 0; i < removeNodes.length; i++) {\n          this.el_.removeChild(removeNodes[i]);\n        }\n      }\n      this.proxyNativeTracks_();\n      if (this.featuresNativeTextTracks && crossoriginTracks) {\n        log$1.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n      }\n\n      // prevent iOS Safari from disabling metadata text tracks during native playback\n      this.restoreMetadataTracksInIOSNativePlayer_();\n\n      // Determine if native controls should be used\n      // Our goal should be to get the custom controls on mobile solid everywhere\n      // so we can remove this all together. Right now this will block custom\n      // controls on touch enabled laptops like the Chrome Pixel\n      if ((TOUCH_ENABLED || IS_IPHONE) && options.nativeControlsForTouch === true) {\n        this.setControls(true);\n      }\n\n      // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n      // into a `fullscreenchange` event\n      this.proxyWebkitFullscreen_();\n      this.triggerReady();\n    }\n\n    /**\n     * Dispose of `HTML5` media element and remove all tracks.\n     */\n    dispose() {\n      if (this.el_ && this.el_.resetSourceset_) {\n        this.el_.resetSourceset_();\n      }\n      Html5.disposeMediaElement(this.el_);\n      this.options_ = null;\n\n      // tech will handle clearing of the emulated track list\n      super.dispose();\n    }\n\n    /**\n     * Modify the media element so that we can detect when\n     * the source is changed. Fires `sourceset` just after the source has changed\n     */\n    setupSourcesetHandling_() {\n      setupSourceset(this);\n    }\n\n    /**\n     * When a captions track is enabled in the iOS Safari native player, all other\n     * tracks are disabled (including metadata tracks), which nulls all of their\n     * associated cue points. This will restore metadata tracks to their pre-fullscreen\n     * state in those cases so that cue points are not needlessly lost.\n     *\n     * @private\n     */\n    restoreMetadataTracksInIOSNativePlayer_() {\n      const textTracks = this.textTracks();\n      let metadataTracksPreFullscreenState;\n\n      // captures a snapshot of every metadata track's current state\n      const takeMetadataTrackSnapshot = () => {\n        metadataTracksPreFullscreenState = [];\n        for (let i = 0; i < textTracks.length; i++) {\n          const track = textTracks[i];\n          if (track.kind === 'metadata') {\n            metadataTracksPreFullscreenState.push({\n              track,\n              storedMode: track.mode\n            });\n          }\n        }\n      };\n\n      // snapshot each metadata track's initial state, and update the snapshot\n      // each time there is a track 'change' event\n      takeMetadataTrackSnapshot();\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n      this.on('dispose', () => textTracks.removeEventListener('change', takeMetadataTrackSnapshot));\n      const restoreTrackMode = () => {\n        for (let i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n          const storedTrack = metadataTracksPreFullscreenState[i];\n          if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n            storedTrack.track.mode = storedTrack.storedMode;\n          }\n        }\n        // we only want this handler to be executed on the first 'change' event\n        textTracks.removeEventListener('change', restoreTrackMode);\n      };\n\n      // when we enter fullscreen playback, stop updating the snapshot and\n      // restore all track modes to their pre-fullscreen state\n      this.on('webkitbeginfullscreen', () => {\n        textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n        // remove the listener before adding it just in case it wasn't previously removed\n        textTracks.removeEventListener('change', restoreTrackMode);\n        textTracks.addEventListener('change', restoreTrackMode);\n      });\n\n      // start updating the snapshot again after leaving fullscreen\n      this.on('webkitendfullscreen', () => {\n        // remove the listener before adding it just in case it wasn't previously removed\n        textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n        textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n        // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n        textTracks.removeEventListener('change', restoreTrackMode);\n      });\n    }\n\n    /**\n     * Attempt to force override of tracks for the given type\n     *\n     * @param {string} type - Track type to override, possible values include 'Audio',\n     * 'Video', and 'Text'.\n     * @param {boolean} override - If set to true native audio/video will be overridden,\n     * otherwise native audio/video will potentially be used.\n     * @private\n     */\n    overrideNative_(type, override) {\n      // If there is no behavioral change don't add/remove listeners\n      if (override !== this[`featuresNative${type}Tracks`]) {\n        return;\n      }\n      const lowerCaseType = type.toLowerCase();\n      if (this[`${lowerCaseType}TracksListeners_`]) {\n        Object.keys(this[`${lowerCaseType}TracksListeners_`]).forEach(eventName => {\n          const elTracks = this.el()[`${lowerCaseType}Tracks`];\n          elTracks.removeEventListener(eventName, this[`${lowerCaseType}TracksListeners_`][eventName]);\n        });\n      }\n      this[`featuresNative${type}Tracks`] = !override;\n      this[`${lowerCaseType}TracksListeners_`] = null;\n      this.proxyNativeTracksForType_(lowerCaseType);\n    }\n\n    /**\n     * Attempt to force override of native audio tracks.\n     *\n     * @param {boolean} override - If set to true native audio will be overridden,\n     * otherwise native audio will potentially be used.\n     */\n    overrideNativeAudioTracks(override) {\n      this.overrideNative_('Audio', override);\n    }\n\n    /**\n     * Attempt to force override of native video tracks.\n     *\n     * @param {boolean} override - If set to true native video will be overridden,\n     * otherwise native video will potentially be used.\n     */\n    overrideNativeVideoTracks(override) {\n      this.overrideNative_('Video', override);\n    }\n\n    /**\n     * Proxy native track list events for the given type to our track\n     * lists if the browser we are playing in supports that type of track list.\n     *\n     * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n     * @private\n     */\n    proxyNativeTracksForType_(name) {\n      const props = NORMAL[name];\n      const elTracks = this.el()[props.getterName];\n      const techTracks = this[props.getterName]();\n      if (!this[`featuresNative${props.capitalName}Tracks`] || !elTracks || !elTracks.addEventListener) {\n        return;\n      }\n      const listeners = {\n        change: e => {\n          const event = {\n            type: 'change',\n            target: techTracks,\n            currentTarget: techTracks,\n            srcElement: techTracks\n          };\n          techTracks.trigger(event);\n\n          // if we are a text track change event, we should also notify the\n          // remote text track list. This can potentially cause a false positive\n          // if we were to get a change event on a non-remote track and\n          // we triggered the event on the remote text track list which doesn't\n          // contain that track. However, best practices mean looping through the\n          // list of tracks and searching for the appropriate mode value, so,\n          // this shouldn't pose an issue\n          if (name === 'text') {\n            this[REMOTE.remoteText.getterName]().trigger(event);\n          }\n        },\n        addtrack(e) {\n          techTracks.addTrack(e.track);\n        },\n        removetrack(e) {\n          techTracks.removeTrack(e.track);\n        }\n      };\n      const removeOldTracks = function () {\n        const removeTracks = [];\n        for (let i = 0; i < techTracks.length; i++) {\n          let found = false;\n          for (let j = 0; j < elTracks.length; j++) {\n            if (elTracks[j] === techTracks[i]) {\n              found = true;\n              break;\n            }\n          }\n          if (!found) {\n            removeTracks.push(techTracks[i]);\n          }\n        }\n        while (removeTracks.length) {\n          techTracks.removeTrack(removeTracks.shift());\n        }\n      };\n      this[props.getterName + 'Listeners_'] = listeners;\n      Object.keys(listeners).forEach(eventName => {\n        const listener = listeners[eventName];\n        elTracks.addEventListener(eventName, listener);\n        this.on('dispose', e => elTracks.removeEventListener(eventName, listener));\n      });\n\n      // Remove (native) tracks that are not used anymore\n      this.on('loadstart', removeOldTracks);\n      this.on('dispose', e => this.off('loadstart', removeOldTracks));\n    }\n\n    /**\n     * Proxy all native track list events to our track lists if the browser we are playing\n     * in supports that type of track list.\n     *\n     * @private\n     */\n    proxyNativeTracks_() {\n      NORMAL.names.forEach(name => {\n        this.proxyNativeTracksForType_(name);\n      });\n    }\n\n    /**\n     * Create the `Html5` Tech's DOM element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    createEl() {\n      let el = this.options_.tag;\n\n      // Check if this browser supports moving the element into the box.\n      // On the iPhone video will break if you move the element,\n      // So we have to create a brand new element.\n      // If we ingested the player div, we do not need to move the media element.\n      if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n        // If the original tag is still there, clone and remove it.\n        if (el) {\n          const clone = el.cloneNode(true);\n          if (el.parentNode) {\n            el.parentNode.insertBefore(clone, el);\n          }\n          Html5.disposeMediaElement(el);\n          el = clone;\n        } else {\n          el = document.createElement('video');\n\n          // determine if native controls should be used\n          const tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n          const attributes = merge$2({}, tagAttributes);\n          if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n            delete attributes.controls;\n          }\n          setAttributes(el, Object.assign(attributes, {\n            id: this.options_.techId,\n            class: 'vjs-tech'\n          }));\n        }\n        el.playerId = this.options_.playerId;\n      }\n      if (typeof this.options_.preload !== 'undefined') {\n        setAttribute(el, 'preload', this.options_.preload);\n      }\n      if (this.options_.disablePictureInPicture !== undefined) {\n        el.disablePictureInPicture = this.options_.disablePictureInPicture;\n      }\n\n      // Update specific tag settings, in case they were overridden\n      // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n      // when iOS/Safari or other browsers attempt to autoplay.\n      const settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n      for (let i = 0; i < settingsAttrs.length; i++) {\n        const attr = settingsAttrs[i];\n        const value = this.options_[attr];\n        if (typeof value !== 'undefined') {\n          if (value) {\n            setAttribute(el, attr, attr);\n          } else {\n            removeAttribute(el, attr);\n          }\n          el[attr] = value;\n        }\n      }\n      return el;\n    }\n\n    /**\n     * This will be triggered if the loadstart event has already fired, before videojs was\n     * ready. Two known examples of when this can happen are:\n     * 1. If we're loading the playback object after it has started loading\n     * 2. The media is already playing the (often with autoplay on) then\n     *\n     * This function will fire another loadstart so that videojs can catchup.\n     *\n     * @fires Tech#loadstart\n     *\n     * @return {undefined}\n     *         returns nothing.\n     */\n    handleLateInit_(el) {\n      if (el.networkState === 0 || el.networkState === 3) {\n        // The video element hasn't started loading the source yet\n        // or didn't find a source\n        return;\n      }\n      if (el.readyState === 0) {\n        // NetworkState is set synchronously BUT loadstart is fired at the\n        // end of the current stack, usually before setInterval(fn, 0).\n        // So at this point we know loadstart may have already fired or is\n        // about to fire, and either way the player hasn't seen it yet.\n        // We don't want to fire loadstart prematurely here and cause a\n        // double loadstart so we'll wait and see if it happens between now\n        // and the next loop, and fire it if not.\n        // HOWEVER, we also want to make sure it fires before loadedmetadata\n        // which could also happen between now and the next loop, so we'll\n        // watch for that also.\n        let loadstartFired = false;\n        const setLoadstartFired = function () {\n          loadstartFired = true;\n        };\n        this.on('loadstart', setLoadstartFired);\n        const triggerLoadstart = function () {\n          // We did miss the original loadstart. Make sure the player\n          // sees loadstart before loadedmetadata\n          if (!loadstartFired) {\n            this.trigger('loadstart');\n          }\n        };\n        this.on('loadedmetadata', triggerLoadstart);\n        this.ready(function () {\n          this.off('loadstart', setLoadstartFired);\n          this.off('loadedmetadata', triggerLoadstart);\n          if (!loadstartFired) {\n            // We did miss the original native loadstart. Fire it now.\n            this.trigger('loadstart');\n          }\n        });\n        return;\n      }\n\n      // From here on we know that loadstart already fired and we missed it.\n      // The other readyState events aren't as much of a problem if we double\n      // them, so not going to go to as much trouble as loadstart to prevent\n      // that unless we find reason to.\n      const eventsToTrigger = ['loadstart'];\n\n      // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n      eventsToTrigger.push('loadedmetadata');\n\n      // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n      if (el.readyState >= 2) {\n        eventsToTrigger.push('loadeddata');\n      }\n\n      // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n      if (el.readyState >= 3) {\n        eventsToTrigger.push('canplay');\n      }\n\n      // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n      if (el.readyState >= 4) {\n        eventsToTrigger.push('canplaythrough');\n      }\n\n      // We still need to give the player time to add event listeners\n      this.ready(function () {\n        eventsToTrigger.forEach(function (type) {\n          this.trigger(type);\n        }, this);\n      });\n    }\n\n    /**\n     * Set whether we are scrubbing or not.\n     * This is used to decide whether we should use `fastSeek` or not.\n     * `fastSeek` is used to provide trick play on Safari browsers.\n     *\n     * @param {boolean} isScrubbing\n     *                  - true for we are currently scrubbing\n     *                  - false for we are no longer scrubbing\n     */\n    setScrubbing(isScrubbing) {\n      this.isScrubbing_ = isScrubbing;\n    }\n\n    /**\n     * Get whether we are scrubbing or not.\n     *\n     * @return {boolean} isScrubbing\n     *                  - true for we are currently scrubbing\n     *                  - false for we are no longer scrubbing\n     */\n    scrubbing() {\n      return this.isScrubbing_;\n    }\n\n    /**\n     * Set current time for the `HTML5` tech.\n     *\n     * @param {number} seconds\n     *        Set the current time of the media to this.\n     */\n    setCurrentTime(seconds) {\n      try {\n        if (this.isScrubbing_ && this.el_.fastSeek && IS_ANY_SAFARI) {\n          this.el_.fastSeek(seconds);\n        } else {\n          this.el_.currentTime = seconds;\n        }\n      } catch (e) {\n        log$1(e, 'Video is not ready. (Video.js)');\n        // this.warning(VideoJS.warnings.videoNotReady);\n      }\n    }\n\n    /**\n     * Get the current duration of the HTML5 media element.\n     *\n     * @return {number}\n     *         The duration of the media or 0 if there is no duration.\n     */\n    duration() {\n      // Android Chrome will report duration as Infinity for VOD HLS until after\n      // playback has started, which triggers the live display erroneously.\n      // Return NaN if playback has not started and trigger a durationupdate once\n      // the duration can be reliably known.\n      if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n        // Wait for the first `timeupdate` with currentTime > 0 - there may be\n        // several with 0\n        const checkProgress = () => {\n          if (this.el_.currentTime > 0) {\n            // Trigger durationchange for genuinely live video\n            if (this.el_.duration === Infinity) {\n              this.trigger('durationchange');\n            }\n            this.off('timeupdate', checkProgress);\n          }\n        };\n        this.on('timeupdate', checkProgress);\n        return NaN;\n      }\n      return this.el_.duration || NaN;\n    }\n\n    /**\n     * Get the current width of the HTML5 media element.\n     *\n     * @return {number}\n     *         The width of the HTML5 media element.\n     */\n    width() {\n      return this.el_.offsetWidth;\n    }\n\n    /**\n     * Get the current height of the HTML5 media element.\n     *\n     * @return {number}\n     *         The height of the HTML5 media element.\n     */\n    height() {\n      return this.el_.offsetHeight;\n    }\n\n    /**\n     * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n     * `fullscreenchange` event.\n     *\n     * @private\n     * @fires fullscreenchange\n     * @listens webkitendfullscreen\n     * @listens webkitbeginfullscreen\n     * @listens webkitbeginfullscreen\n     */\n    proxyWebkitFullscreen_() {\n      if (!('webkitDisplayingFullscreen' in this.el_)) {\n        return;\n      }\n      const endFn = function () {\n        this.trigger('fullscreenchange', {\n          isFullscreen: false\n        });\n        // Safari will sometimes set controls on the videoelement when existing fullscreen.\n        if (this.el_.controls && !this.options_.nativeControlsForTouch && this.controls()) {\n          this.el_.controls = false;\n        }\n      };\n      const beginFn = function () {\n        if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n          this.one('webkitendfullscreen', endFn);\n          this.trigger('fullscreenchange', {\n            isFullscreen: true,\n            // set a flag in case another tech triggers fullscreenchange\n            nativeIOSFullscreen: true\n          });\n        }\n      };\n      this.on('webkitbeginfullscreen', beginFn);\n      this.on('dispose', () => {\n        this.off('webkitbeginfullscreen', beginFn);\n        this.off('webkitendfullscreen', endFn);\n      });\n    }\n\n    /**\n     * Check if fullscreen is supported on the video el.\n     *\n     * @return {boolean}\n     *         - True if fullscreen is supported.\n     *         - False if fullscreen is not supported.\n     */\n    supportsFullScreen() {\n      return typeof this.el_.webkitEnterFullScreen === 'function';\n    }\n\n    /**\n     * Request that the `HTML5` Tech enter fullscreen.\n     */\n    enterFullScreen() {\n      const video = this.el_;\n      if (video.paused && video.networkState <= video.HAVE_METADATA) {\n        // attempt to prime the video element for programmatic access\n        // this isn't necessary on the desktop but shouldn't hurt\n        silencePromise(this.el_.play());\n\n        // playing and pausing synchronously during the transition to fullscreen\n        // can get iOS ~6.1 devices into a play/pause loop\n        this.setTimeout(function () {\n          video.pause();\n          try {\n            video.webkitEnterFullScreen();\n          } catch (e) {\n            this.trigger('fullscreenerror', e);\n          }\n        }, 0);\n      } else {\n        try {\n          video.webkitEnterFullScreen();\n        } catch (e) {\n          this.trigger('fullscreenerror', e);\n        }\n      }\n    }\n\n    /**\n     * Request that the `HTML5` Tech exit fullscreen.\n     */\n    exitFullScreen() {\n      if (!this.el_.webkitDisplayingFullscreen) {\n        this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n        return;\n      }\n      this.el_.webkitExitFullScreen();\n    }\n\n    /**\n     * Create a floating video window always on top of other windows so that users may\n     * continue consuming media while they interact with other content sites, or\n     * applications on their device.\n     *\n     * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n     *\n     * @return {Promise}\n     *         A promise with a Picture-in-Picture window.\n     */\n    requestPictureInPicture() {\n      return this.el_.requestPictureInPicture();\n    }\n\n    /**\n     * Native requestVideoFrameCallback if supported by browser/tech, or fallback\n     * Don't use rVCF on Safari when DRM is playing, as it doesn't fire\n     * Needs to be checked later than the constructor\n     * This will be a false positive for clear sources loaded after a Fairplay source\n     *\n     * @param {function} cb function to call\n     * @return {number} id of request\n     */\n    requestVideoFrameCallback(cb) {\n      if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n        return this.el_.requestVideoFrameCallback(cb);\n      }\n      return super.requestVideoFrameCallback(cb);\n    }\n\n    /**\n     * Native or fallback requestVideoFrameCallback\n     *\n     * @param {number} id request id to cancel\n     */\n    cancelVideoFrameCallback(id) {\n      if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n        this.el_.cancelVideoFrameCallback(id);\n      } else {\n        super.cancelVideoFrameCallback(id);\n      }\n    }\n\n    /**\n     * A getter/setter for the `Html5` Tech's source object.\n     * > Note: Please use {@link Html5#setSource}\n     *\n     * @param {Tech~SourceObject} [src]\n     *        The source object you want to set on the `HTML5` techs element.\n     *\n     * @return {Tech~SourceObject|undefined}\n     *         - The current source object when a source is not passed in.\n     *         - undefined when setting\n     *\n     * @deprecated Since version 5.\n     */\n    src(src) {\n      if (src === undefined) {\n        return this.el_.src;\n      }\n\n      // Setting src through `src` instead of `setSrc` will be deprecated\n      this.setSrc(src);\n    }\n\n    /**\n     * Reset the tech by removing all sources and then calling\n     * {@link Html5.resetMediaElement}.\n     */\n    reset() {\n      Html5.resetMediaElement(this.el_);\n    }\n\n    /**\n     * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n     * the HTML5 media element.\n     *\n     * @return {Tech~SourceObject}\n     *         The current source object from the HTML5 tech. With a fallback to the\n     *         elements source.\n     */\n    currentSrc() {\n      if (this.currentSource_) {\n        return this.currentSource_.src;\n      }\n      return this.el_.currentSrc;\n    }\n\n    /**\n     * Set controls attribute for the HTML5 media Element.\n     *\n     * @param {string} val\n     *        Value to set the controls attribute to\n     */\n    setControls(val) {\n      this.el_.controls = !!val;\n    }\n\n    /**\n     * Create and returns a remote {@link TextTrack} object.\n     *\n     * @param {string} kind\n     *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n     *\n     * @param {string} [label]\n     *        Label to identify the text track\n     *\n     * @param {string} [language]\n     *        Two letter language abbreviation\n     *\n     * @return {TextTrack}\n     *         The TextTrack that gets created.\n     */\n    addTextTrack(kind, label, language) {\n      if (!this.featuresNativeTextTracks) {\n        return super.addTextTrack(kind, label, language);\n      }\n      return this.el_.addTextTrack(kind, label, language);\n    }\n\n    /**\n     * Creates either native TextTrack or an emulated TextTrack depending\n     * on the value of `featuresNativeTextTracks`\n     *\n     * @param {Object} options\n     *        The object should contain the options to initialize the TextTrack with.\n     *\n     * @param {string} [options.kind]\n     *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n     *\n     * @param {string} [options.label]\n     *        Label to identify the text track\n     *\n     * @param {string} [options.language]\n     *        Two letter language abbreviation.\n     *\n     * @param {boolean} [options.default]\n     *        Default this track to on.\n     *\n     * @param {string} [options.id]\n     *        The internal id to assign this track.\n     *\n     * @param {string} [options.src]\n     *        A source url for the track.\n     *\n     * @return {HTMLTrackElement}\n     *         The track element that gets created.\n     */\n    createRemoteTextTrack(options) {\n      if (!this.featuresNativeTextTracks) {\n        return super.createRemoteTextTrack(options);\n      }\n      const htmlTrackElement = document.createElement('track');\n      if (options.kind) {\n        htmlTrackElement.kind = options.kind;\n      }\n      if (options.label) {\n        htmlTrackElement.label = options.label;\n      }\n      if (options.language || options.srclang) {\n        htmlTrackElement.srclang = options.language || options.srclang;\n      }\n      if (options.default) {\n        htmlTrackElement.default = options.default;\n      }\n      if (options.id) {\n        htmlTrackElement.id = options.id;\n      }\n      if (options.src) {\n        htmlTrackElement.src = options.src;\n      }\n      return htmlTrackElement;\n    }\n\n    /**\n     * Creates a remote text track object and returns an html track element.\n     *\n     * @param {Object} options The object should contain values for\n     * kind, language, label, and src (location of the WebVTT file)\n     * @param {boolean} [manualCleanup=false] if set to true, the TextTrack\n     * will not be removed from the TextTrackList and HtmlTrackElementList\n     * after a source change\n     * @return {HTMLTrackElement} An Html Track Element.\n     * This can be an emulated {@link HTMLTrackElement} or a native one.\n     *\n     */\n    addRemoteTextTrack(options, manualCleanup) {\n      const htmlTrackElement = super.addRemoteTextTrack(options, manualCleanup);\n      if (this.featuresNativeTextTracks) {\n        this.el().appendChild(htmlTrackElement);\n      }\n      return htmlTrackElement;\n    }\n\n    /**\n     * Remove remote `TextTrack` from `TextTrackList` object\n     *\n     * @param {TextTrack} track\n     *        `TextTrack` object to remove\n     */\n    removeRemoteTextTrack(track) {\n      super.removeRemoteTextTrack(track);\n      if (this.featuresNativeTextTracks) {\n        const tracks = this.$$('track');\n        let i = tracks.length;\n        while (i--) {\n          if (track === tracks[i] || track === tracks[i].track) {\n            this.el().removeChild(tracks[i]);\n          }\n        }\n      }\n    }\n\n    /**\n     * Gets available media playback quality metrics as specified by the W3C's Media\n     * Playback Quality API.\n     *\n     * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n     *\n     * @return {Object}\n     *         An object with supported media playback quality metrics\n     */\n    getVideoPlaybackQuality() {\n      if (typeof this.el().getVideoPlaybackQuality === 'function') {\n        return this.el().getVideoPlaybackQuality();\n      }\n      const videoPlaybackQuality = {};\n      if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n        videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n        videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n      }\n      if (window.performance) {\n        videoPlaybackQuality.creationTime = window.performance.now();\n      }\n      return videoPlaybackQuality;\n    }\n  }\n\n  /* HTML5 Support Testing ---------------------------------------------------- */\n\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  defineLazyProperty(Html5, 'TEST_VID', function () {\n    if (!isReal()) {\n      return;\n    }\n    const video = document.createElement('video');\n    const track = document.createElement('track');\n    track.kind = 'captions';\n    track.srclang = 'en';\n    track.label = 'English';\n    video.appendChild(track);\n    return video;\n  });\n\n  /**\n   * Check if HTML5 media is supported by this browser/device.\n   *\n   * @return {boolean}\n   *         - True if HTML5 media is supported.\n   *         - False if HTML5 media is not supported.\n   */\n  Html5.isSupported = function () {\n    // IE with no Media Player is a LIAR! (#984)\n    try {\n      Html5.TEST_VID.volume = 0.5;\n    } catch (e) {\n      return false;\n    }\n    return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n  };\n\n  /**\n   * Check if the tech can support the given type\n   *\n   * @param {string} type\n   *        The mimetype to check\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  Html5.canPlayType = function (type) {\n    return Html5.TEST_VID.canPlayType(type);\n  };\n\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  Html5.canPlaySource = function (srcObj, options) {\n    return Html5.canPlayType(srcObj.type);\n  };\n\n  /**\n   * Check if the volume can be changed in this browser/device.\n   * Volume cannot be changed in a lot of mobile devices.\n   * Specifically, it can't be changed from 1 on iOS.\n   *\n   * @return {boolean}\n   *         - True if volume can be controlled\n   *         - False otherwise\n   */\n  Html5.canControlVolume = function () {\n    // IE will error if Windows Media Player not installed #3315\n    try {\n      const volume = Html5.TEST_VID.volume;\n      Html5.TEST_VID.volume = volume / 2 + 0.1;\n      const canControl = volume !== Html5.TEST_VID.volume;\n\n      // With the introduction of iOS 15, there are cases where the volume is read as\n      // changed but reverts back to its original state at the start of the next tick.\n      // To determine whether volume can be controlled on iOS,\n      // a timeout is set and the volume is checked asynchronously.\n      // Since `features` doesn't currently work asynchronously, the value is manually set.\n      if (canControl && IS_IOS) {\n        window.setTimeout(() => {\n          if (Html5 && Html5.prototype) {\n            Html5.prototype.featuresVolumeControl = volume !== Html5.TEST_VID.volume;\n          }\n        });\n\n        // default iOS to false, which will be updated in the timeout above.\n        return false;\n      }\n      return canControl;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  /**\n   * Check if the volume can be muted in this browser/device.\n   * Some devices, e.g. iOS, don't allow changing volume\n   * but permits muting/unmuting.\n   *\n   * @return {boolean}\n   *      - True if volume can be muted\n   *      - False otherwise\n   */\n  Html5.canMuteVolume = function () {\n    try {\n      const muted = Html5.TEST_VID.muted;\n\n      // in some versions of iOS muted property doesn't always\n      // work, so we want to set both property and attribute\n      Html5.TEST_VID.muted = !muted;\n      if (Html5.TEST_VID.muted) {\n        setAttribute(Html5.TEST_VID, 'muted', 'muted');\n      } else {\n        removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n      }\n      return muted !== Html5.TEST_VID.muted;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  /**\n   * Check if the playback rate can be changed in this browser/device.\n   *\n   * @return {boolean}\n   *         - True if playback rate can be controlled\n   *         - False otherwise\n   */\n  Html5.canControlPlaybackRate = function () {\n    // Playback rate API is implemented in Android Chrome, but doesn't do anything\n    // https://github.com/videojs/video.js/issues/3180\n    if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n      return false;\n    }\n    // IE will error if Windows Media Player not installed #3315\n    try {\n      const playbackRate = Html5.TEST_VID.playbackRate;\n      Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n      return playbackRate !== Html5.TEST_VID.playbackRate;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  /**\n   * Check if we can override a video/audio elements attributes, with\n   * Object.defineProperty.\n   *\n   * @return {boolean}\n   *         - True if builtin attributes can be overridden\n   *         - False otherwise\n   */\n  Html5.canOverrideAttributes = function () {\n    // if we cannot overwrite the src/innerHTML property, there is no support\n    // iOS 7 safari for instance cannot do this.\n    try {\n      const noop = () => {};\n      Object.defineProperty(document.createElement('video'), 'src', {\n        get: noop,\n        set: noop\n      });\n      Object.defineProperty(document.createElement('audio'), 'src', {\n        get: noop,\n        set: noop\n      });\n      Object.defineProperty(document.createElement('video'), 'innerHTML', {\n        get: noop,\n        set: noop\n      });\n      Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n        get: noop,\n        set: noop\n      });\n    } catch (e) {\n      return false;\n    }\n    return true;\n  };\n\n  /**\n   * Check to see if native `TextTrack`s are supported by this browser/device.\n   *\n   * @return {boolean}\n   *         - True if native `TextTrack`s are supported.\n   *         - False otherwise\n   */\n  Html5.supportsNativeTextTracks = function () {\n    return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n  };\n\n  /**\n   * Check to see if native `VideoTrack`s are supported by this browser/device\n   *\n   * @return {boolean}\n   *        - True if native `VideoTrack`s are supported.\n   *        - False otherwise\n   */\n  Html5.supportsNativeVideoTracks = function () {\n    return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n  };\n\n  /**\n   * Check to see if native `AudioTrack`s are supported by this browser/device\n   *\n   * @return {boolean}\n   *        - True if native `AudioTrack`s are supported.\n   *        - False otherwise\n   */\n  Html5.supportsNativeAudioTracks = function () {\n    return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n  };\n\n  /**\n   * An array of events available on the Html5 tech.\n   *\n   * @private\n   * @type {Array}\n   */\n  Html5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n  /**\n   * Boolean indicating whether the `Tech` supports volume control.\n   *\n   * @type {boolean}\n   * @default {@link Html5.canControlVolume}\n   */\n  /**\n   * Boolean indicating whether the `Tech` supports muting volume.\n   *\n   * @type {boolean}\n   * @default {@link Html5.canMuteVolume}\n   */\n\n  /**\n   * Boolean indicating whether the `Tech` supports changing the speed at which the media\n   * plays. Examples:\n   *   - Set player to play 2x (twice) as fast\n   *   - Set player to play 0.5x (half) as fast\n   *\n   * @type {boolean}\n   * @default {@link Html5.canControlPlaybackRate}\n   */\n\n  /**\n   * Boolean indicating whether the `Tech` supports the `sourceset` event.\n   *\n   * @type {boolean}\n   * @default\n   */\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n   *\n   * @type {boolean}\n   * @default {@link Html5.supportsNativeTextTracks}\n   */\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n   *\n   * @type {boolean}\n   * @default {@link Html5.supportsNativeVideoTracks}\n   */\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n   *\n   * @type {boolean}\n   * @default {@link Html5.supportsNativeAudioTracks}\n   */\n  [['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresSourceset', 'canOverrideAttributes'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'], ['featuresNativeAudioTracks', 'supportsNativeAudioTracks']].forEach(function ([key, fn]) {\n    defineLazyProperty(Html5.prototype, key, () => Html5[fn](), true);\n  });\n  Html5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports the media element\n   * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n   * false there. Everywhere else this should be true.\n   *\n   * @type {boolean}\n   * @default\n   */\n  Html5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n  // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n  //       Is this true?\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n   * when going into fullscreen.\n   *\n   * @type {boolean}\n   * @default\n   */\n  Html5.prototype.featuresFullscreenResize = true;\n\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n   * If this is false, manual `progress` events will be triggered instead.\n   *\n   * @type {boolean}\n   * @default\n   */\n  Html5.prototype.featuresProgressEvents = true;\n\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n   * If this is false, manual `timeupdate` events will be triggered instead.\n   *\n   * @default\n   */\n  Html5.prototype.featuresTimeupdateEvents = true;\n\n  /**\n   * Whether the HTML5 el supports `requestVideoFrameCallback`\n   *\n   * @type {boolean}\n   */\n  Html5.prototype.featuresVideoFrameCallback = !!(Html5.TEST_VID && Html5.TEST_VID.requestVideoFrameCallback);\n  Html5.disposeMediaElement = function (el) {\n    if (!el) {\n      return;\n    }\n    if (el.parentNode) {\n      el.parentNode.removeChild(el);\n    }\n\n    // remove any child track or source nodes to prevent their loading\n    while (el.hasChildNodes()) {\n      el.removeChild(el.firstChild);\n    }\n\n    // remove any src reference. not setting `src=''` because that causes a warning\n    // in firefox\n    el.removeAttribute('src');\n\n    // force the media element to update its loading state by calling load()\n    // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n    if (typeof el.load === 'function') {\n      // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n      (function () {\n        try {\n          el.load();\n        } catch (e) {\n          // not supported\n        }\n      })();\n    }\n  };\n  Html5.resetMediaElement = function (el) {\n    if (!el) {\n      return;\n    }\n    const sources = el.querySelectorAll('source');\n    let i = sources.length;\n    while (i--) {\n      el.removeChild(sources[i]);\n    }\n\n    // remove any src reference.\n    // not setting `src=''` because that throws an error\n    el.removeAttribute('src');\n    if (typeof el.load === 'function') {\n      // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n      (function () {\n        try {\n          el.load();\n        } catch (e) {\n          // satisfy linter\n        }\n      })();\n    }\n  };\n\n  /* Native HTML5 element property wrapping ----------------------------------- */\n  // Wrap native boolean attributes with getters that check both property and attribute\n  // The list is as followed:\n  // muted, defaultMuted, autoplay, controls, loop, playsinline\n  [\n  /**\n   * Get the value of `muted` from the media element. `muted` indicates\n   * that the volume for the media should be set to silent. This does not actually change\n   * the `volume` attribute.\n   *\n   * @method Html5#muted\n   * @return {boolean}\n   *         - True if the value of `volume` should be ignored and the audio set to silent.\n   *         - False if the value of `volume` should be used.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n   */\n  'muted',\n  /**\n   * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n   * whether the media should start muted or not. Only changes the default state of the\n   * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n   * current state.\n   *\n   * @method Html5#defaultMuted\n   * @return {boolean}\n   *         - The value of `defaultMuted` from the media element.\n   *         - True indicates that the media should start muted.\n   *         - False indicates that the media should not start muted\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n   */\n  'defaultMuted',\n  /**\n   * Get the value of `autoplay` from the media element. `autoplay` indicates\n   * that the media should start to play as soon as the page is ready.\n   *\n   * @method Html5#autoplay\n   * @return {boolean}\n   *         - The value of `autoplay` from the media element.\n   *         - True indicates that the media should start as soon as the page loads.\n   *         - False indicates that the media should not start as soon as the page loads.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n   */\n  'autoplay',\n  /**\n   * Get the value of `controls` from the media element. `controls` indicates\n   * whether the native media controls should be shown or hidden.\n   *\n   * @method Html5#controls\n   * @return {boolean}\n   *         - The value of `controls` from the media element.\n   *         - True indicates that native controls should be showing.\n   *         - False indicates that native controls should be hidden.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n   */\n  'controls',\n  /**\n   * Get the value of `loop` from the media element. `loop` indicates\n   * that the media should return to the start of the media and continue playing once\n   * it reaches the end.\n   *\n   * @method Html5#loop\n   * @return {boolean}\n   *         - The value of `loop` from the media element.\n   *         - True indicates that playback should seek back to start once\n   *           the end of a media is reached.\n   *         - False indicates that playback should not loop back to the start when the\n   *           end of the media is reached.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n   */\n  'loop',\n  /**\n   * Get the value of `playsinline` from the media element. `playsinline` indicates\n   * to the browser that non-fullscreen playback is preferred when fullscreen\n   * playback is the native default, such as in iOS Safari.\n   *\n   * @method Html5#playsinline\n   * @return {boolean}\n   *         - The value of `playsinline` from the media element.\n   *         - True indicates that the media should play inline.\n   *         - False indicates that the media should not play inline.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  'playsinline'].forEach(function (prop) {\n    Html5.prototype[prop] = function () {\n      return this.el_[prop] || this.el_.hasAttribute(prop);\n    };\n  });\n\n  // Wrap native boolean attributes with setters that set both property and attribute\n  // The list is as followed:\n  // setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n  // setControls is special-cased above\n  [\n  /**\n   * Set the value of `muted` on the media element. `muted` indicates that the current\n   * audio level should be silent.\n   *\n   * @method Html5#setMuted\n   * @param {boolean} muted\n   *        - True if the audio should be set to silent\n   *        - False otherwise\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n   */\n  'muted',\n  /**\n   * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n   * audio level should be silent, but will only effect the muted level on initial playback..\n   *\n   * @method Html5.prototype.setDefaultMuted\n   * @param {boolean} defaultMuted\n   *        - True if the audio should be set to silent\n   *        - False otherwise\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n   */\n  'defaultMuted',\n  /**\n   * Set the value of `autoplay` on the media element. `autoplay` indicates\n   * that the media should start to play as soon as the page is ready.\n   *\n   * @method Html5#setAutoplay\n   * @param {boolean} autoplay\n   *         - True indicates that the media should start as soon as the page loads.\n   *         - False indicates that the media should not start as soon as the page loads.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n   */\n  'autoplay',\n  /**\n   * Set the value of `loop` on the media element. `loop` indicates\n   * that the media should return to the start of the media and continue playing once\n   * it reaches the end.\n   *\n   * @method Html5#setLoop\n   * @param {boolean} loop\n   *         - True indicates that playback should seek back to start once\n   *           the end of a media is reached.\n   *         - False indicates that playback should not loop back to the start when the\n   *           end of the media is reached.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n   */\n  'loop',\n  /**\n   * Set the value of `playsinline` from the media element. `playsinline` indicates\n   * to the browser that non-fullscreen playback is preferred when fullscreen\n   * playback is the native default, such as in iOS Safari.\n   *\n   * @method Html5#setPlaysinline\n   * @param {boolean} playsinline\n   *         - True indicates that the media should play inline.\n   *         - False indicates that the media should not play inline.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  'playsinline'].forEach(function (prop) {\n    Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n      this.el_[prop] = v;\n      if (v) {\n        this.el_.setAttribute(prop, prop);\n      } else {\n        this.el_.removeAttribute(prop);\n      }\n    };\n  });\n\n  // Wrap native properties with a getter\n  // The list is as followed\n  // paused, currentTime, buffered, volume, poster, preload, error, seeking\n  // seekable, ended, playbackRate, defaultPlaybackRate, disablePictureInPicture\n  // played, networkState, readyState, videoWidth, videoHeight, crossOrigin\n  [\n  /**\n   * Get the value of `paused` from the media element. `paused` indicates whether the media element\n   * is currently paused or not.\n   *\n   * @method Html5#paused\n   * @return {boolean}\n   *         The value of `paused` from the media element.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n   */\n  'paused',\n  /**\n   * Get the value of `currentTime` from the media element. `currentTime` indicates\n   * the current second that the media is at in playback.\n   *\n   * @method Html5#currentTime\n   * @return {number}\n   *         The value of `currentTime` from the media element.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n   */\n  'currentTime',\n  /**\n   * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n   * object that represents the parts of the media that are already downloaded and\n   * available for playback.\n   *\n   * @method Html5#buffered\n   * @return {TimeRange}\n   *         The value of `buffered` from the media element.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n   */\n  'buffered',\n  /**\n   * Get the value of `volume` from the media element. `volume` indicates\n   * the current playback volume of audio for a media. `volume` will be a value from 0\n   * (silent) to 1 (loudest and default).\n   *\n   * @method Html5#volume\n   * @return {number}\n   *         The value of `volume` from the media element. Value will be between 0-1.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n   */\n  'volume',\n  /**\n   * Get the value of `poster` from the media element. `poster` indicates\n   * that the url of an image file that can/will be shown when no media data is available.\n   *\n   * @method Html5#poster\n   * @return {string}\n   *         The value of `poster` from the media element. Value will be a url to an\n   *         image.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n   */\n  'poster',\n  /**\n   * Get the value of `preload` from the media element. `preload` indicates\n   * what should download before the media is interacted with. It can have the following\n   * values:\n   * - none: nothing should be downloaded\n   * - metadata: poster and the first few frames of the media may be downloaded to get\n   *   media dimensions and other metadata\n   * - auto: allow the media and metadata for the media to be downloaded before\n   *    interaction\n   *\n   * @method Html5#preload\n   * @return {string}\n   *         The value of `preload` from the media element. Will be 'none', 'metadata',\n   *         or 'auto'.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n   */\n  'preload',\n  /**\n   * Get the value of the `error` from the media element. `error` indicates any\n   * MediaError that may have occurred during playback. If error returns null there is no\n   * current error.\n   *\n   * @method Html5#error\n   * @return {MediaError|null}\n   *         The value of `error` from the media element. Will be `MediaError` if there\n   *         is a current error and null otherwise.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n   */\n  'error',\n  /**\n   * Get the value of `seeking` from the media element. `seeking` indicates whether the\n   * media is currently seeking to a new position or not.\n   *\n   * @method Html5#seeking\n   * @return {boolean}\n   *         - The value of `seeking` from the media element.\n   *         - True indicates that the media is currently seeking to a new position.\n   *         - False indicates that the media is not seeking to a new position at this time.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n   */\n  'seeking',\n  /**\n   * Get the value of `seekable` from the media element. `seekable` returns a\n   * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n   *\n   * @method Html5#seekable\n   * @return {TimeRange}\n   *         The value of `seekable` from the media element. A `TimeRange` object\n   *         indicating the current ranges of time that can be seeked to.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n   */\n  'seekable',\n  /**\n   * Get the value of `ended` from the media element. `ended` indicates whether\n   * the media has reached the end or not.\n   *\n   * @method Html5#ended\n   * @return {boolean}\n   *         - The value of `ended` from the media element.\n   *         - True indicates that the media has ended.\n   *         - False indicates that the media has not ended.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n   */\n  'ended',\n  /**\n   * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n   * the rate at which the media is currently playing back. Examples:\n   *   - if playbackRate is set to 2, media will play twice as fast.\n   *   - if playbackRate is set to 0.5, media will play half as fast.\n   *\n   * @method Html5#playbackRate\n   * @return {number}\n   *         The value of `playbackRate` from the media element. A number indicating\n   *         the current playback speed of the media, where 1 is normal speed.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n   */\n  'playbackRate',\n  /**\n   * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n   * the rate at which the media is currently playing back. This value will not indicate the current\n   * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n   *\n   * Examples:\n   *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n   *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n   *\n   * @method Html5.prototype.defaultPlaybackRate\n   * @return {number}\n   *         The value of `defaultPlaybackRate` from the media element. A number indicating\n   *         the current playback speed of the media, where 1 is normal speed.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n   */\n  'defaultPlaybackRate',\n  /**\n   * Get the value of 'disablePictureInPicture' from the video element.\n   *\n   * @method Html5#disablePictureInPicture\n   * @return {boolean} value\n   *         - The value of `disablePictureInPicture` from the video element.\n   *         - True indicates that the video can't be played in Picture-In-Picture mode\n   *         - False indicates that the video can be played in Picture-In-Picture mode\n   *\n   * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n   */\n  'disablePictureInPicture',\n  /**\n   * Get the value of `played` from the media element. `played` returns a `TimeRange`\n   * object representing points in the media timeline that have been played.\n   *\n   * @method Html5#played\n   * @return {TimeRange}\n   *         The value of `played` from the media element. A `TimeRange` object indicating\n   *         the ranges of time that have been played.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n   */\n  'played',\n  /**\n   * Get the value of `networkState` from the media element. `networkState` indicates\n   * the current network state. It returns an enumeration from the following list:\n   * - 0: NETWORK_EMPTY\n   * - 1: NETWORK_IDLE\n   * - 2: NETWORK_LOADING\n   * - 3: NETWORK_NO_SOURCE\n   *\n   * @method Html5#networkState\n   * @return {number}\n   *         The value of `networkState` from the media element. This will be a number\n   *         from the list in the description.\n   *\n   * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n   */\n  'networkState',\n  /**\n   * Get the value of `readyState` from the media element. `readyState` indicates\n   * the current state of the media element. It returns an enumeration from the\n   * following list:\n   * - 0: HAVE_NOTHING\n   * - 1: HAVE_METADATA\n   * - 2: HAVE_CURRENT_DATA\n   * - 3: HAVE_FUTURE_DATA\n   * - 4: HAVE_ENOUGH_DATA\n   *\n   * @method Html5#readyState\n   * @return {number}\n   *         The value of `readyState` from the media element. This will be a number\n   *         from the list in the description.\n   *\n   * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n   */\n  'readyState',\n  /**\n   * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n   * the current width of the video in css pixels.\n   *\n   * @method Html5#videoWidth\n   * @return {number}\n   *         The value of `videoWidth` from the video element. This will be a number\n   *         in css pixels.\n   *\n   * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n   */\n  'videoWidth',\n  /**\n   * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n   * the current height of the video in css pixels.\n   *\n   * @method Html5#videoHeight\n   * @return {number}\n   *         The value of `videoHeight` from the video element. This will be a number\n   *         in css pixels.\n   *\n   * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n   */\n  'videoHeight',\n  /**\n   * Get the value of `crossOrigin` from the media element. `crossOrigin` indicates\n   * to the browser that should sent the cookies along with the requests for the\n   * different assets/playlists\n   *\n   * @method Html5#crossOrigin\n   * @return {string}\n   *         - anonymous indicates that the media should not sent cookies.\n   *         - use-credentials indicates that the media should sent cookies along the requests.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n   */\n  'crossOrigin'].forEach(function (prop) {\n    Html5.prototype[prop] = function () {\n      return this.el_[prop];\n    };\n  });\n\n  // Wrap native properties with a setter in this format:\n  // set + toTitleCase(name)\n  // The list is as follows:\n  // setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate,\n  // setDisablePictureInPicture, setCrossOrigin\n  [\n  /**\n   * Set the value of `volume` on the media element. `volume` indicates the current\n   * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n   * so on.\n   *\n   * @method Html5#setVolume\n   * @param {number} percentAsDecimal\n   *        The volume percent as a decimal. Valid range is from 0-1.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n   */\n  'volume',\n  /**\n   * Set the value of `src` on the media element. `src` indicates the current\n   * {@link Tech~SourceObject} for the media.\n   *\n   * @method Html5#setSrc\n   * @param {Tech~SourceObject} src\n   *        The source object to set as the current source.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n   */\n  'src',\n  /**\n   * Set the value of `poster` on the media element. `poster` is the url to\n   * an image file that can/will be shown when no media data is available.\n   *\n   * @method Html5#setPoster\n   * @param {string} poster\n   *        The url to an image that should be used as the `poster` for the media\n   *        element.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n   */\n  'poster',\n  /**\n   * Set the value of `preload` on the media element. `preload` indicates\n   * what should download before the media is interacted with. It can have the following\n   * values:\n   * - none: nothing should be downloaded\n   * - metadata: poster and the first few frames of the media may be downloaded to get\n   *   media dimensions and other metadata\n   * - auto: allow the media and metadata for the media to be downloaded before\n   *    interaction\n   *\n   * @method Html5#setPreload\n   * @param {string} preload\n   *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n   *         or 'auto'.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n   */\n  'preload',\n  /**\n   * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n   * the rate at which the media should play back. Examples:\n   *   - if playbackRate is set to 2, media will play twice as fast.\n   *   - if playbackRate is set to 0.5, media will play half as fast.\n   *\n   * @method Html5#setPlaybackRate\n   * @return {number}\n   *         The value of `playbackRate` from the media element. A number indicating\n   *         the current playback speed of the media, where 1 is normal speed.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n   */\n  'playbackRate',\n  /**\n   * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n   * the rate at which the media should play back upon initial startup. Changing this value\n   * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n   *\n   * Example Values:\n   *   - if playbackRate is set to 2, media will play twice as fast.\n   *   - if playbackRate is set to 0.5, media will play half as fast.\n   *\n   * @method Html5.prototype.setDefaultPlaybackRate\n   * @return {number}\n   *         The value of `defaultPlaybackRate` from the media element. A number indicating\n   *         the current playback speed of the media, where 1 is normal speed.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n   */\n  'defaultPlaybackRate',\n  /**\n   * Prevents the browser from suggesting a Picture-in-Picture context menu\n   * or to request Picture-in-Picture automatically in some cases.\n   *\n   * @method Html5#setDisablePictureInPicture\n   * @param {boolean} value\n   *         The true value will disable Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n   */\n  'disablePictureInPicture',\n  /**\n   * Set the value of `crossOrigin` from the media element. `crossOrigin` indicates\n   * to the browser that should sent the cookies along with the requests for the\n   * different assets/playlists\n   *\n   * @method Html5#setCrossOrigin\n   * @param {string} crossOrigin\n   *         - anonymous indicates that the media should not sent cookies.\n   *         - use-credentials indicates that the media should sent cookies along the requests.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n   */\n  'crossOrigin'].forEach(function (prop) {\n    Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n      this.el_[prop] = v;\n    };\n  });\n\n  // wrap native functions with a function\n  // The list is as follows:\n  // pause, load, play\n  [\n  /**\n   * A wrapper around the media elements `pause` function. This will call the `HTML5`\n   * media elements `pause` function.\n   *\n   * @method Html5#pause\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n   */\n  'pause',\n  /**\n   * A wrapper around the media elements `load` function. This will call the `HTML5`s\n   * media element `load` function.\n   *\n   * @method Html5#load\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n   */\n  'load',\n  /**\n   * A wrapper around the media elements `play` function. This will call the `HTML5`s\n   * media element `play` function.\n   *\n   * @method Html5#play\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n   */\n  'play'].forEach(function (prop) {\n    Html5.prototype[prop] = function () {\n      return this.el_[prop]();\n    };\n  });\n  Tech.withSourceHandlers(Html5);\n\n  /**\n   * Native source handler for Html5, simply passes the source to the media element.\n   *\n   * @property {Tech~SourceObject} source\n   *        The source object\n   *\n   * @property {Html5} tech\n   *        The instance of the HTML5 tech.\n   */\n  Html5.nativeSourceHandler = {};\n\n  /**\n   * Check if the media element can play the given mime type.\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  Html5.nativeSourceHandler.canPlayType = function (type) {\n    // IE without MediaPlayer throws an error (#519)\n    try {\n      return Html5.TEST_VID.canPlayType(type);\n    } catch (e) {\n      return '';\n    }\n  };\n\n  /**\n   * Check if the media element can handle a source natively.\n   *\n   * @param {Tech~SourceObject} source\n   *         The source object\n   *\n   * @param {Object} [options]\n   *         Options to be passed to the tech.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string).\n   */\n  Html5.nativeSourceHandler.canHandleSource = function (source, options) {\n    // If a type was provided we should rely on that\n    if (source.type) {\n      return Html5.nativeSourceHandler.canPlayType(source.type);\n\n      // If no type, fall back to checking 'video/[EXTENSION]'\n    } else if (source.src) {\n      const ext = getFileExtension(source.src);\n      return Html5.nativeSourceHandler.canPlayType(`video/${ext}`);\n    }\n    return '';\n  };\n\n  /**\n   * Pass the source to the native media element.\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Html5} tech\n   *        The instance of the Html5 tech\n   *\n   * @param {Object} [options]\n   *        The options to pass to the source\n   */\n  Html5.nativeSourceHandler.handleSource = function (source, tech, options) {\n    tech.setSrc(source.src);\n  };\n\n  /**\n   * A noop for the native dispose function, as cleanup is not needed.\n   */\n  Html5.nativeSourceHandler.dispose = function () {};\n\n  // Register the native source handler\n  Html5.registerSourceHandler(Html5.nativeSourceHandler);\n  Tech.registerTech('Html5', Html5);\n\n  /**\n   * @file player.js\n   */\n\n  /** @import { TimeRange } from './utils/time' */\n  /** @import HtmlTrackElement from './tracks/html-track-element' */\n\n  /**\n   * @callback PlayerReadyCallback\n   * @this     {Player}\n   * @returns  {void}\n   */\n\n  // The following tech events are simply re-triggered\n  // on the player when they happen\n  const TECH_EVENTS_RETRIGGER = [\n  /**\n   * Fired while the user agent is downloading media data.\n   *\n   * @event Player#progress\n   * @type {Event}\n   */\n  /**\n   * Retrigger the `progress` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechProgress_\n   * @fires Player#progress\n   * @listens Tech#progress\n   */\n  'progress',\n  /**\n   * Fires when the loading of an audio/video is aborted.\n   *\n   * @event Player#abort\n   * @type {Event}\n   */\n  /**\n   * Retrigger the `abort` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechAbort_\n   * @fires Player#abort\n   * @listens Tech#abort\n   */\n  'abort',\n  /**\n   * Fires when the browser is intentionally not getting media data.\n   *\n   * @event Player#suspend\n   * @type {Event}\n   */\n  /**\n   * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechSuspend_\n   * @fires Player#suspend\n   * @listens Tech#suspend\n   */\n  'suspend',\n  /**\n   * Fires when the current playlist is empty.\n   *\n   * @event Player#emptied\n   * @type {Event}\n   */\n  /**\n   * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechEmptied_\n   * @fires Player#emptied\n   * @listens Tech#emptied\n   */\n  'emptied',\n  /**\n   * Fires when the browser is trying to get media data, but data is not available.\n   *\n   * @event Player#stalled\n   * @type {Event}\n   */\n  /**\n   * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechStalled_\n   * @fires Player#stalled\n   * @listens Tech#stalled\n   */\n  'stalled',\n  /**\n   * Fires when the browser has loaded meta data for the audio/video.\n   *\n   * @event Player#loadedmetadata\n   * @type {Event}\n   */\n  /**\n   * Retrigger the `loadedmetadata` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechLoadedmetadata_\n   * @fires Player#loadedmetadata\n   * @listens Tech#loadedmetadata\n   */\n  'loadedmetadata',\n  /**\n   * Fires when the browser has loaded the current frame of the audio/video.\n   *\n   * @event Player#loadeddata\n   * @type {event}\n   */\n  /**\n   * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechLoaddeddata_\n   * @fires Player#loadeddata\n   * @listens Tech#loadeddata\n   */\n  'loadeddata',\n  /**\n   * Fires when the current playback position has changed.\n   *\n   * @event Player#timeupdate\n   * @type {event}\n   */\n  /**\n   * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechTimeUpdate_\n   * @fires Player#timeupdate\n   * @listens Tech#timeupdate\n   */\n  'timeupdate',\n  /**\n   * Fires when the video's intrinsic dimensions change\n   *\n   * @event Player#resize\n   * @type {event}\n   */\n  /**\n   * Retrigger the `resize` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechResize_\n   * @fires Player#resize\n   * @listens Tech#resize\n   */\n  'resize',\n  /**\n   * Fires when the volume has been changed\n   *\n   * @event Player#volumechange\n   * @type {event}\n   */\n  /**\n   * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechVolumechange_\n   * @fires Player#volumechange\n   * @listens Tech#volumechange\n   */\n  'volumechange',\n  /**\n   * Fires when the text track has been changed\n   *\n   * @event Player#texttrackchange\n   * @type {event}\n   */\n  /**\n   * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechTexttrackchange_\n   * @fires Player#texttrackchange\n   * @listens Tech#texttrackchange\n   */\n  'texttrackchange'];\n\n  // events to queue when playback rate is zero\n  // this is a hash for the sole purpose of mapping non-camel-cased event names\n  // to camel-cased function names\n  const TECH_EVENTS_QUEUE = {\n    canplay: 'CanPlay',\n    canplaythrough: 'CanPlayThrough',\n    playing: 'Playing',\n    seeked: 'Seeked'\n  };\n  const BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\n  const BREAKPOINT_CLASSES = {};\n\n  // grep: vjs-layout-tiny\n  // grep: vjs-layout-x-small\n  // grep: vjs-layout-small\n  // grep: vjs-layout-medium\n  // grep: vjs-layout-large\n  // grep: vjs-layout-x-large\n  // grep: vjs-layout-huge\n  BREAKPOINT_ORDER.forEach(k => {\n    const v = k.charAt(0) === 'x' ? `x-${k.substring(1)}` : k;\n    BREAKPOINT_CLASSES[k] = `vjs-layout-${v}`;\n  });\n  const DEFAULT_BREAKPOINTS = {\n    tiny: 210,\n    xsmall: 320,\n    small: 425,\n    medium: 768,\n    large: 1440,\n    xlarge: 2560,\n    huge: Infinity\n  };\n\n  /**\n   * An instance of the `Player` class is created when any of the Video.js setup methods\n   * are used to initialize a video.\n   *\n   * After an instance has been created it can be accessed globally in three ways:\n   * 1. By calling `videojs.getPlayer('example_video_1');`\n   * 2. By calling `videojs('example_video_1');` (not recommended)\n   * 2. By using it directly via `videojs.players.example_video_1;`\n   *\n   * @extends Component\n   * @global\n   */\n  class Player extends Component$1 {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Element} tag\n     *        The original video DOM element used for configuring options.\n     *\n     * @param {Object} [options]\n     *        Object of option names and values.\n     *\n     * @param {PlayerReadyCallback} [ready]\n     *        Ready callback function.\n     */\n    constructor(tag, options, ready) {\n      // Make sure tag ID exists\n      // also here.. probably better\n      tag.id = tag.id || options.id || `vjs_video_${newGUID()}`;\n\n      // Set Options\n      // The options argument overrides options set in the video tag\n      // which overrides globally set options.\n      // This latter part coincides with the load order\n      // (tag must exist before Player)\n      options = Object.assign(Player.getTagSettings(tag), options);\n\n      // Delay the initialization of children because we need to set up\n      // player properties first, and can't use `this` before `super()`\n      options.initChildren = false;\n\n      // Same with creating the element\n      options.createEl = false;\n\n      // don't auto mixin the evented mixin\n      options.evented = false;\n\n      // we don't want the player to report touch activity on itself\n      // see enableTouchActivity in Component\n      options.reportTouchActivity = false;\n\n      // If language is not set, get the closest lang attribute\n      if (!options.language) {\n        const closest = tag.closest('[lang]');\n        if (closest) {\n          options.language = closest.getAttribute('lang');\n        }\n      }\n\n      // Run base component initializing with new options\n      super(null, options, ready);\n\n      // Create bound methods for document listeners.\n      this.boundDocumentFullscreenChange_ = e => this.documentFullscreenChange_(e);\n      this.boundFullWindowOnEscKey_ = e => this.fullWindowOnEscKey(e);\n      this.boundUpdateStyleEl_ = e => this.updateStyleEl_(e);\n      this.boundApplyInitTime_ = e => this.applyInitTime_(e);\n      this.boundUpdateCurrentBreakpoint_ = e => this.updateCurrentBreakpoint_(e);\n      this.boundHandleTechClick_ = e => this.handleTechClick_(e);\n      this.boundHandleTechDoubleClick_ = e => this.handleTechDoubleClick_(e);\n      this.boundHandleTechTouchStart_ = e => this.handleTechTouchStart_(e);\n      this.boundHandleTechTouchMove_ = e => this.handleTechTouchMove_(e);\n      this.boundHandleTechTouchEnd_ = e => this.handleTechTouchEnd_(e);\n      this.boundHandleTechTap_ = e => this.handleTechTap_(e);\n      this.boundUpdatePlayerHeightOnAudioOnlyMode_ = e => this.updatePlayerHeightOnAudioOnlyMode_(e);\n\n      // default isFullscreen_ to false\n      this.isFullscreen_ = false;\n\n      // create logger\n      this.log = createLogger(this.id_);\n\n      // Hold our own reference to fullscreen api so it can be mocked in tests\n      this.fsApi_ = FullscreenApi;\n\n      // Tracks when a tech changes the poster\n      this.isPosterFromTech_ = false;\n\n      // Holds callback info that gets queued when playback rate is zero\n      // and a seek is happening\n      this.queuedCallbacks_ = [];\n\n      // Turn off API access because we're loading a new tech that might load asynchronously\n      this.isReady_ = false;\n\n      // Init state hasStarted_\n      this.hasStarted_ = false;\n\n      // Init state userActive_\n      this.userActive_ = false;\n\n      // Init debugEnabled_\n      this.debugEnabled_ = false;\n\n      // Init state audioOnlyMode_\n      this.audioOnlyMode_ = false;\n\n      // Init state audioPosterMode_\n      this.audioPosterMode_ = false;\n\n      // Init state audioOnlyCache_\n      this.audioOnlyCache_ = {\n        controlBarHeight: null,\n        playerHeight: null,\n        hiddenChildren: []\n      };\n\n      // if the global option object was accidentally blown away by\n      // someone, bail early with an informative error\n      if (!this.options_ || !this.options_.techOrder || !this.options_.techOrder.length) {\n        throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n      }\n\n      // Store the original tag used to set options\n      this.tag = tag;\n\n      // Store the tag attributes used to restore html5 element\n      this.tagAttributes = tag && getAttributes(tag);\n\n      // Update current language\n      this.language(this.options_.language);\n\n      // Update Supported Languages\n      if (options.languages) {\n        // Normalise player option languages to lowercase\n        const languagesToLower = {};\n        Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n          languagesToLower[name.toLowerCase()] = options.languages[name];\n        });\n        this.languages_ = languagesToLower;\n      } else {\n        this.languages_ = Player.prototype.options_.languages;\n      }\n      this.resetCache_();\n\n      // Set poster\n      /** @type string */\n      this.poster_ = options.poster || '';\n\n      // Set controls\n      /** @type {boolean} */\n      this.controls_ = !!options.controls;\n\n      // Original tag settings stored in options\n      // now remove immediately so native controls don't flash.\n      // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n      tag.controls = false;\n      tag.removeAttribute('controls');\n      this.changingSrc_ = false;\n      this.playCallbacks_ = [];\n      this.playTerminatedQueue_ = [];\n\n      // the attribute overrides the option\n      if (tag.hasAttribute('autoplay')) {\n        this.autoplay(true);\n      } else {\n        // otherwise use the setter to validate and\n        // set the correct value.\n        this.autoplay(this.options_.autoplay);\n      }\n\n      // check plugins\n      if (options.plugins) {\n        Object.keys(options.plugins).forEach(name => {\n          if (typeof this[name] !== 'function') {\n            throw new Error(`plugin \"${name}\" does not exist`);\n          }\n        });\n      }\n\n      /*\n       * Store the internal state of scrubbing\n       *\n       * @private\n       * @return {Boolean} True if the user is scrubbing\n       */\n      this.scrubbing_ = false;\n      this.el_ = this.createEl();\n\n      // Make this an evented object and use `el_` as its event bus.\n      evented(this, {\n        eventBusKey: 'el_'\n      });\n\n      // listen to document and player fullscreenchange handlers so we receive those events\n      // before a user can receive them so we can update isFullscreen appropriately.\n      // make sure that we listen to fullscreenchange events before everything else to make sure that\n      // our isFullscreen method is updated properly for internal components as well as external.\n      if (this.fsApi_.requestFullscreen) {\n        on(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n        this.on(this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n      }\n      if (this.fluid_) {\n        this.on(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n      }\n      // We also want to pass the original player options to each component and plugin\n      // as well so they don't need to reach back into the player for options later.\n      // We also need to do another copy of this.options_ so we don't end up with\n      // an infinite loop.\n      const playerOptionsCopy = merge$2(this.options_);\n\n      // Load plugins\n      if (options.plugins) {\n        Object.keys(options.plugins).forEach(name => {\n          this[name](options.plugins[name]);\n        });\n      }\n\n      // Enable debug mode to fire debugon event for all plugins.\n      if (options.debug) {\n        this.debug(true);\n      }\n      this.options_.playerOptions = playerOptionsCopy;\n      this.middleware_ = [];\n      this.playbackRates(options.playbackRates);\n      if (options.experimentalSvgIcons) {\n        // Add SVG Sprite to the DOM\n        const parser = new window.DOMParser();\n        const parsedSVG = parser.parseFromString(icons, 'image/svg+xml');\n        const errorNode = parsedSVG.querySelector('parsererror');\n        if (errorNode) {\n          log$1.warn('Failed to load SVG Icons. Falling back to Font Icons.');\n          this.options_.experimentalSvgIcons = null;\n        } else {\n          const sprite = parsedSVG.documentElement;\n          sprite.style.display = 'none';\n          this.el_.appendChild(sprite);\n          this.addClass('vjs-svg-icons-enabled');\n        }\n      }\n      this.initChildren();\n\n      // Set isAudio based on whether or not an audio tag was used\n      this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n      // Update controls className. Can't do this when the controls are initially\n      // set because the element doesn't exist yet.\n      if (this.controls()) {\n        this.addClass('vjs-controls-enabled');\n      } else {\n        this.addClass('vjs-controls-disabled');\n      }\n\n      // Set ARIA label and region role depending on player type\n      this.el_.setAttribute('role', 'region');\n      if (this.isAudio()) {\n        this.el_.setAttribute('aria-label', this.localize('Audio Player'));\n      } else {\n        this.el_.setAttribute('aria-label', this.localize('Video Player'));\n      }\n      if (this.isAudio()) {\n        this.addClass('vjs-audio');\n      }\n\n      // Check if spatial navigation is enabled in the options.\n      // If enabled, instantiate the SpatialNavigation class.\n      if (options.spatialNavigation && options.spatialNavigation.enabled) {\n        this.spatialNavigation = new SpatialNavigation(this);\n        this.addClass('vjs-spatial-navigation-enabled');\n      }\n\n      // TODO: Make this smarter. Toggle user state between touching/mousing\n      // using events, since devices can have both touch and mouse events.\n      // TODO: Make this check be performed again when the window switches between monitors\n      // (See https://github.com/videojs/video.js/issues/5683)\n      if (TOUCH_ENABLED) {\n        this.addClass('vjs-touch-enabled');\n      }\n\n      // iOS Safari has broken hover handling\n      if (!IS_IOS) {\n        this.addClass('vjs-workinghover');\n      }\n\n      // Make player easily findable by ID\n      Player.players[this.id_] = this;\n\n      // Add a major version class to aid css in plugins\n      const majorVersion = version$5.split('.')[0];\n      this.addClass(`vjs-v${majorVersion}`);\n\n      // When the player is first initialized, trigger activity so components\n      // like the control bar show themselves if needed\n      this.userActive(true);\n      this.reportUserActivity();\n      this.one('play', e => this.listenForUserActivity_(e));\n      this.on('keydown', e => this.handleKeyDown(e));\n      this.on('languagechange', e => this.handleLanguagechange(e));\n      this.breakpoints(this.options_.breakpoints);\n      this.responsive(this.options_.responsive);\n\n      // Calling both the audio mode methods after the player is fully\n      // setup to be able to listen to the events triggered by them\n      this.on('ready', () => {\n        // Calling the audioPosterMode method first so that\n        // the audioOnlyMode can take precedence when both options are set to true\n        this.audioPosterMode(this.options_.audioPosterMode);\n        this.audioOnlyMode(this.options_.audioOnlyMode);\n      });\n    }\n\n    /**\n     * Destroys the video player and does any necessary cleanup.\n     *\n     * This is especially helpful if you are dynamically adding and removing videos\n     * to/from the DOM.\n     *\n     * @fires Player#dispose\n     */\n    dispose() {\n      /**\n       * Called when the player is being disposed of.\n       *\n       * @event Player#dispose\n       * @type {Event}\n       */\n      this.trigger('dispose');\n      // prevent dispose from being called twice\n      this.off('dispose');\n\n      // Make sure all player-specific document listeners are unbound. This is\n      off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n      off(document, 'keydown', this.boundFullWindowOnEscKey_);\n      if (this.styleEl_ && this.styleEl_.parentNode) {\n        this.styleEl_.parentNode.removeChild(this.styleEl_);\n        this.styleEl_ = null;\n      }\n\n      // Kill reference to this player\n      Player.players[this.id_] = null;\n      if (this.tag && this.tag.player) {\n        this.tag.player = null;\n      }\n      if (this.el_ && this.el_.player) {\n        this.el_.player = null;\n      }\n      if (this.tech_) {\n        this.tech_.dispose();\n        this.isPosterFromTech_ = false;\n        this.poster_ = '';\n      }\n      if (this.playerElIngest_) {\n        this.playerElIngest_ = null;\n      }\n      if (this.tag) {\n        this.tag = null;\n      }\n      clearCacheForPlayer(this);\n\n      // remove all event handlers for track lists\n      // all tracks and track listeners are removed on\n      // tech dispose\n      ALL.names.forEach(name => {\n        const props = ALL[name];\n        const list = this[props.getterName]();\n\n        // if it is not a native list\n        // we have to manually remove event listeners\n        if (list && list.off) {\n          list.off();\n        }\n      });\n\n      // the actual .el_ is removed here, or replaced if\n      super.dispose({\n        restoreEl: this.options_.restoreEl\n      });\n    }\n\n    /**\n     * Create the `Player`'s DOM element.\n     *\n     * @return {Element}\n     *         The DOM element that gets created.\n     */\n    createEl() {\n      let tag = this.tag;\n      let el;\n      let playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n      const divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n      if (playerElIngest) {\n        el = this.el_ = tag.parentNode;\n      } else if (!divEmbed) {\n        el = this.el_ = super.createEl('div');\n      }\n\n      // Copy over all the attributes from the tag, including ID and class\n      // ID will now reference player box, not the video tag\n      const attrs = getAttributes(tag);\n      if (divEmbed) {\n        el = this.el_ = tag;\n        tag = this.tag = document.createElement('video');\n        while (el.children.length) {\n          tag.appendChild(el.firstChild);\n        }\n        if (!hasClass(el, 'video-js')) {\n          addClass(el, 'video-js');\n        }\n        el.appendChild(tag);\n        playerElIngest = this.playerElIngest_ = el;\n        // move properties over from our custom `video-js` element\n        // to our new `video` element. This will move things like\n        // `src` or `controls` that were set via js before the player\n        // was initialized.\n        Object.keys(el).forEach(k => {\n          try {\n            tag[k] = el[k];\n          } catch (e) {\n            // we got a a property like outerHTML which we can't actually copy, ignore it\n          }\n        });\n      }\n\n      // set tabindex to -1 to remove the video element from the focus order\n      tag.setAttribute('tabindex', '-1');\n      attrs.tabindex = '-1';\n\n      // Workaround for #4583 on Chrome (on Windows) with JAWS.\n      // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n      // Note that we can't detect if JAWS is being used, but this ARIA attribute\n      // doesn't change behavior of Chrome if JAWS is not being used\n      if (IS_CHROME && IS_WINDOWS) {\n        tag.setAttribute('role', 'application');\n        attrs.role = 'application';\n      }\n\n      // Remove width/height attrs from tag so CSS can make it 100% width/height\n      tag.removeAttribute('width');\n      tag.removeAttribute('height');\n      if ('width' in attrs) {\n        delete attrs.width;\n      }\n      if ('height' in attrs) {\n        delete attrs.height;\n      }\n      Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n        // don't copy over the class attribute to the player element when we're in a div embed\n        // the class is already set up properly in the divEmbed case\n        // and we want to make sure that the `video-js` class doesn't get lost\n        if (!(divEmbed && attr === 'class')) {\n          el.setAttribute(attr, attrs[attr]);\n        }\n        if (divEmbed) {\n          tag.setAttribute(attr, attrs[attr]);\n        }\n      });\n\n      // Update tag id/class for use as HTML5 playback tech\n      // Might think we should do this after embedding in container so .vjs-tech class\n      // doesn't flash 100% width/height, but class only applies with .video-js parent\n      tag.playerId = tag.id;\n      tag.id += '_html5_api';\n      tag.className = 'vjs-tech';\n\n      // Make player findable on elements\n      tag.player = el.player = this;\n      // Default state of video is paused\n      this.addClass('vjs-paused');\n      const deviceClassNames = ['IS_SMART_TV', 'IS_TIZEN', 'IS_WEBOS', 'IS_ANDROID', 'IS_IPAD', 'IS_IPHONE', 'IS_CHROMECAST_RECEIVER'].filter(key => browser[key]).map(key => {\n        return 'vjs-device-' + key.substring(3).toLowerCase().replace(/\\_/g, '-');\n      });\n      this.addClass(...deviceClassNames);\n\n      // Add a style element in the player that we'll use to set the width/height\n      // of the player in a way that's still overridable by CSS, just like the\n      // video element\n      if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n        this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n        const defaultsStyleEl = $('.vjs-styles-defaults');\n        const head = $('head');\n        head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n      }\n      this.fill_ = false;\n      this.fluid_ = false;\n\n      // Pass in the width/height/aspectRatio options which will update the style el\n      this.width(this.options_.width);\n      this.height(this.options_.height);\n      this.fill(this.options_.fill);\n      this.fluid(this.options_.fluid);\n      this.aspectRatio(this.options_.aspectRatio);\n      // support both crossOrigin and crossorigin to reduce confusion and issues around the name\n      this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin);\n\n      // Hide any links within the video/audio tag,\n      // because IE doesn't hide them completely from screen readers.\n      const links = tag.getElementsByTagName('a');\n      for (let i = 0; i < links.length; i++) {\n        const linkEl = links.item(i);\n        addClass(linkEl, 'vjs-hidden');\n        linkEl.setAttribute('hidden', 'hidden');\n      }\n\n      // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n      // keep track of the original for later so we can know if the source originally failed\n      tag.initNetworkState_ = tag.networkState;\n\n      // Wrap video tag in div (el/box) container\n      if (tag.parentNode && !playerElIngest) {\n        tag.parentNode.insertBefore(el, tag);\n      }\n\n      // insert the tag as the first child of the player element\n      // then manually add it to the children array so that this.addChild\n      // will work properly for other components\n      //\n      // Breaks iPhone, fixed in HTML5 setup.\n      prependTo(tag, el);\n      this.children_.unshift(tag);\n\n      // Set lang attr on player to ensure CSS :lang() in consistent with player\n      // if it's been set to something different to the doc\n      this.el_.setAttribute('lang', this.language_);\n      this.el_.setAttribute('translate', 'no');\n      this.el_ = el;\n      return el;\n    }\n\n    /**\n     * Get or set the `Player`'s crossOrigin option. For the HTML5 player, this\n     * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n     * behavior.\n     *\n     * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n     *\n     * @param {string|null} [value]\n     *        The value to set the `Player`'s crossOrigin to. If an argument is\n     *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n     *\n     * @return {string|null|undefined}\n     *         - The current crossOrigin value of the `Player` when getting.\n     *         - undefined when setting\n     */\n    crossOrigin(value) {\n      // `null` can be set to unset a value\n      if (typeof value === 'undefined') {\n        return this.techGet_('crossOrigin');\n      }\n      if (value !== null && value !== 'anonymous' && value !== 'use-credentials') {\n        log$1.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);\n        return;\n      }\n      this.techCall_('setCrossOrigin', value);\n      if (this.posterImage) {\n        this.posterImage.crossOrigin(value);\n      }\n      return;\n    }\n\n    /**\n     * A getter/setter for the `Player`'s width. Returns the player's configured value.\n     * To get the current width use `currentWidth()`.\n     *\n     * @param {number|string} [value]\n     *        CSS value to set the `Player`'s width to.\n     *\n     * @return {number|undefined}\n     *         - The current width of the `Player` when getting.\n     *         - Nothing when setting\n     */\n    width(value) {\n      return this.dimension('width', value);\n    }\n\n    /**\n     * A getter/setter for the `Player`'s height. Returns the player's configured value.\n     * To get the current height use `currentheight()`.\n     *\n     * @param {number|string} [value]\n     *        CSS value to set the `Player`'s height to.\n     *\n     * @return {number|undefined}\n     *         - The current height of the `Player` when getting.\n     *         - Nothing when setting\n     */\n    height(value) {\n      return this.dimension('height', value);\n    }\n\n    /**\n     * A getter/setter for the `Player`'s width & height.\n     *\n     * @param {string} dimension\n     *        This string can be:\n     *        - 'width'\n     *        - 'height'\n     *\n     * @param {number|string} [value]\n     *        Value for dimension specified in the first argument.\n     *\n     * @return {number}\n     *         The dimension arguments value when getting (width/height).\n     */\n    dimension(dimension, value) {\n      const privDimension = dimension + '_';\n      if (value === undefined) {\n        return this[privDimension] || 0;\n      }\n      if (value === '' || value === 'auto') {\n        // If an empty string is given, reset the dimension to be automatic\n        this[privDimension] = undefined;\n        this.updateStyleEl_();\n        return;\n      }\n      const parsedVal = parseFloat(value);\n      if (isNaN(parsedVal)) {\n        log$1.error(`Improper value \"${value}\" supplied for for ${dimension}`);\n        return;\n      }\n      this[privDimension] = parsedVal;\n      this.updateStyleEl_();\n    }\n\n    /**\n     * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n     *\n     * Turning this on will turn off fill mode.\n     *\n     * @param {boolean} [bool]\n     *        - A value of true adds the class.\n     *        - A value of false removes the class.\n     *        - No value will be a getter.\n     *\n     * @return {boolean|undefined}\n     *         - The value of fluid when getting.\n     *         - `undefined` when setting.\n     */\n    fluid(bool) {\n      if (bool === undefined) {\n        return !!this.fluid_;\n      }\n      this.fluid_ = !!bool;\n      if (isEvented(this)) {\n        this.off(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n      }\n      if (bool) {\n        this.addClass('vjs-fluid');\n        this.fill(false);\n        addEventedCallback(this, () => {\n          this.on(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n        });\n      } else {\n        this.removeClass('vjs-fluid');\n      }\n      this.updateStyleEl_();\n    }\n\n    /**\n     * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n     *\n     * Turning this on will turn off fluid mode.\n     *\n     * @param {boolean} [bool]\n     *        - A value of true adds the class.\n     *        - A value of false removes the class.\n     *        - No value will be a getter.\n     *\n     * @return {boolean|undefined}\n     *         - The value of fluid when getting.\n     *         - `undefined` when setting.\n     */\n    fill(bool) {\n      if (bool === undefined) {\n        return !!this.fill_;\n      }\n      this.fill_ = !!bool;\n      if (bool) {\n        this.addClass('vjs-fill');\n        this.fluid(false);\n      } else {\n        this.removeClass('vjs-fill');\n      }\n    }\n\n    /**\n     * Get/Set the aspect ratio\n     *\n     * @param {string} [ratio]\n     *        Aspect ratio for player\n     *\n     * @return {string|undefined}\n     *         returns the current aspect ratio when getting\n     */\n\n    /**\n     * A getter/setter for the `Player`'s aspect ratio.\n     *\n     * @param {string} [ratio]\n     *        The value to set the `Player`'s aspect ratio to.\n     *\n     * @return {string|undefined}\n     *         - The current aspect ratio of the `Player` when getting.\n     *         - undefined when setting\n     */\n    aspectRatio(ratio) {\n      if (ratio === undefined) {\n        return this.aspectRatio_;\n      }\n\n      // Check for width:height format\n      if (!/^\\d+\\:\\d+$/.test(ratio)) {\n        throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n      }\n      this.aspectRatio_ = ratio;\n\n      // We're assuming if you set an aspect ratio you want fluid mode,\n      // because in fixed mode you could calculate width and height yourself.\n      this.fluid(true);\n      this.updateStyleEl_();\n    }\n\n    /**\n     * Update styles of the `Player` element (height, width and aspect ratio).\n     *\n     * @private\n     * @listens Tech#loadedmetadata\n     */\n    updateStyleEl_() {\n      if (window.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n        const width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n        const height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n        const techEl = this.tech_ && this.tech_.el();\n        if (techEl) {\n          if (width >= 0) {\n            techEl.width = width;\n          }\n          if (height >= 0) {\n            techEl.height = height;\n          }\n        }\n        return;\n      }\n      let width;\n      let height;\n      let aspectRatio;\n      let idClass;\n\n      // The aspect ratio is either used directly or to calculate width and height.\n      if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n        // Use any aspectRatio that's been specifically set\n        aspectRatio = this.aspectRatio_;\n      } else if (this.videoWidth() > 0) {\n        // Otherwise try to get the aspect ratio from the video metadata\n        aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n      } else {\n        // Or use a default. The video element's is 2:1, but 16:9 is more common.\n        aspectRatio = '16:9';\n      }\n\n      // Get the ratio as a decimal we can use to calculate dimensions\n      const ratioParts = aspectRatio.split(':');\n      const ratioMultiplier = ratioParts[1] / ratioParts[0];\n      if (this.width_ !== undefined) {\n        // Use any width that's been specifically set\n        width = this.width_;\n      } else if (this.height_ !== undefined) {\n        // Or calculate the width from the aspect ratio if a height has been set\n        width = this.height_ / ratioMultiplier;\n      } else {\n        // Or use the video's metadata, or use the video el's default of 300\n        width = this.videoWidth() || 300;\n      }\n      if (this.height_ !== undefined) {\n        // Use any height that's been specifically set\n        height = this.height_;\n      } else {\n        // Otherwise calculate the height from the ratio and the width\n        height = width * ratioMultiplier;\n      }\n\n      // Ensure the CSS class is valid by starting with an alpha character\n      if (/^[^a-zA-Z]/.test(this.id())) {\n        idClass = 'dimensions-' + this.id();\n      } else {\n        idClass = this.id() + '-dimensions';\n      }\n\n      // Ensure the right class is still on the player for the style element\n      this.addClass(idClass);\n      setTextContent(this.styleEl_, `\n      .${idClass} {\n        width: ${width}px;\n        height: ${height}px;\n      }\n\n      .${idClass}.vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: ${ratioMultiplier * 100}%;\n      }\n    `);\n    }\n\n    /**\n     * Load/Create an instance of playback {@link Tech} including element\n     * and API methods. Then append the `Tech` element in `Player` as a child.\n     *\n     * @param {string} techName\n     *        name of the playback technology\n     *\n     * @param {string} source\n     *        video source\n     *\n     * @private\n     */\n    loadTech_(techName, source) {\n      // Pause and remove current playback technology\n      if (this.tech_) {\n        this.unloadTech_();\n      }\n      const titleTechName = toTitleCase$1(techName);\n      const camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n      // get rid of the HTML5 video tag as soon as we are using another tech\n      if (titleTechName !== 'Html5' && this.tag) {\n        Tech.getTech('Html5').disposeMediaElement(this.tag);\n        this.tag.player = null;\n        this.tag = null;\n      }\n      this.techName_ = titleTechName;\n\n      // Turn off API access because we're loading a new tech that might load asynchronously\n      this.isReady_ = false;\n      let autoplay = this.autoplay();\n\n      // if autoplay is a string (or `true` with normalizeAutoplay: true) we pass false to the tech\n      // because the player is going to handle autoplay on `loadstart`\n      if (typeof this.autoplay() === 'string' || this.autoplay() === true && this.options_.normalizeAutoplay) {\n        autoplay = false;\n      }\n\n      // Grab tech-specific options from player options and add source and parent element to use.\n      const techOptions = {\n        source,\n        autoplay,\n        'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n        'playerId': this.id(),\n        'techId': `${this.id()}_${camelTechName}_api`,\n        'playsinline': this.options_.playsinline,\n        'preload': this.options_.preload,\n        'loop': this.options_.loop,\n        'disablePictureInPicture': this.options_.disablePictureInPicture,\n        'muted': this.options_.muted,\n        'poster': this.poster(),\n        'language': this.language(),\n        'playerElIngest': this.playerElIngest_ || false,\n        'vtt.js': this.options_['vtt.js'],\n        'canOverridePoster': !!this.options_.techCanOverridePoster,\n        'enableSourceset': this.options_.enableSourceset\n      };\n      ALL.names.forEach(name => {\n        const props = ALL[name];\n        techOptions[props.getterName] = this[props.privateName];\n      });\n      Object.assign(techOptions, this.options_[titleTechName]);\n      Object.assign(techOptions, this.options_[camelTechName]);\n      Object.assign(techOptions, this.options_[techName.toLowerCase()]);\n      if (this.tag) {\n        techOptions.tag = this.tag;\n      }\n      if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n        techOptions.startTime = this.cache_.currentTime;\n      }\n\n      // Initialize tech instance\n      const TechClass = Tech.getTech(techName);\n      if (!TechClass) {\n        throw new Error(`No Tech named '${titleTechName}' exists! '${titleTechName}' should be registered using videojs.registerTech()'`);\n      }\n      this.tech_ = new TechClass(techOptions);\n\n      // player.triggerReady is always async, so don't need this to be async\n      this.tech_.ready(bind_(this, this.handleTechReady_), true);\n      textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n      // Listen to all HTML5-defined events and trigger them on the player\n      TECH_EVENTS_RETRIGGER.forEach(event => {\n        this.on(this.tech_, event, e => this[`handleTech${toTitleCase$1(event)}_`](e));\n      });\n      Object.keys(TECH_EVENTS_QUEUE).forEach(event => {\n        this.on(this.tech_, event, eventObj => {\n          if (this.tech_.playbackRate() === 0 && this.tech_.seeking()) {\n            this.queuedCallbacks_.push({\n              callback: this[`handleTech${TECH_EVENTS_QUEUE[event]}_`].bind(this),\n              event: eventObj\n            });\n            return;\n          }\n          this[`handleTech${TECH_EVENTS_QUEUE[event]}_`](eventObj);\n        });\n      });\n      this.on(this.tech_, 'loadstart', e => this.handleTechLoadStart_(e));\n      this.on(this.tech_, 'sourceset', e => this.handleTechSourceset_(e));\n      this.on(this.tech_, 'waiting', e => this.handleTechWaiting_(e));\n      this.on(this.tech_, 'ended', e => this.handleTechEnded_(e));\n      this.on(this.tech_, 'seeking', e => this.handleTechSeeking_(e));\n      this.on(this.tech_, 'play', e => this.handleTechPlay_(e));\n      this.on(this.tech_, 'pause', e => this.handleTechPause_(e));\n      this.on(this.tech_, 'durationchange', e => this.handleTechDurationChange_(e));\n      this.on(this.tech_, 'fullscreenchange', (e, data) => this.handleTechFullscreenChange_(e, data));\n      this.on(this.tech_, 'fullscreenerror', (e, err) => this.handleTechFullscreenError_(e, err));\n      this.on(this.tech_, 'enterpictureinpicture', e => this.handleTechEnterPictureInPicture_(e));\n      this.on(this.tech_, 'leavepictureinpicture', e => this.handleTechLeavePictureInPicture_(e));\n      this.on(this.tech_, 'error', e => this.handleTechError_(e));\n      this.on(this.tech_, 'posterchange', e => this.handleTechPosterChange_(e));\n      this.on(this.tech_, 'textdata', e => this.handleTechTextData_(e));\n      this.on(this.tech_, 'ratechange', e => this.handleTechRateChange_(e));\n      this.on(this.tech_, 'loadedmetadata', this.boundUpdateStyleEl_);\n      this.usingNativeControls(this.techGet_('controls'));\n      if (this.controls() && !this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n\n      // Add the tech element in the DOM if it was not already there\n      // Make sure to not insert the original video element if using Html5\n      if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n        prependTo(this.tech_.el(), this.el());\n      }\n\n      // Get rid of the original video tag reference after the first tech is loaded\n      if (this.tag) {\n        this.tag.player = null;\n        this.tag = null;\n      }\n    }\n\n    /**\n     * Unload and dispose of the current playback {@link Tech}.\n     *\n     * @private\n     */\n    unloadTech_() {\n      // Save the current text tracks so that we can reuse the same text tracks with the next tech\n      ALL.names.forEach(name => {\n        const props = ALL[name];\n        this[props.privateName] = this[props.getterName]();\n      });\n      this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n      this.isReady_ = false;\n      this.tech_.dispose();\n      this.tech_ = false;\n      if (this.isPosterFromTech_) {\n        this.poster_ = '';\n        this.trigger('posterchange');\n      }\n      this.isPosterFromTech_ = false;\n    }\n\n    /**\n     * Return a reference to the current {@link Tech}.\n     * It will print a warning by default about the danger of using the tech directly\n     * but any argument that is passed in will silence the warning.\n     *\n     * @param {*} [safety]\n     *        Anything passed in to silence the warning\n     *\n     * @return {Tech}\n     *         The Tech\n     */\n    tech(safety) {\n      if (safety === undefined) {\n        log$1.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n      }\n      return this.tech_;\n    }\n\n    /**\n     * An object that contains Video.js version.\n     *\n     * @typedef {Object} PlayerVersion\n     *\n     * @property {string} 'video.js' - Video.js version\n     */\n\n    /**\n     * Returns an object with Video.js version.\n     *\n     * @return {PlayerVersion}\n     *          An object with Video.js version.\n     */\n    version() {\n      return {\n        'video.js': version$5\n      };\n    }\n\n    /**\n     * Set up click and touch listeners for the playback element\n     *\n     * - On desktops: a click on the video itself will toggle playback\n     * - On mobile devices: a click on the video toggles controls\n     *   which is done by toggling the user state between active and\n     *   inactive\n     * - A tap can signal that a user has become active or has become inactive\n     *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n     *   quick tap should hide them again (signaling the user is in an inactive\n     *   viewing state)\n     * - In addition to this, we still want the user to be considered inactive after\n     *   a few seconds of inactivity.\n     *\n     * > Note: the only part of iOS interaction we can't mimic with this setup\n     * is a touch and hold on the video element counting as activity in order to\n     * keep the controls showing, but that shouldn't be an issue. A touch and hold\n     * on any controls will still keep the user active\n     *\n     * @private\n     */\n    addTechControlsListeners_() {\n      // Make sure to remove all the previous listeners in case we are called multiple times.\n      this.removeTechControlsListeners_();\n      this.on(this.tech_, 'click', this.boundHandleTechClick_);\n      this.on(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n\n      // If the controls were hidden we don't want that to change without a tap event\n      // so we'll check if the controls were already showing before reporting user\n      // activity\n      this.on(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n      this.on(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n      this.on(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n\n      // The tap listener needs to come after the touchend listener because the tap\n      // listener cancels out any reportedUserActivity when setting userActive(false)\n      this.on(this.tech_, 'tap', this.boundHandleTechTap_);\n    }\n\n    /**\n     * Remove the listeners used for click and tap controls. This is needed for\n     * toggling to controls disabled, where a tap/touch should do nothing.\n     *\n     * @private\n     */\n    removeTechControlsListeners_() {\n      // We don't want to just use `this.off()` because there might be other needed\n      // listeners added by techs that extend this.\n      this.off(this.tech_, 'tap', this.boundHandleTechTap_);\n      this.off(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n      this.off(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n      this.off(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n      this.off(this.tech_, 'click', this.boundHandleTechClick_);\n      this.off(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n    }\n\n    /**\n     * Player waits for the tech to be ready\n     *\n     * @private\n     */\n    handleTechReady_() {\n      this.triggerReady();\n\n      // Keep the same volume as before\n      if (this.cache_.volume) {\n        this.techCall_('setVolume', this.cache_.volume);\n      }\n\n      // Look if the tech found a higher resolution poster while loading\n      this.handleTechPosterChange_();\n\n      // Update the duration if available\n      this.handleTechDurationChange_();\n    }\n\n    /**\n     * Retrigger the `loadstart` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#loadstart\n     * @listens Tech#loadstart\n     * @private\n     */\n    handleTechLoadStart_() {\n      // TODO: Update to use `emptied` event instead. See #1277.\n\n      this.removeClass('vjs-ended', 'vjs-seeking');\n\n      // reset the error state\n      this.error(null);\n\n      // Update the duration\n      this.handleTechDurationChange_();\n      if (!this.paused()) {\n        /**\n         * Fired when the user agent begins looking for media data\n         *\n         * @event Player#loadstart\n         * @type {Event}\n         */\n        this.trigger('loadstart');\n      } else {\n        // reset the hasStarted state\n        this.hasStarted(false);\n        this.trigger('loadstart');\n      }\n\n      // autoplay happens after loadstart for the browser,\n      // so we mimic that behavior\n      this.manualAutoplay_(this.autoplay() === true && this.options_.normalizeAutoplay ? 'play' : this.autoplay());\n    }\n\n    /**\n     * Handle autoplay string values, rather than the typical boolean\n     * values that should be handled by the tech. Note that this is not\n     * part of any specification. Valid values and what they do can be\n     * found on the autoplay getter at Player#autoplay()\n     */\n    manualAutoplay_(type) {\n      if (!this.tech_ || typeof type !== 'string') {\n        return;\n      }\n\n      // Save original muted() value, set muted to true, and attempt to play().\n      // On promise rejection, restore muted from saved value\n      const resolveMuted = () => {\n        const previouslyMuted = this.muted();\n        this.muted(true);\n        const restoreMuted = () => {\n          this.muted(previouslyMuted);\n        };\n\n        // restore muted on play terminatation\n        this.playTerminatedQueue_.push(restoreMuted);\n        const mutedPromise = this.play();\n        if (!isPromise(mutedPromise)) {\n          return;\n        }\n        return mutedPromise.catch(err => {\n          restoreMuted();\n          throw new Error(`Rejection at manualAutoplay. Restoring muted value. ${err ? err : ''}`);\n        });\n      };\n      let promise;\n\n      // if muted defaults to true\n      // the only thing we can do is call play\n      if (type === 'any' && !this.muted()) {\n        promise = this.play();\n        if (isPromise(promise)) {\n          promise = promise.catch(resolveMuted);\n        }\n      } else if (type === 'muted' && !this.muted()) {\n        promise = resolveMuted();\n      } else {\n        promise = this.play();\n      }\n      if (!isPromise(promise)) {\n        return;\n      }\n      return promise.then(() => {\n        this.trigger({\n          type: 'autoplay-success',\n          autoplay: type\n        });\n      }).catch(() => {\n        this.trigger({\n          type: 'autoplay-failure',\n          autoplay: type\n        });\n      });\n    }\n\n    /**\n     * Update the internal source caches so that we return the correct source from\n     * `src()`, `currentSource()`, and `currentSources()`.\n     *\n     * > Note: `currentSources` will not be updated if the source that is passed in exists\n     *         in the current `currentSources` cache.\n     *\n     *\n     * @param {Tech~SourceObject} srcObj\n     *        A string or object source to update our caches to.\n     */\n    updateSourceCaches_(srcObj = '') {\n      let src = srcObj;\n      let type = '';\n      if (typeof src !== 'string') {\n        src = srcObj.src;\n        type = srcObj.type;\n      }\n\n      // make sure all the caches are set to default values\n      // to prevent null checking\n      this.cache_.source = this.cache_.source || {};\n      this.cache_.sources = this.cache_.sources || [];\n\n      // try to get the type of the src that was passed in\n      if (src && !type) {\n        type = findMimetype(this, src);\n      }\n\n      // update `currentSource` cache always\n      this.cache_.source = merge$2({}, srcObj, {\n        src,\n        type\n      });\n      const matchingSources = this.cache_.sources.filter(s => s.src && s.src === src);\n      const sourceElSources = [];\n      const sourceEls = this.$$('source');\n      const matchingSourceEls = [];\n      for (let i = 0; i < sourceEls.length; i++) {\n        const sourceObj = getAttributes(sourceEls[i]);\n        sourceElSources.push(sourceObj);\n        if (sourceObj.src && sourceObj.src === src) {\n          matchingSourceEls.push(sourceObj.src);\n        }\n      }\n\n      // if we have matching source els but not matching sources\n      // the current source cache is not up to date\n      if (matchingSourceEls.length && !matchingSources.length) {\n        this.cache_.sources = sourceElSources;\n        // if we don't have matching source or source els set the\n        // sources cache to the `currentSource` cache\n      } else if (!matchingSources.length) {\n        this.cache_.sources = [this.cache_.source];\n      }\n\n      // update the tech `src` cache\n      this.cache_.src = src;\n    }\n\n    /**\n     * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n     * causing the media element to reload.\n     *\n     * It will fire for the initial source and each subsequent source.\n     * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n     *\n     * The event object for this event contains a `src` property that will contain the source\n     * that was available when the event was triggered. This is generally only necessary if Video.js\n     * is switching techs while the source was being changed.\n     *\n     * It is also fired when `load` is called on the player (or media element)\n     * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n     * says that the resource selection algorithm needs to be aborted and restarted.\n     * In this case, it is very likely that the `src` property will be set to the\n     * empty string `\"\"` to indicate we do not know what the source will be but\n     * that it is changing.\n     *\n     * *This event is currently still experimental and may change in minor releases.*\n     * __To use this, pass `enableSourceset` option to the player.__\n     *\n     * @event Player#sourceset\n     * @type {Event}\n     * @prop {string} src\n     *                The source url available when the `sourceset` was triggered.\n     *                It will be an empty string if we cannot know what the source is\n     *                but know that the source will change.\n     */\n    /**\n     * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#sourceset\n     * @listens Tech#sourceset\n     * @private\n     */\n    handleTechSourceset_(event) {\n      // only update the source cache when the source\n      // was not updated using the player api\n      if (!this.changingSrc_) {\n        let updateSourceCaches = src => this.updateSourceCaches_(src);\n        const playerSrc = this.currentSource().src;\n        const eventSrc = event.src;\n\n        // if we have a playerSrc that is not a blob, and a tech src that is a blob\n        if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n          // if both the tech source and the player source were updated we assume\n          // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n          if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n            updateSourceCaches = () => {};\n          }\n        }\n\n        // update the source to the initial source right away\n        // in some cases this will be empty string\n        updateSourceCaches(eventSrc);\n\n        // if the `sourceset` `src` was an empty string\n        // wait for a `loadstart` to update the cache to `currentSrc`.\n        // If a sourceset happens before a `loadstart`, we reset the state\n        if (!event.src) {\n          this.tech_.any(['sourceset', 'loadstart'], e => {\n            // if a sourceset happens before a `loadstart` there\n            // is nothing to do as this `handleTechSourceset_`\n            // will be called again and this will be handled there.\n            if (e.type === 'sourceset') {\n              return;\n            }\n            const techSrc = this.techGet_('currentSrc');\n            this.lastSource_.tech = techSrc;\n            this.updateSourceCaches_(techSrc);\n          });\n        }\n      }\n      this.lastSource_ = {\n        player: this.currentSource().src,\n        tech: event.src\n      };\n      this.trigger({\n        src: event.src,\n        type: 'sourceset'\n      });\n    }\n\n    /**\n     * Add/remove the vjs-has-started class\n     *\n     *\n     * @param {boolean} request\n     *        - true: adds the class\n     *        - false: remove the class\n     *\n     * @return {boolean}\n     *         the boolean value of hasStarted_\n     */\n    hasStarted(request) {\n      if (request === undefined) {\n        // act as getter, if we have no request to change\n        return this.hasStarted_;\n      }\n      if (request === this.hasStarted_) {\n        return;\n      }\n      this.hasStarted_ = request;\n      if (this.hasStarted_) {\n        this.addClass('vjs-has-started');\n      } else {\n        this.removeClass('vjs-has-started');\n      }\n    }\n\n    /**\n     * Fired whenever the media begins or resumes playback\n     *\n     * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n     * @fires Player#play\n     * @listens Tech#play\n     * @private\n     */\n    handleTechPlay_() {\n      this.removeClass('vjs-ended', 'vjs-paused');\n      this.addClass('vjs-playing');\n\n      // hide the poster when the user hits play\n      this.hasStarted(true);\n      /**\n       * Triggered whenever an {@link Tech#play} event happens. Indicates that\n       * playback has started or resumed.\n       *\n       * @event Player#play\n       * @type {Event}\n       */\n      this.trigger('play');\n    }\n\n    /**\n     * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n     *\n     * If there were any events queued while the playback rate was zero, fire\n     * those events now.\n     *\n     * @private\n     * @method Player#handleTechRateChange_\n     * @fires Player#ratechange\n     * @listens Tech#ratechange\n     */\n    handleTechRateChange_() {\n      if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n        this.queuedCallbacks_.forEach(queued => queued.callback(queued.event));\n        this.queuedCallbacks_ = [];\n      }\n      this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n      /**\n       * Fires when the playing speed of the audio/video is changed\n       *\n       * @event Player#ratechange\n       * @type {event}\n       */\n      this.trigger('ratechange');\n    }\n\n    /**\n     * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#waiting\n     * @listens Tech#waiting\n     * @private\n     */\n    handleTechWaiting_() {\n      this.addClass('vjs-waiting');\n      /**\n       * A readyState change on the DOM element has caused playback to stop.\n       *\n       * @event Player#waiting\n       * @type {Event}\n       */\n      this.trigger('waiting');\n\n      // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n      // premature removal of the waiting class, wait for the time to change.\n      const timeWhenWaiting = this.currentTime();\n      const timeUpdateListener = () => {\n        if (timeWhenWaiting !== this.currentTime()) {\n          this.removeClass('vjs-waiting');\n          this.off('timeupdate', timeUpdateListener);\n        }\n      };\n      this.on('timeupdate', timeUpdateListener);\n    }\n\n    /**\n     * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n     * > Note: This is not consistent between browsers. See #1351\n     *\n     * @fires Player#canplay\n     * @listens Tech#canplay\n     * @private\n     */\n    handleTechCanPlay_() {\n      this.removeClass('vjs-waiting');\n      /**\n       * The media has a readyState of HAVE_FUTURE_DATA or greater.\n       *\n       * @event Player#canplay\n       * @type {Event}\n       */\n      this.trigger('canplay');\n    }\n\n    /**\n     * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#canplaythrough\n     * @listens Tech#canplaythrough\n     * @private\n     */\n    handleTechCanPlayThrough_() {\n      this.removeClass('vjs-waiting');\n      /**\n       * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n       * entire media file can be played without buffering.\n       *\n       * @event Player#canplaythrough\n       * @type {Event}\n       */\n      this.trigger('canplaythrough');\n    }\n\n    /**\n     * Retrigger the `playing` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#playing\n     * @listens Tech#playing\n     * @private\n     */\n    handleTechPlaying_() {\n      this.removeClass('vjs-waiting');\n      /**\n       * The media is no longer blocked from playback, and has started playing.\n       *\n       * @event Player#playing\n       * @type {Event}\n       */\n      this.trigger('playing');\n    }\n\n    /**\n     * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#seeking\n     * @listens Tech#seeking\n     * @private\n     */\n    handleTechSeeking_() {\n      this.addClass('vjs-seeking');\n      /**\n       * Fired whenever the player is jumping to a new time\n       *\n       * @event Player#seeking\n       * @type {Event}\n       */\n      this.trigger('seeking');\n    }\n\n    /**\n     * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#seeked\n     * @listens Tech#seeked\n     * @private\n     */\n    handleTechSeeked_() {\n      this.removeClass('vjs-seeking', 'vjs-ended');\n      /**\n       * Fired when the player has finished jumping to a new time\n       *\n       * @event Player#seeked\n       * @type {Event}\n       */\n      this.trigger('seeked');\n    }\n\n    /**\n     * Retrigger the `pause` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#pause\n     * @listens Tech#pause\n     * @private\n     */\n    handleTechPause_() {\n      this.removeClass('vjs-playing');\n      this.addClass('vjs-paused');\n      /**\n       * Fired whenever the media has been paused\n       *\n       * @event Player#pause\n       * @type {Event}\n       */\n      this.trigger('pause');\n    }\n\n    /**\n     * Retrigger the `ended` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#ended\n     * @listens Tech#ended\n     * @private\n     */\n    handleTechEnded_() {\n      this.addClass('vjs-ended');\n      this.removeClass('vjs-waiting');\n      if (this.options_.loop) {\n        this.currentTime(0);\n        this.play();\n      } else if (!this.paused()) {\n        this.pause();\n      }\n\n      /**\n       * Fired when the end of the media resource is reached (currentTime == duration)\n       *\n       * @event Player#ended\n       * @type {Event}\n       */\n      this.trigger('ended');\n    }\n\n    /**\n     * Fired when the duration of the media resource is first known or changed\n     *\n     * @listens Tech#durationchange\n     * @private\n     */\n    handleTechDurationChange_() {\n      this.duration(this.techGet_('duration'));\n    }\n\n    /**\n     * Handle a click on the media element to play/pause\n     *\n     * @param {Event} event\n     *        the event that caused this function to trigger\n     *\n     * @listens Tech#click\n     * @private\n     */\n    handleTechClick_(event) {\n      // When controls are disabled a click should not toggle playback because\n      // the click is considered a control\n      if (!this.controls_) {\n        return;\n      }\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.click === undefined || this.options_.userActions.click !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.click === 'function') {\n          this.options_.userActions.click.call(this, event);\n        } else if (this.paused()) {\n          silencePromise(this.play());\n        } else {\n          this.pause();\n        }\n      }\n    }\n\n    /**\n     * Handle a double-click on the media element to enter/exit fullscreen\n     *\n     * @param {Event} event\n     *        the event that caused this function to trigger\n     *\n     * @listens Tech#dblclick\n     * @private\n     */\n    handleTechDoubleClick_(event) {\n      if (!this.controls_) {\n        return;\n      }\n\n      // we do not want to toggle fullscreen state\n      // when double-clicking inside a control bar or a modal\n      const inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), el => el.contains(event.target));\n      if (!inAllowedEls) {\n        /*\n         * options.userActions.doubleClick\n         *\n         * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n         * Set to `false` to disable double-click handling\n         * Set to a function to substitute an external double-click handler\n         */\n        if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n          if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n            this.options_.userActions.doubleClick.call(this, event);\n          } else if (this.isFullscreen()) {\n            this.exitFullscreen();\n          } else {\n            this.requestFullscreen();\n          }\n        }\n      }\n    }\n\n    /**\n     * Handle a tap on the media element. It will toggle the user\n     * activity state, which hides and shows the controls.\n     *\n     * @listens Tech#tap\n     * @private\n     */\n    handleTechTap_() {\n      this.userActive(!this.userActive());\n    }\n\n    /**\n     * Handle touch to start\n     *\n     * @listens Tech#touchstart\n     * @private\n     */\n    handleTechTouchStart_() {\n      this.userWasActive = this.userActive();\n    }\n\n    /**\n     * Handle touch to move\n     *\n     * @listens Tech#touchmove\n     * @private\n     */\n    handleTechTouchMove_() {\n      if (this.userWasActive) {\n        this.reportUserActivity();\n      }\n    }\n\n    /**\n     * Handle touch to end\n     *\n     * @param {Event} event\n     *        the touchend event that triggered\n     *        this function\n     *\n     * @listens Tech#touchend\n     * @private\n     */\n    handleTechTouchEnd_(event) {\n      // Stop the mouse events from also happening\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n    }\n\n    /**\n     * @private\n     */\n    toggleFullscreenClass_() {\n      if (this.isFullscreen()) {\n        this.addClass('vjs-fullscreen');\n      } else {\n        this.removeClass('vjs-fullscreen');\n      }\n    }\n\n    /**\n     * when the document fschange event triggers it calls this\n     */\n    documentFullscreenChange_(e) {\n      const targetPlayer = e.target.player;\n\n      // if another player was fullscreen\n      // do a null check for targetPlayer because older firefox's would put document as e.target\n      if (targetPlayer && targetPlayer !== this) {\n        return;\n      }\n      const el = this.el();\n      let isFs = document[this.fsApi_.fullscreenElement] === el;\n      if (!isFs && el.matches) {\n        isFs = el.matches(':' + this.fsApi_.fullscreen);\n      }\n      this.isFullscreen(isFs);\n    }\n\n    /**\n     * Handle Tech Fullscreen Change\n     *\n     * @param {Event} event\n     *        the fullscreenchange event that triggered this function\n     *\n     * @param {Object} data\n     *        the data that was sent with the event\n     *\n     * @private\n     * @listens Tech#fullscreenchange\n     * @fires Player#fullscreenchange\n     */\n    handleTechFullscreenChange_(event, data) {\n      if (data) {\n        if (data.nativeIOSFullscreen) {\n          this.addClass('vjs-ios-native-fs');\n          this.tech_.one('webkitendfullscreen', () => {\n            this.removeClass('vjs-ios-native-fs');\n          });\n        }\n        this.isFullscreen(data.isFullscreen);\n      }\n    }\n    handleTechFullscreenError_(event, err) {\n      this.trigger('fullscreenerror', err);\n    }\n\n    /**\n     * @private\n     */\n    togglePictureInPictureClass_() {\n      if (this.isInPictureInPicture()) {\n        this.addClass('vjs-picture-in-picture');\n      } else {\n        this.removeClass('vjs-picture-in-picture');\n      }\n    }\n\n    /**\n     * Handle Tech Enter Picture-in-Picture.\n     *\n     * @param {Event} event\n     *        the enterpictureinpicture event that triggered this function\n     *\n     * @private\n     * @listens Tech#enterpictureinpicture\n     */\n    handleTechEnterPictureInPicture_(event) {\n      this.isInPictureInPicture(true);\n    }\n\n    /**\n     * Handle Tech Leave Picture-in-Picture.\n     *\n     * @param {Event} event\n     *        the leavepictureinpicture event that triggered this function\n     *\n     * @private\n     * @listens Tech#leavepictureinpicture\n     */\n    handleTechLeavePictureInPicture_(event) {\n      this.isInPictureInPicture(false);\n    }\n\n    /**\n     * Fires when an error occurred during the loading of an audio/video.\n     *\n     * @private\n     * @listens Tech#error\n     */\n    handleTechError_() {\n      const error = this.tech_.error();\n      if (error) {\n        this.error(error);\n      }\n    }\n\n    /**\n     * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#textdata\n     * @listens Tech#textdata\n     * @private\n     */\n    handleTechTextData_() {\n      let data = null;\n      if (arguments.length > 1) {\n        data = arguments[1];\n      }\n\n      /**\n       * Fires when we get a textdata event from tech\n       *\n       * @event Player#textdata\n       * @type {Event}\n       */\n      this.trigger('textdata', data);\n    }\n\n    /**\n     * Get object for cached values.\n     *\n     * @return {Object}\n     *         get the current object cache\n     */\n    getCache() {\n      return this.cache_;\n    }\n\n    /**\n     * Resets the internal cache object.\n     *\n     * Using this function outside the player constructor or reset method may\n     * have unintended side-effects.\n     *\n     * @private\n     */\n    resetCache_() {\n      this.cache_ = {\n        // Right now, the currentTime is not _really_ cached because it is always\n        // retrieved from the tech (see: currentTime). However, for completeness,\n        // we set it to zero here to ensure that if we do start actually caching\n        // it, we reset it along with everything else.\n        currentTime: 0,\n        initTime: 0,\n        inactivityTimeout: this.options_.inactivityTimeout,\n        duration: NaN,\n        lastVolume: 1,\n        lastPlaybackRate: this.defaultPlaybackRate(),\n        media: null,\n        src: '',\n        source: {},\n        sources: [],\n        playbackRates: [],\n        volume: 1\n      };\n    }\n\n    /**\n     * Pass values to the playback tech\n     *\n     * @param {string} [method]\n     *        the method to call\n     *\n     * @param {Object} [arg]\n     *        the argument to pass\n     *\n     * @private\n     */\n    techCall_(method, arg) {\n      // If it's not ready yet, call method when it is\n\n      this.ready(function () {\n        if (method in allowedSetters) {\n          return set(this.middleware_, this.tech_, method, arg);\n        } else if (method in allowedMediators) {\n          return mediate(this.middleware_, this.tech_, method, arg);\n        }\n        try {\n          if (this.tech_) {\n            this.tech_[method](arg);\n          }\n        } catch (e) {\n          log$1(e);\n          throw e;\n        }\n      }, true);\n    }\n\n    /**\n     * Mediate attempt to call playback tech method\n     * and return the value of the method called.\n     *\n     * @param {string} method\n     *        Tech method\n     *\n     * @return {*}\n     *         Value returned by the tech method called, undefined if tech\n     *         is not ready or tech method is not present\n     *\n     * @private\n     */\n    techGet_(method) {\n      if (!this.tech_ || !this.tech_.isReady_) {\n        return;\n      }\n      if (method in allowedGetters) {\n        return get(this.middleware_, this.tech_, method);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method);\n      }\n\n      // Log error when playback tech object is present but method\n      // is undefined or unavailable\n      try {\n        return this.tech_[method]();\n      } catch (e) {\n        // When building additional tech libs, an expected method may not be defined yet\n        if (this.tech_[method] === undefined) {\n          log$1(`Video.js: ${method} method not defined for ${this.techName_} playback technology.`, e);\n          throw e;\n        }\n\n        // When a method isn't available on the object it throws a TypeError\n        if (e.name === 'TypeError') {\n          log$1(`Video.js: ${method} unavailable on ${this.techName_} playback technology element.`, e);\n          this.tech_.isReady_ = false;\n          throw e;\n        }\n\n        // If error unknown, just log and throw\n        log$1(e);\n        throw e;\n      }\n    }\n\n    /**\n     * Attempt to begin playback at the first opportunity.\n     *\n     * @return {Promise|undefined}\n     *         Returns a promise if the browser supports Promises (or one\n     *         was passed in as an option). This promise will be resolved on\n     *         the return value of play. If this is undefined it will fulfill the\n     *         promise chain otherwise the promise chain will be fulfilled when\n     *         the promise from play is fulfilled.\n     */\n    play() {\n      return new Promise(resolve => {\n        this.play_(resolve);\n      });\n    }\n\n    /**\n     * The actual logic for play, takes a callback that will be resolved on the\n     * return value of play. This allows us to resolve to the play promise if there\n     * is one on modern browsers.\n     *\n     * @private\n     * @param {Function} [callback]\n     *        The callback that should be called when the techs play is actually called\n     */\n    play_(callback = silencePromise) {\n      this.playCallbacks_.push(callback);\n      const isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc()));\n      const isSafariOrIOS = Boolean(IS_ANY_SAFARI || IS_IOS);\n\n      // treat calls to play_ somewhat like the `one` event function\n      if (this.waitToPlay_) {\n        this.off(['ready', 'loadstart'], this.waitToPlay_);\n        this.waitToPlay_ = null;\n      }\n\n      // if the player/tech is not ready or the src itself is not ready\n      // queue up a call to play on `ready` or `loadstart`\n      if (!this.isReady_ || !isSrcReady) {\n        this.waitToPlay_ = e => {\n          this.play_();\n        };\n        this.one(['ready', 'loadstart'], this.waitToPlay_);\n\n        // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n        // in that case, we need to prime the video element by calling load so it'll be ready in time\n        if (!isSrcReady && isSafariOrIOS) {\n          this.load();\n        }\n        return;\n      }\n\n      // If the player/tech is ready and we have a source, we can attempt playback.\n      const val = this.techGet_('play');\n\n      // For native playback, reset the progress bar if we get a play call from a replay.\n      const isNativeReplay = isSafariOrIOS && this.hasClass('vjs-ended');\n      if (isNativeReplay) {\n        this.resetProgressBar_();\n      }\n      // play was terminated if the returned value is null\n      if (val === null) {\n        this.runPlayTerminatedQueue_();\n      } else {\n        this.runPlayCallbacks_(val);\n      }\n    }\n\n    /**\n     * These functions will be run when if play is terminated. If play\n     * runPlayCallbacks_ is run these function will not be run. This allows us\n     * to differentiate between a terminated play and an actual call to play.\n     */\n    runPlayTerminatedQueue_() {\n      const queue = this.playTerminatedQueue_.slice(0);\n      this.playTerminatedQueue_ = [];\n      queue.forEach(function (q) {\n        q();\n      });\n    }\n\n    /**\n     * When a callback to play is delayed we have to run these\n     * callbacks when play is actually called on the tech. This function\n     * runs the callbacks that were delayed and accepts the return value\n     * from the tech.\n     *\n     * @param {undefined|Promise} val\n     *        The return value from the tech.\n     */\n    runPlayCallbacks_(val) {\n      const callbacks = this.playCallbacks_.slice(0);\n      this.playCallbacks_ = [];\n      // clear play terminatedQueue since we finished a real play\n      this.playTerminatedQueue_ = [];\n      callbacks.forEach(function (cb) {\n        cb(val);\n      });\n    }\n\n    /**\n     * Pause the video playback\n     */\n    pause() {\n      this.techCall_('pause');\n    }\n\n    /**\n     * Check if the player is paused or has yet to play\n     *\n     * @return {boolean}\n     *         - false: if the media is currently playing\n     *         - true: if media is not currently playing\n     */\n    paused() {\n      // The initial state of paused should be true (in Safari it's actually false)\n      return this.techGet_('paused') === false ? false : true;\n    }\n\n    /**\n     * Get a TimeRange object representing the current ranges of time that the user\n     * has played.\n     *\n     * @return {TimeRange}\n     *         A time range object that represents all the increments of time that have\n     *         been played.\n     */\n    played() {\n      return this.techGet_('played') || createTimeRanges$1(0, 0);\n    }\n\n    /**\n     * Sets or returns whether or not the user is \"scrubbing\". Scrubbing is\n     * when the user has clicked the progress bar handle and is\n     * dragging it along the progress bar.\n     *\n     * @param {boolean} [isScrubbing]\n     *        whether the user is or is not scrubbing\n     *\n     * @return {boolean|undefined}\n     *         - The value of scrubbing when getting\n     *         - Nothing when setting\n     */\n    scrubbing(isScrubbing) {\n      if (typeof isScrubbing === 'undefined') {\n        return this.scrubbing_;\n      }\n      this.scrubbing_ = !!isScrubbing;\n      this.techCall_('setScrubbing', this.scrubbing_);\n      if (isScrubbing) {\n        this.addClass('vjs-scrubbing');\n      } else {\n        this.removeClass('vjs-scrubbing');\n      }\n    }\n\n    /**\n     * Get or set the current time (in seconds)\n     *\n     * @param {number|string} [seconds]\n     *        The time to seek to in seconds\n     *\n     * @return {number|undefined}\n     *         - the current time in seconds when getting\n     *         - Nothing when setting\n     */\n    currentTime(seconds) {\n      if (seconds === undefined) {\n        // cache last currentTime and return. default to 0 seconds\n        //\n        // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n        // currentTime when scrubbing, but may not provide much performance benefit after all.\n        // Should be tested. Also something has to read the actual current time or the cache will\n        // never get updated.\n        this.cache_.currentTime = this.techGet_('currentTime') || 0;\n        return this.cache_.currentTime;\n      }\n      if (seconds < 0) {\n        seconds = 0;\n      }\n      if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n        this.cache_.initTime = seconds;\n        this.off('canplay', this.boundApplyInitTime_);\n        this.one('canplay', this.boundApplyInitTime_);\n        return;\n      }\n      this.techCall_('setCurrentTime', seconds);\n      this.cache_.initTime = 0;\n      if (isFinite(seconds)) {\n        this.cache_.currentTime = Number(seconds);\n      }\n    }\n\n    /**\n     * Apply the value of initTime stored in cache as currentTime.\n     *\n     * @private\n     */\n    applyInitTime_() {\n      this.currentTime(this.cache_.initTime);\n    }\n\n    /**\n     * Normally gets the length in time of the video in seconds;\n     * in all but the rarest use cases an argument will NOT be passed to the method\n     *\n     * > **NOTE**: The video must have started loading before the duration can be\n     * known, and depending on preload behaviour may not be known until the video starts\n     * playing.\n     *\n     * @fires Player#durationchange\n     *\n     * @param {number} [seconds]\n     *        The duration of the video to set in seconds\n     *\n     * @return {number|undefined}\n     *         - The duration of the video in seconds when getting\n     *         - Nothing when setting\n     */\n    duration(seconds) {\n      if (seconds === undefined) {\n        // return NaN if the duration is not known\n        return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n      }\n      seconds = parseFloat(seconds);\n\n      // Standardize on Infinity for signaling video is live\n      if (seconds < 0) {\n        seconds = Infinity;\n      }\n      if (seconds !== this.cache_.duration) {\n        // Cache the last set value for optimized scrubbing\n        this.cache_.duration = seconds;\n        if (seconds === Infinity) {\n          this.addClass('vjs-live');\n        } else {\n          this.removeClass('vjs-live');\n        }\n        if (!isNaN(seconds)) {\n          // Do not fire durationchange unless the duration value is known.\n          // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n          /**\n           * @event Player#durationchange\n           * @type {Event}\n           */\n          this.trigger('durationchange');\n        }\n      }\n    }\n\n    /**\n     * Calculates how much time is left in the video. Not part\n     * of the native video API.\n     *\n     * @return {number}\n     *         The time remaining in seconds\n     */\n    remainingTime() {\n      return this.duration() - this.currentTime();\n    }\n\n    /**\n     * A remaining time function that is intended to be used when\n     * the time is to be displayed directly to the user.\n     *\n     * @return {number}\n     *         The rounded time remaining in seconds\n     */\n    remainingTimeDisplay() {\n      return Math.floor(this.duration()) - Math.floor(this.currentTime());\n    }\n\n    //\n    // Kind of like an array of portions of the video that have been downloaded.\n\n    /**\n     * Get a TimeRange object with an array of the times of the video\n     * that have been downloaded. If you just want the percent of the\n     * video that's been downloaded, use bufferedPercent.\n     *\n     * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n     *\n     * @return {TimeRange}\n     *         A mock {@link TimeRanges} object (following HTML spec)\n     */\n    buffered() {\n      let buffered = this.techGet_('buffered');\n      if (!buffered || !buffered.length) {\n        buffered = createTimeRanges$1(0, 0);\n      }\n      return buffered;\n    }\n\n    /**\n     * Get the TimeRanges of the media that are currently available\n     * for seeking to.\n     *\n     * @see [Seekable Spec]{@link https://html.spec.whatwg.org/multipage/media.html#dom-media-seekable}\n     *\n     * @return {TimeRange}\n     *         A mock {@link TimeRanges} object (following HTML spec)\n     */\n    seekable() {\n      let seekable = this.techGet_('seekable');\n      if (!seekable || !seekable.length) {\n        seekable = createTimeRanges$1(0, 0);\n      }\n      return seekable;\n    }\n\n    /**\n     * Returns whether the player is in the \"seeking\" state.\n     *\n     * @return {boolean} True if the player is in the seeking state, false if not.\n     */\n    seeking() {\n      return this.techGet_('seeking');\n    }\n\n    /**\n     * Returns whether the player is in the \"ended\" state.\n     *\n     * @return {boolean} True if the player is in the ended state, false if not.\n     */\n    ended() {\n      return this.techGet_('ended');\n    }\n\n    /**\n     * Returns the current state of network activity for the element, from\n     * the codes in the list below.\n     * - NETWORK_EMPTY (numeric value 0)\n     *   The element has not yet been initialised. All attributes are in\n     *   their initial states.\n     * - NETWORK_IDLE (numeric value 1)\n     *   The element's resource selection algorithm is active and has\n     *   selected a resource, but it is not actually using the network at\n     *   this time.\n     * - NETWORK_LOADING (numeric value 2)\n     *   The user agent is actively trying to download data.\n     * - NETWORK_NO_SOURCE (numeric value 3)\n     *   The element's resource selection algorithm is active, but it has\n     *   not yet found a resource to use.\n     *\n     * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n     * @return {number} the current network activity state\n     */\n    networkState() {\n      return this.techGet_('networkState');\n    }\n\n    /**\n     * Returns a value that expresses the current state of the element\n     * with respect to rendering the current playback position, from the\n     * codes in the list below.\n     * - HAVE_NOTHING (numeric value 0)\n     *   No information regarding the media resource is available.\n     * - HAVE_METADATA (numeric value 1)\n     *   Enough of the resource has been obtained that the duration of the\n     *   resource is available.\n     * - HAVE_CURRENT_DATA (numeric value 2)\n     *   Data for the immediate current playback position is available.\n     * - HAVE_FUTURE_DATA (numeric value 3)\n     *   Data for the immediate current playback position is available, as\n     *   well as enough data for the user agent to advance the current\n     *   playback position in the direction of playback.\n     * - HAVE_ENOUGH_DATA (numeric value 4)\n     *   The user agent estimates that enough data is available for\n     *   playback to proceed uninterrupted.\n     *\n     * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n     * @return {number} the current playback rendering state\n     */\n    readyState() {\n      return this.techGet_('readyState');\n    }\n\n    /**\n     * Get the percent (as a decimal) of the video that's been downloaded.\n     * This method is not a part of the native HTML video API.\n     *\n     * @return {number}\n     *         A decimal between 0 and 1 representing the percent\n     *         that is buffered 0 being 0% and 1 being 100%\n     */\n    bufferedPercent() {\n      return bufferedPercent(this.buffered(), this.duration());\n    }\n\n    /**\n     * Get the ending time of the last buffered time range\n     * This is used in the progress bar to encapsulate all time ranges.\n     *\n     * @return {number}\n     *         The end of the last buffered time range\n     */\n    bufferedEnd() {\n      const buffered = this.buffered();\n      const duration = this.duration();\n      let end = buffered.end(buffered.length - 1);\n      if (end > duration) {\n        end = duration;\n      }\n      return end;\n    }\n\n    /**\n     * Get or set the current volume of the media\n     *\n     * @param  {number} [percentAsDecimal]\n     *         The new volume as a decimal percent:\n     *         - 0 is muted/0%/off\n     *         - 1.0 is 100%/full\n     *         - 0.5 is half volume or 50%\n     *\n     * @return {number|undefined}\n     *         The current volume as a percent when getting\n     */\n    volume(percentAsDecimal) {\n      let vol;\n      if (percentAsDecimal !== undefined) {\n        // Force value to between 0 and 1\n        vol = Math.max(0, Math.min(1, percentAsDecimal));\n        this.cache_.volume = vol;\n        this.techCall_('setVolume', vol);\n        if (vol > 0) {\n          this.lastVolume_(vol);\n        }\n        return;\n      }\n\n      // Default to 1 when returning current volume.\n      vol = parseFloat(this.techGet_('volume'));\n      return isNaN(vol) ? 1 : vol;\n    }\n\n    /**\n     * Get the current muted state, or turn mute on or off\n     *\n     * @param {boolean} [muted]\n     *        - true to mute\n     *        - false to unmute\n     *\n     * @return {boolean|undefined}\n     *         - true if mute is on and getting\n     *         - false if mute is off and getting\n     *         - nothing if setting\n     */\n    muted(muted) {\n      if (muted !== undefined) {\n        this.techCall_('setMuted', muted);\n        return;\n      }\n      return this.techGet_('muted') || false;\n    }\n\n    /**\n     * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n     * indicates the state of muted on initial playback.\n     *\n     * ```js\n     *   var myPlayer = videojs('some-player-id');\n     *\n     *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n     *\n     *   // get, should be false\n     *   console.log(myPlayer.defaultMuted());\n     *   // set to true\n     *   myPlayer.defaultMuted(true);\n     *   // get should be true\n     *   console.log(myPlayer.defaultMuted());\n     * ```\n     *\n     * @param {boolean} [defaultMuted]\n     *        - true to mute\n     *        - false to unmute\n     *\n     * @return {boolean|undefined}\n     *         - true if defaultMuted is on and getting\n     *         - false if defaultMuted is off and getting\n     *         - Nothing when setting\n     */\n    defaultMuted(defaultMuted) {\n      if (defaultMuted !== undefined) {\n        this.techCall_('setDefaultMuted', defaultMuted);\n      }\n      return this.techGet_('defaultMuted') || false;\n    }\n\n    /**\n     * Get the last volume, or set it\n     *\n     * @param  {number} [percentAsDecimal]\n     *         The new last volume as a decimal percent:\n     *         - 0 is muted/0%/off\n     *         - 1.0 is 100%/full\n     *         - 0.5 is half volume or 50%\n     *\n     * @return {number|undefined}\n     *         - The current value of lastVolume as a percent when getting\n     *         - Nothing when setting\n     *\n     * @private\n     */\n    lastVolume_(percentAsDecimal) {\n      if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n        this.cache_.lastVolume = percentAsDecimal;\n        return;\n      }\n      return this.cache_.lastVolume;\n    }\n\n    /**\n     * Check if current tech can support native fullscreen\n     * (e.g. with built in controls like iOS)\n     *\n     * @return {boolean}\n     *         if native fullscreen is supported\n     */\n    supportsFullScreen() {\n      return this.techGet_('supportsFullScreen') || false;\n    }\n\n    /**\n     * Check if the player is in fullscreen mode or tell the player that it\n     * is or is not in fullscreen mode.\n     *\n     * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n     * property and instead document.fullscreenElement is used. But isFullscreen is\n     * still a valuable property for internal player workings.\n     *\n     * @param  {boolean} [isFS]\n     *         Set the players current fullscreen state\n     *\n     * @return {boolean|undefined}\n     *         - true if fullscreen is on and getting\n     *         - false if fullscreen is off and getting\n     *         - Nothing when setting\n     */\n    isFullscreen(isFS) {\n      if (isFS !== undefined) {\n        const oldValue = this.isFullscreen_;\n        this.isFullscreen_ = Boolean(isFS);\n\n        // if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\n        // this is the only place where we trigger fullscreenchange events for older browsers\n        // fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\n        if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n          /**\n             * @event Player#fullscreenchange\n             * @type {Event}\n             */\n          this.trigger('fullscreenchange');\n        }\n        this.toggleFullscreenClass_();\n        return;\n      }\n      return this.isFullscreen_;\n    }\n\n    /**\n     * Increase the size of the video to full screen\n     * In some browsers, full screen is not supported natively, so it enters\n     * \"full window mode\", where the video fills the browser window.\n     * In browsers and devices that support native full screen, sometimes the\n     * browser's default controls will be shown, and not the Video.js custom skin.\n     * This includes most mobile devices (iOS, Android) and older versions of\n     * Safari.\n     *\n     * @param  {Object} [fullscreenOptions]\n     *         Override the player fullscreen options\n     *\n     * @fires Player#fullscreenchange\n     */\n    requestFullscreen(fullscreenOptions) {\n      if (this.isInPictureInPicture()) {\n        this.exitPictureInPicture();\n      }\n      const self = this;\n      return new Promise((resolve, reject) => {\n        function offHandler() {\n          self.off('fullscreenerror', errorHandler);\n          self.off('fullscreenchange', changeHandler);\n        }\n        function changeHandler() {\n          offHandler();\n          resolve();\n        }\n        function errorHandler(e, err) {\n          offHandler();\n          reject(err);\n        }\n        self.one('fullscreenchange', changeHandler);\n        self.one('fullscreenerror', errorHandler);\n        const promise = self.requestFullscreenHelper_(fullscreenOptions);\n        if (promise) {\n          promise.then(offHandler, offHandler);\n          promise.then(resolve, reject);\n        }\n      });\n    }\n    requestFullscreenHelper_(fullscreenOptions) {\n      let fsOptions;\n\n      // Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\n      // Use defaults or player configured option unless passed directly to this method.\n      if (!this.fsApi_.prefixed) {\n        fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n        if (fullscreenOptions !== undefined) {\n          fsOptions = fullscreenOptions;\n        }\n      }\n\n      // This method works as follows:\n      // 1. if a fullscreen api is available, use it\n      //   1. call requestFullscreen with potential options\n      //   2. if we got a promise from above, use it to update isFullscreen()\n      // 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\n      //   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\n      // 3. otherwise, use \"fullWindow\" mode\n      if (this.fsApi_.requestFullscreen) {\n        const promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n\n        // Even on browsers with promise support this may not return a promise\n        if (promise) {\n          promise.then(() => this.isFullscreen(true), () => this.isFullscreen(false));\n        }\n        return promise;\n      } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n        // we can't take the video.js controls fullscreen but we can go fullscreen\n        // with native controls\n        this.techCall_('enterFullScreen');\n      } else {\n        // fullscreen isn't supported so we'll just stretch the video element to\n        // fill the viewport\n        this.enterFullWindow();\n      }\n    }\n\n    /**\n     * Return the video to its normal size after having been in full screen mode\n     *\n     * @fires Player#fullscreenchange\n     */\n    exitFullscreen() {\n      const self = this;\n      return new Promise((resolve, reject) => {\n        function offHandler() {\n          self.off('fullscreenerror', errorHandler);\n          self.off('fullscreenchange', changeHandler);\n        }\n        function changeHandler() {\n          offHandler();\n          resolve();\n        }\n        function errorHandler(e, err) {\n          offHandler();\n          reject(err);\n        }\n        self.one('fullscreenchange', changeHandler);\n        self.one('fullscreenerror', errorHandler);\n        const promise = self.exitFullscreenHelper_();\n        if (promise) {\n          promise.then(offHandler, offHandler);\n          // map the promise to our resolve/reject methods\n          promise.then(resolve, reject);\n        }\n      });\n    }\n    exitFullscreenHelper_() {\n      if (this.fsApi_.requestFullscreen) {\n        const promise = document[this.fsApi_.exitFullscreen]();\n\n        // Even on browsers with promise support this may not return a promise\n        if (promise) {\n          // we're splitting the promise here, so, we want to catch the\n          // potential error so that this chain doesn't have unhandled errors\n          silencePromise(promise.then(() => this.isFullscreen(false)));\n        }\n        return promise;\n      } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n        this.techCall_('exitFullScreen');\n      } else {\n        this.exitFullWindow();\n      }\n    }\n\n    /**\n     * When fullscreen isn't supported we can stretch the\n     * video container to as wide as the browser will let us.\n     *\n     * @fires Player#enterFullWindow\n     */\n    enterFullWindow() {\n      this.isFullscreen(true);\n      this.isFullWindow = true;\n\n      // Storing original doc overflow value to return to when fullscreen is off\n      this.docOrigOverflow = document.documentElement.style.overflow;\n\n      // Add listener for esc key to exit fullscreen\n      on(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n      // Hide any scroll bars\n      document.documentElement.style.overflow = 'hidden';\n\n      // Apply fullscreen styles\n      addClass(document.body, 'vjs-full-window');\n\n      /**\n       * @event Player#enterFullWindow\n       * @type {Event}\n       */\n      this.trigger('enterFullWindow');\n    }\n\n    /**\n     * Check for call to either exit full window or\n     * full screen on ESC key\n     *\n     * @param {string} event\n     *        Event to check for key press\n     */\n    fullWindowOnEscKey(event) {\n      if (event.key === 'Escape') {\n        if (this.isFullscreen() === true) {\n          if (!this.isFullWindow) {\n            this.exitFullscreen();\n          } else {\n            this.exitFullWindow();\n          }\n        }\n      }\n    }\n\n    /**\n     * Exit full window\n     *\n     * @fires Player#exitFullWindow\n     */\n    exitFullWindow() {\n      this.isFullscreen(false);\n      this.isFullWindow = false;\n      off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n      // Unhide scroll bars.\n      document.documentElement.style.overflow = this.docOrigOverflow;\n\n      // Remove fullscreen styles\n      removeClass(document.body, 'vjs-full-window');\n\n      // Resize the box, controller, and poster to original sizes\n      // this.positionAll();\n      /**\n       * @event Player#exitFullWindow\n       * @type {Event}\n       */\n      this.trigger('exitFullWindow');\n    }\n\n    /**\n     * Get or set disable Picture-in-Picture mode.\n     *\n     * @param {boolean} [value]\n     *                  - true will disable Picture-in-Picture mode\n     *                  - false will enable Picture-in-Picture mode\n     */\n    disablePictureInPicture(value) {\n      if (value === undefined) {\n        return this.techGet_('disablePictureInPicture');\n      }\n      this.techCall_('setDisablePictureInPicture', value);\n      this.options_.disablePictureInPicture = value;\n      this.trigger('disablepictureinpicturechanged');\n    }\n\n    /**\n     * Check if the player is in Picture-in-Picture mode or tell the player that it\n     * is or is not in Picture-in-Picture mode.\n     *\n     * @param  {boolean} [isPiP]\n     *         Set the players current Picture-in-Picture state\n     *\n     * @return {boolean|undefined}\n     *         - true if Picture-in-Picture is on and getting\n     *         - false if Picture-in-Picture is off and getting\n     *         - nothing if setting\n     */\n    isInPictureInPicture(isPiP) {\n      if (isPiP !== undefined) {\n        this.isInPictureInPicture_ = !!isPiP;\n        this.togglePictureInPictureClass_();\n        return;\n      }\n      return !!this.isInPictureInPicture_;\n    }\n\n    /**\n     * Create a floating video window always on top of other windows so that users may\n     * continue consuming media while they interact with other content sites, or\n     * applications on their device.\n     *\n     * This can use document picture-in-picture or element picture in picture\n     *\n     * Set `enableDocumentPictureInPicture` to `true` to use docPiP on a supported browser\n     * Else set `disablePictureInPicture` to `false` to disable elPiP on a supported browser\n     *\n     *\n     * @see [Spec]{@link https://w3c.github.io/picture-in-picture/}\n     * @see [Spec]{@link https://wicg.github.io/document-picture-in-picture/}\n     *\n     * @fires Player#enterpictureinpicture\n     *\n     * @return {Promise}\n     *         A promise with a Picture-in-Picture window.\n     */\n    requestPictureInPicture() {\n      if (this.options_.enableDocumentPictureInPicture && window.documentPictureInPicture) {\n        const pipContainer = document.createElement(this.el().tagName);\n        pipContainer.classList = this.el().classList;\n        pipContainer.classList.add('vjs-pip-container');\n        if (this.posterImage) {\n          pipContainer.appendChild(this.posterImage.el().cloneNode(true));\n        }\n        if (this.titleBar) {\n          pipContainer.appendChild(this.titleBar.el().cloneNode(true));\n        }\n        pipContainer.appendChild(createEl('p', {\n          className: 'vjs-pip-text'\n        }, {}, this.localize('Playing in picture-in-picture')));\n        return window.documentPictureInPicture.requestWindow({\n          // The aspect ratio won't be correct, Chrome bug https://crbug.com/1407629\n          width: this.videoWidth(),\n          height: this.videoHeight()\n        }).then(pipWindow => {\n          copyStyleSheetsToWindow(pipWindow);\n          this.el_.parentNode.insertBefore(pipContainer, this.el_);\n          pipWindow.document.body.appendChild(this.el_);\n          pipWindow.document.body.classList.add('vjs-pip-window');\n          this.player_.isInPictureInPicture(true);\n          this.player_.trigger({\n            type: 'enterpictureinpicture',\n            pipWindow\n          });\n\n          // Listen for the PiP closing event to move the video back.\n          pipWindow.addEventListener('pagehide', event => {\n            const pipVideo = event.target.querySelector('.video-js');\n            pipContainer.parentNode.replaceChild(pipVideo, pipContainer);\n            this.player_.isInPictureInPicture(false);\n            this.player_.trigger('leavepictureinpicture');\n          });\n          return pipWindow;\n        });\n      }\n      if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\n        /**\n         * This event fires when the player enters picture in picture mode\n         *\n         * @event Player#enterpictureinpicture\n         * @type {Event}\n         */\n        return this.techGet_('requestPictureInPicture');\n      }\n      return Promise.reject('No PiP mode is available');\n    }\n\n    /**\n     * Exit Picture-in-Picture mode.\n     *\n     * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n     *\n     * @fires Player#leavepictureinpicture\n     *\n     * @return {Promise}\n     *         A promise.\n     */\n    exitPictureInPicture() {\n      if (window.documentPictureInPicture && window.documentPictureInPicture.window) {\n        // With documentPictureInPicture, Player#leavepictureinpicture is fired in the pagehide handler\n        window.documentPictureInPicture.window.close();\n        return Promise.resolve();\n      }\n      if ('pictureInPictureEnabled' in document) {\n        /**\n         * This event fires when the player leaves picture in picture mode\n         *\n         * @event Player#leavepictureinpicture\n         * @type {Event}\n         */\n        return document.exitPictureInPicture();\n      }\n    }\n\n    /**\n     * Called when this Player has focus and a key gets pressed down, or when\n     * any Component of this player receives a key press that it doesn't handle.\n     * This allows player-wide hotkeys (either as defined below, or optionally\n     * by an external function).\n     *\n     * @param {KeyboardEvent} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    handleKeyDown(event) {\n      const {\n        userActions\n      } = this.options_;\n\n      // Bail out if hotkeys are not configured.\n      if (!userActions || !userActions.hotkeys) {\n        return;\n      }\n\n      // Function that determines whether or not to exclude an element from\n      // hotkeys handling.\n      const excludeElement = el => {\n        const tagName = el.tagName.toLowerCase();\n\n        // The first and easiest test is for `contenteditable` elements.\n        if (el.isContentEditable) {\n          return true;\n        }\n\n        // Inputs matching these types will still trigger hotkey handling as\n        // they are not text inputs.\n        const allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n        if (tagName === 'input') {\n          return allowedInputTypes.indexOf(el.type) === -1;\n        }\n\n        // The final test is by tag name. These tags will be excluded entirely.\n        const excludedTags = ['textarea'];\n        return excludedTags.indexOf(tagName) !== -1;\n      };\n\n      // Bail out if the user is focused on an interactive form element.\n      if (excludeElement(this.el_.ownerDocument.activeElement)) {\n        return;\n      }\n      if (typeof userActions.hotkeys === 'function') {\n        userActions.hotkeys.call(this, event);\n      } else {\n        this.handleHotkeys(event);\n      }\n    }\n\n    /**\n     * Called when this Player receives a hotkey keydown event.\n     * Supported player-wide hotkeys are:\n     *\n     *   f          - toggle fullscreen\n     *   m          - toggle mute\n     *   k or Space - toggle play/pause\n     *\n     * @param {Event} event\n     *        The `keydown` event that caused this function to be called.\n     */\n    handleHotkeys(event) {\n      const hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {};\n\n      // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n      const {\n        fullscreenKey = keydownEvent => event.key.toLowerCase() === 'f',\n        muteKey = keydownEvent => event.key.toLowerCase() === 'm',\n        playPauseKey = keydownEvent => event.key.toLowerCase() === 'k' || event.key.toLowerCase() === ' '\n      } = hotkeys;\n      if (fullscreenKey.call(this, event)) {\n        event.preventDefault();\n        event.stopPropagation();\n        const FSToggle = Component$1.getComponent('FullscreenToggle');\n        if (document[this.fsApi_.fullscreenEnabled] !== false) {\n          FSToggle.prototype.handleClick.call(this, event);\n        }\n      } else if (muteKey.call(this, event)) {\n        event.preventDefault();\n        event.stopPropagation();\n        const MuteToggle = Component$1.getComponent('MuteToggle');\n        MuteToggle.prototype.handleClick.call(this, event);\n      } else if (playPauseKey.call(this, event)) {\n        event.preventDefault();\n        event.stopPropagation();\n        const PlayToggle = Component$1.getComponent('PlayToggle');\n        PlayToggle.prototype.handleClick.call(this, event);\n      }\n    }\n\n    /**\n     * Check whether the player can play a given mimetype\n     *\n     * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n     *\n     * @param {string} type\n     *        The mimetype to check\n     *\n     * @return {string}\n     *         'probably', 'maybe', or '' (empty string)\n     */\n    canPlayType(type) {\n      let can;\n\n      // Loop through each playback technology in the options order\n      for (let i = 0, j = this.options_.techOrder; i < j.length; i++) {\n        const techName = j[i];\n        let tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!tech) {\n          tech = Component$1.getComponent(techName);\n        }\n\n        // Check if the current tech is defined before continuing\n        if (!tech) {\n          log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);\n          continue;\n        }\n\n        // Check if the browser supports this technology\n        if (tech.isSupported()) {\n          can = tech.canPlayType(type);\n          if (can) {\n            return can;\n          }\n        }\n      }\n      return '';\n    }\n\n    /**\n     * Select source based on tech-order or source-order\n     * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n     * defaults to tech-order selection\n     *\n     * @param {Array} sources\n     *        The sources for a media asset\n     *\n     * @return {Object|boolean}\n     *         Object of source and tech order or false\n     */\n    selectSource(sources) {\n      // Get only the techs specified in `techOrder` that exist and are supported by the\n      // current platform\n      const techs = this.options_.techOrder.map(techName => {\n        return [techName, Tech.getTech(techName)];\n      }).filter(([techName, tech]) => {\n        // Check if the current tech is defined before continuing\n        if (tech) {\n          // Check if the browser supports this technology\n          return tech.isSupported();\n        }\n        log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);\n        return false;\n      });\n\n      // Iterate over each `innerArray` element once per `outerArray` element and execute\n      // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n      // that value.\n      const findFirstPassingTechSourcePair = function (outerArray, innerArray, tester) {\n        let found;\n        outerArray.some(outerChoice => {\n          return innerArray.some(innerChoice => {\n            found = tester(outerChoice, innerChoice);\n            if (found) {\n              return true;\n            }\n          });\n        });\n        return found;\n      };\n      let foundSourceAndTech;\n      const flip = fn => (a, b) => fn(b, a);\n      const finder = ([techName, tech], source) => {\n        if (tech.canPlaySource(source, this.options_[techName.toLowerCase()])) {\n          return {\n            source,\n            tech: techName\n          };\n        }\n      };\n\n      // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n      // to select from them based on their priority.\n      if (this.options_.sourceOrder) {\n        // Source-first ordering\n        foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n      } else {\n        // Tech-first ordering\n        foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n      }\n      return foundSourceAndTech || false;\n    }\n\n    /**\n     * Executes source setting and getting logic\n     *\n     * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n     *        A SourceObject, an array of SourceObjects, or a string referencing\n     *        a URL to a media source. It is _highly recommended_ that an object\n     *        or array of objects is used here, so that source selection\n     *        algorithms can take the `type` into account.\n     *\n     *        If not provided, this method acts as a getter.\n     * @param {boolean} [isRetry]\n     *        Indicates whether this is being called internally as a result of a retry\n     *\n     * @return {string|undefined}\n     *         If the `source` argument is missing, returns the current source\n     *         URL. Otherwise, returns nothing/undefined.\n     */\n    handleSrc_(source, isRetry) {\n      // getter usage\n      if (typeof source === 'undefined') {\n        return this.cache_.src || '';\n      }\n\n      // Reset retry behavior for new source\n      if (this.resetRetryOnError_) {\n        this.resetRetryOnError_();\n      }\n\n      // filter out invalid sources and turn our source into\n      // an array of source objects\n      const sources = filterSource(source);\n\n      // if a source was passed in then it is invalid because\n      // it was filtered to a zero length Array. So we have to\n      // show an error\n      if (!sources.length) {\n        this.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.options_.notSupportedMessage\n          });\n        }, 0);\n        return;\n      }\n\n      // initial sources\n      this.changingSrc_ = true;\n\n      // Only update the cached source list if we are not retrying a new source after error,\n      // since in that case we want to include the failed source(s) in the cache\n      if (!isRetry) {\n        this.cache_.sources = sources;\n      }\n      this.updateSourceCaches_(sources[0]);\n\n      // middlewareSource is the source after it has been changed by middleware\n      setSource(this, sources[0], (middlewareSource, mws) => {\n        this.middleware_ = mws;\n\n        // since sourceSet is async we have to update the cache again after we select a source since\n        // the source that is selected could be out of order from the cache update above this callback.\n        if (!isRetry) {\n          this.cache_.sources = sources;\n        }\n        this.updateSourceCaches_(middlewareSource);\n        const err = this.src_(middlewareSource);\n        if (err) {\n          if (sources.length > 1) {\n            return this.handleSrc_(sources.slice(1));\n          }\n          this.changingSrc_ = false;\n\n          // We need to wrap this in a timeout to give folks a chance to add error event handlers\n          this.setTimeout(function () {\n            this.error({\n              code: 4,\n              message: this.options_.notSupportedMessage\n            });\n          }, 0);\n\n          // we could not find an appropriate tech, but let's still notify the delegate that this is it\n          // this needs a better comment about why this is needed\n          this.triggerReady();\n          return;\n        }\n        setTech(mws, this.tech_);\n      });\n\n      // Try another available source if this one fails before playback.\n      if (sources.length > 1) {\n        const retry = () => {\n          // Remove the error modal\n          this.error(null);\n          this.handleSrc_(sources.slice(1), true);\n        };\n        const stopListeningForErrors = () => {\n          this.off('error', retry);\n        };\n        this.one('error', retry);\n        this.one('playing', stopListeningForErrors);\n        this.resetRetryOnError_ = () => {\n          this.off('error', retry);\n          this.off('playing', stopListeningForErrors);\n        };\n      }\n    }\n\n    /**\n     * Get or set the video source.\n     *\n     * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n     *        A SourceObject, an array of SourceObjects, or a string referencing\n     *        a URL to a media source. It is _highly recommended_ that an object\n     *        or array of objects is used here, so that source selection\n     *        algorithms can take the `type` into account.\n     *\n     *        If not provided, this method acts as a getter.\n     *\n     * @return {string|undefined}\n     *         If the `source` argument is missing, returns the current source\n     *         URL. Otherwise, returns nothing/undefined.\n     */\n    src(source) {\n      return this.handleSrc_(source, false);\n    }\n\n    /**\n     * Set the source object on the tech, returns a boolean that indicates whether\n     * there is a tech that can play the source or not\n     *\n     * @param {Tech~SourceObject} source\n     *        The source object to set on the Tech\n     *\n     * @return {boolean}\n     *         - True if there is no Tech to playback this source\n     *         - False otherwise\n     *\n     * @private\n     */\n    src_(source) {\n      const sourceTech = this.selectSource([source]);\n      if (!sourceTech) {\n        return true;\n      }\n      if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n        this.changingSrc_ = true;\n        // load this technology with the chosen source\n        this.loadTech_(sourceTech.tech, sourceTech.source);\n        this.tech_.ready(() => {\n          this.changingSrc_ = false;\n        });\n        return false;\n      }\n\n      // wait until the tech is ready to set the source\n      // and set it synchronously if possible (#2326)\n      this.ready(function () {\n        // The setSource tech method was added with source handlers\n        // so older techs won't support it\n        // We need to check the direct prototype for the case where subclasses\n        // of the tech do not support source handlers\n        if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n          this.techCall_('setSource', source);\n        } else {\n          this.techCall_('src', source.src);\n        }\n        this.changingSrc_ = false;\n      }, true);\n      return false;\n    }\n\n    /**\n     * Begin loading the src data.\n     */\n    load() {\n      // Workaround to use the load method with the VHS.\n      // Does not cover the case when the load method is called directly from the mediaElement.\n      if (this.tech_ && this.tech_.vhs) {\n        this.src(this.currentSource());\n        return;\n      }\n      this.techCall_('load');\n    }\n\n    /**\n     * Reset the player. Loads the first tech in the techOrder,\n     * removes all the text tracks in the existing `tech`,\n     * and calls `reset` on the `tech`.\n     */\n    reset() {\n      if (this.paused()) {\n        this.doReset_();\n      } else {\n        const playPromise = this.play();\n        silencePromise(playPromise.then(() => this.doReset_()));\n      }\n    }\n    doReset_() {\n      if (this.tech_) {\n        this.tech_.clearTracks('text');\n      }\n      this.removeClass('vjs-playing');\n      this.addClass('vjs-paused');\n      this.resetCache_();\n      this.poster('');\n      this.loadTech_(this.options_.techOrder[0], null);\n      this.techCall_('reset');\n      this.resetControlBarUI_();\n      this.error(null);\n      if (this.titleBar) {\n        this.titleBar.update({\n          title: undefined,\n          description: undefined\n        });\n      }\n      if (isEvented(this)) {\n        this.trigger('playerreset');\n      }\n    }\n\n    /**\n     * Reset Control Bar's UI by calling sub-methods that reset\n     * all of Control Bar's components\n     */\n    resetControlBarUI_() {\n      this.resetProgressBar_();\n      this.resetPlaybackRate_();\n      this.resetVolumeBar_();\n    }\n\n    /**\n     * Reset tech's progress so progress bar is reset in the UI\n     */\n    resetProgressBar_() {\n      this.currentTime(0);\n      const {\n        currentTimeDisplay,\n        durationDisplay,\n        progressControl,\n        remainingTimeDisplay\n      } = this.controlBar || {};\n      const {\n        seekBar\n      } = progressControl || {};\n      if (currentTimeDisplay) {\n        currentTimeDisplay.updateContent();\n      }\n      if (durationDisplay) {\n        durationDisplay.updateContent();\n      }\n      if (remainingTimeDisplay) {\n        remainingTimeDisplay.updateContent();\n      }\n      if (seekBar) {\n        seekBar.update();\n        if (seekBar.loadProgressBar) {\n          seekBar.loadProgressBar.update();\n        }\n      }\n    }\n\n    /**\n     * Reset Playback ratio\n     */\n    resetPlaybackRate_() {\n      this.playbackRate(this.defaultPlaybackRate());\n      this.handleTechRateChange_();\n    }\n\n    /**\n     * Reset Volume bar\n     */\n    resetVolumeBar_() {\n      this.volume(1.0);\n      this.trigger('volumechange');\n    }\n\n    /**\n     * Returns all of the current source objects.\n     *\n     * @return {Tech~SourceObject[]}\n     *         The current source objects\n     */\n    currentSources() {\n      const source = this.currentSource();\n      const sources = [];\n\n      // assume `{}` or `{ src }`\n      if (Object.keys(source).length !== 0) {\n        sources.push(source);\n      }\n      return this.cache_.sources || sources;\n    }\n\n    /**\n     * Returns the current source object.\n     *\n     * @return {Tech~SourceObject}\n     *         The current source object\n     */\n    currentSource() {\n      return this.cache_.source || {};\n    }\n\n    /**\n     * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n     * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n     *\n     * @return {string}\n     *         The current source\n     */\n    currentSrc() {\n      return this.currentSource() && this.currentSource().src || '';\n    }\n\n    /**\n     * Get the current source type e.g. video/mp4\n     * This can allow you rebuild the current source object so that you could load the same\n     * source and tech later\n     *\n     * @return {string}\n     *         The source MIME type\n     */\n    currentType() {\n      return this.currentSource() && this.currentSource().type || '';\n    }\n\n    /**\n     * Get or set the preload attribute\n     *\n     * @param {'none'|'auto'|'metadata'} [value]\n     *        Preload mode to pass to tech\n     *\n     * @return {string|undefined}\n     *         - The preload attribute value when getting\n     *         - Nothing when setting\n     */\n    preload(value) {\n      if (value !== undefined) {\n        this.techCall_('setPreload', value);\n        this.options_.preload = value;\n        return;\n      }\n      return this.techGet_('preload');\n    }\n\n    /**\n     * Get or set the autoplay option. When this is a boolean it will\n     * modify the attribute on the tech. When this is a string the attribute on\n     * the tech will be removed and `Player` will handle autoplay on loadstarts.\n     *\n     * @param {boolean|'play'|'muted'|'any'} [value]\n     *        - true: autoplay using the browser behavior\n     *        - false: do not autoplay\n     *        - 'play': call play() on every loadstart\n     *        - 'muted': call muted() then play() on every loadstart\n     *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n     *        - *: values other than those listed here will be set `autoplay` to true\n     *\n     * @return {boolean|string|undefined}\n     *         - The current value of autoplay when getting\n     *         - Nothing when setting\n     */\n    autoplay(value) {\n      // getter usage\n      if (value === undefined) {\n        return this.options_.autoplay || false;\n      }\n      let techAutoplay;\n\n      // if the value is a valid string set it to that, or normalize `true` to 'play', if need be\n      if (typeof value === 'string' && /(any|play|muted)/.test(value) || value === true && this.options_.normalizeAutoplay) {\n        this.options_.autoplay = value;\n        this.manualAutoplay_(typeof value === 'string' ? value : 'play');\n        techAutoplay = false;\n\n        // any falsy value sets autoplay to false in the browser,\n        // lets do the same\n      } else if (!value) {\n        this.options_.autoplay = false;\n\n        // any other value (ie truthy) sets autoplay to true\n      } else {\n        this.options_.autoplay = true;\n      }\n      techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay;\n\n      // if we don't have a tech then we do not queue up\n      // a setAutoplay call on tech ready. We do this because the\n      // autoplay option will be passed in the constructor and we\n      // do not need to set it twice\n      if (this.tech_) {\n        this.techCall_('setAutoplay', techAutoplay);\n      }\n    }\n\n    /**\n     * Set or unset the playsinline attribute.\n     * Playsinline tells the browser that non-fullscreen playback is preferred.\n     *\n     * @param {boolean} [value]\n     *        - true means that we should try to play inline by default\n     *        - false means that we should use the browser's default playback mode,\n     *          which in most cases is inline. iOS Safari is a notable exception\n     *          and plays fullscreen by default.\n     *\n     * @return {string|undefined}\n     *         - the current value of playsinline\n     *         - Nothing when setting\n     *\n     * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n     */\n    playsinline(value) {\n      if (value !== undefined) {\n        this.techCall_('setPlaysinline', value);\n        this.options_.playsinline = value;\n      }\n      return this.techGet_('playsinline');\n    }\n\n    /**\n     * Get or set the loop attribute on the video element.\n     *\n     * @param {boolean} [value]\n     *        - true means that we should loop the video\n     *        - false means that we should not loop the video\n     *\n     * @return {boolean|undefined}\n     *         - The current value of loop when getting\n     *         - Nothing when setting\n     */\n    loop(value) {\n      if (value !== undefined) {\n        this.techCall_('setLoop', value);\n        this.options_.loop = value;\n        return;\n      }\n      return this.techGet_('loop');\n    }\n\n    /**\n     * Get or set the poster image source url\n     *\n     * @fires Player#posterchange\n     *\n     * @param {string} [src]\n     *        Poster image source URL\n     *\n     * @return {string|undefined}\n     *         - The current value of poster when getting\n     *         - Nothing when setting\n     */\n    poster(src) {\n      if (src === undefined) {\n        return this.poster_;\n      }\n\n      // The correct way to remove a poster is to set as an empty string\n      // other falsey values will throw errors\n      if (!src) {\n        src = '';\n      }\n      if (src === this.poster_) {\n        return;\n      }\n\n      // update the internal poster variable\n      this.poster_ = src;\n\n      // update the tech's poster\n      this.techCall_('setPoster', src);\n      this.isPosterFromTech_ = false;\n\n      // alert components that the poster has been set\n      /**\n       * This event fires when the poster image is changed on the player.\n       *\n       * @event Player#posterchange\n       * @type {Event}\n       */\n      this.trigger('posterchange');\n    }\n\n    /**\n     * Some techs (e.g. YouTube) can provide a poster source in an\n     * asynchronous way. We want the poster component to use this\n     * poster source so that it covers up the tech's controls.\n     * (YouTube's play button). However we only want to use this\n     * source if the player user hasn't set a poster through\n     * the normal APIs.\n     *\n     * @fires Player#posterchange\n     * @listens Tech#posterchange\n     * @private\n     */\n    handleTechPosterChange_() {\n      if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n        const newPoster = this.tech_.poster() || '';\n        if (newPoster !== this.poster_) {\n          this.poster_ = newPoster;\n          this.isPosterFromTech_ = true;\n\n          // Let components know the poster has changed\n          this.trigger('posterchange');\n        }\n      }\n    }\n\n    /**\n     * Get or set whether or not the controls are showing.\n     *\n     * @fires Player#controlsenabled\n     *\n     * @param {boolean} [bool]\n     *        - true to turn controls on\n     *        - false to turn controls off\n     *\n     * @return {boolean|undefined}\n     *         - The current value of controls when getting\n     *         - Nothing when setting\n     */\n    controls(bool) {\n      if (bool === undefined) {\n        return !!this.controls_;\n      }\n      bool = !!bool;\n\n      // Don't trigger a change event unless it actually changed\n      if (this.controls_ === bool) {\n        return;\n      }\n      this.controls_ = bool;\n      if (this.usingNativeControls()) {\n        this.techCall_('setControls', bool);\n      }\n      if (this.controls_) {\n        this.removeClass('vjs-controls-disabled');\n        this.addClass('vjs-controls-enabled');\n        /**\n         * @event Player#controlsenabled\n         * @type {Event}\n         */\n        this.trigger('controlsenabled');\n        if (!this.usingNativeControls()) {\n          this.addTechControlsListeners_();\n        }\n      } else {\n        this.removeClass('vjs-controls-enabled');\n        this.addClass('vjs-controls-disabled');\n        /**\n         * @event Player#controlsdisabled\n         * @type {Event}\n         */\n        this.trigger('controlsdisabled');\n        if (!this.usingNativeControls()) {\n          this.removeTechControlsListeners_();\n        }\n      }\n    }\n\n    /**\n     * Toggle native controls on/off. Native controls are the controls built into\n     * devices (e.g. default iPhone controls) or other techs\n     * (e.g. Vimeo Controls)\n     * **This should only be set by the current tech, because only the tech knows\n     * if it can support native controls**\n     *\n     * @fires Player#usingnativecontrols\n     * @fires Player#usingcustomcontrols\n     *\n     * @param {boolean} [bool]\n     *        - true to turn native controls on\n     *        - false to turn native controls off\n     *\n     * @return {boolean|undefined}\n     *         - The current value of native controls when getting\n     *         - Nothing when setting\n     */\n    usingNativeControls(bool) {\n      if (bool === undefined) {\n        return !!this.usingNativeControls_;\n      }\n      bool = !!bool;\n\n      // Don't trigger a change event unless it actually changed\n      if (this.usingNativeControls_ === bool) {\n        return;\n      }\n      this.usingNativeControls_ = bool;\n      if (this.usingNativeControls_) {\n        this.addClass('vjs-using-native-controls');\n\n        /**\n         * player is using the native device controls\n         *\n         * @event Player#usingnativecontrols\n         * @type {Event}\n         */\n        this.trigger('usingnativecontrols');\n      } else {\n        this.removeClass('vjs-using-native-controls');\n\n        /**\n         * player is using the custom HTML controls\n         *\n         * @event Player#usingcustomcontrols\n         * @type {Event}\n         */\n        this.trigger('usingcustomcontrols');\n      }\n    }\n\n    /**\n     * Set or get the current MediaError\n     *\n     * @fires Player#error\n     *\n     * @param  {MediaError|string|number} [err]\n     *         A MediaError or a string/number to be turned\n     *         into a MediaError\n     *\n     * @return {MediaError|null|undefined}\n     *         - The current MediaError when getting (or null)\n     *         - Nothing when setting\n     */\n    error(err) {\n      if (err === undefined) {\n        return this.error_ || null;\n      }\n\n      // allow hooks to modify error object\n      hooks('beforeerror').forEach(hookFunction => {\n        const newErr = hookFunction(this, err);\n        if (!(isObject$1(newErr) && !Array.isArray(newErr) || typeof newErr === 'string' || typeof newErr === 'number' || newErr === null)) {\n          this.log.error('please return a value that MediaError expects in beforeerror hooks');\n          return;\n        }\n        err = newErr;\n      });\n\n      // Suppress the first error message for no compatible source until\n      // user interaction\n      if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n        const triggerSuppressedError = function () {\n          this.error(err);\n        };\n        this.options_.suppressNotSupportedError = false;\n        this.any(['click', 'touchstart'], triggerSuppressedError);\n        this.one('loadstart', function () {\n          this.off(['click', 'touchstart'], triggerSuppressedError);\n        });\n        return;\n      }\n\n      // restoring to default\n      if (err === null) {\n        this.error_ = null;\n        this.removeClass('vjs-error');\n        if (this.errorDisplay) {\n          this.errorDisplay.close();\n        }\n        return;\n      }\n      this.error_ = new MediaError(err);\n\n      // add the vjs-error classname to the player\n      this.addClass('vjs-error');\n\n      // log the name of the error type and any message\n      // IE11 logs \"[object object]\" and required you to expand message to see error object\n      log$1.error(`(CODE:${this.error_.code} ${MediaError.errorTypes[this.error_.code]})`, this.error_.message, this.error_);\n\n      /**\n       * @event Player#error\n       * @type {Event}\n       */\n      this.trigger('error');\n\n      // notify hooks of the per player error\n      hooks('error').forEach(hookFunction => hookFunction(this, this.error_));\n      return;\n    }\n\n    /**\n     * Report user activity\n     *\n     * @param {Object} event\n     *        Event object\n     */\n    reportUserActivity(event) {\n      this.userActivity_ = true;\n    }\n\n    /**\n     * Get/set if user is active\n     *\n     * @fires Player#useractive\n     * @fires Player#userinactive\n     *\n     * @param {boolean} [bool]\n     *        - true if the user is active\n     *        - false if the user is inactive\n     *\n     * @return {boolean|undefined}\n     *         - The current value of userActive when getting\n     *         - Nothing when setting\n     */\n    userActive(bool) {\n      if (bool === undefined) {\n        return this.userActive_;\n      }\n      bool = !!bool;\n      if (bool === this.userActive_) {\n        return;\n      }\n      this.userActive_ = bool;\n      if (this.userActive_) {\n        this.userActivity_ = true;\n        this.removeClass('vjs-user-inactive');\n        this.addClass('vjs-user-active');\n        /**\n         * @event Player#useractive\n         * @type {Event}\n         */\n        this.trigger('useractive');\n        return;\n      }\n\n      // Chrome/Safari/IE have bugs where when you change the cursor it can\n      // trigger a mousemove event. This causes an issue when you're hiding\n      // the cursor when the user is inactive, and a mousemove signals user\n      // activity. Making it impossible to go into inactive mode. Specifically\n      // this happens in fullscreen when we really need to hide the cursor.\n      //\n      // When this gets resolved in ALL browsers it can be removed\n      // https://code.google.com/p/chromium/issues/detail?id=103041\n      if (this.tech_) {\n        this.tech_.one('mousemove', function (e) {\n          e.stopPropagation();\n          e.preventDefault();\n        });\n      }\n      this.userActivity_ = false;\n      this.removeClass('vjs-user-active');\n      this.addClass('vjs-user-inactive');\n      /**\n       * @event Player#userinactive\n       * @type {Event}\n       */\n      this.trigger('userinactive');\n    }\n\n    /**\n     * Listen for user activity based on timeout value\n     *\n     * @private\n     */\n    listenForUserActivity_() {\n      let mouseInProgress;\n      let lastMoveX;\n      let lastMoveY;\n      const handleActivity = bind_(this, this.reportUserActivity);\n      const handleMouseMove = function (e) {\n        // #1068 - Prevent mousemove spamming\n        // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n        if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n          lastMoveX = e.screenX;\n          lastMoveY = e.screenY;\n          handleActivity();\n        }\n      };\n      const handleMouseDown = function () {\n        handleActivity();\n        // For as long as the they are touching the device or have their mouse down,\n        // we consider them active even if they're not moving their finger or mouse.\n        // So we want to continue to update that they are active\n        this.clearInterval(mouseInProgress);\n        // Setting userActivity=true now and setting the interval to the same time\n        // as the activityCheck interval (250) should ensure we never miss the\n        // next activityCheck\n        mouseInProgress = this.setInterval(handleActivity, 250);\n      };\n      const handleMouseUpAndMouseLeave = function (event) {\n        handleActivity();\n        // Stop the interval that maintains activity if the mouse/touch is down\n        this.clearInterval(mouseInProgress);\n      };\n\n      // Any mouse movement will be considered user activity\n      this.on('mousedown', handleMouseDown);\n      this.on('mousemove', handleMouseMove);\n      this.on('mouseup', handleMouseUpAndMouseLeave);\n      this.on('mouseleave', handleMouseUpAndMouseLeave);\n      const controlBar = this.getChild('controlBar');\n\n      // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n      // controlBar would no longer be hidden by default timeout.\n      if (controlBar && !IS_IOS && !IS_ANDROID) {\n        controlBar.on('mouseenter', function (event) {\n          if (this.player().options_.inactivityTimeout !== 0) {\n            this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n          }\n          this.player().options_.inactivityTimeout = 0;\n        });\n        controlBar.on('mouseleave', function (event) {\n          this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n        });\n      }\n\n      // Listen for keyboard navigation\n      // Shouldn't need to use inProgress interval because of key repeat\n      this.on('keydown', handleActivity);\n      this.on('keyup', handleActivity);\n\n      // Run an interval every 250 milliseconds instead of stuffing everything into\n      // the mousemove/touchmove function itself, to prevent performance degradation.\n      // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n      // then gets picked up by this loop\n      // http://ejohn.org/blog/learning-from-twitter/\n      let inactivityTimeout;\n\n      /** @this Player */\n      const activityCheck = function () {\n        // Check to see if mouse/touch activity has happened\n        if (!this.userActivity_) {\n          return;\n        }\n\n        // Reset the activity tracker\n        this.userActivity_ = false;\n\n        // If the user state was inactive, set the state to active\n        this.userActive(true);\n\n        // Clear any existing inactivity timeout to start the timer over\n        this.clearTimeout(inactivityTimeout);\n        const timeout = this.options_.inactivityTimeout;\n        if (timeout <= 0) {\n          return;\n        }\n\n        // In <timeout> milliseconds, if no more activity has occurred the\n        // user will be considered inactive\n        inactivityTimeout = this.setTimeout(function () {\n          // Protect against the case where the inactivityTimeout can trigger just\n          // before the next user activity is picked up by the activity check loop\n          // causing a flicker\n          if (!this.userActivity_) {\n            this.userActive(false);\n          }\n        }, timeout);\n      };\n      this.setInterval(activityCheck, 250);\n    }\n\n    /**\n     * Gets or sets the current playback rate. A playback rate of\n     * 1.0 represents normal speed and 0.5 would indicate half-speed\n     * playback, for instance.\n     *\n     * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n     *\n     * @param {number} [rate]\n     *       New playback rate to set.\n     *\n     * @return {number|undefined}\n     *         - The current playback rate when getting or 1.0\n     *         - Nothing when setting\n     */\n    playbackRate(rate) {\n      if (rate !== undefined) {\n        // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n        // that is registered above\n        this.techCall_('setPlaybackRate', rate);\n        return;\n      }\n      if (this.tech_ && this.tech_.featuresPlaybackRate) {\n        return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n      }\n      return 1.0;\n    }\n\n    /**\n     * Gets or sets the current default playback rate. A default playback rate of\n     * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n     * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n     * not the current playbackRate.\n     *\n     * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n     *\n     * @param {number} [rate]\n     *       New default playback rate to set.\n     *\n     * @return {number|undefined}\n     *         - The default playback rate when getting or 1.0\n     *         - Nothing when setting\n     */\n    defaultPlaybackRate(rate) {\n      if (rate !== undefined) {\n        return this.techCall_('setDefaultPlaybackRate', rate);\n      }\n      if (this.tech_ && this.tech_.featuresPlaybackRate) {\n        return this.techGet_('defaultPlaybackRate');\n      }\n      return 1.0;\n    }\n\n    /**\n     * Gets or sets the audio flag\n     *\n     * @param {boolean} [bool]\n     *        - true signals that this is an audio player\n     *        - false signals that this is not an audio player\n     *\n     * @return {boolean|undefined}\n     *         - The current value of isAudio when getting\n     *         - Nothing when setting\n     */\n    isAudio(bool) {\n      if (bool !== undefined) {\n        this.isAudio_ = !!bool;\n        return;\n      }\n      return !!this.isAudio_;\n    }\n    updatePlayerHeightOnAudioOnlyMode_() {\n      const controlBar = this.getChild('ControlBar');\n      if (!controlBar || this.audioOnlyCache_.controlBarHeight === controlBar.currentHeight()) {\n        return;\n      }\n      this.audioOnlyCache_.controlBarHeight = controlBar.currentHeight();\n      this.height(this.audioOnlyCache_.controlBarHeight);\n    }\n    enableAudioOnlyUI_() {\n      // Update styling immediately to show the control bar so we can get its height\n      this.addClass('vjs-audio-only-mode');\n      const playerChildren = this.children();\n      const controlBar = this.getChild('ControlBar');\n      const controlBarHeight = controlBar && controlBar.currentHeight();\n\n      // Hide all player components except the control bar. Control bar components\n      // needed only for video are hidden with CSS\n      playerChildren.forEach(child => {\n        if (child === controlBar) {\n          return;\n        }\n        if (child.el_ && !child.hasClass('vjs-hidden')) {\n          child.hide();\n          this.audioOnlyCache_.hiddenChildren.push(child);\n        }\n      });\n      this.audioOnlyCache_.playerHeight = this.currentHeight();\n      this.audioOnlyCache_.controlBarHeight = controlBarHeight;\n      this.on('playerresize', this.boundUpdatePlayerHeightOnAudioOnlyMode_);\n\n      // Set the player height the same as the control bar\n      this.height(controlBarHeight);\n      this.trigger('audioonlymodechange');\n    }\n    disableAudioOnlyUI_() {\n      this.removeClass('vjs-audio-only-mode');\n      this.off('playerresize', this.boundUpdatePlayerHeightOnAudioOnlyMode_);\n\n      // Show player components that were previously hidden\n      this.audioOnlyCache_.hiddenChildren.forEach(child => child.show());\n\n      // Reset player height\n      this.height(this.audioOnlyCache_.playerHeight);\n      this.trigger('audioonlymodechange');\n    }\n\n    /**\n     * Get the current audioOnlyMode state or set audioOnlyMode to true or false.\n     *\n     * Setting this to `true` will hide all player components except the control bar,\n     * as well as control bar components needed only for video.\n     *\n     * @param {boolean} [value]\n     *         The value to set audioOnlyMode to.\n     *\n     * @return {Promise|boolean}\n     *        A Promise is returned when setting the state, and a boolean when getting\n     *        the present state\n     */\n    audioOnlyMode(value) {\n      if (typeof value !== 'boolean' || value === this.audioOnlyMode_) {\n        return this.audioOnlyMode_;\n      }\n      this.audioOnlyMode_ = value;\n\n      // Enable Audio Only Mode\n      if (value) {\n        const exitPromises = [];\n\n        // Fullscreen and PiP are not supported in audioOnlyMode, so exit if we need to.\n        if (this.isInPictureInPicture()) {\n          exitPromises.push(this.exitPictureInPicture());\n        }\n        if (this.isFullscreen()) {\n          exitPromises.push(this.exitFullscreen());\n        }\n        if (this.audioPosterMode()) {\n          exitPromises.push(this.audioPosterMode(false));\n        }\n        return Promise.all(exitPromises).then(() => this.enableAudioOnlyUI_());\n      }\n\n      // Disable Audio Only Mode\n      return Promise.resolve().then(() => this.disableAudioOnlyUI_());\n    }\n    enablePosterModeUI_() {\n      // Hide the video element and show the poster image to enable posterModeUI\n      const tech = this.tech_ && this.tech_;\n      tech.hide();\n      this.addClass('vjs-audio-poster-mode');\n      this.trigger('audiopostermodechange');\n    }\n    disablePosterModeUI_() {\n      // Show the video element and hide the poster image to disable posterModeUI\n      const tech = this.tech_ && this.tech_;\n      tech.show();\n      this.removeClass('vjs-audio-poster-mode');\n      this.trigger('audiopostermodechange');\n    }\n\n    /**\n     * Get the current audioPosterMode state or set audioPosterMode to true or false\n     *\n     * @param {boolean} [value]\n     *         The value to set audioPosterMode to.\n     *\n     * @return {Promise|boolean}\n     *         A Promise is returned when setting the state, and a boolean when getting\n     *        the present state\n     */\n    audioPosterMode(value) {\n      if (typeof value !== 'boolean' || value === this.audioPosterMode_) {\n        return this.audioPosterMode_;\n      }\n      this.audioPosterMode_ = value;\n      if (value) {\n        if (this.audioOnlyMode()) {\n          const audioOnlyModePromise = this.audioOnlyMode(false);\n          return audioOnlyModePromise.then(() => {\n            // enable audio poster mode after audio only mode is disabled\n            this.enablePosterModeUI_();\n          });\n        }\n        return Promise.resolve().then(() => {\n          // enable audio poster mode\n          this.enablePosterModeUI_();\n        });\n      }\n      return Promise.resolve().then(() => {\n        // disable audio poster mode\n        this.disablePosterModeUI_();\n      });\n    }\n\n    /**\n     * A helper method for adding a {@link TextTrack} to our\n     * {@link TextTrackList}.\n     *\n     * In addition to the W3C settings we allow adding additional info through options.\n     *\n     * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n     *\n     * @param {string} [kind]\n     *        the kind of TextTrack you are adding\n     *\n     * @param {string} [label]\n     *        the label to give the TextTrack label\n     *\n     * @param {string} [language]\n     *        the language to set on the TextTrack\n     *\n     * @return {TextTrack|undefined}\n     *         the TextTrack that was added or undefined\n     *         if there is no tech\n     */\n    addTextTrack(kind, label, language) {\n      if (this.tech_) {\n        return this.tech_.addTextTrack(kind, label, language);\n      }\n    }\n\n    /**\n     * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}.\n     *\n     * @param {Object} options\n     *        Options to pass to {@link HTMLTrackElement} during creation. See\n     *        {@link HTMLTrackElement} for object properties that you should use.\n     *\n     * @param {boolean} [manualCleanup=false] if set to true, the TextTrack will not be removed\n     *                                        from the TextTrackList and HtmlTrackElementList\n     *                                        after a source change\n     *\n     * @return {HtmlTrackElement}\n     *         the HTMLTrackElement that was created and added\n     *         to the HtmlTrackElementList and the remote\n     *         TextTrackList\n     *\n     */\n    addRemoteTextTrack(options, manualCleanup) {\n      if (this.tech_) {\n        return this.tech_.addRemoteTextTrack(options, manualCleanup);\n      }\n    }\n\n    /**\n     * Remove a remote {@link TextTrack} from the respective\n     * {@link TextTrackList} and {@link HtmlTrackElementList}.\n     *\n     * @param {Object} track\n     *        Remote {@link TextTrack} to remove\n     *\n     * @return {undefined}\n     *         does not return anything\n     */\n    removeRemoteTextTrack(obj = {}) {\n      let {\n        track\n      } = obj;\n      if (!track) {\n        track = obj;\n      }\n\n      // destructure the input into an object with a track argument, defaulting to arguments[0]\n      // default the whole argument to an empty object if nothing was passed in\n\n      if (this.tech_) {\n        return this.tech_.removeRemoteTextTrack(track);\n      }\n    }\n\n    /**\n     * Gets available media playback quality metrics as specified by the W3C's Media\n     * Playback Quality API.\n     *\n     * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n     *\n     * @return {Object|undefined}\n     *         An object with supported media playback quality metrics or undefined if there\n     *         is no tech or the tech does not support it.\n     */\n    getVideoPlaybackQuality() {\n      return this.techGet_('getVideoPlaybackQuality');\n    }\n\n    /**\n     * Get video width\n     *\n     * @return {number}\n     *         current video width\n     */\n    videoWidth() {\n      return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n    }\n\n    /**\n     * Get video height\n     *\n     * @return {number}\n     *         current video height\n     */\n    videoHeight() {\n      return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n    }\n\n    /**\n     * Set or get the player's language code.\n     *\n     * Changing the language will trigger\n     * [languagechange]{@link Player#event:languagechange}\n     * which Components can use to update control text.\n     * ClickableComponent will update its control text by default on\n     * [languagechange]{@link Player#event:languagechange}.\n     *\n     * @fires Player#languagechange\n     *\n     * @param {string} [code]\n     *        the language code to set the player to\n     *\n     * @return {string|undefined}\n     *         - The current language code when getting\n     *         - Nothing when setting\n     */\n    language(code) {\n      if (code === undefined) {\n        return this.language_;\n      }\n      if (this.language_ !== String(code).toLowerCase()) {\n        this.language_ = String(code).toLowerCase();\n\n        // during first init, it's possible some things won't be evented\n        if (isEvented(this)) {\n          /**\n          * fires when the player language change\n          *\n          * @event Player#languagechange\n          * @type {Event}\n          */\n          this.trigger('languagechange');\n        }\n      }\n    }\n\n    /**\n     * Get the player's language dictionary\n     * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n     * Languages specified directly in the player options have precedence\n     *\n     * @return {Array}\n     *         An array of of supported languages\n     */\n    languages() {\n      return merge$2(Player.prototype.options_.languages, this.languages_);\n    }\n\n    /**\n     * returns a JavaScript object representing the current track\n     * information. **DOES not return it as JSON**\n     *\n     * @return {Object}\n     *         Object representing the current of track info\n     */\n    toJSON() {\n      const options = merge$2(this.options_);\n      const tracks = options.tracks;\n      options.tracks = [];\n      for (let i = 0; i < tracks.length; i++) {\n        let track = tracks[i];\n\n        // deep merge tracks and null out player so no circular references\n        track = merge$2(track);\n        track.player = undefined;\n        options.tracks[i] = track;\n      }\n      return options;\n    }\n\n    /**\n     * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n     * component) that immediately overlays the player with arbitrary\n     * content and removes itself when closed.\n     *\n     * @param {string|Function|Element|Array|null} content\n     *        Same as {@link ModalDialog#content}'s param of the same name.\n     *        The most straight-forward usage is to provide a string or DOM\n     *        element.\n     *\n     * @param {Object} [options]\n     *        Extra options which will be passed on to the {@link ModalDialog}.\n     *\n     * @return {ModalDialog}\n     *         the {@link ModalDialog} that was created\n     */\n    createModal(content, options) {\n      options = options || {};\n      options.content = content || '';\n      const modal = new ModalDialog(this, options);\n      this.addChild(modal);\n      modal.on('dispose', () => {\n        this.removeChild(modal);\n      });\n      modal.open();\n      return modal;\n    }\n\n    /**\n     * Change breakpoint classes when the player resizes.\n     *\n     * @private\n     */\n    updateCurrentBreakpoint_() {\n      if (!this.responsive()) {\n        return;\n      }\n      const currentBreakpoint = this.currentBreakpoint();\n      const currentWidth = this.currentWidth();\n      for (let i = 0; i < BREAKPOINT_ORDER.length; i++) {\n        const candidateBreakpoint = BREAKPOINT_ORDER[i];\n        const maxWidth = this.breakpoints_[candidateBreakpoint];\n        if (currentWidth <= maxWidth) {\n          // The current breakpoint did not change, nothing to do.\n          if (currentBreakpoint === candidateBreakpoint) {\n            return;\n          }\n\n          // Only remove a class if there is a current breakpoint.\n          if (currentBreakpoint) {\n            this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n          }\n          this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n          this.breakpoint_ = candidateBreakpoint;\n          break;\n        }\n      }\n    }\n\n    /**\n     * Removes the current breakpoint.\n     *\n     * @private\n     */\n    removeCurrentBreakpoint_() {\n      const className = this.currentBreakpointClass();\n      this.breakpoint_ = '';\n      if (className) {\n        this.removeClass(className);\n      }\n    }\n\n    /**\n     * Get or set breakpoints on the player.\n     *\n     * Calling this method with an object or `true` will remove any previous\n     * custom breakpoints and start from the defaults again.\n     *\n     * @param  {Object|boolean} [breakpoints]\n     *         If an object is given, it can be used to provide custom\n     *         breakpoints. If `true` is given, will set default breakpoints.\n     *         If this argument is not given, will simply return the current\n     *         breakpoints.\n     *\n     * @param  {number} [breakpoints.tiny]\n     *         The maximum width for the \"vjs-layout-tiny\" class.\n     *\n     * @param  {number} [breakpoints.xsmall]\n     *         The maximum width for the \"vjs-layout-x-small\" class.\n     *\n     * @param  {number} [breakpoints.small]\n     *         The maximum width for the \"vjs-layout-small\" class.\n     *\n     * @param  {number} [breakpoints.medium]\n     *         The maximum width for the \"vjs-layout-medium\" class.\n     *\n     * @param  {number} [breakpoints.large]\n     *         The maximum width for the \"vjs-layout-large\" class.\n     *\n     * @param  {number} [breakpoints.xlarge]\n     *         The maximum width for the \"vjs-layout-x-large\" class.\n     *\n     * @param  {number} [breakpoints.huge]\n     *         The maximum width for the \"vjs-layout-huge\" class.\n     *\n     * @return {Object}\n     *         An object mapping breakpoint names to maximum width values.\n     */\n    breakpoints(breakpoints) {\n      // Used as a getter.\n      if (breakpoints === undefined) {\n        return Object.assign(this.breakpoints_);\n      }\n      this.breakpoint_ = '';\n      this.breakpoints_ = Object.assign({}, DEFAULT_BREAKPOINTS, breakpoints);\n\n      // When breakpoint definitions change, we need to update the currently\n      // selected breakpoint.\n      this.updateCurrentBreakpoint_();\n\n      // Clone the breakpoints before returning.\n      return Object.assign(this.breakpoints_);\n    }\n\n    /**\n     * Get or set a flag indicating whether or not this player should adjust\n     * its UI based on its dimensions.\n     *\n     * @param  {boolean} [value]\n     *         Should be `true` if the player should adjust its UI based on its\n     *         dimensions; otherwise, should be `false`.\n     *\n     * @return {boolean|undefined}\n     *         Will be `true` if this player should adjust its UI based on its\n     *         dimensions; otherwise, will be `false`.\n     *         Nothing if setting\n     */\n    responsive(value) {\n      // Used as a getter.\n      if (value === undefined) {\n        return this.responsive_;\n      }\n      value = Boolean(value);\n      const current = this.responsive_;\n\n      // Nothing changed.\n      if (value === current) {\n        return;\n      }\n\n      // The value actually changed, set it.\n      this.responsive_ = value;\n\n      // Start listening for breakpoints and set the initial breakpoint if the\n      // player is now responsive.\n      if (value) {\n        this.on('playerresize', this.boundUpdateCurrentBreakpoint_);\n        this.updateCurrentBreakpoint_();\n\n        // Stop listening for breakpoints if the player is no longer responsive.\n      } else {\n        this.off('playerresize', this.boundUpdateCurrentBreakpoint_);\n        this.removeCurrentBreakpoint_();\n      }\n      return value;\n    }\n\n    /**\n     * Get current breakpoint name, if any.\n     *\n     * @return {string}\n     *         If there is currently a breakpoint set, returns a the key from the\n     *         breakpoints object matching it. Otherwise, returns an empty string.\n     */\n    currentBreakpoint() {\n      return this.breakpoint_;\n    }\n\n    /**\n     * Get the current breakpoint class name.\n     *\n     * @return {string}\n     *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n     *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n     *         there is no current breakpoint.\n     */\n    currentBreakpointClass() {\n      return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n    }\n\n    /**\n     * An object that describes a single piece of media.\n     *\n     * Properties that are not part of this type description will be retained; so,\n     * this can be viewed as a generic metadata storage mechanism as well.\n     *\n     * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n     * @typedef  {Object} Player~MediaObject\n     *\n     * @property {string} [album]\n     *           Unused, except if this object is passed to the `MediaSession`\n     *           API.\n     *\n     * @property {string} [artist]\n     *           Unused, except if this object is passed to the `MediaSession`\n     *           API.\n     *\n     * @property {Object[]} [artwork]\n     *           Unused, except if this object is passed to the `MediaSession`\n     *           API. If not specified, will be populated via the `poster`, if\n     *           available.\n     *\n     * @property {string} [poster]\n     *           URL to an image that will display before playback.\n     *\n     * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n     *           A single source object, an array of source objects, or a string\n     *           referencing a URL to a media source. It is _highly recommended_\n     *           that an object or array of objects is used here, so that source\n     *           selection algorithms can take the `type` into account.\n     *\n     * @property {string} [title]\n     *           Unused, except if this object is passed to the `MediaSession`\n     *           API.\n     *\n     * @property {Object[]} [textTracks]\n     *           An array of objects to be used to create text tracks, following\n     *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n     *           For ease of removal, these will be created as \"remote\" text\n     *           tracks and set to automatically clean up on source changes.\n     *\n     *           These objects may have properties like `src`, `kind`, `label`,\n     *           and `language`, see {@link Tech#createRemoteTextTrack}.\n     */\n\n    /**\n     * Populate the player using a {@link Player~MediaObject|MediaObject}.\n     *\n     * @param  {Player~MediaObject} media\n     *         A media object.\n     *\n     * @param  {Function} ready\n     *         A callback to be called when the player is ready.\n     */\n    loadMedia(media, ready) {\n      if (!media || typeof media !== 'object') {\n        return;\n      }\n      const crossOrigin = this.crossOrigin();\n      this.reset();\n\n      // Clone the media object so it cannot be mutated from outside.\n      this.cache_.media = merge$2(media);\n      const {\n        artist,\n        artwork,\n        description,\n        poster,\n        src,\n        textTracks,\n        title\n      } = this.cache_.media;\n\n      // If `artwork` is not given, create it using `poster`.\n      if (!artwork && poster) {\n        this.cache_.media.artwork = [{\n          src: poster,\n          type: getMimetype(poster)\n        }];\n      }\n      if (crossOrigin) {\n        this.crossOrigin(crossOrigin);\n      }\n      if (src) {\n        this.src(src);\n      }\n      if (poster) {\n        this.poster(poster);\n      }\n      if (Array.isArray(textTracks)) {\n        textTracks.forEach(tt => this.addRemoteTextTrack(tt, false));\n      }\n      if (this.titleBar) {\n        this.titleBar.update({\n          title,\n          description: description || artist || ''\n        });\n      }\n      this.ready(ready);\n    }\n\n    /**\n     * Get a clone of the current {@link Player~MediaObject} for this player.\n     *\n     * If the `loadMedia` method has not been used, will attempt to return a\n     * {@link Player~MediaObject} based on the current state of the player.\n     *\n     * @return {Player~MediaObject}\n     */\n    getMedia() {\n      if (!this.cache_.media) {\n        const poster = this.poster();\n        const src = this.currentSources();\n        const textTracks = Array.prototype.map.call(this.remoteTextTracks(), tt => ({\n          kind: tt.kind,\n          label: tt.label,\n          language: tt.language,\n          src: tt.src\n        }));\n        const media = {\n          src,\n          textTracks\n        };\n        if (poster) {\n          media.poster = poster;\n          media.artwork = [{\n            src: media.poster,\n            type: getMimetype(media.poster)\n          }];\n        }\n        return media;\n      }\n      return merge$2(this.cache_.media);\n    }\n\n    /**\n     * Gets tag settings\n     *\n     * @param {Element} tag\n     *        The player tag\n     *\n     * @return {Object}\n     *         An object containing all of the settings\n     *         for a player tag\n     */\n    static getTagSettings(tag) {\n      const baseOptions = {\n        sources: [],\n        tracks: []\n      };\n      const tagOptions = getAttributes(tag);\n      const dataSetup = tagOptions['data-setup'];\n      if (hasClass(tag, 'vjs-fill')) {\n        tagOptions.fill = true;\n      }\n      if (hasClass(tag, 'vjs-fluid')) {\n        tagOptions.fluid = true;\n      }\n\n      // Check if data-setup attr exists.\n      if (dataSetup !== null) {\n        // Parse options JSON\n        // If empty string, make it a parsable json object.\n        const [err, data] = tuple(dataSetup || '{}');\n        if (err) {\n          log$1.error(err);\n        }\n        Object.assign(tagOptions, data);\n      }\n      Object.assign(baseOptions, tagOptions);\n\n      // Get tag children settings\n      if (tag.hasChildNodes()) {\n        const children = tag.childNodes;\n        for (let i = 0, j = children.length; i < j; i++) {\n          const child = children[i];\n          // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n          const childName = child.nodeName.toLowerCase();\n          if (childName === 'source') {\n            baseOptions.sources.push(getAttributes(child));\n          } else if (childName === 'track') {\n            baseOptions.tracks.push(getAttributes(child));\n          }\n        }\n      }\n      return baseOptions;\n    }\n\n    /**\n     * Set debug mode to enable/disable logs at info level.\n     *\n     * @param {boolean} enabled\n     * @fires Player#debugon\n     * @fires Player#debugoff\n     * @return {boolean|undefined}\n     */\n    debug(enabled) {\n      if (enabled === undefined) {\n        return this.debugEnabled_;\n      }\n      if (enabled) {\n        this.trigger('debugon');\n        this.previousLogLevel_ = this.log.level;\n        this.log.level('debug');\n        this.debugEnabled_ = true;\n      } else {\n        this.trigger('debugoff');\n        this.log.level(this.previousLogLevel_);\n        this.previousLogLevel_ = undefined;\n        this.debugEnabled_ = false;\n      }\n    }\n\n    /**\n     * Set or get current playback rates.\n     * Takes an array and updates the playback rates menu with the new items.\n     * Pass in an empty array to hide the menu.\n     * Values other than arrays are ignored.\n     *\n     * @fires Player#playbackrateschange\n     * @param {number[]} [newRates]\n     *                   The new rates that the playback rates menu should update to.\n     *                   An empty array will hide the menu\n     * @return {number[]} When used as a getter will return the current playback rates\n     */\n    playbackRates(newRates) {\n      if (newRates === undefined) {\n        return this.cache_.playbackRates;\n      }\n\n      // ignore any value that isn't an array\n      if (!Array.isArray(newRates)) {\n        return;\n      }\n\n      // ignore any arrays that don't only contain numbers\n      if (!newRates.every(rate => typeof rate === 'number')) {\n        return;\n      }\n      this.cache_.playbackRates = newRates;\n\n      /**\n      * fires when the playback rates in a player are changed\n      *\n      * @event Player#playbackrateschange\n      * @type {Event}\n      */\n      this.trigger('playbackrateschange');\n    }\n  }\n\n  /**\n   * Get the {@link VideoTrackList}\n   *\n   * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n   *\n   * @return {VideoTrackList}\n   *         the current video track list\n   *\n   * @method Player.prototype.videoTracks\n   */\n\n  /**\n   * Get the {@link AudioTrackList}\n   *\n   * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n   *\n   * @return {AudioTrackList}\n   *         the current audio track list\n   *\n   * @method Player.prototype.audioTracks\n   */\n\n  /**\n   * Get the {@link TextTrackList}\n   *\n   * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n   *\n   * @return {TextTrackList}\n   *         the current text track list\n   *\n   * @method Player.prototype.textTracks\n   */\n\n  /**\n   * Get the remote {@link TextTrackList}\n   *\n   * @return {TextTrackList}\n   *         The current remote text track list\n   *\n   * @method Player.prototype.remoteTextTracks\n   */\n\n  /**\n   * Get the remote {@link HtmlTrackElementList} tracks.\n   *\n   * @return {HtmlTrackElementList}\n   *         The current remote text track element list\n   *\n   * @method Player.prototype.remoteTextTrackEls\n   */\n\n  ALL.names.forEach(function (name) {\n    const props = ALL[name];\n    Player.prototype[props.getterName] = function () {\n      if (this.tech_) {\n        return this.tech_[props.getterName]();\n      }\n\n      // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n      // these will be passed to the tech during loading\n      this[props.privateName] = this[props.privateName] || new props.ListClass();\n      return this[props.privateName];\n    };\n  });\n\n  /**\n   * Get or set the `Player`'s crossorigin option. For the HTML5 player, this\n   * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n   * behavior.\n   *\n   * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n   *\n   * @param {string} [value]\n   *        The value to set the `Player`'s crossorigin to. If an argument is\n   *        given, must be one of `anonymous` or `use-credentials`.\n   *\n   * @return {string|undefined}\n   *         - The current crossorigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  Player.prototype.crossorigin = Player.prototype.crossOrigin;\n\n  /**\n   * Global enumeration of players.\n   *\n   * The keys are the player IDs and the values are either the {@link Player}\n   * instance or `null` for disposed players.\n   *\n   * @type {Object}\n   */\n  Player.players = {};\n  const navigator = window.navigator;\n\n  /*\n   * Player instance options, surfaced using options\n   * options = Player.prototype.options_\n   * Make changes in options, not here.\n   *\n   * @type {Object}\n   * @private\n   */\n  Player.prototype.options_ = {\n    // Default order of fallback technology\n    techOrder: Tech.defaultTechOrder_,\n    html5: {},\n    // enable sourceset by default\n    enableSourceset: true,\n    // default inactivity timeout\n    inactivityTimeout: 2000,\n    // default playback rates\n    playbackRates: [],\n    // Add playback rate selection by adding rates\n    // 'playbackRates': [0.5, 1, 1.5, 2],\n    liveui: false,\n    // Included control sets\n    children: ['mediaLoader', 'posterImage', 'titleBar', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n    language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n    // locales and their language translations\n    languages: {},\n    // Default message to show when a video cannot be played.\n    notSupportedMessage: 'No compatible source was found for this media.',\n    normalizeAutoplay: false,\n    fullscreen: {\n      options: {\n        navigationUI: 'hide'\n      }\n    },\n    breakpoints: {},\n    responsive: false,\n    audioOnlyMode: false,\n    audioPosterMode: false,\n    spatialNavigation: {\n      enabled: false,\n      horizontalSeek: false\n    },\n    // Default smooth seeking to false\n    enableSmoothSeeking: false\n  };\n  TECH_EVENTS_RETRIGGER.forEach(function (event) {\n    Player.prototype[`handleTech${toTitleCase$1(event)}_`] = function () {\n      return this.trigger(event);\n    };\n  });\n\n  /**\n   * Fired when the player has initial duration and dimension information\n   *\n   * @event Player#loadedmetadata\n   * @type {Event}\n   */\n\n  /**\n   * Fired when the player has downloaded data at the current playback position\n   *\n   * @event Player#loadeddata\n   * @type {Event}\n   */\n\n  /**\n   * Fired when the current playback position has changed *\n   * During playback this is fired every 15-250 milliseconds, depending on the\n   * playback technology in use.\n   *\n   * @event Player#timeupdate\n   * @type {Event}\n   */\n\n  /**\n   * Fired when the volume changes\n   *\n   * @event Player#volumechange\n   * @type {Event}\n   */\n\n  /**\n   * Reports whether or not a player has a plugin available.\n   *\n   * This does not report whether or not the plugin has ever been initialized\n   * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n   *\n   * @method Player#hasPlugin\n   * @param  {string}  name\n   *         The name of a plugin.\n   *\n   * @return {boolean}\n   *         Whether or not this player has the requested plugin available.\n   */\n\n  /**\n   * Reports whether or not a player is using a plugin by name.\n   *\n   * For basic plugins, this only reports whether the plugin has _ever_ been\n   * initialized on this player.\n   *\n   * @method Player#usingPlugin\n   * @param  {string} name\n   *         The name of a plugin.\n   *\n   * @return {boolean}\n   *         Whether or not this player is using the requested plugin.\n   */\n\n  Component$1.registerComponent('Player', Player);\n\n  /**\n   * @file plugin.js\n   */\n\n  /**\n   * The base plugin name.\n   *\n   * @private\n   * @constant\n   * @type {string}\n   */\n  const BASE_PLUGIN_NAME = 'plugin';\n\n  /**\n   * The key on which a player's active plugins cache is stored.\n   *\n   * @private\n   * @constant\n   * @type     {string}\n   */\n  const PLUGIN_CACHE_KEY = 'activePlugins_';\n\n  /**\n   * Stores registered plugins in a private space.\n   *\n   * @private\n   * @type    {Object}\n   */\n  const pluginStorage = {};\n\n  /**\n   * Reports whether or not a plugin has been registered.\n   *\n   * @private\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {boolean}\n   *          Whether or not the plugin has been registered.\n   */\n  const pluginExists = name => pluginStorage.hasOwnProperty(name);\n\n  /**\n   * Get a single registered plugin by name.\n   *\n   * @private\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {typeof Plugin|Function|undefined}\n   *          The plugin (or undefined).\n   */\n  const getPlugin = name => pluginExists(name) ? pluginStorage[name] : undefined;\n\n  /**\n   * Marks a plugin as \"active\" on a player.\n   *\n   * Also, ensures that the player has an object for tracking active plugins.\n   *\n   * @private\n   * @param   {Player} player\n   *          A Video.js player instance.\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   */\n  const markPluginAsActive = (player, name) => {\n    player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n    player[PLUGIN_CACHE_KEY][name] = true;\n  };\n\n  /**\n   * Triggers a pair of plugin setup events.\n   *\n   * @private\n   * @param  {Player} player\n   *         A Video.js player instance.\n   *\n   * @param  {PluginEventHash} hash\n   *         A plugin event hash.\n   *\n   * @param  {boolean} [before]\n   *         If true, prefixes the event name with \"before\". In other words,\n   *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n   */\n  const triggerSetupEvent = (player, hash, before) => {\n    const eventName = (before ? 'before' : '') + 'pluginsetup';\n    player.trigger(eventName, hash);\n    player.trigger(eventName + ':' + hash.name, hash);\n  };\n\n  /**\n   * Takes a basic plugin function and returns a wrapper function which marks\n   * on the player that the plugin has been activated.\n   *\n   * @private\n   * @param   {string} name\n   *          The name of the plugin.\n   *\n   * @param   {Function} plugin\n   *          The basic plugin.\n   *\n   * @return {Function}\n   *          A wrapper function for the given plugin.\n   */\n  const createBasicPlugin = function (name, plugin) {\n    const basicPluginWrapper = function () {\n      // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n      // regardless, but we want the hash to be consistent with the hash provided\n      // for advanced plugins.\n      //\n      // The only potentially counter-intuitive thing here is the `instance` in\n      // the \"pluginsetup\" event is the value returned by the `plugin` function.\n      triggerSetupEvent(this, {\n        name,\n        plugin,\n        instance: null\n      }, true);\n      const instance = plugin.apply(this, arguments);\n      markPluginAsActive(this, name);\n      triggerSetupEvent(this, {\n        name,\n        plugin,\n        instance\n      });\n      return instance;\n    };\n    Object.keys(plugin).forEach(function (prop) {\n      basicPluginWrapper[prop] = plugin[prop];\n    });\n    return basicPluginWrapper;\n  };\n\n  /**\n   * Takes a plugin sub-class and returns a factory function for generating\n   * instances of it.\n   *\n   * This factory function will replace itself with an instance of the requested\n   * sub-class of Plugin.\n   *\n   * @private\n   * @param   {string} name\n   *          The name of the plugin.\n   *\n   * @param   {Plugin} PluginSubClass\n   *          The advanced plugin.\n   *\n   * @return {Function}\n   */\n  const createPluginFactory = (name, PluginSubClass) => {\n    // Add a `name` property to the plugin prototype so that each plugin can\n    // refer to itself by name.\n    PluginSubClass.prototype.name = name;\n    return function (...args) {\n      triggerSetupEvent(this, {\n        name,\n        plugin: PluginSubClass,\n        instance: null\n      }, true);\n      const instance = new PluginSubClass(...[this, ...args]);\n\n      // The plugin is replaced by a function that returns the current instance.\n      this[name] = () => instance;\n      triggerSetupEvent(this, instance.getEventHash());\n      return instance;\n    };\n  };\n\n  /**\n   * Parent class for all advanced plugins.\n   *\n   * @mixes   module:evented~EventedMixin\n   * @mixes   module:stateful~StatefulMixin\n   * @fires   Player#beforepluginsetup\n   * @fires   Player#beforepluginsetup:$name\n   * @fires   Player#pluginsetup\n   * @fires   Player#pluginsetup:$name\n   * @listens Player#dispose\n   * @throws  {Error}\n   *          If attempting to instantiate the base {@link Plugin} class\n   *          directly instead of via a sub-class.\n   */\n  class Plugin {\n    /**\n     * Creates an instance of this class.\n     *\n     * Sub-classes should call `super` to ensure plugins are properly initialized.\n     *\n     * @param {Player} player\n     *        A Video.js player instance.\n     */\n    constructor(player) {\n      if (this.constructor === Plugin) {\n        throw new Error('Plugin must be sub-classed; not directly instantiated.');\n      }\n      this.player = player;\n      if (!this.log) {\n        this.log = this.player.log.createLogger(this.name);\n      }\n\n      // Make this object evented, but remove the added `trigger` method so we\n      // use the prototype version instead.\n      evented(this);\n      delete this.trigger;\n      stateful(this, this.constructor.defaultState);\n      markPluginAsActive(player, this.name);\n\n      // Auto-bind the dispose method so we can use it as a listener and unbind\n      // it later easily.\n      this.dispose = this.dispose.bind(this);\n\n      // If the player is disposed, dispose the plugin.\n      player.on('dispose', this.dispose);\n    }\n\n    /**\n     * Get the version of the plugin that was set on <pluginName>.VERSION\n     */\n    version() {\n      return this.constructor.VERSION;\n    }\n\n    /**\n     * Each event triggered by plugins includes a hash of additional data with\n     * conventional properties.\n     *\n     * This returns that object or mutates an existing hash.\n     *\n     * @param   {Object} [hash={}]\n     *          An object to be used as event an event hash.\n     *\n     * @return {PluginEventHash}\n     *          An event hash object with provided properties mixed-in.\n     */\n    getEventHash(hash = {}) {\n      hash.name = this.name;\n      hash.plugin = this.constructor;\n      hash.instance = this;\n      return hash;\n    }\n\n    /**\n     * Triggers an event on the plugin object and overrides\n     * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n     *\n     * @param   {string|Object} event\n     *          An event type or an object with a type property.\n     *\n     * @param   {Object} [hash={}]\n     *          Additional data hash to merge with a\n     *          {@link PluginEventHash|PluginEventHash}.\n     *\n     * @return {boolean}\n     *          Whether or not default was prevented.\n     */\n    trigger(event, hash = {}) {\n      return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n    }\n\n    /**\n     * Handles \"statechanged\" events on the plugin. No-op by default, override by\n     * subclassing.\n     *\n     * @abstract\n     * @param    {Event} e\n     *           An event object provided by a \"statechanged\" event.\n     *\n     * @param    {Object} e.changes\n     *           An object describing changes that occurred with the \"statechanged\"\n     *           event.\n     */\n    handleStateChanged(e) {}\n\n    /**\n     * Disposes a plugin.\n     *\n     * Subclasses can override this if they want, but for the sake of safety,\n     * it's probably best to subscribe the \"dispose\" event.\n     *\n     * @fires Plugin#dispose\n     */\n    dispose() {\n      const {\n        name,\n        player\n      } = this;\n\n      /**\n       * Signals that a advanced plugin is about to be disposed.\n       *\n       * @event Plugin#dispose\n       * @type  {Event}\n       */\n      this.trigger('dispose');\n      this.off();\n      player.off('dispose', this.dispose);\n\n      // Eliminate any possible sources of leaking memory by clearing up\n      // references between the player and the plugin instance and nulling out\n      // the plugin's state and replacing methods with a function that throws.\n      player[PLUGIN_CACHE_KEY][name] = false;\n      this.player = this.state = null;\n\n      // Finally, replace the plugin name on the player with a new factory\n      // function, so that the plugin is ready to be set up again.\n      player[name] = createPluginFactory(name, pluginStorage[name]);\n    }\n\n    /**\n     * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n     *\n     * @param   {string|Function} plugin\n     *          If a string, matches the name of a plugin. If a function, will be\n     *          tested directly.\n     *\n     * @return {boolean}\n     *          Whether or not a plugin is a basic plugin.\n     */\n    static isBasic(plugin) {\n      const p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n      return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n    }\n\n    /**\n     * Register a Video.js plugin.\n     *\n     * @param   {string} name\n     *          The name of the plugin to be registered. Must be a string and\n     *          must not match an existing plugin or a method on the `Player`\n     *          prototype.\n     *\n     * @param   {typeof Plugin|Function} plugin\n     *          A sub-class of `Plugin` or a function for basic plugins.\n     *\n     * @return {typeof Plugin|Function}\n     *          For advanced plugins, a factory function for that plugin. For\n     *          basic plugins, a wrapper function that initializes the plugin.\n     */\n    static registerPlugin(name, plugin) {\n      if (typeof name !== 'string') {\n        throw new Error(`Illegal plugin name, \"${name}\", must be a string, was ${typeof name}.`);\n      }\n      if (pluginExists(name)) {\n        log$1.warn(`A plugin named \"${name}\" already exists. You may want to avoid re-registering plugins!`);\n      } else if (Player.prototype.hasOwnProperty(name)) {\n        throw new Error(`Illegal plugin name, \"${name}\", cannot share a name with an existing player method!`);\n      }\n      if (typeof plugin !== 'function') {\n        throw new Error(`Illegal plugin for \"${name}\", must be a function, was ${typeof plugin}.`);\n      }\n      pluginStorage[name] = plugin;\n\n      // Add a player prototype method for all sub-classed plugins (but not for\n      // the base Plugin class).\n      if (name !== BASE_PLUGIN_NAME) {\n        if (Plugin.isBasic(plugin)) {\n          Player.prototype[name] = createBasicPlugin(name, plugin);\n        } else {\n          Player.prototype[name] = createPluginFactory(name, plugin);\n        }\n      }\n      return plugin;\n    }\n\n    /**\n     * De-register a Video.js plugin.\n     *\n     * @param  {string} name\n     *         The name of the plugin to be de-registered. Must be a string that\n     *         matches an existing plugin.\n     *\n     * @throws {Error}\n     *         If an attempt is made to de-register the base plugin.\n     */\n    static deregisterPlugin(name) {\n      if (name === BASE_PLUGIN_NAME) {\n        throw new Error('Cannot de-register base plugin.');\n      }\n      if (pluginExists(name)) {\n        delete pluginStorage[name];\n        delete Player.prototype[name];\n      }\n    }\n\n    /**\n     * Gets an object containing multiple Video.js plugins.\n     *\n     * @param   {Array} [names]\n     *          If provided, should be an array of plugin names. Defaults to _all_\n     *          plugin names.\n     *\n     * @return {Object|undefined}\n     *          An object containing plugin(s) associated with their name(s) or\n     *          `undefined` if no matching plugins exist).\n     */\n    static getPlugins(names = Object.keys(pluginStorage)) {\n      let result;\n      names.forEach(name => {\n        const plugin = getPlugin(name);\n        if (plugin) {\n          result = result || {};\n          result[name] = plugin;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Gets a plugin's version, if available\n     *\n     * @param   {string} name\n     *          The name of a plugin.\n     *\n     * @return {string}\n     *          The plugin's version or an empty string.\n     */\n    static getPluginVersion(name) {\n      const plugin = getPlugin(name);\n      return plugin && plugin.VERSION || '';\n    }\n  }\n\n  /**\n   * Gets a plugin by name if it exists.\n   *\n   * @static\n   * @method   getPlugin\n   * @memberOf Plugin\n   * @param    {string} name\n   *           The name of a plugin.\n   *\n   * @returns  {typeof Plugin|Function|undefined}\n   *           The plugin (or `undefined`).\n   */\n  Plugin.getPlugin = getPlugin;\n\n  /**\n   * The name of the base plugin class as it is registered.\n   *\n   * @type {string}\n   */\n  Plugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n  Plugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n  /**\n   * Documented in player.js\n   *\n   * @ignore\n   */\n  Player.prototype.usingPlugin = function (name) {\n    return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n  };\n\n  /**\n   * Documented in player.js\n   *\n   * @ignore\n   */\n  Player.prototype.hasPlugin = function (name) {\n    return !!pluginExists(name);\n  };\n\n  /**\n   * Signals that a plugin is about to be set up on a player.\n   *\n   * @event    Player#beforepluginsetup\n   * @type     {PluginEventHash}\n   */\n\n  /**\n   * Signals that a plugin is about to be set up on a player - by name. The name\n   * is the name of the plugin.\n   *\n   * @event    Player#beforepluginsetup:$name\n   * @type     {PluginEventHash}\n   */\n\n  /**\n   * Signals that a plugin has just been set up on a player.\n   *\n   * @event    Player#pluginsetup\n   * @type     {PluginEventHash}\n   */\n\n  /**\n   * Signals that a plugin has just been set up on a player - by name. The name\n   * is the name of the plugin.\n   *\n   * @event    Player#pluginsetup:$name\n   * @type     {PluginEventHash}\n   */\n\n  /**\n   * @typedef  {Object} PluginEventHash\n   *\n   * @property {string} instance\n   *           For basic plugins, the return value of the plugin function. For\n   *           advanced plugins, the plugin instance on which the event is fired.\n   *\n   * @property {string} name\n   *           The name of the plugin.\n   *\n   * @property {string} plugin\n   *           For basic plugins, the plugin function. For advanced plugins, the\n   *           plugin class/constructor.\n   */\n\n  /**\n   * @file deprecate.js\n   * @module deprecate\n   */\n\n  /**\n   * Decorate a function with a deprecation message the first time it is called.\n   *\n   * @param  {string}   message\n   *         A deprecation message to log the first time the returned function\n   *         is called.\n   *\n   * @param  {Function} fn\n   *         The function to be deprecated.\n   *\n   * @return {Function}\n   *         A wrapper function that will log a deprecation warning the first\n   *         time it is called. The return value will be the return value of\n   *         the wrapped function.\n   */\n  function deprecate(message, fn) {\n    let warned = false;\n    return function (...args) {\n      if (!warned) {\n        log$1.warn(message);\n      }\n      warned = true;\n      return fn.apply(this, args);\n    };\n  }\n\n  /**\n   * Internal function used to mark a function as deprecated in the next major\n   * version with consistent messaging.\n   *\n   * @param  {number}   major   The major version where it will be removed\n   * @param  {string}   oldName The old function name\n   * @param  {string}   newName The new function name\n   * @param  {Function} fn      The function to deprecate\n   * @return {Function}         The decorated function\n   */\n  function deprecateForMajor(major, oldName, newName, fn) {\n    return deprecate(`${oldName} is deprecated and will be removed in ${major}.0; please use ${newName} instead.`, fn);\n  }\n\n  var VjsErrors = {\n    NetworkBadStatus: 'networkbadstatus',\n    NetworkRequestFailed: 'networkrequestfailed',\n    NetworkRequestAborted: 'networkrequestaborted',\n    NetworkRequestTimeout: 'networkrequesttimeout',\n    NetworkBodyParserFailed: 'networkbodyparserfailed',\n    StreamingHlsPlaylistParserError: 'streaminghlsplaylistparsererror',\n    StreamingDashManifestParserError: 'streamingdashmanifestparsererror',\n    StreamingContentSteeringParserError: 'streamingcontentsteeringparsererror',\n    StreamingVttParserError: 'streamingvttparsererror',\n    StreamingFailedToSelectNextSegment: 'streamingfailedtoselectnextsegment',\n    StreamingFailedToDecryptSegment: 'streamingfailedtodecryptsegment',\n    StreamingFailedToTransmuxSegment: 'streamingfailedtotransmuxsegment',\n    StreamingFailedToAppendSegment: 'streamingfailedtoappendsegment',\n    StreamingCodecsChangeError: 'streamingcodecschangeerror'\n  };\n\n  /**\n   * @file video.js\n   * @module videojs\n   */\n\n  /** @import { PlayerReadyCallback } from './player' */\n\n  /**\n   * Normalize an `id` value by trimming off a leading `#`\n   *\n   * @private\n   * @param   {string} id\n   *          A string, maybe with a leading `#`.\n   *\n   * @return {string}\n   *          The string, without any leading `#`.\n   */\n  const normalizeId = id => id.indexOf('#') === 0 ? id.slice(1) : id;\n\n  /**\n   * The `videojs()` function doubles as the main function for users to create a\n   * {@link Player} instance as well as the main library namespace.\n   *\n   * It can also be used as a getter for a pre-existing {@link Player} instance.\n   * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n   * purpose because it avoids any potential for unintended initialization.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### id\n   * string|Element, **required**\n   *\n   * Video element or video element ID.\n   *\n   * ##### options\n   * Object, optional\n   *\n   * Options object for providing settings.\n   * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n   *\n   * ##### ready\n   * {@link Component~ReadyCallback}, optional\n   *\n   * A function to be called when the {@link Player} and {@link Tech} are ready.\n   *\n   * #### Return Value\n   *\n   * The `videojs()` function returns a {@link Player} instance.\n   *\n   * @namespace\n   *\n   * @borrows AudioTrack as AudioTrack\n   * @borrows Component.getComponent as getComponent\n   * @borrows module:events.on as on\n   * @borrows module:events.one as one\n   * @borrows module:events.off as off\n   * @borrows module:events.trigger as trigger\n   * @borrows EventTarget as EventTarget\n   * @borrows module:middleware.use as use\n   * @borrows Player.players as players\n   * @borrows Plugin.registerPlugin as registerPlugin\n   * @borrows Plugin.deregisterPlugin as deregisterPlugin\n   * @borrows Plugin.getPlugins as getPlugins\n   * @borrows Plugin.getPlugin as getPlugin\n   * @borrows Plugin.getPluginVersion as getPluginVersion\n   * @borrows Tech.getTech as getTech\n   * @borrows Tech.registerTech as registerTech\n   * @borrows TextTrack as TextTrack\n   * @borrows VideoTrack as VideoTrack\n   *\n   * @param  {string|Element} id\n   *         Video element or video element ID.\n   *\n   * @param  {Object} [options]\n   *         Options object for providing settings.\n   *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n   *\n   * @param  {PlayerReadyCallback} [ready]\n   *         A function to be called when the {@link Player} and {@link Tech} are\n   *         ready.\n   *\n   * @return {Player}\n   *         The `videojs()` function returns a {@link Player|Player} instance.\n   */\n  function videojs(id, options, ready) {\n    let player = videojs.getPlayer(id);\n    if (player) {\n      if (options) {\n        log$1.warn(`Player \"${id}\" is already initialised. Options will not be applied.`);\n      }\n      if (ready) {\n        player.ready(ready);\n      }\n      return player;\n    }\n    const el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n    if (!isEl(el)) {\n      throw new TypeError('The element or ID supplied is not valid. (videojs)');\n    }\n\n    // document.body.contains(el) will only check if el is contained within that one document.\n    // This causes problems for elements in iframes.\n    // Instead, use the element's ownerDocument instead of the global document.\n    // This will make sure that the element is indeed in the dom of that document.\n    // Additionally, check that the document in question has a default view.\n    // If the document is no longer attached to the dom, the defaultView of the document will be null.\n    // If element is inside Shadow DOM (e.g. is part of a Custom element), ownerDocument.body\n    // always returns false. Instead, use the Shadow DOM root.\n    const inShadowDom = 'getRootNode' in el ? el.getRootNode() instanceof window.ShadowRoot : false;\n    const rootNode = inShadowDom ? el.getRootNode() : el.ownerDocument.body;\n    if (!el.ownerDocument.defaultView || !rootNode.contains(el)) {\n      log$1.warn('The element supplied is not included in the DOM');\n    }\n    options = options || {};\n\n    // Store a copy of the el before modification, if it is to be restored in destroy()\n    // If div ingest, store the parent div\n    if (options.restoreEl === true) {\n      options.restoreEl = (el.parentNode && el.parentNode.hasAttribute && el.parentNode.hasAttribute('data-vjs-player') ? el.parentNode : el).cloneNode(true);\n    }\n    hooks('beforesetup').forEach(hookFunction => {\n      const opts = hookFunction(el, merge$2(options));\n      if (!isObject$1(opts) || Array.isArray(opts)) {\n        log$1.error('please return an object in beforesetup hooks');\n        return;\n      }\n      options = merge$2(options, opts);\n    });\n\n    // We get the current \"Player\" component here in case an integration has\n    // replaced it with a custom player.\n    const PlayerComponent = Component$1.getComponent('Player');\n    player = new PlayerComponent(el, options, ready);\n    hooks('setup').forEach(hookFunction => hookFunction(player));\n    return player;\n  }\n  videojs.hooks_ = hooks_;\n  videojs.hooks = hooks;\n  videojs.hook = hook;\n  videojs.hookOnce = hookOnce;\n  videojs.removeHook = removeHook;\n\n  // Add default styles\n  if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n    let style = $('.vjs-styles-defaults');\n    if (!style) {\n      style = createStyleElement('vjs-styles-defaults');\n      const head = $('head');\n      if (head) {\n        head.insertBefore(style, head.firstChild);\n      }\n      setTextContent(style, `\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: 56.25%\n      }\n    `);\n    }\n  }\n\n  // Run Auto-load players\n  // You have to wait at least once in case this script is loaded after your\n  // video in the DOM (weird behavior only with minified version)\n  autoSetupTimeout(1, videojs);\n\n  /**\n   * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n   *\n   * @type {string}\n   */\n  videojs.VERSION = version$5;\n\n  /**\n   * The global options object. These are the settings that take effect\n   * if no overrides are specified when the player is created.\n   *\n   * @type {Object}\n   */\n  videojs.options = Player.prototype.options_;\n\n  /**\n   * Get an object with the currently created players, keyed by player ID\n   *\n   * @return {Object}\n   *         The created players\n   */\n  videojs.getPlayers = () => Player.players;\n\n  /**\n   * Get a single player based on an ID or DOM element.\n   *\n   * This is useful if you want to check if an element or ID has an associated\n   * Video.js player, but not create one if it doesn't.\n   *\n   * @param   {string|Element} id\n   *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n   *          or a string matching the `id` of such an element.\n   *\n   * @return {Player|undefined}\n   *          A player instance or `undefined` if there is no player instance\n   *          matching the argument.\n   */\n  videojs.getPlayer = id => {\n    const players = Player.players;\n    let tag;\n    if (typeof id === 'string') {\n      const nId = normalizeId(id);\n      const player = players[nId];\n      if (player) {\n        return player;\n      }\n      tag = $('#' + nId);\n    } else {\n      tag = id;\n    }\n    if (isEl(tag)) {\n      const {\n        player,\n        playerId\n      } = tag;\n\n      // Element may have a `player` property referring to an already created\n      // player instance. If so, return that.\n      if (player || players[playerId]) {\n        return player || players[playerId];\n      }\n    }\n  };\n\n  /**\n   * Returns an array of all current players.\n   *\n   * @return {Array}\n   *         An array of all players. The array will be in the order that\n   *         `Object.keys` provides, which could potentially vary between\n   *         JavaScript engines.\n   *\n   */\n  videojs.getAllPlayers = () =>\n  // Disposed players leave a key with a `null` value, so we need to make sure\n  // we filter those out.\n  Object.keys(Player.players).map(k => Player.players[k]).filter(Boolean);\n  videojs.players = Player.players;\n  videojs.getComponent = Component$1.getComponent;\n\n  /**\n   * Register a component so it can referred to by name. Used when adding to other\n   * components, either through addChild `component.addChild('myComponent')` or through\n   * default children options  `{ children: ['myComponent'] }`.\n   *\n   * > NOTE: You could also just initialize the component before adding.\n   * `component.addChild(new MyComponent());`\n   *\n   * @param {string} name\n   *        The class name of the component\n   *\n   * @param {typeof Component} comp\n   *        The component class\n   *\n   * @return {typeof Component}\n   *         The newly registered component\n   */\n  videojs.registerComponent = (name, comp) => {\n    if (Tech.isTech(comp)) {\n      log$1.warn(`The ${name} tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)`);\n    }\n    return Component$1.registerComponent.call(Component$1, name, comp);\n  };\n  videojs.getTech = Tech.getTech;\n  videojs.registerTech = Tech.registerTech;\n  videojs.use = use;\n\n  /**\n   * An object that can be returned by a middleware to signify\n   * that the middleware is being terminated.\n   *\n   * @type {object}\n   * @property {object} middleware.TERMINATOR\n   */\n  Object.defineProperty(videojs, 'middleware', {\n    value: {},\n    writeable: false,\n    enumerable: true\n  });\n  Object.defineProperty(videojs.middleware, 'TERMINATOR', {\n    value: TERMINATOR,\n    writeable: false,\n    enumerable: true\n  });\n\n  /**\n   * A reference to the {@link module:browser|browser utility module} as an object.\n   *\n   * @type {Object}\n   * @see  {@link module:browser|browser}\n   */\n  videojs.browser = browser;\n\n  /**\n   * A reference to the {@link module:obj|obj utility module} as an object.\n   *\n   * @type {Object}\n   * @see  {@link module:obj|obj}\n   */\n  videojs.obj = Obj;\n\n  /**\n   * Deprecated reference to the {@link module:obj.merge|merge function}\n   *\n   * @type {Function}\n   * @see {@link module:obj.merge|merge}\n   * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.merge instead.\n   */\n  videojs.mergeOptions = deprecateForMajor(9, 'videojs.mergeOptions', 'videojs.obj.merge', merge$2);\n\n  /**\n   * Deprecated reference to the {@link module:obj.defineLazyProperty|defineLazyProperty function}\n   *\n   * @type {Function}\n   * @see {@link module:obj.defineLazyProperty|defineLazyProperty}\n   * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.defineLazyProperty instead.\n   */\n  videojs.defineLazyProperty = deprecateForMajor(9, 'videojs.defineLazyProperty', 'videojs.obj.defineLazyProperty', defineLazyProperty);\n\n  /**\n   * Deprecated reference to the {@link module:fn.bind_|fn.bind_ function}\n   *\n   * @type {Function}\n   * @see {@link module:fn.bind_|fn.bind_}\n   * @deprecated Deprecated and will be removed in 9.0. Please use native Function.prototype.bind instead.\n   */\n  videojs.bind = deprecateForMajor(9, 'videojs.bind', 'native Function.prototype.bind', bind_);\n  videojs.registerPlugin = Plugin.registerPlugin;\n  videojs.deregisterPlugin = Plugin.deregisterPlugin;\n\n  /**\n   * Deprecated method to register a plugin with Video.js\n   *\n   * @deprecated Deprecated and will be removed in 9.0. Use videojs.registerPlugin() instead.\n   *\n   * @param {string} name\n   *        The plugin name\n  *\n   * @param {typeof Plugin|Function} plugin\n   *         The plugin sub-class or function\n   *\n   * @return {typeof Plugin|Function}\n   */\n  videojs.plugin = (name, plugin) => {\n    log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n    return Plugin.registerPlugin(name, plugin);\n  };\n  videojs.getPlugins = Plugin.getPlugins;\n  videojs.getPlugin = Plugin.getPlugin;\n  videojs.getPluginVersion = Plugin.getPluginVersion;\n\n  /**\n   * Adding languages so that they're available to all players.\n   * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n   *\n   * @param {string} code\n   *        The language code or dictionary property\n   *\n   * @param {Object} data\n   *        The data values to be translated\n   *\n   * @return {Object}\n   *         The resulting language dictionary object\n   */\n  videojs.addLanguage = function (code, data) {\n    code = ('' + code).toLowerCase();\n    videojs.options.languages = merge$2(videojs.options.languages, {\n      [code]: data\n    });\n    return videojs.options.languages[code];\n  };\n\n  /**\n   * A reference to the {@link module:log|log utility module} as an object.\n   *\n   * @type {Function}\n   * @see  {@link module:log|log}\n   */\n  videojs.log = log$1;\n  videojs.createLogger = createLogger;\n\n  /**\n   * A reference to the {@link module:time|time utility module} as an object.\n   *\n   * @type {Object}\n   * @see {@link module:time|time}\n   */\n  videojs.time = Time;\n\n  /**\n   * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n   *\n   * @type {Function}\n   * @see {@link module:time.createTimeRanges|createTimeRanges}\n   * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n   */\n  videojs.createTimeRange = deprecateForMajor(9, 'videojs.createTimeRange', 'videojs.time.createTimeRanges', createTimeRanges$1);\n\n  /**\n   * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n   *\n   * @type {Function}\n   * @see {@link module:time.createTimeRanges|createTimeRanges}\n   * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n   */\n  videojs.createTimeRanges = deprecateForMajor(9, 'videojs.createTimeRanges', 'videojs.time.createTimeRanges', createTimeRanges$1);\n\n  /**\n   * Deprecated reference to the {@link module:time.formatTime|formatTime function}\n   *\n   * @type {Function}\n   * @see {@link module:time.formatTime|formatTime}\n   * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.format instead.\n   */\n  videojs.formatTime = deprecateForMajor(9, 'videojs.formatTime', 'videojs.time.formatTime', formatTime);\n\n  /**\n   * Deprecated reference to the {@link module:time.setFormatTime|setFormatTime function}\n   *\n   * @type {Function}\n   * @see {@link module:time.setFormatTime|setFormatTime}\n   * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.setFormat instead.\n   */\n  videojs.setFormatTime = deprecateForMajor(9, 'videojs.setFormatTime', 'videojs.time.setFormatTime', setFormatTime);\n\n  /**\n   * Deprecated reference to the {@link module:time.resetFormatTime|resetFormatTime function}\n   *\n   * @type {Function}\n   * @see {@link module:time.resetFormatTime|resetFormatTime}\n   * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.resetFormat instead.\n   */\n  videojs.resetFormatTime = deprecateForMajor(9, 'videojs.resetFormatTime', 'videojs.time.resetFormatTime', resetFormatTime);\n\n  /**\n   * Deprecated reference to the {@link module:url.parseUrl|Url.parseUrl function}\n   *\n   * @type {Function}\n   * @see {@link module:url.parseUrl|parseUrl}\n   * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.parseUrl instead.\n   */\n  videojs.parseUrl = deprecateForMajor(9, 'videojs.parseUrl', 'videojs.url.parseUrl', parseUrl);\n\n  /**\n   * Deprecated reference to the {@link module:url.isCrossOrigin|Url.isCrossOrigin function}\n   *\n   * @type {Function}\n   * @see {@link module:url.isCrossOrigin|isCrossOrigin}\n   * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.isCrossOrigin instead.\n   */\n  videojs.isCrossOrigin = deprecateForMajor(9, 'videojs.isCrossOrigin', 'videojs.url.isCrossOrigin', isCrossOrigin);\n  videojs.EventTarget = EventTarget$2;\n  videojs.any = any;\n  videojs.on = on;\n  videojs.one = one;\n  videojs.off = off;\n  videojs.trigger = trigger;\n\n  /**\n   * A cross-browser XMLHttpRequest wrapper.\n   *\n   * @function\n   * @param    {Object} options\n   *           Settings for the request.\n   *\n   * @return   {XMLHttpRequest|XDomainRequest}\n   *           The request object.\n   *\n   * @see      https://github.com/Raynos/xhr\n   */\n  videojs.xhr = lib;\n  videojs.TextTrack = TextTrack;\n  videojs.AudioTrack = AudioTrack;\n  videojs.VideoTrack = VideoTrack;\n  ['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(k => {\n    videojs[k] = function () {\n      log$1.warn(`videojs.${k}() is deprecated; use videojs.dom.${k}() instead`);\n      return Dom[k].apply(null, arguments);\n    };\n  });\n  videojs.computedStyle = deprecateForMajor(9, 'videojs.computedStyle', 'videojs.dom.computedStyle', computedStyle);\n\n  /**\n   * A reference to the {@link module:dom|DOM utility module} as an object.\n   *\n   * @type {Object}\n   * @see {@link module:dom|dom}\n   */\n  videojs.dom = Dom;\n\n  /**\n   * A reference to the {@link module:fn|fn utility module} as an object.\n   *\n   * @type {Object}\n   * @see {@link module:fn|fn}\n   */\n  videojs.fn = Fn;\n\n  /**\n   * A reference to the {@link module:num|num utility module} as an object.\n   *\n   * @type {Object}\n   * @see {@link module:num|num}\n   */\n  videojs.num = Num;\n\n  /**\n   * A reference to the {@link module:str|str utility module} as an object.\n   *\n   * @type {Object}\n   * @see {@link module:str|str}\n   */\n  videojs.str = Str;\n\n  /**\n   * A reference to the {@link module:url|URL utility module} as an object.\n   *\n   * @type {Object}\n   * @see {@link module:url|url}\n   */\n  videojs.url = Url;\n\n  // The list of possible error types to occur in video.js\n  videojs.Error = VjsErrors;\n\n  createCommonjsModule(function (module, exports) {\n    /*! @name videojs-contrib-quality-levels @version 4.1.0 @license Apache-2.0 */\n    (function (global, factory) {\n      module.exports = factory(videojs) ;\n    })(commonjsGlobal, function (videojs) {\n\n      function _interopDefaultLegacy(e) {\n        return e && typeof e === 'object' && 'default' in e ? e : {\n          'default': e\n        };\n      }\n      var videojs__default = /*#__PURE__*/_interopDefaultLegacy(videojs);\n\n      /**\n       * A single QualityLevel.\n       *\n       * interface QualityLevel {\n       *   readonly attribute DOMString id;\n       *            attribute DOMString label;\n       *   readonly attribute long width;\n       *   readonly attribute long height;\n       *   readonly attribute long bitrate;\n       *            attribute boolean enabled;\n       * };\n       *\n       * @class QualityLevel\n       */\n      class QualityLevel {\n        /**\n         * Creates a QualityLevel\n         *\n         * @param {Representation|Object} representation The representation of the quality level\n         * @param {string}   representation.id        Unique id of the QualityLevel\n         * @param {number=}  representation.width     Resolution width of the QualityLevel\n         * @param {number=}  representation.height    Resolution height of the QualityLevel\n         * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n         * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n         * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n         */\n        constructor(representation) {\n          let level = this; // eslint-disable-line\n\n          level.id = representation.id;\n          level.label = level.id;\n          level.width = representation.width;\n          level.height = representation.height;\n          level.bitrate = representation.bandwidth;\n          level.frameRate = representation.frameRate;\n          level.enabled_ = representation.enabled;\n          Object.defineProperty(level, 'enabled', {\n            /**\n             * Get whether the QualityLevel is enabled.\n             *\n             * @return {boolean} True if the QualityLevel is enabled.\n             */\n            get() {\n              return level.enabled_();\n            },\n            /**\n             * Enable or disable the QualityLevel.\n             *\n             * @param {boolean} enable true to enable QualityLevel, false to disable.\n             */\n            set(enable) {\n              level.enabled_(enable);\n            }\n          });\n          return level;\n        }\n      }\n\n      /**\n       * A list of QualityLevels.\n       *\n       * interface QualityLevelList : EventTarget {\n       *   getter QualityLevel (unsigned long index);\n       *   readonly attribute unsigned long length;\n       *   readonly attribute long selectedIndex;\n       *\n       *   void addQualityLevel(QualityLevel qualityLevel)\n       *   void removeQualityLevel(QualityLevel remove)\n       *   QualityLevel? getQualityLevelById(DOMString id);\n       *\n       *   attribute EventHandler onchange;\n       *   attribute EventHandler onaddqualitylevel;\n       *   attribute EventHandler onremovequalitylevel;\n       * };\n       *\n       * @extends videojs.EventTarget\n       * @class QualityLevelList\n       */\n      class QualityLevelList extends videojs__default[\"default\"].EventTarget {\n        /**\n         * Creates a QualityLevelList.\n         */\n        constructor() {\n          super();\n          let list = this; // eslint-disable-line\n\n          list.levels_ = [];\n          list.selectedIndex_ = -1;\n\n          /**\n           * Get the index of the currently selected QualityLevel.\n           *\n           * @returns {number} The index of the selected QualityLevel. -1 if none selected.\n           * @readonly\n           */\n          Object.defineProperty(list, 'selectedIndex', {\n            get() {\n              return list.selectedIndex_;\n            }\n          });\n\n          /**\n           * Get the length of the list of QualityLevels.\n           *\n           * @returns {number} The length of the list.\n           * @readonly\n           */\n          Object.defineProperty(list, 'length', {\n            get() {\n              return list.levels_.length;\n            }\n          });\n          list[Symbol.iterator] = () => list.levels_.values();\n          return list;\n        }\n\n        /**\n         * Adds a quality level to the list.\n         *\n         * @param {Representation|Object} representation The representation of the quality level\n         * @param {string}   representation.id        Unique id of the QualityLevel\n         * @param {number=}  representation.width     Resolution width of the QualityLevel\n         * @param {number=}  representation.height    Resolution height of the QualityLevel\n         * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n         * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n         * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n         * @return {QualityLevel} the QualityLevel added to the list\n         * @method addQualityLevel\n         */\n        addQualityLevel(representation) {\n          let qualityLevel = this.getQualityLevelById(representation.id);\n\n          // Do not add duplicate quality levels\n          if (qualityLevel) {\n            return qualityLevel;\n          }\n          const index = this.levels_.length;\n          qualityLevel = new QualityLevel(representation);\n          if (!('' + index in this)) {\n            Object.defineProperty(this, index, {\n              get() {\n                return this.levels_[index];\n              }\n            });\n          }\n          this.levels_.push(qualityLevel);\n          this.trigger({\n            qualityLevel,\n            type: 'addqualitylevel'\n          });\n          return qualityLevel;\n        }\n\n        /**\n         * Removes a quality level from the list.\n         *\n         * @param {QualityLevel} qualityLevel The QualityLevel to remove from the list.\n         * @return {QualityLevel|null} the QualityLevel removed or null if nothing removed\n         * @method removeQualityLevel\n         */\n        removeQualityLevel(qualityLevel) {\n          let removed = null;\n          for (let i = 0, l = this.length; i < l; i++) {\n            if (this[i] === qualityLevel) {\n              removed = this.levels_.splice(i, 1)[0];\n              if (this.selectedIndex_ === i) {\n                this.selectedIndex_ = -1;\n              } else if (this.selectedIndex_ > i) {\n                this.selectedIndex_--;\n              }\n              break;\n            }\n          }\n          if (removed) {\n            this.trigger({\n              qualityLevel,\n              type: 'removequalitylevel'\n            });\n          }\n          return removed;\n        }\n\n        /**\n         * Searches for a QualityLevel with the given id.\n         *\n         * @param {string} id The id of the QualityLevel to find.\n         * @return {QualityLevel|null} The QualityLevel with id, or null if not found.\n         * @method getQualityLevelById\n         */\n        getQualityLevelById(id) {\n          for (let i = 0, l = this.length; i < l; i++) {\n            const level = this[i];\n            if (level.id === id) {\n              return level;\n            }\n          }\n          return null;\n        }\n\n        /**\n         * Resets the list of QualityLevels to empty\n         *\n         * @method dispose\n         */\n        dispose() {\n          this.selectedIndex_ = -1;\n          this.levels_.length = 0;\n        }\n      }\n\n      /**\n       * change - The selected QualityLevel has changed.\n       * addqualitylevel - A QualityLevel has been added to the QualityLevelList.\n       * removequalitylevel - A QualityLevel has been removed from the QualityLevelList.\n       */\n      QualityLevelList.prototype.allowedEvents_ = {\n        change: 'change',\n        addqualitylevel: 'addqualitylevel',\n        removequalitylevel: 'removequalitylevel'\n      };\n\n      // emulate attribute EventHandler support to allow for feature detection\n      for (const event in QualityLevelList.prototype.allowedEvents_) {\n        QualityLevelList.prototype['on' + event] = null;\n      }\n      var version = \"4.1.0\";\n\n      /**\n       * Initialization function for the qualityLevels plugin. Sets up the QualityLevelList and\n       * event handlers.\n       *\n       * @param {Player} player Player object.\n       * @param {Object} options Plugin options object.\n       * @return {QualityLevelList} a list of QualityLevels\n       */\n      const initPlugin = function (player, options) {\n        const originalPluginFn = player.qualityLevels;\n        const qualityLevelList = new QualityLevelList();\n        const disposeHandler = function () {\n          qualityLevelList.dispose();\n          player.qualityLevels = originalPluginFn;\n          player.off('dispose', disposeHandler);\n        };\n        player.on('dispose', disposeHandler);\n        player.qualityLevels = () => qualityLevelList;\n        player.qualityLevels.VERSION = version;\n        return qualityLevelList;\n      };\n\n      /**\n       * A video.js plugin.\n       *\n       * In the plugin function, the value of `this` is a video.js `Player`\n       * instance. You cannot rely on the player being in a \"ready\" state here,\n       * depending on how the plugin is invoked. This may or may not be important\n       * to you; if not, remove the wait for \"ready\"!\n       *\n       * @param {Object} options Plugin options object\n       * @return {QualityLevelList} a list of QualityLevels\n       */\n      const qualityLevels = function (options) {\n        return initPlugin(this, videojs__default[\"default\"].obj.merge({}, options));\n      };\n\n      // Register the plugin with video.js.\n      videojs__default[\"default\"].registerPlugin('qualityLevels', qualityLevels);\n\n      // Include the version number.\n      qualityLevels.VERSION = version;\n      return qualityLevels;\n    });\n  });\n\n  var urlToolkit = createCommonjsModule(function (module, exports) {\n    // see https://tools.ietf.org/html/rfc1808\n\n    (function (root) {\n      var URL_REGEX = /^(?=((?:[a-zA-Z0-9+\\-.]+:)?))\\1(?=((?:\\/\\/[^\\/?#]*)?))\\2(?=((?:(?:[^?#\\/]*\\/)*[^;?#\\/]*)?))\\3((?:;[^?#]*)?)(\\?[^#]*)?(#[^]*)?$/;\n      var FIRST_SEGMENT_REGEX = /^(?=([^\\/?#]*))\\1([^]*)$/;\n      var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n      var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/)[^\\/]*(?=\\/)/g;\n      var URLToolkit = {\n        // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n        // E.g\n        // With opts.alwaysNormalize = false (default, spec compliant)\n        // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n        // With opts.alwaysNormalize = true (not spec compliant)\n        // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n        buildAbsoluteURL: function (baseURL, relativeURL, opts) {\n          opts = opts || {};\n          // remove any remaining space and CRLF\n          baseURL = baseURL.trim();\n          relativeURL = relativeURL.trim();\n          if (!relativeURL) {\n            // 2a) If the embedded URL is entirely empty, it inherits the\n            // entire base URL (i.e., is set equal to the base URL)\n            // and we are done.\n            if (!opts.alwaysNormalize) {\n              return baseURL;\n            }\n            var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n            if (!basePartsForNormalise) {\n              throw new Error('Error trying to parse base URL.');\n            }\n            basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n            return URLToolkit.buildURLFromParts(basePartsForNormalise);\n          }\n          var relativeParts = URLToolkit.parseURL(relativeURL);\n          if (!relativeParts) {\n            throw new Error('Error trying to parse relative URL.');\n          }\n          if (relativeParts.scheme) {\n            // 2b) If the embedded URL starts with a scheme name, it is\n            // interpreted as an absolute URL and we are done.\n            if (!opts.alwaysNormalize) {\n              return relativeURL;\n            }\n            relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n            return URLToolkit.buildURLFromParts(relativeParts);\n          }\n          var baseParts = URLToolkit.parseURL(baseURL);\n          if (!baseParts) {\n            throw new Error('Error trying to parse base URL.');\n          }\n          if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n            // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n            // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n            var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n            baseParts.netLoc = pathParts[1];\n            baseParts.path = pathParts[2];\n          }\n          if (baseParts.netLoc && !baseParts.path) {\n            baseParts.path = '/';\n          }\n          var builtParts = {\n            // 2c) Otherwise, the embedded URL inherits the scheme of\n            // the base URL.\n            scheme: baseParts.scheme,\n            netLoc: relativeParts.netLoc,\n            path: null,\n            params: relativeParts.params,\n            query: relativeParts.query,\n            fragment: relativeParts.fragment\n          };\n          if (!relativeParts.netLoc) {\n            // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n            // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n            // (if any) of the base URL.\n            builtParts.netLoc = baseParts.netLoc;\n            // 4) If the embedded URL path is preceded by a slash \"/\", the\n            // path is not relative and we skip to Step 7.\n            if (relativeParts.path[0] !== '/') {\n              if (!relativeParts.path) {\n                // 5) If the embedded URL path is empty (and not preceded by a\n                // slash), then the embedded URL inherits the base URL path\n                builtParts.path = baseParts.path;\n                // 5a) if the embedded URL's <params> is non-empty, we skip to\n                // step 7; otherwise, it inherits the <params> of the base\n                // URL (if any) and\n                if (!relativeParts.params) {\n                  builtParts.params = baseParts.params;\n                  // 5b) if the embedded URL's <query> is non-empty, we skip to\n                  // step 7; otherwise, it inherits the <query> of the base\n                  // URL (if any) and we skip to step 7.\n                  if (!relativeParts.query) {\n                    builtParts.query = baseParts.query;\n                  }\n                }\n              } else {\n                // 6) The last segment of the base URL's path (anything\n                // following the rightmost slash \"/\", or the entire path if no\n                // slash is present) is removed and the embedded URL's path is\n                // appended in its place.\n                var baseURLPath = baseParts.path;\n                var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n                builtParts.path = URLToolkit.normalizePath(newPath);\n              }\n            }\n          }\n          if (builtParts.path === null) {\n            builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n          }\n          return URLToolkit.buildURLFromParts(builtParts);\n        },\n        parseURL: function (url) {\n          var parts = URL_REGEX.exec(url);\n          if (!parts) {\n            return null;\n          }\n          return {\n            scheme: parts[1] || '',\n            netLoc: parts[2] || '',\n            path: parts[3] || '',\n            params: parts[4] || '',\n            query: parts[5] || '',\n            fragment: parts[6] || ''\n          };\n        },\n        normalizePath: function (path) {\n          // The following operations are\n          // then applied, in order, to the new path:\n          // 6a) All occurrences of \"./\", where \".\" is a complete path\n          // segment, are removed.\n          // 6b) If the path ends with \".\" as a complete path segment,\n          // that \".\" is removed.\n          path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n          // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n          // complete path segment not equal to \"..\", are removed.\n          // Removal of these path segments is performed iteratively,\n          // removing the leftmost matching pattern on each iteration,\n          // until no matching pattern remains.\n          // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n          // complete path segment not equal to \"..\", that\n          // \"<segment>/..\" is removed.\n          while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {}\n          return path.split('').reverse().join('');\n        },\n        buildURLFromParts: function (parts) {\n          return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n        }\n      };\n      module.exports = URLToolkit;\n    })();\n  });\n\n  var DEFAULT_LOCATION = 'http://example.com';\n  var resolveUrl$1 = function resolveUrl(baseUrl, relativeUrl) {\n    // return early if we don't need to resolve\n    if (/^[a-z]+:/i.test(relativeUrl)) {\n      return relativeUrl;\n    } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n    if (/^data:/.test(baseUrl)) {\n      baseUrl = window.location && window.location.href || '';\n    } // IE11 supports URL but not the URL constructor\n    // feature detect the behavior we want\n\n    var nativeURL = typeof window.URL === 'function';\n    var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n    // and if baseUrl isn't an absolute url\n\n    var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n    if (nativeURL) {\n      baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION);\n    } else if (!/\\/\\//i.test(baseUrl)) {\n      baseUrl = urlToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n    }\n    if (nativeURL) {\n      var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n      // and if we're location-less, remove the location\n      // otherwise, return the url unmodified\n\n      if (removeLocation) {\n        return newUrl.href.slice(DEFAULT_LOCATION.length);\n      } else if (protocolLess) {\n        return newUrl.href.slice(newUrl.protocol.length);\n      }\n      return newUrl.href;\n    }\n    return urlToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n  };\n\n  /**\n   * @file stream.js\n   */\n\n  /**\n   * A lightweight readable stream implemention that handles event dispatching.\n   *\n   * @class Stream\n   */\n  var Stream = /*#__PURE__*/function () {\n    function Stream() {\n      this.listeners = {};\n    }\n    /**\n     * Add a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n    var _proto = Stream.prototype;\n    _proto.on = function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n      this.listeners[type].push(listener);\n    }\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {boolean} if we could turn it off or not\n     */;\n    _proto.off = function off(type, listener) {\n      if (!this.listeners[type]) {\n        return false;\n      }\n      var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n      // In Video.js we slice listener functions\n      // on trigger so that it does not mess up the order\n      // while we loop through.\n      //\n      // Here we slice on off so that the loop in trigger\n      // can continue using it's old reference to loop without\n      // messing up the order.\n\n      this.listeners[type] = this.listeners[type].slice(0);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {string} type the event name\n     */;\n    _proto.trigger = function trigger(type) {\n      var callbacks = this.listeners[type];\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n      if (arguments.length === 2) {\n        var length = callbacks.length;\n        for (var i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        var args = Array.prototype.slice.call(arguments, 1);\n        var _length = callbacks.length;\n        for (var _i = 0; _i < _length; ++_i) {\n          callbacks[_i].apply(this, args);\n        }\n      }\n    }\n    /**\n     * Destroys the stream and cleans up.\n     */;\n    _proto.dispose = function dispose() {\n      this.listeners = {};\n    }\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */;\n    _proto.pipe = function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    };\n    return Stream;\n  }();\n\n  var atob$1 = function atob(s) {\n    return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n  };\n  function decodeB64ToUint8Array$1(b64Text) {\n    var decodedString = atob$1(b64Text);\n    var array = new Uint8Array(decodedString.length);\n    for (var i = 0; i < decodedString.length; i++) {\n      array[i] = decodedString.charCodeAt(i);\n    }\n    return array;\n  }\n\n  /*! @name m3u8-parser @version 7.1.0 @license Apache-2.0 */\n\n  /**\n   * @file m3u8/line-stream.js\n   */\n  /**\n   * A stream that buffers string input and generates a `data` event for each\n   * line.\n   *\n   * @class LineStream\n   * @extends Stream\n   */\n\n  class LineStream extends Stream {\n    constructor() {\n      super();\n      this.buffer = '';\n    }\n    /**\n     * Add new data to be parsed.\n     *\n     * @param {string} data the text to process\n     */\n\n    push(data) {\n      let nextNewline;\n      this.buffer += data;\n      nextNewline = this.buffer.indexOf('\\n');\n      for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n        this.trigger('data', this.buffer.substring(0, nextNewline));\n        this.buffer = this.buffer.substring(nextNewline + 1);\n      }\n    }\n  }\n  const TAB = String.fromCharCode(0x09);\n  const parseByterange = function (byterangeString) {\n    // optionally match and capture 0+ digits before `@`\n    // optionally match and capture 0+ digits after `@`\n    const match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n    const result = {};\n    if (match[1]) {\n      result.length = parseInt(match[1], 10);\n    }\n    if (match[2]) {\n      result.offset = parseInt(match[2], 10);\n    }\n    return result;\n  };\n  /**\n   * \"forgiving\" attribute list psuedo-grammar:\n   * attributes -> keyvalue (',' keyvalue)*\n   * keyvalue   -> key '=' value\n   * key        -> [^=]*\n   * value      -> '\"' [^\"]* '\"' | [^,]*\n   */\n\n  const attributeSeparator = function () {\n    const key = '[^=]*';\n    const value = '\"[^\"]*\"|[^,]*';\n    const keyvalue = '(?:' + key + ')=(?:' + value + ')';\n    return new RegExp('(?:^|,)(' + keyvalue + ')');\n  };\n  /**\n   * Parse attributes from a line given the separator\n   *\n   * @param {string} attributes the attribute line to parse\n   */\n\n  const parseAttributes$1 = function (attributes) {\n    const result = {};\n    if (!attributes) {\n      return result;\n    } // split the string using attributes as the separator\n\n    const attrs = attributes.split(attributeSeparator());\n    let i = attrs.length;\n    let attr;\n    while (i--) {\n      // filter out unmatched portions of the string\n      if (attrs[i] === '') {\n        continue;\n      } // split the key and value\n\n      attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n      attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n      attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n      attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n      result[attr[0]] = attr[1];\n    }\n    return result;\n  };\n  /**\n   * A line-level M3U8 parser event stream. It expects to receive input one\n   * line at a time and performs a context-free parse of its contents. A stream\n   * interpretation of a manifest can be useful if the manifest is expected to\n   * be too large to fit comfortably into memory or the entirety of the input\n   * is not immediately available. Otherwise, it's probably much easier to work\n   * with a regular `Parser` object.\n   *\n   * Produces `data` events with an object that captures the parser's\n   * interpretation of the input. That object has a property `tag` that is one\n   * of `uri`, `comment`, or `tag`. URIs only have a single additional\n   * property, `line`, which captures the entirety of the input without\n   * interpretation. Comments similarly have a single additional property\n   * `text` which is the input without the leading `#`.\n   *\n   * Tags always have a property `tagType` which is the lower-cased version of\n   * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n   * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n   * tags are given the tag type `unknown` and a single additional property\n   * `data` with the remainder of the input.\n   *\n   * @class ParseStream\n   * @extends Stream\n   */\n\n  class ParseStream extends Stream {\n    constructor() {\n      super();\n      this.customParsers = [];\n      this.tagMappers = [];\n    }\n    /**\n     * Parses an additional line of input.\n     *\n     * @param {string} line a single line of an M3U8 file to parse\n     */\n\n    push(line) {\n      let match;\n      let event; // strip whitespace\n\n      line = line.trim();\n      if (line.length === 0) {\n        // ignore empty lines\n        return;\n      } // URIs\n\n      if (line[0] !== '#') {\n        this.trigger('data', {\n          type: 'uri',\n          uri: line\n        });\n        return;\n      } // map tags\n\n      const newLines = this.tagMappers.reduce((acc, mapper) => {\n        const mappedLine = mapper(line); // skip if unchanged\n\n        if (mappedLine === line) {\n          return acc;\n        }\n        return acc.concat([mappedLine]);\n      }, [line]);\n      newLines.forEach(newLine => {\n        for (let i = 0; i < this.customParsers.length; i++) {\n          if (this.customParsers[i].call(this, newLine)) {\n            return;\n          }\n        } // Comments\n\n        if (newLine.indexOf('#EXT') !== 0) {\n          this.trigger('data', {\n            type: 'comment',\n            text: newLine.slice(1)\n          });\n          return;\n        } // strip off any carriage returns here so the regex matching\n        // doesn't have to account for them.\n\n        newLine = newLine.replace('\\r', ''); // Tags\n\n        match = /^#EXTM3U/.exec(newLine);\n        if (match) {\n          this.trigger('data', {\n            type: 'tag',\n            tagType: 'm3u'\n          });\n          return;\n        }\n        match = /^#EXTINF:([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'inf'\n          };\n          if (match[1]) {\n            event.duration = parseFloat(match[1]);\n          }\n          if (match[2]) {\n            event.title = match[2];\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-TARGETDURATION:([0-9.]*)?/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'targetduration'\n          };\n          if (match[1]) {\n            event.duration = parseInt(match[1], 10);\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-VERSION:([0-9.]*)?/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'version'\n          };\n          if (match[1]) {\n            event.version = parseInt(match[1], 10);\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-MEDIA-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'media-sequence'\n          };\n          if (match[1]) {\n            event.number = parseInt(match[1], 10);\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-DISCONTINUITY-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'discontinuity-sequence'\n          };\n          if (match[1]) {\n            event.number = parseInt(match[1], 10);\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-PLAYLIST-TYPE:(.*)?$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'playlist-type'\n          };\n          if (match[1]) {\n            event.playlistType = match[1];\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-BYTERANGE:(.*)?$/.exec(newLine);\n        if (match) {\n          event = _extends$1(parseByterange(match[1]), {\n            type: 'tag',\n            tagType: 'byterange'\n          });\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-ALLOW-CACHE:(YES|NO)?/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'allow-cache'\n          };\n          if (match[1]) {\n            event.allowed = !/NO/.test(match[1]);\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-MAP:(.*)$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'map'\n          };\n          if (match[1]) {\n            const attributes = parseAttributes$1(match[1]);\n            if (attributes.URI) {\n              event.uri = attributes.URI;\n            }\n            if (attributes.BYTERANGE) {\n              event.byterange = parseByterange(attributes.BYTERANGE);\n            }\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-STREAM-INF:(.*)$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'stream-inf'\n          };\n          if (match[1]) {\n            event.attributes = parseAttributes$1(match[1]);\n            if (event.attributes.RESOLUTION) {\n              const split = event.attributes.RESOLUTION.split('x');\n              const resolution = {};\n              if (split[0]) {\n                resolution.width = parseInt(split[0], 10);\n              }\n              if (split[1]) {\n                resolution.height = parseInt(split[1], 10);\n              }\n              event.attributes.RESOLUTION = resolution;\n            }\n            if (event.attributes.BANDWIDTH) {\n              event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n            }\n            if (event.attributes['FRAME-RATE']) {\n              event.attributes['FRAME-RATE'] = parseFloat(event.attributes['FRAME-RATE']);\n            }\n            if (event.attributes['PROGRAM-ID']) {\n              event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n            }\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-MEDIA:(.*)$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'media'\n          };\n          if (match[1]) {\n            event.attributes = parseAttributes$1(match[1]);\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-ENDLIST/.exec(newLine);\n        if (match) {\n          this.trigger('data', {\n            type: 'tag',\n            tagType: 'endlist'\n          });\n          return;\n        }\n        match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n        if (match) {\n          this.trigger('data', {\n            type: 'tag',\n            tagType: 'discontinuity'\n          });\n          return;\n        }\n        match = /^#EXT-X-PROGRAM-DATE-TIME:(.*)$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'program-date-time'\n          };\n          if (match[1]) {\n            event.dateTimeString = match[1];\n            event.dateTimeObject = new Date(match[1]);\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-KEY:(.*)$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'key'\n          };\n          if (match[1]) {\n            event.attributes = parseAttributes$1(match[1]); // parse the IV string into a Uint32Array\n\n            if (event.attributes.IV) {\n              if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n                event.attributes.IV = event.attributes.IV.substring(2);\n              }\n              event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n              event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n              event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n              event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n              event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n              event.attributes.IV = new Uint32Array(event.attributes.IV);\n            }\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-START:(.*)$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'start'\n          };\n          if (match[1]) {\n            event.attributes = parseAttributes$1(match[1]);\n            event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n            event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-CUE-OUT-CONT:(.*)?$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'cue-out-cont'\n          };\n          if (match[1]) {\n            event.data = match[1];\n          } else {\n            event.data = '';\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-CUE-OUT:(.*)?$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'cue-out'\n          };\n          if (match[1]) {\n            event.data = match[1];\n          } else {\n            event.data = '';\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-CUE-IN:(.*)?$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'cue-in'\n          };\n          if (match[1]) {\n            event.data = match[1];\n          } else {\n            event.data = '';\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'skip'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n            event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n          }\n          if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n            event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'part'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['DURATION'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseFloat(event.attributes[key]);\n            }\n          });\n          ['INDEPENDENT', 'GAP'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = /YES/.test(event.attributes[key]);\n            }\n          });\n          if (event.attributes.hasOwnProperty('BYTERANGE')) {\n            event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'server-control'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseFloat(event.attributes[key]);\n            }\n          });\n          ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = /YES/.test(event.attributes[key]);\n            }\n          });\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'part-inf'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['PART-TARGET'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseFloat(event.attributes[key]);\n            }\n          });\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'preload-hint'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseInt(event.attributes[key], 10);\n              const subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n              event.attributes.byterange = event.attributes.byterange || {};\n              event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n              delete event.attributes[key];\n            }\n          });\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'rendition-report'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseInt(event.attributes[key], 10);\n            }\n          });\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-DATERANGE:(.*)$/.exec(newLine);\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'daterange'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['ID', 'CLASS'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = String(event.attributes[key]);\n            }\n          });\n          ['START-DATE', 'END-DATE'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = new Date(event.attributes[key]);\n            }\n          });\n          ['DURATION', 'PLANNED-DURATION'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseFloat(event.attributes[key]);\n            }\n          });\n          ['END-ON-NEXT'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = /YES/i.test(event.attributes[key]);\n            }\n          });\n          ['SCTE35-CMD', ' SCTE35-OUT', 'SCTE35-IN'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = event.attributes[key].toString(16);\n            }\n          });\n          const clientAttributePattern = /^X-([A-Z]+-)+[A-Z]+$/;\n          for (const key in event.attributes) {\n            if (!clientAttributePattern.test(key)) {\n              continue;\n            }\n            const isHexaDecimal = /[0-9A-Fa-f]{6}/g.test(event.attributes[key]);\n            const isDecimalFloating = /^\\d+(\\.\\d+)?$/.test(event.attributes[key]);\n            event.attributes[key] = isHexaDecimal ? event.attributes[key].toString(16) : isDecimalFloating ? parseFloat(event.attributes[key]) : String(event.attributes[key]);\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-INDEPENDENT-SEGMENTS/.exec(newLine);\n        if (match) {\n          this.trigger('data', {\n            type: 'tag',\n            tagType: 'independent-segments'\n          });\n          return;\n        }\n        match = /^#EXT-X-CONTENT-STEERING:(.*)$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'content-steering'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          this.trigger('data', event);\n          return;\n        } // unknown tag type\n\n        this.trigger('data', {\n          type: 'tag',\n          data: newLine.slice(4)\n        });\n      });\n    }\n    /**\n     * Add a parser for custom headers\n     *\n     * @param {Object}   options              a map of options for the added parser\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {string}   options.customType   the custom type to register to the output\n     * @param {Function} [options.dataParser] function to parse the line into an object\n     * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n     */\n\n    addParser({\n      expression,\n      customType,\n      dataParser,\n      segment\n    }) {\n      if (typeof dataParser !== 'function') {\n        dataParser = line => line;\n      }\n      this.customParsers.push(line => {\n        const match = expression.exec(line);\n        if (match) {\n          this.trigger('data', {\n            type: 'custom',\n            data: dataParser(line),\n            customType,\n            segment\n          });\n          return true;\n        }\n      });\n    }\n    /**\n     * Add a custom header mapper\n     *\n     * @param {Object}   options\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {Function} options.map          function to translate tag into a different tag\n     */\n\n    addTagMapper({\n      expression,\n      map\n    }) {\n      const mapFn = line => {\n        if (expression.test(line)) {\n          return map(line);\n        }\n        return line;\n      };\n      this.tagMappers.push(mapFn);\n    }\n  }\n  const camelCase = str => str.toLowerCase().replace(/-(\\w)/g, a => a[1].toUpperCase());\n  const camelCaseKeys = function (attributes) {\n    const result = {};\n    Object.keys(attributes).forEach(function (key) {\n      result[camelCase(key)] = attributes[key];\n    });\n    return result;\n  }; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n  // we need this helper because defaults are based upon targetDuration and\n  // partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n  // target durations are set.\n\n  const setHoldBack = function (manifest) {\n    const {\n      serverControl,\n      targetDuration,\n      partTargetDuration\n    } = manifest;\n    if (!serverControl) {\n      return;\n    }\n    const tag = '#EXT-X-SERVER-CONTROL';\n    const hb = 'holdBack';\n    const phb = 'partHoldBack';\n    const minTargetDuration = targetDuration && targetDuration * 3;\n    const minPartDuration = partTargetDuration && partTargetDuration * 2;\n    if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n      serverControl[hb] = minTargetDuration;\n      this.trigger('info', {\n        message: `${tag} defaulting HOLD-BACK to targetDuration * 3 (${minTargetDuration}).`\n      });\n    }\n    if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n      this.trigger('warn', {\n        message: `${tag} clamping HOLD-BACK (${serverControl[hb]}) to targetDuration * 3 (${minTargetDuration})`\n      });\n      serverControl[hb] = minTargetDuration;\n    } // default no part hold back to part target duration * 3\n\n    if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n      serverControl[phb] = partTargetDuration * 3;\n      this.trigger('info', {\n        message: `${tag} defaulting PART-HOLD-BACK to partTargetDuration * 3 (${serverControl[phb]}).`\n      });\n    } // if part hold back is too small default it to part target duration * 2\n\n    if (partTargetDuration && serverControl[phb] < minPartDuration) {\n      this.trigger('warn', {\n        message: `${tag} clamping PART-HOLD-BACK (${serverControl[phb]}) to partTargetDuration * 2 (${minPartDuration}).`\n      });\n      serverControl[phb] = minPartDuration;\n    }\n  };\n  /**\n   * A parser for M3U8 files. The current interpretation of the input is\n   * exposed as a property `manifest` on parser objects. It's just two lines to\n   * create and parse a manifest once you have the contents available as a string:\n   *\n   * ```js\n   * var parser = new m3u8.Parser();\n   * parser.push(xhr.responseText);\n   * ```\n   *\n   * New input can later be applied to update the manifest object by calling\n   * `push` again.\n   *\n   * The parser attempts to create a usable manifest object even if the\n   * underlying input is somewhat nonsensical. It emits `info` and `warning`\n   * events during the parse if it encounters input that seems invalid or\n   * requires some property of the manifest object to be defaulted.\n   *\n   * @class Parser\n   * @extends Stream\n   */\n\n  class Parser extends Stream {\n    constructor() {\n      super();\n      this.lineStream = new LineStream();\n      this.parseStream = new ParseStream();\n      this.lineStream.pipe(this.parseStream);\n      this.lastProgramDateTime = null;\n      /* eslint-disable consistent-this */\n\n      const self = this;\n      /* eslint-enable consistent-this */\n\n      const uris = [];\n      let currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n      let currentMap; // if specified, the active decryption key\n\n      let key;\n      let hasParts = false;\n      const noop = function () {};\n      const defaultMediaGroups = {\n        'AUDIO': {},\n        'VIDEO': {},\n        'CLOSED-CAPTIONS': {},\n        'SUBTITLES': {}\n      }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n      // used in MPDs with Widevine encrypted streams.\n\n      const widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n      let currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n      this.manifest = {\n        allowCache: true,\n        discontinuityStarts: [],\n        dateRanges: [],\n        segments: []\n      }; // keep track of the last seen segment's byte range end, as segments are not required\n      // to provide the offset, in which case it defaults to the next byte after the\n      // previous segment\n\n      let lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n      let lastPartByterangeEnd = 0;\n      const dateRangeTags = {};\n      this.on('end', () => {\n        // only add preloadSegment if we don't yet have a uri for it.\n        // and we actually have parts/preloadHints\n        if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n          return;\n        }\n        if (!currentUri.map && currentMap) {\n          currentUri.map = currentMap;\n        }\n        if (!currentUri.key && key) {\n          currentUri.key = key;\n        }\n        if (!currentUri.timeline && typeof currentTimeline === 'number') {\n          currentUri.timeline = currentTimeline;\n        }\n        this.manifest.preloadSegment = currentUri;\n      }); // update the manifest with the m3u8 entry from the parse stream\n\n      this.parseStream.on('data', function (entry) {\n        let mediaGroup;\n        let rendition;\n        ({\n          tag() {\n            // switch based on the tag type\n            (({\n              version() {\n                if (entry.version) {\n                  this.manifest.version = entry.version;\n                }\n              },\n              'allow-cache'() {\n                this.manifest.allowCache = entry.allowed;\n                if (!('allowed' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting allowCache to YES'\n                  });\n                  this.manifest.allowCache = true;\n                }\n              },\n              byterange() {\n                const byterange = {};\n                if ('length' in entry) {\n                  currentUri.byterange = byterange;\n                  byterange.length = entry.length;\n                  if (!('offset' in entry)) {\n                    /*\n                     * From the latest spec (as of this writing):\n                     * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                     *\n                     * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                     * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                     *\n                     * \"If o [offset] is not present, the sub-range begins at the next byte\n                     * following the sub-range of the previous media segment.\"\n                     */\n                    entry.offset = lastByterangeEnd;\n                  }\n                }\n                if ('offset' in entry) {\n                  currentUri.byterange = byterange;\n                  byterange.offset = entry.offset;\n                }\n                lastByterangeEnd = byterange.offset + byterange.length;\n              },\n              endlist() {\n                this.manifest.endList = true;\n              },\n              inf() {\n                if (!('mediaSequence' in this.manifest)) {\n                  this.manifest.mediaSequence = 0;\n                  this.trigger('info', {\n                    message: 'defaulting media sequence to zero'\n                  });\n                }\n                if (!('discontinuitySequence' in this.manifest)) {\n                  this.manifest.discontinuitySequence = 0;\n                  this.trigger('info', {\n                    message: 'defaulting discontinuity sequence to zero'\n                  });\n                }\n                if (entry.title) {\n                  currentUri.title = entry.title;\n                }\n                if (entry.duration > 0) {\n                  currentUri.duration = entry.duration;\n                }\n                if (entry.duration === 0) {\n                  currentUri.duration = 0.01;\n                  this.trigger('info', {\n                    message: 'updating zero segment duration to a small value'\n                  });\n                }\n                this.manifest.segments = uris;\n              },\n              key() {\n                if (!entry.attributes) {\n                  this.trigger('warn', {\n                    message: 'ignoring key declaration without attribute list'\n                  });\n                  return;\n                } // clear the active encryption key\n\n                if (entry.attributes.METHOD === 'NONE') {\n                  key = null;\n                  return;\n                }\n                if (!entry.attributes.URI) {\n                  this.trigger('warn', {\n                    message: 'ignoring key declaration without URI'\n                  });\n                  return;\n                }\n                if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                  this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                  this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                    attributes: entry.attributes\n                  };\n                  return;\n                }\n                if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\n                  this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                  this.manifest.contentProtection['com.microsoft.playready'] = {\n                    uri: entry.attributes.URI\n                  };\n                  return;\n                } // check if the content is encrypted for Widevine\n                // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n                if (entry.attributes.KEYFORMAT === widevineUuid) {\n                  const VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n                  if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                    this.trigger('warn', {\n                      message: 'invalid key method provided for Widevine'\n                    });\n                    return;\n                  }\n                  if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                    this.trigger('warn', {\n                      message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                    });\n                  }\n                  if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                    this.trigger('warn', {\n                      message: 'invalid key URI provided for Widevine'\n                    });\n                    return;\n                  }\n                  if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                    this.trigger('warn', {\n                      message: 'invalid key ID provided for Widevine'\n                    });\n                    return;\n                  } // if Widevine key attributes are valid, store them as `contentProtection`\n                  // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n                  this.manifest.contentProtection = this.manifest.contentProtection || {};\n                  this.manifest.contentProtection['com.widevine.alpha'] = {\n                    attributes: {\n                      schemeIdUri: entry.attributes.KEYFORMAT,\n                      // remove '0x' from the key id string\n                      keyId: entry.attributes.KEYID.substring(2)\n                    },\n                    // decode the base64-encoded PSSH box\n                    pssh: decodeB64ToUint8Array$1(entry.attributes.URI.split(',')[1])\n                  };\n                  return;\n                }\n                if (!entry.attributes.METHOD) {\n                  this.trigger('warn', {\n                    message: 'defaulting key method to AES-128'\n                  });\n                } // setup an encryption key for upcoming segments\n\n                key = {\n                  method: entry.attributes.METHOD || 'AES-128',\n                  uri: entry.attributes.URI\n                };\n                if (typeof entry.attributes.IV !== 'undefined') {\n                  key.iv = entry.attributes.IV;\n                }\n              },\n              'media-sequence'() {\n                if (!isFinite(entry.number)) {\n                  this.trigger('warn', {\n                    message: 'ignoring invalid media sequence: ' + entry.number\n                  });\n                  return;\n                }\n                this.manifest.mediaSequence = entry.number;\n              },\n              'discontinuity-sequence'() {\n                if (!isFinite(entry.number)) {\n                  this.trigger('warn', {\n                    message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                  });\n                  return;\n                }\n                this.manifest.discontinuitySequence = entry.number;\n                currentTimeline = entry.number;\n              },\n              'playlist-type'() {\n                if (!/VOD|EVENT/.test(entry.playlistType)) {\n                  this.trigger('warn', {\n                    message: 'ignoring unknown playlist type: ' + entry.playlist\n                  });\n                  return;\n                }\n                this.manifest.playlistType = entry.playlistType;\n              },\n              map() {\n                currentMap = {};\n                if (entry.uri) {\n                  currentMap.uri = entry.uri;\n                }\n                if (entry.byterange) {\n                  currentMap.byterange = entry.byterange;\n                }\n                if (key) {\n                  currentMap.key = key;\n                }\n              },\n              'stream-inf'() {\n                this.manifest.playlists = uris;\n                this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n                if (!entry.attributes) {\n                  this.trigger('warn', {\n                    message: 'ignoring empty stream-inf attributes'\n                  });\n                  return;\n                }\n                if (!currentUri.attributes) {\n                  currentUri.attributes = {};\n                }\n                _extends$1(currentUri.attributes, entry.attributes);\n              },\n              media() {\n                this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n                if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                  this.trigger('warn', {\n                    message: 'ignoring incomplete or missing media group'\n                  });\n                  return;\n                } // find the media group, creating defaults as necessary\n\n                const mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n                mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n                mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n                rendition = {\n                  default: /yes/i.test(entry.attributes.DEFAULT)\n                };\n                if (rendition.default) {\n                  rendition.autoselect = true;\n                } else {\n                  rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n                }\n                if (entry.attributes.LANGUAGE) {\n                  rendition.language = entry.attributes.LANGUAGE;\n                }\n                if (entry.attributes.URI) {\n                  rendition.uri = entry.attributes.URI;\n                }\n                if (entry.attributes['INSTREAM-ID']) {\n                  rendition.instreamId = entry.attributes['INSTREAM-ID'];\n                }\n                if (entry.attributes.CHARACTERISTICS) {\n                  rendition.characteristics = entry.attributes.CHARACTERISTICS;\n                }\n                if (entry.attributes.FORCED) {\n                  rendition.forced = /yes/i.test(entry.attributes.FORCED);\n                } // insert the new rendition\n\n                mediaGroup[entry.attributes.NAME] = rendition;\n              },\n              discontinuity() {\n                currentTimeline += 1;\n                currentUri.discontinuity = true;\n                this.manifest.discontinuityStarts.push(uris.length);\n              },\n              'program-date-time'() {\n                if (typeof this.manifest.dateTimeString === 'undefined') {\n                  // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                  // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                  // to the manifest object\n                  // TODO: Consider removing this in future major version\n                  this.manifest.dateTimeString = entry.dateTimeString;\n                  this.manifest.dateTimeObject = entry.dateTimeObject;\n                }\n                currentUri.dateTimeString = entry.dateTimeString;\n                currentUri.dateTimeObject = entry.dateTimeObject;\n                const {\n                  lastProgramDateTime\n                } = this;\n                this.lastProgramDateTime = new Date(entry.dateTimeString).getTime(); // We should extrapolate Program Date Time backward only during first program date time occurrence.\n                // Once we have at least one program date time point, we can always extrapolate it forward using lastProgramDateTime reference.\n\n                if (lastProgramDateTime === null) {\n                  // Extrapolate Program Date Time backward\n                  // Since it is first program date time occurrence we're assuming that\n                  // all this.manifest.segments have no program date time info\n                  this.manifest.segments.reduceRight((programDateTime, segment) => {\n                    segment.programDateTime = programDateTime - segment.duration * 1000;\n                    return segment.programDateTime;\n                  }, this.lastProgramDateTime);\n                }\n              },\n              targetduration() {\n                if (!isFinite(entry.duration) || entry.duration < 0) {\n                  this.trigger('warn', {\n                    message: 'ignoring invalid target duration: ' + entry.duration\n                  });\n                  return;\n                }\n                this.manifest.targetDuration = entry.duration;\n                setHoldBack.call(this, this.manifest);\n              },\n              start() {\n                if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                  this.trigger('warn', {\n                    message: 'ignoring start declaration without appropriate attribute list'\n                  });\n                  return;\n                }\n                this.manifest.start = {\n                  timeOffset: entry.attributes['TIME-OFFSET'],\n                  precise: entry.attributes.PRECISE\n                };\n              },\n              'cue-out'() {\n                currentUri.cueOut = entry.data;\n              },\n              'cue-out-cont'() {\n                currentUri.cueOutCont = entry.data;\n              },\n              'cue-in'() {\n                currentUri.cueIn = entry.data;\n              },\n              'skip'() {\n                this.manifest.skip = camelCaseKeys(entry.attributes);\n                this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n              },\n              'part'() {\n                hasParts = true; // parts are always specifed before a segment\n\n                const segmentIndex = this.manifest.segments.length;\n                const part = camelCaseKeys(entry.attributes);\n                currentUri.parts = currentUri.parts || [];\n                currentUri.parts.push(part);\n                if (part.byterange) {\n                  if (!part.byterange.hasOwnProperty('offset')) {\n                    part.byterange.offset = lastPartByterangeEnd;\n                  }\n                  lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n                }\n                const partIndex = currentUri.parts.length - 1;\n                this.warnOnMissingAttributes_(`#EXT-X-PART #${partIndex} for segment #${segmentIndex}`, entry.attributes, ['URI', 'DURATION']);\n                if (this.manifest.renditionReports) {\n                  this.manifest.renditionReports.forEach((r, i) => {\n                    if (!r.hasOwnProperty('lastPart')) {\n                      this.trigger('warn', {\n                        message: `#EXT-X-RENDITION-REPORT #${i} lacks required attribute(s): LAST-PART`\n                      });\n                    }\n                  });\n                }\n              },\n              'server-control'() {\n                const attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n                if (!attrs.hasOwnProperty('canBlockReload')) {\n                  attrs.canBlockReload = false;\n                  this.trigger('info', {\n                    message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                  });\n                }\n                setHoldBack.call(this, this.manifest);\n                if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                  this.trigger('warn', {\n                    message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                  });\n                }\n              },\n              'preload-hint'() {\n                // parts are always specifed before a segment\n                const segmentIndex = this.manifest.segments.length;\n                const hint = camelCaseKeys(entry.attributes);\n                const isPart = hint.type && hint.type === 'PART';\n                currentUri.preloadHints = currentUri.preloadHints || [];\n                currentUri.preloadHints.push(hint);\n                if (hint.byterange) {\n                  if (!hint.byterange.hasOwnProperty('offset')) {\n                    // use last part byterange end or zero if not a part.\n                    hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n                    if (isPart) {\n                      lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                    }\n                  }\n                }\n                const index = currentUri.preloadHints.length - 1;\n                this.warnOnMissingAttributes_(`#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex}`, entry.attributes, ['TYPE', 'URI']);\n                if (!hint.type) {\n                  return;\n                } // search through all preload hints except for the current one for\n                // a duplicate type.\n\n                for (let i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                  const otherHint = currentUri.preloadHints[i];\n                  if (!otherHint.type) {\n                    continue;\n                  }\n                  if (otherHint.type === hint.type) {\n                    this.trigger('warn', {\n                      message: `#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex} has the same TYPE ${hint.type} as preload hint #${i}`\n                    });\n                  }\n                }\n              },\n              'rendition-report'() {\n                const report = camelCaseKeys(entry.attributes);\n                this.manifest.renditionReports = this.manifest.renditionReports || [];\n                this.manifest.renditionReports.push(report);\n                const index = this.manifest.renditionReports.length - 1;\n                const required = ['LAST-MSN', 'URI'];\n                if (hasParts) {\n                  required.push('LAST-PART');\n                }\n                this.warnOnMissingAttributes_(`#EXT-X-RENDITION-REPORT #${index}`, entry.attributes, required);\n              },\n              'part-inf'() {\n                this.manifest.partInf = camelCaseKeys(entry.attributes);\n                this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n                if (this.manifest.partInf.partTarget) {\n                  this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n                }\n                setHoldBack.call(this, this.manifest);\n              },\n              'daterange'() {\n                this.manifest.dateRanges.push(camelCaseKeys(entry.attributes));\n                const index = this.manifest.dateRanges.length - 1;\n                this.warnOnMissingAttributes_(`#EXT-X-DATERANGE #${index}`, entry.attributes, ['ID', 'START-DATE']);\n                const dateRange = this.manifest.dateRanges[index];\n                if (dateRange.endDate && dateRange.startDate && new Date(dateRange.endDate) < new Date(dateRange.startDate)) {\n                  this.trigger('warn', {\n                    message: 'EXT-X-DATERANGE END-DATE must be equal to or later than the value of the START-DATE'\n                  });\n                }\n                if (dateRange.duration && dateRange.duration < 0) {\n                  this.trigger('warn', {\n                    message: 'EXT-X-DATERANGE DURATION must not be negative'\n                  });\n                }\n                if (dateRange.plannedDuration && dateRange.plannedDuration < 0) {\n                  this.trigger('warn', {\n                    message: 'EXT-X-DATERANGE PLANNED-DURATION must not be negative'\n                  });\n                }\n                const endOnNextYes = !!dateRange.endOnNext;\n                if (endOnNextYes && !dateRange.class) {\n                  this.trigger('warn', {\n                    message: 'EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must have a CLASS attribute'\n                  });\n                }\n                if (endOnNextYes && (dateRange.duration || dateRange.endDate)) {\n                  this.trigger('warn', {\n                    message: 'EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must not contain DURATION or END-DATE attributes'\n                  });\n                }\n                if (dateRange.duration && dateRange.endDate) {\n                  const startDate = dateRange.startDate;\n                  const newDateInSeconds = startDate.getTime() + dateRange.duration * 1000;\n                  this.manifest.dateRanges[index].endDate = new Date(newDateInSeconds);\n                }\n                if (!dateRangeTags[dateRange.id]) {\n                  dateRangeTags[dateRange.id] = dateRange;\n                } else {\n                  for (const attribute in dateRangeTags[dateRange.id]) {\n                    if (!!dateRange[attribute] && JSON.stringify(dateRangeTags[dateRange.id][attribute]) !== JSON.stringify(dateRange[attribute])) {\n                      this.trigger('warn', {\n                        message: 'EXT-X-DATERANGE tags with the same ID in a playlist must have the same attributes values'\n                      });\n                      break;\n                    }\n                  } // if tags with the same ID do not have conflicting attributes, merge them\n\n                  const dateRangeWithSameId = this.manifest.dateRanges.findIndex(dateRangeToFind => dateRangeToFind.id === dateRange.id);\n                  this.manifest.dateRanges[dateRangeWithSameId] = _extends$1(this.manifest.dateRanges[dateRangeWithSameId], dateRange);\n                  dateRangeTags[dateRange.id] = _extends$1(dateRangeTags[dateRange.id], dateRange); // after merging, delete the duplicate dateRange that was added last\n\n                  this.manifest.dateRanges.pop();\n                }\n              },\n              'independent-segments'() {\n                this.manifest.independentSegments = true;\n              },\n              'content-steering'() {\n                this.manifest.contentSteering = camelCaseKeys(entry.attributes);\n                this.warnOnMissingAttributes_('#EXT-X-CONTENT-STEERING', entry.attributes, ['SERVER-URI']);\n              }\n            })[entry.tagType] || noop).call(self);\n          },\n          uri() {\n            currentUri.uri = entry.uri;\n            uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n            if (this.manifest.targetDuration && !('duration' in currentUri)) {\n              this.trigger('warn', {\n                message: 'defaulting segment duration to the target duration'\n              });\n              currentUri.duration = this.manifest.targetDuration;\n            } // annotate with encryption information, if necessary\n\n            if (key) {\n              currentUri.key = key;\n            }\n            currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n            if (currentMap) {\n              currentUri.map = currentMap;\n            } // reset the last byterange end as it needs to be 0 between parts\n\n            lastPartByterangeEnd = 0; // Once we have at least one program date time we can always extrapolate it forward\n\n            if (this.lastProgramDateTime !== null) {\n              currentUri.programDateTime = this.lastProgramDateTime;\n              this.lastProgramDateTime += currentUri.duration * 1000;\n            } // prepare for the next URI\n\n            currentUri = {};\n          },\n          comment() {// comments are not important for playback\n          },\n          custom() {\n            // if this is segment-level data attach the output to the segment\n            if (entry.segment) {\n              currentUri.custom = currentUri.custom || {};\n              currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n            } else {\n              this.manifest.custom = this.manifest.custom || {};\n              this.manifest.custom[entry.customType] = entry.data;\n            }\n          }\n        })[entry.type].call(self);\n      });\n    }\n    warnOnMissingAttributes_(identifier, attributes, required) {\n      const missing = [];\n      required.forEach(function (key) {\n        if (!attributes.hasOwnProperty(key)) {\n          missing.push(key);\n        }\n      });\n      if (missing.length) {\n        this.trigger('warn', {\n          message: `${identifier} lacks required attribute(s): ${missing.join(', ')}`\n        });\n      }\n    }\n    /**\n     * Parse the input string and update the manifest object.\n     *\n     * @param {string} chunk a potentially incomplete portion of the manifest\n     */\n\n    push(chunk) {\n      this.lineStream.push(chunk);\n    }\n    /**\n     * Flush any remaining input. This can be handy if the last line of an M3U8\n     * manifest did not contain a trailing newline but the file has been\n     * completely received.\n     */\n\n    end() {\n      // flush any buffered input\n      this.lineStream.push('\\n');\n      if (this.manifest.dateRanges.length && this.lastProgramDateTime === null) {\n        this.trigger('warn', {\n          message: 'A playlist with EXT-X-DATERANGE tag must contain atleast one EXT-X-PROGRAM-DATE-TIME tag'\n        });\n      }\n      this.lastProgramDateTime = null;\n      this.trigger('end');\n    }\n    /**\n     * Add an additional parser for non-standard tags\n     *\n     * @param {Object}   options              a map of options for the added parser\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {string}   options.customType   the custom type to register to the output\n     * @param {Function} [options.dataParser] function to parse the line into an object\n     * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n     */\n\n    addParser(options) {\n      this.parseStream.addParser(options);\n    }\n    /**\n     * Add a custom header mapper\n     *\n     * @param {Object}   options\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {Function} options.map          function to translate tag into a different tag\n     */\n\n    addTagMapper(options) {\n      this.parseStream.addTagMapper(options);\n    }\n  }\n\n  var regexs = {\n    // to determine mime types\n    mp4: /^(av0?1|avc0?[1234]|vp0?9|flac|opus|mp3|mp4a|mp4v|stpp.ttml.im1t)/,\n    webm: /^(vp0?[89]|av0?1|opus|vorbis)/,\n    ogg: /^(vp0?[89]|theora|flac|opus|vorbis)/,\n    // to determine if a codec is audio or video\n    video: /^(av0?1|avc0?[1234]|vp0?[89]|hvc1|hev1|theora|mp4v)/,\n    audio: /^(mp4a|flac|vorbis|opus|ac-[34]|ec-3|alac|mp3|speex|aac)/,\n    text: /^(stpp.ttml.im1t)/,\n    // mux.js support regex\n    muxerVideo: /^(avc0?1)/,\n    muxerAudio: /^(mp4a)/,\n    // match nothing as muxer does not support text right now.\n    // there cannot never be a character before the start of a string\n    // so this matches nothing.\n    muxerText: /a^/\n  };\n  var mediaTypes = ['video', 'audio', 'text'];\n  var upperMediaTypes = ['Video', 'Audio', 'Text'];\n  /**\n   * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n   * `avc1.<hhhhhh>`\n   *\n   * @param {string} codec\n   *        Codec string to translate\n   * @return {string}\n   *         The translated codec string\n   */\n\n  var translateLegacyCodec = function translateLegacyCodec(codec) {\n    if (!codec) {\n      return codec;\n    }\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  };\n  /**\n   * @typedef {Object} ParsedCodecInfo\n   * @property {number} codecCount\n   *           Number of codecs parsed\n   * @property {string} [videoCodec]\n   *           Parsed video codec (if found)\n   * @property {string} [videoObjectTypeIndicator]\n   *           Video object type indicator (if found)\n   * @property {string|null} audioProfile\n   *           Audio profile\n   */\n\n  /**\n   * Parses a codec string to retrieve the number of codecs specified, the video codec and\n   * object type indicator, and the audio profile.\n   *\n   * @param {string} [codecString]\n   *        The codec string to parse\n   * @return {ParsedCodecInfo}\n   *         Parsed codec info\n   */\n\n  var parseCodecs = function parseCodecs(codecString) {\n    if (codecString === void 0) {\n      codecString = '';\n    }\n    var codecs = codecString.split(',');\n    var result = [];\n    codecs.forEach(function (codec) {\n      codec = codec.trim();\n      var codecType;\n      mediaTypes.forEach(function (name) {\n        var match = regexs[name].exec(codec.toLowerCase());\n        if (!match || match.length <= 1) {\n          return;\n        }\n        codecType = name; // maintain codec case\n\n        var type = codec.substring(0, match[1].length);\n        var details = codec.replace(type, '');\n        result.push({\n          type: type,\n          details: details,\n          mediaType: name\n        });\n      });\n      if (!codecType) {\n        result.push({\n          type: codec,\n          details: '',\n          mediaType: 'unknown'\n        });\n      }\n    });\n    return result;\n  };\n  /**\n   * Returns a ParsedCodecInfo object for the default alternate audio playlist if there is\n   * a default alternate audio playlist for the provided audio group.\n   *\n   * @param {Object} master\n   *        The master playlist\n   * @param {string} audioGroupId\n   *        ID of the audio group for which to find the default codec info\n   * @return {ParsedCodecInfo}\n   *         Parsed codec info\n   */\n\n  var codecsFromDefault = function codecsFromDefault(master, audioGroupId) {\n    if (!master.mediaGroups.AUDIO || !audioGroupId) {\n      return null;\n    }\n    var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n    if (!audioGroup) {\n      return null;\n    }\n    for (var name in audioGroup) {\n      var audioType = audioGroup[name];\n      if (audioType.default && audioType.playlists) {\n        // codec should be the same for all playlists within the audio type\n        return parseCodecs(audioType.playlists[0].attributes.CODECS);\n      }\n    }\n    return null;\n  };\n  var isAudioCodec = function isAudioCodec(codec) {\n    if (codec === void 0) {\n      codec = '';\n    }\n    return regexs.audio.test(codec.trim().toLowerCase());\n  };\n  var isTextCodec = function isTextCodec(codec) {\n    if (codec === void 0) {\n      codec = '';\n    }\n    return regexs.text.test(codec.trim().toLowerCase());\n  };\n  var getMimeForCodec = function getMimeForCodec(codecString) {\n    if (!codecString || typeof codecString !== 'string') {\n      return;\n    }\n    var codecs = codecString.toLowerCase().split(',').map(function (c) {\n      return translateLegacyCodec(c.trim());\n    }); // default to video type\n\n    var type = 'video'; // only change to audio type if the only codec we have is\n    // audio\n\n    if (codecs.length === 1 && isAudioCodec(codecs[0])) {\n      type = 'audio';\n    } else if (codecs.length === 1 && isTextCodec(codecs[0])) {\n      // text uses application/<container> for now\n      type = 'application';\n    } // default the container to mp4\n\n    var container = 'mp4'; // every codec must be able to go into the container\n    // for that container to be the correct one\n\n    if (codecs.every(function (c) {\n      return regexs.mp4.test(c);\n    })) {\n      container = 'mp4';\n    } else if (codecs.every(function (c) {\n      return regexs.webm.test(c);\n    })) {\n      container = 'webm';\n    } else if (codecs.every(function (c) {\n      return regexs.ogg.test(c);\n    })) {\n      container = 'ogg';\n    }\n    return type + \"/\" + container + \";codecs=\\\"\" + codecString + \"\\\"\";\n  };\n  var browserSupportsCodec = function browserSupportsCodec(codecString) {\n    if (codecString === void 0) {\n      codecString = '';\n    }\n    return window.MediaSource && window.MediaSource.isTypeSupported && window.MediaSource.isTypeSupported(getMimeForCodec(codecString)) || false;\n  };\n  var muxerSupportsCodec = function muxerSupportsCodec(codecString) {\n    if (codecString === void 0) {\n      codecString = '';\n    }\n    return codecString.toLowerCase().split(',').every(function (codec) {\n      codec = codec.trim(); // any match is supported.\n\n      for (var i = 0; i < upperMediaTypes.length; i++) {\n        var type = upperMediaTypes[i];\n        if (regexs[\"muxer\" + type].test(codec)) {\n          return true;\n        }\n      }\n      return false;\n    });\n  };\n  var DEFAULT_AUDIO_CODEC = 'mp4a.40.2';\n  var DEFAULT_VIDEO_CODEC = 'avc1.4d400d';\n\n  var MPEGURL_REGEX = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n  var DASH_REGEX = /^application\\/dash\\+xml/i;\n  /**\n   * Returns a string that describes the type of source based on a video source object's\n   * media type.\n   *\n   * @see {@link https://dev.w3.org/html5/pf-summary/video.html#dom-source-type|Source Type}\n   *\n   * @param {string} type\n   *        Video source object media type\n   * @return {('hls'|'dash'|'vhs-json'|null)}\n   *         VHS source type string\n   */\n\n  var simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n    if (MPEGURL_REGEX.test(type)) {\n      return 'hls';\n    }\n    if (DASH_REGEX.test(type)) {\n      return 'dash';\n    } // Denotes the special case of a manifest object passed to http-streaming instead of a\n    // source URL.\n    //\n    // See https://en.wikipedia.org/wiki/Media_type for details on specifying media types.\n    //\n    // In this case, vnd stands for vendor, video.js for the organization, VHS for this\n    // project, and the +json suffix identifies the structure of the media type.\n\n    if (type === 'application/vnd.videojs.vhs+json') {\n      return 'vhs-json';\n    }\n    return null;\n  };\n\n  // const log2 = Math.log2 ? Math.log2 : (x) => (Math.log(x) / Math.log(2));\n  // we used to do this with log2 but BigInt does not support builtin math\n  // Math.ceil(log2(x));\n\n  var countBits = function countBits(x) {\n    return x.toString(2).length;\n  }; // count the number of whole bytes it would take to represent a number\n\n  var countBytes = function countBytes(x) {\n    return Math.ceil(countBits(x) / 8);\n  };\n  var isArrayBufferView = function isArrayBufferView(obj) {\n    if (ArrayBuffer.isView === 'function') {\n      return ArrayBuffer.isView(obj);\n    }\n    return obj && obj.buffer instanceof ArrayBuffer;\n  };\n  var isTypedArray = function isTypedArray(obj) {\n    return isArrayBufferView(obj);\n  };\n  var toUint8 = function toUint8(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return bytes;\n    }\n    if (!Array.isArray(bytes) && !isTypedArray(bytes) && !(bytes instanceof ArrayBuffer)) {\n      // any non-number or NaN leads to empty uint8array\n      // eslint-disable-next-line\n      if (typeof bytes !== 'number' || typeof bytes === 'number' && bytes !== bytes) {\n        bytes = 0;\n      } else {\n        bytes = [bytes];\n      }\n    }\n    return new Uint8Array(bytes && bytes.buffer || bytes, bytes && bytes.byteOffset || 0, bytes && bytes.byteLength || 0);\n  };\n  var BigInt = window.BigInt || Number;\n  var BYTE_TABLE = [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\n  (function () {\n    var a = new Uint16Array([0xFFCC]);\n    var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n    if (b[0] === 0xFF) {\n      return 'big';\n    }\n    if (b[0] === 0xCC) {\n      return 'little';\n    }\n    return 'unknown';\n  })();\n  var bytesToNumber = function bytesToNumber(bytes, _temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n      _ref$signed = _ref.signed,\n      signed = _ref$signed === void 0 ? false : _ref$signed,\n      _ref$le = _ref.le,\n      le = _ref$le === void 0 ? false : _ref$le;\n    bytes = toUint8(bytes);\n    var fn = le ? 'reduce' : 'reduceRight';\n    var obj = bytes[fn] ? bytes[fn] : Array.prototype[fn];\n    var number = obj.call(bytes, function (total, byte, i) {\n      var exponent = le ? i : Math.abs(i + 1 - bytes.length);\n      return total + BigInt(byte) * BYTE_TABLE[exponent];\n    }, BigInt(0));\n    if (signed) {\n      var max = BYTE_TABLE[bytes.length] / BigInt(2) - BigInt(1);\n      number = BigInt(number);\n      if (number > max) {\n        number -= max;\n        number -= max;\n        number -= BigInt(2);\n      }\n    }\n    return Number(number);\n  };\n  var numberToBytes = function numberToBytes(number, _temp2) {\n    var _ref2 = _temp2 === void 0 ? {} : _temp2,\n      _ref2$le = _ref2.le,\n      le = _ref2$le === void 0 ? false : _ref2$le;\n\n    // eslint-disable-next-line\n    if (typeof number !== 'bigint' && typeof number !== 'number' || typeof number === 'number' && number !== number) {\n      number = 0;\n    }\n    number = BigInt(number);\n    var byteCount = countBytes(number);\n    var bytes = new Uint8Array(new ArrayBuffer(byteCount));\n    for (var i = 0; i < byteCount; i++) {\n      var byteIndex = le ? i : Math.abs(i + 1 - bytes.length);\n      bytes[byteIndex] = Number(number / BYTE_TABLE[i] & BigInt(0xFF));\n      if (number < 0) {\n        bytes[byteIndex] = Math.abs(~bytes[byteIndex]);\n        bytes[byteIndex] -= i === 0 ? 1 : 2;\n      }\n    }\n    return bytes;\n  };\n  var stringToBytes = function stringToBytes(string, stringIsBytes) {\n    if (typeof string !== 'string' && string && typeof string.toString === 'function') {\n      string = string.toString();\n    }\n    if (typeof string !== 'string') {\n      return new Uint8Array();\n    } // If the string already is bytes, we don't have to do this\n    // otherwise we do this so that we split multi length characters\n    // into individual bytes\n\n    if (!stringIsBytes) {\n      string = unescape(encodeURIComponent(string));\n    }\n    var view = new Uint8Array(string.length);\n    for (var i = 0; i < string.length; i++) {\n      view[i] = string.charCodeAt(i);\n    }\n    return view;\n  };\n  var concatTypedArrays = function concatTypedArrays() {\n    for (var _len = arguments.length, buffers = new Array(_len), _key = 0; _key < _len; _key++) {\n      buffers[_key] = arguments[_key];\n    }\n    buffers = buffers.filter(function (b) {\n      return b && (b.byteLength || b.length) && typeof b !== 'string';\n    });\n    if (buffers.length <= 1) {\n      // for 0 length we will return empty uint8\n      // for 1 length we return the first uint8\n      return toUint8(buffers[0]);\n    }\n    var totalLen = buffers.reduce(function (total, buf, i) {\n      return total + (buf.byteLength || buf.length);\n    }, 0);\n    var tempBuffer = new Uint8Array(totalLen);\n    var offset = 0;\n    buffers.forEach(function (buf) {\n      buf = toUint8(buf);\n      tempBuffer.set(buf, offset);\n      offset += buf.byteLength;\n    });\n    return tempBuffer;\n  };\n  /**\n   * Check if the bytes \"b\" are contained within bytes \"a\".\n   *\n   * @param {Uint8Array|Array} a\n   *        Bytes to check in\n   *\n   * @param {Uint8Array|Array} b\n   *        Bytes to check for\n   *\n   * @param {Object} options\n   *        options\n   *\n   * @param {Array|Uint8Array} [offset=0]\n   *        offset to use when looking at bytes in a\n   *\n   * @param {Array|Uint8Array} [mask=[]]\n   *        mask to use on bytes before comparison.\n   *\n   * @return {boolean}\n   *         If all bytes in b are inside of a, taking into account\n   *         bit masks.\n   */\n\n  var bytesMatch = function bytesMatch(a, b, _temp3) {\n    var _ref3 = _temp3 === void 0 ? {} : _temp3,\n      _ref3$offset = _ref3.offset,\n      offset = _ref3$offset === void 0 ? 0 : _ref3$offset,\n      _ref3$mask = _ref3.mask,\n      mask = _ref3$mask === void 0 ? [] : _ref3$mask;\n    a = toUint8(a);\n    b = toUint8(b); // ie 11 does not support uint8 every\n\n    var fn = b.every ? b.every : Array.prototype.every;\n    return b.length && a.length - offset >= b.length &&\n    // ie 11 doesn't support every on uin8\n    fn.call(b, function (bByte, i) {\n      var aByte = mask[i] ? mask[i] & a[offset + i] : a[offset + i];\n      return bByte === aByte;\n    });\n  };\n\n  /**\n   * Loops through all supported media groups in master and calls the provided\n   * callback for each group\n   *\n   * @param {Object} master\n   *        The parsed master manifest object\n   * @param {string[]} groups\n   *        The media groups to call the callback for\n   * @param {Function} callback\n   *        Callback to call for each media group\n   */\n  var forEachMediaGroup$1 = function forEachMediaGroup(master, groups, callback) {\n    groups.forEach(function (mediaType) {\n      for (var groupKey in master.mediaGroups[mediaType]) {\n        for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n          var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n          callback(mediaProperties, mediaType, groupKey, labelKey);\n        }\n      }\n    });\n  };\n\n  var atob = function atob(s) {\n    return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n  };\n  function decodeB64ToUint8Array(b64Text) {\n    var decodedString = atob(b64Text);\n    var array = new Uint8Array(decodedString.length);\n    for (var i = 0; i < decodedString.length; i++) {\n      array[i] = decodedString.charCodeAt(i);\n    }\n    return array;\n  }\n\n  /**\n   * Ponyfill for `Array.prototype.find` which is only available in ES6 runtimes.\n   *\n   * Works with anything that has a `length` property and index access properties, including NodeList.\n   *\n   * @template {unknown} T\n   * @param {Array<T> | ({length:number, [number]: T})} list\n   * @param {function (item: T, index: number, list:Array<T> | ({length:number, [number]: T})):boolean} predicate\n   * @param {Partial<Pick<ArrayConstructor['prototype'], 'find'>>?} ac `Array.prototype` by default,\n   * \t\t\t\tallows injecting a custom implementation in tests\n   * @returns {T | undefined}\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n   * @see https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.find\n   */\n  function find$1(list, predicate, ac) {\n    if (ac === undefined) {\n      ac = Array.prototype;\n    }\n    if (list && typeof ac.find === 'function') {\n      return ac.find.call(list, predicate);\n    }\n    for (var i = 0; i < list.length; i++) {\n      if (Object.prototype.hasOwnProperty.call(list, i)) {\n        var item = list[i];\n        if (predicate.call(undefined, item, i, list)) {\n          return item;\n        }\n      }\n    }\n  }\n\n  /**\n   * \"Shallow freezes\" an object to render it immutable.\n   * Uses `Object.freeze` if available,\n   * otherwise the immutability is only in the type.\n   *\n   * Is used to create \"enum like\" objects.\n   *\n   * @template T\n   * @param {T} object the object to freeze\n   * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n   * \t\t\t\tallows to inject custom object constructor for tests\n   * @returns {Readonly<T>}\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n   */\n  function freeze(object, oc) {\n    if (oc === undefined) {\n      oc = Object;\n    }\n    return oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object;\n  }\n\n  /**\n   * Since we can not rely on `Object.assign` we provide a simplified version\n   * that is sufficient for our needs.\n   *\n   * @param {Object} target\n   * @param {Object | null | undefined} source\n   *\n   * @returns {Object} target\n   * @throws TypeError if target is not an object\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n   * @see https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.assign\n   */\n  function assign(target, source) {\n    if (target === null || typeof target !== 'object') {\n      throw new TypeError('target is not an object');\n    }\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n    return target;\n  }\n\n  /**\n   * All mime types that are allowed as input to `DOMParser.parseFromString`\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n   * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n   * @see DOMParser.prototype.parseFromString\n   */\n  var MIME_TYPE = freeze({\n    /**\n     * `text/html`, the only mime type that triggers treating an XML document as HTML.\n     *\n     * @see DOMParser.SupportedType.isHTML\n     * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n     * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n     * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n     */\n    HTML: 'text/html',\n    /**\n     * Helper method to check a mime type if it indicates an HTML document\n     *\n     * @param {string} [value]\n     * @returns {boolean}\n     *\n     * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n     * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n     * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n    isHTML: function (value) {\n      return value === MIME_TYPE.HTML;\n    },\n    /**\n     * `application/xml`, the standard mime type for XML documents.\n     *\n     * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n     * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n     * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n     */\n    XML_APPLICATION: 'application/xml',\n    /**\n     * `text/html`, an alias for `application/xml`.\n     *\n     * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n     * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n     * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n     */\n    XML_TEXT: 'text/xml',\n    /**\n     * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n     * but is parsed as an XML document.\n     *\n     * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n     * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n     */\n    XML_XHTML_APPLICATION: 'application/xhtml+xml',\n    /**\n     * `image/svg+xml`,\n     *\n     * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n     * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n     * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n     */\n    XML_SVG_IMAGE: 'image/svg+xml'\n  });\n\n  /**\n   * Namespaces that are used in this code base.\n   *\n   * @see http://www.w3.org/TR/REC-xml-names\n   */\n  var NAMESPACE$3 = freeze({\n    /**\n     * The XHTML namespace.\n     *\n     * @see http://www.w3.org/1999/xhtml\n     */\n    HTML: 'http://www.w3.org/1999/xhtml',\n    /**\n     * Checks if `uri` equals `NAMESPACE.HTML`.\n     *\n     * @param {string} [uri]\n     *\n     * @see NAMESPACE.HTML\n     */\n    isHTML: function (uri) {\n      return uri === NAMESPACE$3.HTML;\n    },\n    /**\n     * The SVG namespace.\n     *\n     * @see http://www.w3.org/2000/svg\n     */\n    SVG: 'http://www.w3.org/2000/svg',\n    /**\n     * The `xml:` namespace.\n     *\n     * @see http://www.w3.org/XML/1998/namespace\n     */\n    XML: 'http://www.w3.org/XML/1998/namespace',\n    /**\n     * The `xmlns:` namespace\n     *\n     * @see https://www.w3.org/2000/xmlns/\n     */\n    XMLNS: 'http://www.w3.org/2000/xmlns/'\n  });\n  var assign_1 = assign;\n  var find_1 = find$1;\n  var freeze_1 = freeze;\n  var MIME_TYPE_1 = MIME_TYPE;\n  var NAMESPACE_1 = NAMESPACE$3;\n  var conventions = {\n    assign: assign_1,\n    find: find_1,\n    freeze: freeze_1,\n    MIME_TYPE: MIME_TYPE_1,\n    NAMESPACE: NAMESPACE_1\n  };\n\n  var find = conventions.find;\n  var NAMESPACE$2 = conventions.NAMESPACE;\n\n  /**\n   * A prerequisite for `[].filter`, to drop elements that are empty\n   * @param {string} input\n   * @returns {boolean}\n   */\n  function notEmptyString(input) {\n    return input !== '';\n  }\n  /**\n   * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n   * @see https://infra.spec.whatwg.org/#ascii-whitespace\n   *\n   * @param {string} input\n   * @returns {string[]} (can be empty)\n   */\n  function splitOnASCIIWhitespace(input) {\n    // U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n    return input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : [];\n  }\n\n  /**\n   * Adds element as a key to current if it is not already present.\n   *\n   * @param {Record<string, boolean | undefined>} current\n   * @param {string} element\n   * @returns {Record<string, boolean | undefined>}\n   */\n  function orderedSetReducer(current, element) {\n    if (!current.hasOwnProperty(element)) {\n      current[element] = true;\n    }\n    return current;\n  }\n\n  /**\n   * @see https://infra.spec.whatwg.org/#ordered-set\n   * @param {string} input\n   * @returns {string[]}\n   */\n  function toOrderedSet(input) {\n    if (!input) return [];\n    var list = splitOnASCIIWhitespace(input);\n    return Object.keys(list.reduce(orderedSetReducer, {}));\n  }\n\n  /**\n   * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n   * which we can not rely on being available.\n   *\n   * @param {any[]} list\n   * @returns {function(any): boolean}\n   */\n  function arrayIncludes(list) {\n    return function (element) {\n      return list && list.indexOf(element) !== -1;\n    };\n  }\n  function copy(src, dest) {\n    for (var p in src) {\n      if (Object.prototype.hasOwnProperty.call(src, p)) {\n        dest[p] = src[p];\n      }\n    }\n  }\n\n  /**\n  ^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n  ^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n   */\n  function _extends(Class, Super) {\n    var pt = Class.prototype;\n    if (!(pt instanceof Super)) {\n      function t() {}\n      t.prototype = Super.prototype;\n      t = new t();\n      copy(pt, t);\n      Class.prototype = pt = t;\n    }\n    if (pt.constructor != Class) {\n      if (typeof Class != 'function') {\n        console.error(\"unknown Class:\" + Class);\n      }\n      pt.constructor = Class;\n    }\n  }\n\n  // Node Types\n  var NodeType = {};\n  var ELEMENT_NODE = NodeType.ELEMENT_NODE = 1;\n  var ATTRIBUTE_NODE = NodeType.ATTRIBUTE_NODE = 2;\n  var TEXT_NODE = NodeType.TEXT_NODE = 3;\n  var CDATA_SECTION_NODE = NodeType.CDATA_SECTION_NODE = 4;\n  var ENTITY_REFERENCE_NODE = NodeType.ENTITY_REFERENCE_NODE = 5;\n  var ENTITY_NODE = NodeType.ENTITY_NODE = 6;\n  var PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\n  var COMMENT_NODE = NodeType.COMMENT_NODE = 8;\n  var DOCUMENT_NODE = NodeType.DOCUMENT_NODE = 9;\n  var DOCUMENT_TYPE_NODE = NodeType.DOCUMENT_TYPE_NODE = 10;\n  var DOCUMENT_FRAGMENT_NODE = NodeType.DOCUMENT_FRAGMENT_NODE = 11;\n  var NOTATION_NODE = NodeType.NOTATION_NODE = 12;\n\n  // ExceptionCode\n  var ExceptionCode = {};\n  var ExceptionMessage = {};\n  ExceptionCode.INDEX_SIZE_ERR = (ExceptionMessage[1] = \"Index size error\", 1);\n  ExceptionCode.DOMSTRING_SIZE_ERR = (ExceptionMessage[2] = \"DOMString size error\", 2);\n  var HIERARCHY_REQUEST_ERR = ExceptionCode.HIERARCHY_REQUEST_ERR = (ExceptionMessage[3] = \"Hierarchy request error\", 3);\n  ExceptionCode.WRONG_DOCUMENT_ERR = (ExceptionMessage[4] = \"Wrong document\", 4);\n  ExceptionCode.INVALID_CHARACTER_ERR = (ExceptionMessage[5] = \"Invalid character\", 5);\n  ExceptionCode.NO_DATA_ALLOWED_ERR = (ExceptionMessage[6] = \"No data allowed\", 6);\n  ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = (ExceptionMessage[7] = \"No modification allowed\", 7);\n  var NOT_FOUND_ERR = ExceptionCode.NOT_FOUND_ERR = (ExceptionMessage[8] = \"Not found\", 8);\n  ExceptionCode.NOT_SUPPORTED_ERR = (ExceptionMessage[9] = \"Not supported\", 9);\n  var INUSE_ATTRIBUTE_ERR = ExceptionCode.INUSE_ATTRIBUTE_ERR = (ExceptionMessage[10] = \"Attribute in use\", 10);\n  //level2\n  ExceptionCode.INVALID_STATE_ERR = (ExceptionMessage[11] = \"Invalid state\", 11);\n  ExceptionCode.SYNTAX_ERR = (ExceptionMessage[12] = \"Syntax error\", 12);\n  ExceptionCode.INVALID_MODIFICATION_ERR = (ExceptionMessage[13] = \"Invalid modification\", 13);\n  ExceptionCode.NAMESPACE_ERR = (ExceptionMessage[14] = \"Invalid namespace\", 14);\n  ExceptionCode.INVALID_ACCESS_ERR = (ExceptionMessage[15] = \"Invalid access\", 15);\n\n  /**\n   * DOM Level 2\n   * Object DOMException\n   * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n   * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n   */\n  function DOMException(code, message) {\n    if (message instanceof Error) {\n      var error = message;\n    } else {\n      error = this;\n      Error.call(this, ExceptionMessage[code]);\n      this.message = ExceptionMessage[code];\n      if (Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n    }\n    error.code = code;\n    if (message) this.message = this.message + \": \" + message;\n    return error;\n  }\n  DOMException.prototype = Error.prototype;\n  copy(ExceptionCode, DOMException);\n\n  /**\n   * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n   * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n   * The items in the NodeList are accessible via an integral index, starting from 0.\n   */\n  function NodeList() {}\n  NodeList.prototype = {\n    /**\n     * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n     * @standard level1\n     */\n    length: 0,\n    /**\n     * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n     * @standard level1\n     * @param index  unsigned long\n     *   Index into the collection.\n     * @return Node\n     * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\n     */\n    item: function (index) {\n      return index >= 0 && index < this.length ? this[index] : null;\n    },\n    toString: function (isHTML, nodeFilter) {\n      for (var buf = [], i = 0; i < this.length; i++) {\n        serializeToString(this[i], buf, isHTML, nodeFilter);\n      }\n      return buf.join('');\n    },\n    /**\n     * @private\n     * @param {function (Node):boolean} predicate\n     * @returns {Node[]}\n     */\n    filter: function (predicate) {\n      return Array.prototype.filter.call(this, predicate);\n    },\n    /**\n     * @private\n     * @param {Node} item\n     * @returns {number}\n     */\n    indexOf: function (item) {\n      return Array.prototype.indexOf.call(this, item);\n    }\n  };\n  function LiveNodeList(node, refresh) {\n    this._node = node;\n    this._refresh = refresh;\n    _updateLiveList(this);\n  }\n  function _updateLiveList(list) {\n    var inc = list._node._inc || list._node.ownerDocument._inc;\n    if (list._inc !== inc) {\n      var ls = list._refresh(list._node);\n      __set__(list, 'length', ls.length);\n      if (!list.$$length || ls.length < list.$$length) {\n        for (var i = ls.length; i in list; i++) {\n          if (Object.prototype.hasOwnProperty.call(list, i)) {\n            delete list[i];\n          }\n        }\n      }\n      copy(ls, list);\n      list._inc = inc;\n    }\n  }\n  LiveNodeList.prototype.item = function (i) {\n    _updateLiveList(this);\n    return this[i] || null;\n  };\n  _extends(LiveNodeList, NodeList);\n\n  /**\n   * Objects implementing the NamedNodeMap interface are used\n   * to represent collections of nodes that can be accessed by name.\n   * Note that NamedNodeMap does not inherit from NodeList;\n   * NamedNodeMaps are not maintained in any particular order.\n   * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n   * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n   * and does not imply that the DOM specifies an order to these Nodes.\n   * NamedNodeMap objects in the DOM are live.\n   * used for attributes or DocumentType entities\n   */\n  function NamedNodeMap() {}\n  function _findNodeIndex(list, node) {\n    var i = list.length;\n    while (i--) {\n      if (list[i] === node) {\n        return i;\n      }\n    }\n  }\n  function _addNamedNode(el, list, newAttr, oldAttr) {\n    if (oldAttr) {\n      list[_findNodeIndex(list, oldAttr)] = newAttr;\n    } else {\n      list[list.length++] = newAttr;\n    }\n    if (el) {\n      newAttr.ownerElement = el;\n      var doc = el.ownerDocument;\n      if (doc) {\n        oldAttr && _onRemoveAttribute(doc, el, oldAttr);\n        _onAddAttribute(doc, el, newAttr);\n      }\n    }\n  }\n  function _removeNamedNode(el, list, attr) {\n    //console.log('remove attr:'+attr)\n    var i = _findNodeIndex(list, attr);\n    if (i >= 0) {\n      var lastIndex = list.length - 1;\n      while (i < lastIndex) {\n        list[i] = list[++i];\n      }\n      list.length = lastIndex;\n      if (el) {\n        var doc = el.ownerDocument;\n        if (doc) {\n          _onRemoveAttribute(doc, el, attr);\n          attr.ownerElement = null;\n        }\n      }\n    } else {\n      throw new DOMException(NOT_FOUND_ERR, new Error(el.tagName + '@' + attr));\n    }\n  }\n  NamedNodeMap.prototype = {\n    length: 0,\n    item: NodeList.prototype.item,\n    getNamedItem: function (key) {\n      //\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n      //\t\t\treturn null;\n      //\t\t}\n      //console.log()\n      var i = this.length;\n      while (i--) {\n        var attr = this[i];\n        //console.log(attr.nodeName,key)\n        if (attr.nodeName == key) {\n          return attr;\n        }\n      }\n    },\n    setNamedItem: function (attr) {\n      var el = attr.ownerElement;\n      if (el && el != this._ownerElement) {\n        throw new DOMException(INUSE_ATTRIBUTE_ERR);\n      }\n      var oldAttr = this.getNamedItem(attr.nodeName);\n      _addNamedNode(this._ownerElement, this, attr, oldAttr);\n      return oldAttr;\n    },\n    /* returns Node */\n    setNamedItemNS: function (attr) {\n      // raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n      var el = attr.ownerElement,\n        oldAttr;\n      if (el && el != this._ownerElement) {\n        throw new DOMException(INUSE_ATTRIBUTE_ERR);\n      }\n      oldAttr = this.getNamedItemNS(attr.namespaceURI, attr.localName);\n      _addNamedNode(this._ownerElement, this, attr, oldAttr);\n      return oldAttr;\n    },\n    /* returns Node */\n    removeNamedItem: function (key) {\n      var attr = this.getNamedItem(key);\n      _removeNamedNode(this._ownerElement, this, attr);\n      return attr;\n    },\n    // raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\n    //for level2\n    removeNamedItemNS: function (namespaceURI, localName) {\n      var attr = this.getNamedItemNS(namespaceURI, localName);\n      _removeNamedNode(this._ownerElement, this, attr);\n      return attr;\n    },\n    getNamedItemNS: function (namespaceURI, localName) {\n      var i = this.length;\n      while (i--) {\n        var node = this[i];\n        if (node.localName == localName && node.namespaceURI == namespaceURI) {\n          return node;\n        }\n      }\n      return null;\n    }\n  };\n\n  /**\n   * The DOMImplementation interface represents an object providing methods\n   * which are not dependent on any particular document.\n   * Such an object is returned by the `Document.implementation` property.\n   *\n   * __The individual methods describe the differences compared to the specs.__\n   *\n   * @constructor\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n   * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n   * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n   * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n   * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n   */\n  function DOMImplementation$1() {}\n  DOMImplementation$1.prototype = {\n    /**\n     * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n     * The different implementations fairly diverged in what kind of features were reported.\n     * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n     *\n     * @deprecated It is deprecated and modern browsers return true in all cases.\n     *\n     * @param {string} feature\n     * @param {string} [version]\n     * @returns {boolean} always true\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n     * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n     * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n     */\n    hasFeature: function (feature, version) {\n      return true;\n    },\n    /**\n     * Creates an XML Document object of the specified type with its document element.\n     *\n     * __It behaves slightly different from the description in the living standard__:\n     * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n     * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n     * - this implementation is not validating names or qualified names\n     *   (when parsing XML strings, the SAX parser takes care of that)\n     *\n     * @param {string|null} namespaceURI\n     * @param {string} qualifiedName\n     * @param {DocumentType=null} doctype\n     * @returns {Document}\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n     * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n     *\n     * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n     * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n     * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n     */\n    createDocument: function (namespaceURI, qualifiedName, doctype) {\n      var doc = new Document();\n      doc.implementation = this;\n      doc.childNodes = new NodeList();\n      doc.doctype = doctype || null;\n      if (doctype) {\n        doc.appendChild(doctype);\n      }\n      if (qualifiedName) {\n        var root = doc.createElementNS(namespaceURI, qualifiedName);\n        doc.appendChild(root);\n      }\n      return doc;\n    },\n    /**\n     * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n     *\n     * __This behavior is slightly different from the in the specs__:\n     * - this implementation is not validating names or qualified names\n     *   (when parsing XML strings, the SAX parser takes care of that)\n     *\n     * @param {string} qualifiedName\n     * @param {string} [publicId]\n     * @param {string} [systemId]\n     * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n     * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n     * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n     *\n     * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n     * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n     * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n     */\n    createDocumentType: function (qualifiedName, publicId, systemId) {\n      var node = new DocumentType();\n      node.name = qualifiedName;\n      node.nodeName = qualifiedName;\n      node.publicId = publicId || '';\n      node.systemId = systemId || '';\n      return node;\n    }\n  };\n\n  /**\n   * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n   */\n\n  function Node() {}\n  Node.prototype = {\n    firstChild: null,\n    lastChild: null,\n    previousSibling: null,\n    nextSibling: null,\n    attributes: null,\n    parentNode: null,\n    childNodes: null,\n    ownerDocument: null,\n    nodeValue: null,\n    namespaceURI: null,\n    prefix: null,\n    localName: null,\n    // Modified in DOM Level 2:\n    insertBefore: function (newChild, refChild) {\n      //raises\n      return _insertBefore(this, newChild, refChild);\n    },\n    replaceChild: function (newChild, oldChild) {\n      //raises\n      _insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n      if (oldChild) {\n        this.removeChild(oldChild);\n      }\n    },\n    removeChild: function (oldChild) {\n      return _removeChild(this, oldChild);\n    },\n    appendChild: function (newChild) {\n      return this.insertBefore(newChild, null);\n    },\n    hasChildNodes: function () {\n      return this.firstChild != null;\n    },\n    cloneNode: function (deep) {\n      return cloneNode(this.ownerDocument || this, this, deep);\n    },\n    // Modified in DOM Level 2:\n    normalize: function () {\n      var child = this.firstChild;\n      while (child) {\n        var next = child.nextSibling;\n        if (next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE) {\n          this.removeChild(next);\n          child.appendData(next.data);\n        } else {\n          child.normalize();\n          child = next;\n        }\n      }\n    },\n    // Introduced in DOM Level 2:\n    isSupported: function (feature, version) {\n      return this.ownerDocument.implementation.hasFeature(feature, version);\n    },\n    // Introduced in DOM Level 2:\n    hasAttributes: function () {\n      return this.attributes.length > 0;\n    },\n    /**\n     * Look up the prefix associated to the given namespace URI, starting from this node.\n     * **The default namespace declarations are ignored by this method.**\n     * See Namespace Prefix Lookup for details on the algorithm used by this method.\n     *\n     * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n     *\n     * @param {string | null} namespaceURI\n     * @returns {string | null}\n     * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n     * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n     * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n     * @see https://github.com/xmldom/xmldom/issues/322\n     */\n    lookupPrefix: function (namespaceURI) {\n      var el = this;\n      while (el) {\n        var map = el._nsMap;\n        //console.dir(map)\n        if (map) {\n          for (var n in map) {\n            if (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {\n              return n;\n            }\n          }\n        }\n        el = el.nodeType == ATTRIBUTE_NODE ? el.ownerDocument : el.parentNode;\n      }\n      return null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI: function (prefix) {\n      var el = this;\n      while (el) {\n        var map = el._nsMap;\n        //console.dir(map)\n        if (map) {\n          if (Object.prototype.hasOwnProperty.call(map, prefix)) {\n            return map[prefix];\n          }\n        }\n        el = el.nodeType == ATTRIBUTE_NODE ? el.ownerDocument : el.parentNode;\n      }\n      return null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace: function (namespaceURI) {\n      var prefix = this.lookupPrefix(namespaceURI);\n      return prefix == null;\n    }\n  };\n  function _xmlEncoder(c) {\n    return c == '<' && '&lt;' || c == '>' && '&gt;' || c == '&' && '&amp;' || c == '\"' && '&quot;' || '&#' + c.charCodeAt() + ';';\n  }\n  copy(NodeType, Node);\n  copy(NodeType, Node.prototype);\n\n  /**\n   * @param callback return true for continue,false for break\n   * @return boolean true: break visit;\n   */\n  function _visitNode(node, callback) {\n    if (callback(node)) {\n      return true;\n    }\n    if (node = node.firstChild) {\n      do {\n        if (_visitNode(node, callback)) {\n          return true;\n        }\n      } while (node = node.nextSibling);\n    }\n  }\n  function Document() {\n    this.ownerDocument = this;\n  }\n  function _onAddAttribute(doc, el, newAttr) {\n    doc && doc._inc++;\n    var ns = newAttr.namespaceURI;\n    if (ns === NAMESPACE$2.XMLNS) {\n      //update namespace\n      el._nsMap[newAttr.prefix ? newAttr.localName : ''] = newAttr.value;\n    }\n  }\n  function _onRemoveAttribute(doc, el, newAttr, remove) {\n    doc && doc._inc++;\n    var ns = newAttr.namespaceURI;\n    if (ns === NAMESPACE$2.XMLNS) {\n      //update namespace\n      delete el._nsMap[newAttr.prefix ? newAttr.localName : ''];\n    }\n  }\n\n  /**\n   * Updates `el.childNodes`, updating the indexed items and it's `length`.\n   * Passing `newChild` means it will be appended.\n   * Otherwise it's assumed that an item has been removed,\n   * and `el.firstNode` and it's `.nextSibling` are used\n   * to walk the current list of child nodes.\n   *\n   * @param {Document} doc\n   * @param {Node} el\n   * @param {Node} [newChild]\n   * @private\n   */\n  function _onUpdateChild(doc, el, newChild) {\n    if (doc && doc._inc) {\n      doc._inc++;\n      //update childNodes\n      var cs = el.childNodes;\n      if (newChild) {\n        cs[cs.length++] = newChild;\n      } else {\n        var child = el.firstChild;\n        var i = 0;\n        while (child) {\n          cs[i++] = child;\n          child = child.nextSibling;\n        }\n        cs.length = i;\n        delete cs[cs.length];\n      }\n    }\n  }\n\n  /**\n   * Removes the connections between `parentNode` and `child`\n   * and any existing `child.previousSibling` or `child.nextSibling`.\n   *\n   * @see https://github.com/xmldom/xmldom/issues/135\n   * @see https://github.com/xmldom/xmldom/issues/145\n   *\n   * @param {Node} parentNode\n   * @param {Node} child\n   * @returns {Node} the child that was removed.\n   * @private\n   */\n  function _removeChild(parentNode, child) {\n    var previous = child.previousSibling;\n    var next = child.nextSibling;\n    if (previous) {\n      previous.nextSibling = next;\n    } else {\n      parentNode.firstChild = next;\n    }\n    if (next) {\n      next.previousSibling = previous;\n    } else {\n      parentNode.lastChild = previous;\n    }\n    child.parentNode = null;\n    child.previousSibling = null;\n    child.nextSibling = null;\n    _onUpdateChild(parentNode.ownerDocument, parentNode);\n    return child;\n  }\n\n  /**\n   * Returns `true` if `node` can be a parent for insertion.\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function hasValidParentNodeType(node) {\n    return node && (node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE);\n  }\n\n  /**\n   * Returns `true` if `node` can be inserted according to it's `nodeType`.\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function hasInsertableNodeType(node) {\n    return node && (isElementNode(node) || isTextNode(node) || isDocTypeNode(node) || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.COMMENT_NODE || node.nodeType === Node.PROCESSING_INSTRUCTION_NODE);\n  }\n\n  /**\n   * Returns true if `node` is a DOCTYPE node\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function isDocTypeNode(node) {\n    return node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\n  }\n\n  /**\n   * Returns true if the node is an element\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function isElementNode(node) {\n    return node && node.nodeType === Node.ELEMENT_NODE;\n  }\n  /**\n   * Returns true if `node` is a text node\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function isTextNode(node) {\n    return node && node.nodeType === Node.TEXT_NODE;\n  }\n\n  /**\n   * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n   * according to the presence and position of a doctype node on the same level.\n   *\n   * @param {Document} doc The document node\n   * @param {Node} child the node that would become the nextSibling if the element would be inserted\n   * @returns {boolean} `true` if an element can be inserted before child\n   * @private\n   * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n   */\n  function isElementInsertionPossible(doc, child) {\n    var parentChildNodes = doc.childNodes || [];\n    if (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\n      return false;\n    }\n    var docTypeNode = find(parentChildNodes, isDocTypeNode);\n    return !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n  }\n\n  /**\n   * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n   * according to the presence and position of a doctype node on the same level.\n   *\n   * @param {Node} doc The document node\n   * @param {Node} child the node that would become the nextSibling if the element would be inserted\n   * @returns {boolean} `true` if an element can be inserted before child\n   * @private\n   * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n   */\n  function isElementReplacementPossible(doc, child) {\n    var parentChildNodes = doc.childNodes || [];\n    function hasElementChildThatIsNotChild(node) {\n      return isElementNode(node) && node !== child;\n    }\n    if (find(parentChildNodes, hasElementChildThatIsNotChild)) {\n      return false;\n    }\n    var docTypeNode = find(parentChildNodes, isDocTypeNode);\n    return !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n  }\n\n  /**\n   * @private\n   * Steps 1-5 of the checks before inserting and before replacing a child are the same.\n   *\n   * @param {Node} parent the parent node to insert `node` into\n   * @param {Node} node the node to insert\n   * @param {Node=} child the node that should become the `nextSibling` of `node`\n   * @returns {Node}\n   * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n   * @throws DOMException if `child` is provided but is not a child of `parent`.\n   * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n   * @see https://dom.spec.whatwg.org/#concept-node-replace\n   */\n  function assertPreInsertionValidity1to5(parent, node, child) {\n    // 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\n    if (!hasValidParentNodeType(parent)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\n    }\n    // 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\n    // not implemented!\n    // 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\n    if (child && child.parentNode !== parent) {\n      throw new DOMException(NOT_FOUND_ERR, 'child not in parent');\n    }\n    if (\n    // 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\n    !hasInsertableNodeType(node) ||\n    // 5. If either `node` is a Text node and `parent` is a document,\n    // the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\n    // || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\n    // or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\n    isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType);\n    }\n  }\n\n  /**\n   * @private\n   * Step 6 of the checks before inserting and before replacing a child are different.\n   *\n   * @param {Document} parent the parent node to insert `node` into\n   * @param {Node} node the node to insert\n   * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n   * @returns {Node}\n   * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n   * @throws DOMException if `child` is provided but is not a child of `parent`.\n   * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n   * @see https://dom.spec.whatwg.org/#concept-node-replace\n   */\n  function assertPreInsertionValidityInDocument(parent, node, child) {\n    var parentChildNodes = parent.childNodes || [];\n    var nodeChildNodes = node.childNodes || [];\n\n    // DocumentFragment\n    if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n      var nodeChildElements = nodeChildNodes.filter(isElementNode);\n      // If node has more than one element child or has a Text node child.\n      if (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n        throw new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n      }\n      // Otherwise, if `node` has one element child and either `parent` has an element child,\n      // `child` is a doctype, or `child` is non-null and a doctype is following `child`.\n      if (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\n        throw new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n      }\n    }\n    // Element\n    if (isElementNode(node)) {\n      // `parent` has an element child, `child` is a doctype,\n      // or `child` is non-null and a doctype is following `child`.\n      if (!isElementInsertionPossible(parent, child)) {\n        throw new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n      }\n    }\n    // DocumentType\n    if (isDocTypeNode(node)) {\n      // `parent` has a doctype child,\n      if (find(parentChildNodes, isDocTypeNode)) {\n        throw new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n      }\n      var parentElementChild = find(parentChildNodes, isElementNode);\n      // `child` is non-null and an element is preceding `child`,\n      if (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n        throw new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n      }\n      // or `child` is null and `parent` has an element child.\n      if (!child && parentElementChild) {\n        throw new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\n      }\n    }\n  }\n\n  /**\n   * @private\n   * Step 6 of the checks before inserting and before replacing a child are different.\n   *\n   * @param {Document} parent the parent node to insert `node` into\n   * @param {Node} node the node to insert\n   * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n   * @returns {Node}\n   * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n   * @throws DOMException if `child` is provided but is not a child of `parent`.\n   * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n   * @see https://dom.spec.whatwg.org/#concept-node-replace\n   */\n  function assertPreReplacementValidityInDocument(parent, node, child) {\n    var parentChildNodes = parent.childNodes || [];\n    var nodeChildNodes = node.childNodes || [];\n\n    // DocumentFragment\n    if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n      var nodeChildElements = nodeChildNodes.filter(isElementNode);\n      // If `node` has more than one element child or has a Text node child.\n      if (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n        throw new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n      }\n      // Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\n      if (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\n        throw new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n      }\n    }\n    // Element\n    if (isElementNode(node)) {\n      // `parent` has an element child that is not `child` or a doctype is following `child`.\n      if (!isElementReplacementPossible(parent, child)) {\n        throw new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n      }\n    }\n    // DocumentType\n    if (isDocTypeNode(node)) {\n      function hasDoctypeChildThatIsNotChild(node) {\n        return isDocTypeNode(node) && node !== child;\n      }\n\n      // `parent` has a doctype child that is not `child`,\n      if (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\n        throw new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n      }\n      var parentElementChild = find(parentChildNodes, isElementNode);\n      // or an element is preceding `child`.\n      if (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n        throw new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Node} parent the parent node to insert `node` into\n   * @param {Node} node the node to insert\n   * @param {Node=} child the node that should become the `nextSibling` of `node`\n   * @returns {Node}\n   * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n   * @throws DOMException if `child` is provided but is not a child of `parent`.\n   * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n   */\n  function _insertBefore(parent, node, child, _inDocumentAssertion) {\n    // To ensure pre-insertion validity of a node into a parent before a child, run these steps:\n    assertPreInsertionValidity1to5(parent, node, child);\n\n    // If parent is a document, and any of the statements below, switched on the interface node implements,\n    // are true, then throw a \"HierarchyRequestError\" DOMException.\n    if (parent.nodeType === Node.DOCUMENT_NODE) {\n      (_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\n    }\n    var cp = node.parentNode;\n    if (cp) {\n      cp.removeChild(node); //remove and update\n    }\n    if (node.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      var newFirst = node.firstChild;\n      if (newFirst == null) {\n        return node;\n      }\n      var newLast = node.lastChild;\n    } else {\n      newFirst = newLast = node;\n    }\n    var pre = child ? child.previousSibling : parent.lastChild;\n    newFirst.previousSibling = pre;\n    newLast.nextSibling = child;\n    if (pre) {\n      pre.nextSibling = newFirst;\n    } else {\n      parent.firstChild = newFirst;\n    }\n    if (child == null) {\n      parent.lastChild = newLast;\n    } else {\n      child.previousSibling = newLast;\n    }\n    do {\n      newFirst.parentNode = parent;\n    } while (newFirst !== newLast && (newFirst = newFirst.nextSibling));\n    _onUpdateChild(parent.ownerDocument || parent, parent);\n    //console.log(parent.lastChild.nextSibling == null)\n    if (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\n      node.firstChild = node.lastChild = null;\n    }\n    return node;\n  }\n\n  /**\n   * Appends `newChild` to `parentNode`.\n   * If `newChild` is already connected to a `parentNode` it is first removed from it.\n   *\n   * @see https://github.com/xmldom/xmldom/issues/135\n   * @see https://github.com/xmldom/xmldom/issues/145\n   * @param {Node} parentNode\n   * @param {Node} newChild\n   * @returns {Node}\n   * @private\n   */\n  function _appendSingleChild(parentNode, newChild) {\n    if (newChild.parentNode) {\n      newChild.parentNode.removeChild(newChild);\n    }\n    newChild.parentNode = parentNode;\n    newChild.previousSibling = parentNode.lastChild;\n    newChild.nextSibling = null;\n    if (newChild.previousSibling) {\n      newChild.previousSibling.nextSibling = newChild;\n    } else {\n      parentNode.firstChild = newChild;\n    }\n    parentNode.lastChild = newChild;\n    _onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n    return newChild;\n  }\n  Document.prototype = {\n    //implementation : null,\n    nodeName: '#document',\n    nodeType: DOCUMENT_NODE,\n    /**\n     * The DocumentType node of the document.\n     *\n     * @readonly\n     * @type DocumentType\n     */\n    doctype: null,\n    documentElement: null,\n    _inc: 1,\n    insertBefore: function (newChild, refChild) {\n      //raises\n      if (newChild.nodeType == DOCUMENT_FRAGMENT_NODE) {\n        var child = newChild.firstChild;\n        while (child) {\n          var next = child.nextSibling;\n          this.insertBefore(child, refChild);\n          child = next;\n        }\n        return newChild;\n      }\n      _insertBefore(this, newChild, refChild);\n      newChild.ownerDocument = this;\n      if (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\n        this.documentElement = newChild;\n      }\n      return newChild;\n    },\n    removeChild: function (oldChild) {\n      if (this.documentElement == oldChild) {\n        this.documentElement = null;\n      }\n      return _removeChild(this, oldChild);\n    },\n    replaceChild: function (newChild, oldChild) {\n      //raises\n      _insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n      newChild.ownerDocument = this;\n      if (oldChild) {\n        this.removeChild(oldChild);\n      }\n      if (isElementNode(newChild)) {\n        this.documentElement = newChild;\n      }\n    },\n    // Introduced in DOM Level 2:\n    importNode: function (importedNode, deep) {\n      return importNode(this, importedNode, deep);\n    },\n    // Introduced in DOM Level 2:\n    getElementById: function (id) {\n      var rtv = null;\n      _visitNode(this.documentElement, function (node) {\n        if (node.nodeType == ELEMENT_NODE) {\n          if (node.getAttribute('id') == id) {\n            rtv = node;\n            return true;\n          }\n        }\n      });\n      return rtv;\n    },\n    /**\n     * The `getElementsByClassName` method of `Document` interface returns an array-like object\n     * of all child elements which have **all** of the given class name(s).\n     *\n     * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n     *\n     *\n     * Warning: This is a live LiveNodeList.\n     * Changes in the DOM will reflect in the array as the changes occur.\n     * If an element selected by this array no longer qualifies for the selector,\n     * it will automatically be removed. Be aware of this for iteration purposes.\n     *\n     * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n     * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n     */\n    getElementsByClassName: function (classNames) {\n      var classNamesSet = toOrderedSet(classNames);\n      return new LiveNodeList(this, function (base) {\n        var ls = [];\n        if (classNamesSet.length > 0) {\n          _visitNode(base.documentElement, function (node) {\n            if (node !== base && node.nodeType === ELEMENT_NODE) {\n              var nodeClassNames = node.getAttribute('class');\n              // can be null if the attribute does not exist\n              if (nodeClassNames) {\n                // before splitting and iterating just compare them for the most common case\n                var matches = classNames === nodeClassNames;\n                if (!matches) {\n                  var nodeClassNamesSet = toOrderedSet(nodeClassNames);\n                  matches = classNamesSet.every(arrayIncludes(nodeClassNamesSet));\n                }\n                if (matches) {\n                  ls.push(node);\n                }\n              }\n            }\n          });\n        }\n        return ls;\n      });\n    },\n    //document factory method:\n    createElement: function (tagName) {\n      var node = new Element();\n      node.ownerDocument = this;\n      node.nodeName = tagName;\n      node.tagName = tagName;\n      node.localName = tagName;\n      node.childNodes = new NodeList();\n      var attrs = node.attributes = new NamedNodeMap();\n      attrs._ownerElement = node;\n      return node;\n    },\n    createDocumentFragment: function () {\n      var node = new DocumentFragment();\n      node.ownerDocument = this;\n      node.childNodes = new NodeList();\n      return node;\n    },\n    createTextNode: function (data) {\n      var node = new Text();\n      node.ownerDocument = this;\n      node.appendData(data);\n      return node;\n    },\n    createComment: function (data) {\n      var node = new Comment();\n      node.ownerDocument = this;\n      node.appendData(data);\n      return node;\n    },\n    createCDATASection: function (data) {\n      var node = new CDATASection();\n      node.ownerDocument = this;\n      node.appendData(data);\n      return node;\n    },\n    createProcessingInstruction: function (target, data) {\n      var node = new ProcessingInstruction();\n      node.ownerDocument = this;\n      node.tagName = node.nodeName = node.target = target;\n      node.nodeValue = node.data = data;\n      return node;\n    },\n    createAttribute: function (name) {\n      var node = new Attr();\n      node.ownerDocument = this;\n      node.name = name;\n      node.nodeName = name;\n      node.localName = name;\n      node.specified = true;\n      return node;\n    },\n    createEntityReference: function (name) {\n      var node = new EntityReference();\n      node.ownerDocument = this;\n      node.nodeName = name;\n      return node;\n    },\n    // Introduced in DOM Level 2:\n    createElementNS: function (namespaceURI, qualifiedName) {\n      var node = new Element();\n      var pl = qualifiedName.split(':');\n      var attrs = node.attributes = new NamedNodeMap();\n      node.childNodes = new NodeList();\n      node.ownerDocument = this;\n      node.nodeName = qualifiedName;\n      node.tagName = qualifiedName;\n      node.namespaceURI = namespaceURI;\n      if (pl.length == 2) {\n        node.prefix = pl[0];\n        node.localName = pl[1];\n      } else {\n        //el.prefix = null;\n        node.localName = qualifiedName;\n      }\n      attrs._ownerElement = node;\n      return node;\n    },\n    // Introduced in DOM Level 2:\n    createAttributeNS: function (namespaceURI, qualifiedName) {\n      var node = new Attr();\n      var pl = qualifiedName.split(':');\n      node.ownerDocument = this;\n      node.nodeName = qualifiedName;\n      node.name = qualifiedName;\n      node.namespaceURI = namespaceURI;\n      node.specified = true;\n      if (pl.length == 2) {\n        node.prefix = pl[0];\n        node.localName = pl[1];\n      } else {\n        //el.prefix = null;\n        node.localName = qualifiedName;\n      }\n      return node;\n    }\n  };\n  _extends(Document, Node);\n  function Element() {\n    this._nsMap = {};\n  }\n  Element.prototype = {\n    nodeType: ELEMENT_NODE,\n    hasAttribute: function (name) {\n      return this.getAttributeNode(name) != null;\n    },\n    getAttribute: function (name) {\n      var attr = this.getAttributeNode(name);\n      return attr && attr.value || '';\n    },\n    getAttributeNode: function (name) {\n      return this.attributes.getNamedItem(name);\n    },\n    setAttribute: function (name, value) {\n      var attr = this.ownerDocument.createAttribute(name);\n      attr.value = attr.nodeValue = \"\" + value;\n      this.setAttributeNode(attr);\n    },\n    removeAttribute: function (name) {\n      var attr = this.getAttributeNode(name);\n      attr && this.removeAttributeNode(attr);\n    },\n    //four real opeartion method\n    appendChild: function (newChild) {\n      if (newChild.nodeType === DOCUMENT_FRAGMENT_NODE) {\n        return this.insertBefore(newChild, null);\n      } else {\n        return _appendSingleChild(this, newChild);\n      }\n    },\n    setAttributeNode: function (newAttr) {\n      return this.attributes.setNamedItem(newAttr);\n    },\n    setAttributeNodeNS: function (newAttr) {\n      return this.attributes.setNamedItemNS(newAttr);\n    },\n    removeAttributeNode: function (oldAttr) {\n      //console.log(this == oldAttr.ownerElement)\n      return this.attributes.removeNamedItem(oldAttr.nodeName);\n    },\n    //get real attribute name,and remove it by removeAttributeNode\n    removeAttributeNS: function (namespaceURI, localName) {\n      var old = this.getAttributeNodeNS(namespaceURI, localName);\n      old && this.removeAttributeNode(old);\n    },\n    hasAttributeNS: function (namespaceURI, localName) {\n      return this.getAttributeNodeNS(namespaceURI, localName) != null;\n    },\n    getAttributeNS: function (namespaceURI, localName) {\n      var attr = this.getAttributeNodeNS(namespaceURI, localName);\n      return attr && attr.value || '';\n    },\n    setAttributeNS: function (namespaceURI, qualifiedName, value) {\n      var attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n      attr.value = attr.nodeValue = \"\" + value;\n      this.setAttributeNode(attr);\n    },\n    getAttributeNodeNS: function (namespaceURI, localName) {\n      return this.attributes.getNamedItemNS(namespaceURI, localName);\n    },\n    getElementsByTagName: function (tagName) {\n      return new LiveNodeList(this, function (base) {\n        var ls = [];\n        _visitNode(base, function (node) {\n          if (node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)) {\n            ls.push(node);\n          }\n        });\n        return ls;\n      });\n    },\n    getElementsByTagNameNS: function (namespaceURI, localName) {\n      return new LiveNodeList(this, function (base) {\n        var ls = [];\n        _visitNode(base, function (node) {\n          if (node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)) {\n            ls.push(node);\n          }\n        });\n        return ls;\n      });\n    }\n  };\n  Document.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\n  Document.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n  _extends(Element, Node);\n  function Attr() {}\n  Attr.prototype.nodeType = ATTRIBUTE_NODE;\n  _extends(Attr, Node);\n  function CharacterData() {}\n  CharacterData.prototype = {\n    data: '',\n    substringData: function (offset, count) {\n      return this.data.substring(offset, offset + count);\n    },\n    appendData: function (text) {\n      text = this.data + text;\n      this.nodeValue = this.data = text;\n      this.length = text.length;\n    },\n    insertData: function (offset, text) {\n      this.replaceData(offset, 0, text);\n    },\n    appendChild: function (newChild) {\n      throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR]);\n    },\n    deleteData: function (offset, count) {\n      this.replaceData(offset, count, \"\");\n    },\n    replaceData: function (offset, count, text) {\n      var start = this.data.substring(0, offset);\n      var end = this.data.substring(offset + count);\n      text = start + text + end;\n      this.nodeValue = this.data = text;\n      this.length = text.length;\n    }\n  };\n  _extends(CharacterData, Node);\n  function Text() {}\n  Text.prototype = {\n    nodeName: \"#text\",\n    nodeType: TEXT_NODE,\n    splitText: function (offset) {\n      var text = this.data;\n      var newText = text.substring(offset);\n      text = text.substring(0, offset);\n      this.data = this.nodeValue = text;\n      this.length = text.length;\n      var newNode = this.ownerDocument.createTextNode(newText);\n      if (this.parentNode) {\n        this.parentNode.insertBefore(newNode, this.nextSibling);\n      }\n      return newNode;\n    }\n  };\n  _extends(Text, CharacterData);\n  function Comment() {}\n  Comment.prototype = {\n    nodeName: \"#comment\",\n    nodeType: COMMENT_NODE\n  };\n  _extends(Comment, CharacterData);\n  function CDATASection() {}\n  CDATASection.prototype = {\n    nodeName: \"#cdata-section\",\n    nodeType: CDATA_SECTION_NODE\n  };\n  _extends(CDATASection, CharacterData);\n  function DocumentType() {}\n  DocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n  _extends(DocumentType, Node);\n  function Notation() {}\n  Notation.prototype.nodeType = NOTATION_NODE;\n  _extends(Notation, Node);\n  function Entity() {}\n  Entity.prototype.nodeType = ENTITY_NODE;\n  _extends(Entity, Node);\n  function EntityReference() {}\n  EntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n  _extends(EntityReference, Node);\n  function DocumentFragment() {}\n  DocumentFragment.prototype.nodeName = \"#document-fragment\";\n  DocumentFragment.prototype.nodeType = DOCUMENT_FRAGMENT_NODE;\n  _extends(DocumentFragment, Node);\n  function ProcessingInstruction() {}\n  ProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n  _extends(ProcessingInstruction, Node);\n  function XMLSerializer() {}\n  XMLSerializer.prototype.serializeToString = function (node, isHtml, nodeFilter) {\n    return nodeSerializeToString.call(node, isHtml, nodeFilter);\n  };\n  Node.prototype.toString = nodeSerializeToString;\n  function nodeSerializeToString(isHtml, nodeFilter) {\n    var buf = [];\n    var refNode = this.nodeType == 9 && this.documentElement || this;\n    var prefix = refNode.prefix;\n    var uri = refNode.namespaceURI;\n    if (uri && prefix == null) {\n      //console.log(prefix)\n      var prefix = refNode.lookupPrefix(uri);\n      if (prefix == null) {\n        //isHTML = true;\n        var visibleNamespaces = [{\n          namespace: uri,\n          prefix: null\n        }\n        //{namespace:uri,prefix:''}\n        ];\n      }\n    }\n    serializeToString(this, buf, isHtml, nodeFilter, visibleNamespaces);\n    //console.log('###',this.nodeType,uri,prefix,buf.join(''))\n    return buf.join('');\n  }\n  function needNamespaceDefine(node, isHTML, visibleNamespaces) {\n    var prefix = node.prefix || '';\n    var uri = node.namespaceURI;\n    // According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n    // and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n    // > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n    // in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n    // and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n    // > [...] Furthermore, the attribute value [...] must not be an empty string.\n    // so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n    if (!uri) {\n      return false;\n    }\n    if (prefix === \"xml\" && uri === NAMESPACE$2.XML || uri === NAMESPACE$2.XMLNS) {\n      return false;\n    }\n    var i = visibleNamespaces.length;\n    while (i--) {\n      var ns = visibleNamespaces[i];\n      // get namespace prefix\n      if (ns.prefix === prefix) {\n        return ns.namespace !== uri;\n      }\n    }\n    return true;\n  }\n  /**\n   * Well-formed constraint: No < in Attribute Values\n   * > The replacement text of any entity referred to directly or indirectly\n   * > in an attribute value must not contain a <.\n   * @see https://www.w3.org/TR/xml11/#CleanAttrVals\n   * @see https://www.w3.org/TR/xml11/#NT-AttValue\n   *\n   * Literal whitespace other than space that appear in attribute values\n   * are serialized as their entity references, so they will be preserved.\n   * (In contrast to whitespace literals in the input which are normalized to spaces)\n   * @see https://www.w3.org/TR/xml11/#AVNormalize\n   * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes\n   */\n  function addSerializedAttribute(buf, qualifiedName, value) {\n    buf.push(' ', qualifiedName, '=\"', value.replace(/[<>&\"\\t\\n\\r]/g, _xmlEncoder), '\"');\n  }\n  function serializeToString(node, buf, isHTML, nodeFilter, visibleNamespaces) {\n    if (!visibleNamespaces) {\n      visibleNamespaces = [];\n    }\n    if (nodeFilter) {\n      node = nodeFilter(node);\n      if (node) {\n        if (typeof node == 'string') {\n          buf.push(node);\n          return;\n        }\n      } else {\n        return;\n      }\n      //buf.sort.apply(attrs, attributeSorter);\n    }\n    switch (node.nodeType) {\n      case ELEMENT_NODE:\n        var attrs = node.attributes;\n        var len = attrs.length;\n        var child = node.firstChild;\n        var nodeName = node.tagName;\n        isHTML = NAMESPACE$2.isHTML(node.namespaceURI) || isHTML;\n        var prefixedNodeName = nodeName;\n        if (!isHTML && !node.prefix && node.namespaceURI) {\n          var defaultNS;\n          // lookup current default ns from `xmlns` attribute\n          for (var ai = 0; ai < attrs.length; ai++) {\n            if (attrs.item(ai).name === 'xmlns') {\n              defaultNS = attrs.item(ai).value;\n              break;\n            }\n          }\n          if (!defaultNS) {\n            // lookup current default ns in visibleNamespaces\n            for (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n              var namespace = visibleNamespaces[nsi];\n              if (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n                defaultNS = namespace.namespace;\n                break;\n              }\n            }\n          }\n          if (defaultNS !== node.namespaceURI) {\n            for (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n              var namespace = visibleNamespaces[nsi];\n              if (namespace.namespace === node.namespaceURI) {\n                if (namespace.prefix) {\n                  prefixedNodeName = namespace.prefix + ':' + nodeName;\n                }\n                break;\n              }\n            }\n          }\n        }\n        buf.push('<', prefixedNodeName);\n        for (var i = 0; i < len; i++) {\n          // add namespaces for attributes\n          var attr = attrs.item(i);\n          if (attr.prefix == 'xmlns') {\n            visibleNamespaces.push({\n              prefix: attr.localName,\n              namespace: attr.value\n            });\n          } else if (attr.nodeName == 'xmlns') {\n            visibleNamespaces.push({\n              prefix: '',\n              namespace: attr.value\n            });\n          }\n        }\n        for (var i = 0; i < len; i++) {\n          var attr = attrs.item(i);\n          if (needNamespaceDefine(attr, isHTML, visibleNamespaces)) {\n            var prefix = attr.prefix || '';\n            var uri = attr.namespaceURI;\n            addSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n            visibleNamespaces.push({\n              prefix: prefix,\n              namespace: uri\n            });\n          }\n          serializeToString(attr, buf, isHTML, nodeFilter, visibleNamespaces);\n        }\n\n        // add namespace for current node\n        if (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n          var prefix = node.prefix || '';\n          var uri = node.namespaceURI;\n          addSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n          visibleNamespaces.push({\n            prefix: prefix,\n            namespace: uri\n          });\n        }\n        if (child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)) {\n          buf.push('>');\n          //if is cdata child node\n          if (isHTML && /^script$/i.test(nodeName)) {\n            while (child) {\n              if (child.data) {\n                buf.push(child.data);\n              } else {\n                serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n              }\n              child = child.nextSibling;\n            }\n          } else {\n            while (child) {\n              serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n              child = child.nextSibling;\n            }\n          }\n          buf.push('</', prefixedNodeName, '>');\n        } else {\n          buf.push('/>');\n        }\n        // remove added visible namespaces\n        //visibleNamespaces.length = startVisibleNamespaces;\n        return;\n      case DOCUMENT_NODE:\n      case DOCUMENT_FRAGMENT_NODE:\n        var child = node.firstChild;\n        while (child) {\n          serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n          child = child.nextSibling;\n        }\n        return;\n      case ATTRIBUTE_NODE:\n        return addSerializedAttribute(buf, node.name, node.value);\n      case TEXT_NODE:\n        /**\n         * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n         * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n         * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n         * `&amp;` and `&lt;` respectively.\n         * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n         * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n         * when that string is not marking the end of a CDATA section.\n         *\n         * In the content of elements, character data is any string of characters\n         * which does not contain the start-delimiter of any markup\n         * and does not include the CDATA-section-close delimiter, `]]>`.\n         *\n         * @see https://www.w3.org/TR/xml/#NT-CharData\n         * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node\n         */\n        return buf.push(node.data.replace(/[<&>]/g, _xmlEncoder));\n      case CDATA_SECTION_NODE:\n        return buf.push('<![CDATA[', node.data, ']]>');\n      case COMMENT_NODE:\n        return buf.push(\"<!--\", node.data, \"-->\");\n      case DOCUMENT_TYPE_NODE:\n        var pubid = node.publicId;\n        var sysid = node.systemId;\n        buf.push('<!DOCTYPE ', node.name);\n        if (pubid) {\n          buf.push(' PUBLIC ', pubid);\n          if (sysid && sysid != '.') {\n            buf.push(' ', sysid);\n          }\n          buf.push('>');\n        } else if (sysid && sysid != '.') {\n          buf.push(' SYSTEM ', sysid, '>');\n        } else {\n          var sub = node.internalSubset;\n          if (sub) {\n            buf.push(\" [\", sub, \"]\");\n          }\n          buf.push(\">\");\n        }\n        return;\n      case PROCESSING_INSTRUCTION_NODE:\n        return buf.push(\"<?\", node.target, \" \", node.data, \"?>\");\n      case ENTITY_REFERENCE_NODE:\n        return buf.push('&', node.nodeName, ';');\n      //case ENTITY_NODE:\n      //case NOTATION_NODE:\n      default:\n        buf.push('??', node.nodeName);\n    }\n  }\n  function importNode(doc, node, deep) {\n    var node2;\n    switch (node.nodeType) {\n      case ELEMENT_NODE:\n        node2 = node.cloneNode(false);\n        node2.ownerDocument = doc;\n      //var attrs = node2.attributes;\n      //var len = attrs.length;\n      //for(var i=0;i<len;i++){\n      //node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n      //}\n      case DOCUMENT_FRAGMENT_NODE:\n        break;\n      case ATTRIBUTE_NODE:\n        deep = true;\n        break;\n      //case ENTITY_REFERENCE_NODE:\n      //case PROCESSING_INSTRUCTION_NODE:\n      ////case TEXT_NODE:\n      //case CDATA_SECTION_NODE:\n      //case COMMENT_NODE:\n      //\tdeep = false;\n      //\tbreak;\n      //case DOCUMENT_NODE:\n      //case DOCUMENT_TYPE_NODE:\n      //cannot be imported.\n      //case ENTITY_NODE:\n      //case NOTATION_NODE：\n      //can not hit in level3\n      //default:throw e;\n    }\n    if (!node2) {\n      node2 = node.cloneNode(false); //false\n    }\n    node2.ownerDocument = doc;\n    node2.parentNode = null;\n    if (deep) {\n      var child = node.firstChild;\n      while (child) {\n        node2.appendChild(importNode(doc, child, deep));\n        child = child.nextSibling;\n      }\n    }\n    return node2;\n  }\n  //\n  //var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n  //\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\n  function cloneNode(doc, node, deep) {\n    var node2 = new node.constructor();\n    for (var n in node) {\n      if (Object.prototype.hasOwnProperty.call(node, n)) {\n        var v = node[n];\n        if (typeof v != \"object\") {\n          if (v != node2[n]) {\n            node2[n] = v;\n          }\n        }\n      }\n    }\n    if (node.childNodes) {\n      node2.childNodes = new NodeList();\n    }\n    node2.ownerDocument = doc;\n    switch (node2.nodeType) {\n      case ELEMENT_NODE:\n        var attrs = node.attributes;\n        var attrs2 = node2.attributes = new NamedNodeMap();\n        var len = attrs.length;\n        attrs2._ownerElement = node2;\n        for (var i = 0; i < len; i++) {\n          node2.setAttributeNode(cloneNode(doc, attrs.item(i), true));\n        }\n        break;\n      case ATTRIBUTE_NODE:\n        deep = true;\n    }\n    if (deep) {\n      var child = node.firstChild;\n      while (child) {\n        node2.appendChild(cloneNode(doc, child, deep));\n        child = child.nextSibling;\n      }\n    }\n    return node2;\n  }\n  function __set__(object, key, value) {\n    object[key] = value;\n  }\n  //do dynamic\n  try {\n    if (Object.defineProperty) {\n      Object.defineProperty(LiveNodeList.prototype, 'length', {\n        get: function () {\n          _updateLiveList(this);\n          return this.$$length;\n        }\n      });\n      Object.defineProperty(Node.prototype, 'textContent', {\n        get: function () {\n          return getTextContent(this);\n        },\n        set: function (data) {\n          switch (this.nodeType) {\n            case ELEMENT_NODE:\n            case DOCUMENT_FRAGMENT_NODE:\n              while (this.firstChild) {\n                this.removeChild(this.firstChild);\n              }\n              if (data || String(data)) {\n                this.appendChild(this.ownerDocument.createTextNode(data));\n              }\n              break;\n            default:\n              this.data = data;\n              this.value = data;\n              this.nodeValue = data;\n          }\n        }\n      });\n      function getTextContent(node) {\n        switch (node.nodeType) {\n          case ELEMENT_NODE:\n          case DOCUMENT_FRAGMENT_NODE:\n            var buf = [];\n            node = node.firstChild;\n            while (node) {\n              if (node.nodeType !== 7 && node.nodeType !== 8) {\n                buf.push(getTextContent(node));\n              }\n              node = node.nextSibling;\n            }\n            return buf.join('');\n          default:\n            return node.nodeValue;\n        }\n      }\n      __set__ = function (object, key, value) {\n        //console.log(value)\n        object['$$' + key] = value;\n      };\n    }\n  } catch (e) {//ie8\n  }\n\n  //if(typeof require == 'function'){\n  var DocumentType_1 = DocumentType;\n  var DOMException_1 = DOMException;\n  var DOMImplementation_1 = DOMImplementation$1;\n  var Element_1 = Element;\n  var Node_1 = Node;\n  var NodeList_1 = NodeList;\n  var XMLSerializer_1 = XMLSerializer;\n  //}\n\n  var dom = {\n    DocumentType: DocumentType_1,\n    DOMException: DOMException_1,\n    DOMImplementation: DOMImplementation_1,\n    Element: Element_1,\n    Node: Node_1,\n    NodeList: NodeList_1,\n    XMLSerializer: XMLSerializer_1\n  };\n\n  var entities = createCommonjsModule(function (module, exports) {\n\n    var freeze = conventions.freeze;\n\n    /**\n     * The entities that are predefined in every XML document.\n     *\n     * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n     * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n     * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n     */\n    exports.XML_ENTITIES = freeze({\n      amp: '&',\n      apos: \"'\",\n      gt: '>',\n      lt: '<',\n      quot: '\"'\n    });\n\n    /**\n     * A map of all entities that are detected in an HTML document.\n     * They contain all entries from `XML_ENTITIES`.\n     *\n     * @see XML_ENTITIES\n     * @see DOMParser.parseFromString\n     * @see DOMImplementation.prototype.createHTMLDocument\n     * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n     * @see https://html.spec.whatwg.org/entities.json JSON\n     * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n     * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n     * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n     * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n     */\n    exports.HTML_ENTITIES = freeze({\n      Aacute: '\\u00C1',\n      aacute: '\\u00E1',\n      Abreve: '\\u0102',\n      abreve: '\\u0103',\n      ac: '\\u223E',\n      acd: '\\u223F',\n      acE: '\\u223E\\u0333',\n      Acirc: '\\u00C2',\n      acirc: '\\u00E2',\n      acute: '\\u00B4',\n      Acy: '\\u0410',\n      acy: '\\u0430',\n      AElig: '\\u00C6',\n      aelig: '\\u00E6',\n      af: '\\u2061',\n      Afr: '\\uD835\\uDD04',\n      afr: '\\uD835\\uDD1E',\n      Agrave: '\\u00C0',\n      agrave: '\\u00E0',\n      alefsym: '\\u2135',\n      aleph: '\\u2135',\n      Alpha: '\\u0391',\n      alpha: '\\u03B1',\n      Amacr: '\\u0100',\n      amacr: '\\u0101',\n      amalg: '\\u2A3F',\n      AMP: '\\u0026',\n      amp: '\\u0026',\n      And: '\\u2A53',\n      and: '\\u2227',\n      andand: '\\u2A55',\n      andd: '\\u2A5C',\n      andslope: '\\u2A58',\n      andv: '\\u2A5A',\n      ang: '\\u2220',\n      ange: '\\u29A4',\n      angle: '\\u2220',\n      angmsd: '\\u2221',\n      angmsdaa: '\\u29A8',\n      angmsdab: '\\u29A9',\n      angmsdac: '\\u29AA',\n      angmsdad: '\\u29AB',\n      angmsdae: '\\u29AC',\n      angmsdaf: '\\u29AD',\n      angmsdag: '\\u29AE',\n      angmsdah: '\\u29AF',\n      angrt: '\\u221F',\n      angrtvb: '\\u22BE',\n      angrtvbd: '\\u299D',\n      angsph: '\\u2222',\n      angst: '\\u00C5',\n      angzarr: '\\u237C',\n      Aogon: '\\u0104',\n      aogon: '\\u0105',\n      Aopf: '\\uD835\\uDD38',\n      aopf: '\\uD835\\uDD52',\n      ap: '\\u2248',\n      apacir: '\\u2A6F',\n      apE: '\\u2A70',\n      ape: '\\u224A',\n      apid: '\\u224B',\n      apos: '\\u0027',\n      ApplyFunction: '\\u2061',\n      approx: '\\u2248',\n      approxeq: '\\u224A',\n      Aring: '\\u00C5',\n      aring: '\\u00E5',\n      Ascr: '\\uD835\\uDC9C',\n      ascr: '\\uD835\\uDCB6',\n      Assign: '\\u2254',\n      ast: '\\u002A',\n      asymp: '\\u2248',\n      asympeq: '\\u224D',\n      Atilde: '\\u00C3',\n      atilde: '\\u00E3',\n      Auml: '\\u00C4',\n      auml: '\\u00E4',\n      awconint: '\\u2233',\n      awint: '\\u2A11',\n      backcong: '\\u224C',\n      backepsilon: '\\u03F6',\n      backprime: '\\u2035',\n      backsim: '\\u223D',\n      backsimeq: '\\u22CD',\n      Backslash: '\\u2216',\n      Barv: '\\u2AE7',\n      barvee: '\\u22BD',\n      Barwed: '\\u2306',\n      barwed: '\\u2305',\n      barwedge: '\\u2305',\n      bbrk: '\\u23B5',\n      bbrktbrk: '\\u23B6',\n      bcong: '\\u224C',\n      Bcy: '\\u0411',\n      bcy: '\\u0431',\n      bdquo: '\\u201E',\n      becaus: '\\u2235',\n      Because: '\\u2235',\n      because: '\\u2235',\n      bemptyv: '\\u29B0',\n      bepsi: '\\u03F6',\n      bernou: '\\u212C',\n      Bernoullis: '\\u212C',\n      Beta: '\\u0392',\n      beta: '\\u03B2',\n      beth: '\\u2136',\n      between: '\\u226C',\n      Bfr: '\\uD835\\uDD05',\n      bfr: '\\uD835\\uDD1F',\n      bigcap: '\\u22C2',\n      bigcirc: '\\u25EF',\n      bigcup: '\\u22C3',\n      bigodot: '\\u2A00',\n      bigoplus: '\\u2A01',\n      bigotimes: '\\u2A02',\n      bigsqcup: '\\u2A06',\n      bigstar: '\\u2605',\n      bigtriangledown: '\\u25BD',\n      bigtriangleup: '\\u25B3',\n      biguplus: '\\u2A04',\n      bigvee: '\\u22C1',\n      bigwedge: '\\u22C0',\n      bkarow: '\\u290D',\n      blacklozenge: '\\u29EB',\n      blacksquare: '\\u25AA',\n      blacktriangle: '\\u25B4',\n      blacktriangledown: '\\u25BE',\n      blacktriangleleft: '\\u25C2',\n      blacktriangleright: '\\u25B8',\n      blank: '\\u2423',\n      blk12: '\\u2592',\n      blk14: '\\u2591',\n      blk34: '\\u2593',\n      block: '\\u2588',\n      bne: '\\u003D\\u20E5',\n      bnequiv: '\\u2261\\u20E5',\n      bNot: '\\u2AED',\n      bnot: '\\u2310',\n      Bopf: '\\uD835\\uDD39',\n      bopf: '\\uD835\\uDD53',\n      bot: '\\u22A5',\n      bottom: '\\u22A5',\n      bowtie: '\\u22C8',\n      boxbox: '\\u29C9',\n      boxDL: '\\u2557',\n      boxDl: '\\u2556',\n      boxdL: '\\u2555',\n      boxdl: '\\u2510',\n      boxDR: '\\u2554',\n      boxDr: '\\u2553',\n      boxdR: '\\u2552',\n      boxdr: '\\u250C',\n      boxH: '\\u2550',\n      boxh: '\\u2500',\n      boxHD: '\\u2566',\n      boxHd: '\\u2564',\n      boxhD: '\\u2565',\n      boxhd: '\\u252C',\n      boxHU: '\\u2569',\n      boxHu: '\\u2567',\n      boxhU: '\\u2568',\n      boxhu: '\\u2534',\n      boxminus: '\\u229F',\n      boxplus: '\\u229E',\n      boxtimes: '\\u22A0',\n      boxUL: '\\u255D',\n      boxUl: '\\u255C',\n      boxuL: '\\u255B',\n      boxul: '\\u2518',\n      boxUR: '\\u255A',\n      boxUr: '\\u2559',\n      boxuR: '\\u2558',\n      boxur: '\\u2514',\n      boxV: '\\u2551',\n      boxv: '\\u2502',\n      boxVH: '\\u256C',\n      boxVh: '\\u256B',\n      boxvH: '\\u256A',\n      boxvh: '\\u253C',\n      boxVL: '\\u2563',\n      boxVl: '\\u2562',\n      boxvL: '\\u2561',\n      boxvl: '\\u2524',\n      boxVR: '\\u2560',\n      boxVr: '\\u255F',\n      boxvR: '\\u255E',\n      boxvr: '\\u251C',\n      bprime: '\\u2035',\n      Breve: '\\u02D8',\n      breve: '\\u02D8',\n      brvbar: '\\u00A6',\n      Bscr: '\\u212C',\n      bscr: '\\uD835\\uDCB7',\n      bsemi: '\\u204F',\n      bsim: '\\u223D',\n      bsime: '\\u22CD',\n      bsol: '\\u005C',\n      bsolb: '\\u29C5',\n      bsolhsub: '\\u27C8',\n      bull: '\\u2022',\n      bullet: '\\u2022',\n      bump: '\\u224E',\n      bumpE: '\\u2AAE',\n      bumpe: '\\u224F',\n      Bumpeq: '\\u224E',\n      bumpeq: '\\u224F',\n      Cacute: '\\u0106',\n      cacute: '\\u0107',\n      Cap: '\\u22D2',\n      cap: '\\u2229',\n      capand: '\\u2A44',\n      capbrcup: '\\u2A49',\n      capcap: '\\u2A4B',\n      capcup: '\\u2A47',\n      capdot: '\\u2A40',\n      CapitalDifferentialD: '\\u2145',\n      caps: '\\u2229\\uFE00',\n      caret: '\\u2041',\n      caron: '\\u02C7',\n      Cayleys: '\\u212D',\n      ccaps: '\\u2A4D',\n      Ccaron: '\\u010C',\n      ccaron: '\\u010D',\n      Ccedil: '\\u00C7',\n      ccedil: '\\u00E7',\n      Ccirc: '\\u0108',\n      ccirc: '\\u0109',\n      Cconint: '\\u2230',\n      ccups: '\\u2A4C',\n      ccupssm: '\\u2A50',\n      Cdot: '\\u010A',\n      cdot: '\\u010B',\n      cedil: '\\u00B8',\n      Cedilla: '\\u00B8',\n      cemptyv: '\\u29B2',\n      cent: '\\u00A2',\n      CenterDot: '\\u00B7',\n      centerdot: '\\u00B7',\n      Cfr: '\\u212D',\n      cfr: '\\uD835\\uDD20',\n      CHcy: '\\u0427',\n      chcy: '\\u0447',\n      check: '\\u2713',\n      checkmark: '\\u2713',\n      Chi: '\\u03A7',\n      chi: '\\u03C7',\n      cir: '\\u25CB',\n      circ: '\\u02C6',\n      circeq: '\\u2257',\n      circlearrowleft: '\\u21BA',\n      circlearrowright: '\\u21BB',\n      circledast: '\\u229B',\n      circledcirc: '\\u229A',\n      circleddash: '\\u229D',\n      CircleDot: '\\u2299',\n      circledR: '\\u00AE',\n      circledS: '\\u24C8',\n      CircleMinus: '\\u2296',\n      CirclePlus: '\\u2295',\n      CircleTimes: '\\u2297',\n      cirE: '\\u29C3',\n      cire: '\\u2257',\n      cirfnint: '\\u2A10',\n      cirmid: '\\u2AEF',\n      cirscir: '\\u29C2',\n      ClockwiseContourIntegral: '\\u2232',\n      CloseCurlyDoubleQuote: '\\u201D',\n      CloseCurlyQuote: '\\u2019',\n      clubs: '\\u2663',\n      clubsuit: '\\u2663',\n      Colon: '\\u2237',\n      colon: '\\u003A',\n      Colone: '\\u2A74',\n      colone: '\\u2254',\n      coloneq: '\\u2254',\n      comma: '\\u002C',\n      commat: '\\u0040',\n      comp: '\\u2201',\n      compfn: '\\u2218',\n      complement: '\\u2201',\n      complexes: '\\u2102',\n      cong: '\\u2245',\n      congdot: '\\u2A6D',\n      Congruent: '\\u2261',\n      Conint: '\\u222F',\n      conint: '\\u222E',\n      ContourIntegral: '\\u222E',\n      Copf: '\\u2102',\n      copf: '\\uD835\\uDD54',\n      coprod: '\\u2210',\n      Coproduct: '\\u2210',\n      COPY: '\\u00A9',\n      copy: '\\u00A9',\n      copysr: '\\u2117',\n      CounterClockwiseContourIntegral: '\\u2233',\n      crarr: '\\u21B5',\n      Cross: '\\u2A2F',\n      cross: '\\u2717',\n      Cscr: '\\uD835\\uDC9E',\n      cscr: '\\uD835\\uDCB8',\n      csub: '\\u2ACF',\n      csube: '\\u2AD1',\n      csup: '\\u2AD0',\n      csupe: '\\u2AD2',\n      ctdot: '\\u22EF',\n      cudarrl: '\\u2938',\n      cudarrr: '\\u2935',\n      cuepr: '\\u22DE',\n      cuesc: '\\u22DF',\n      cularr: '\\u21B6',\n      cularrp: '\\u293D',\n      Cup: '\\u22D3',\n      cup: '\\u222A',\n      cupbrcap: '\\u2A48',\n      CupCap: '\\u224D',\n      cupcap: '\\u2A46',\n      cupcup: '\\u2A4A',\n      cupdot: '\\u228D',\n      cupor: '\\u2A45',\n      cups: '\\u222A\\uFE00',\n      curarr: '\\u21B7',\n      curarrm: '\\u293C',\n      curlyeqprec: '\\u22DE',\n      curlyeqsucc: '\\u22DF',\n      curlyvee: '\\u22CE',\n      curlywedge: '\\u22CF',\n      curren: '\\u00A4',\n      curvearrowleft: '\\u21B6',\n      curvearrowright: '\\u21B7',\n      cuvee: '\\u22CE',\n      cuwed: '\\u22CF',\n      cwconint: '\\u2232',\n      cwint: '\\u2231',\n      cylcty: '\\u232D',\n      Dagger: '\\u2021',\n      dagger: '\\u2020',\n      daleth: '\\u2138',\n      Darr: '\\u21A1',\n      dArr: '\\u21D3',\n      darr: '\\u2193',\n      dash: '\\u2010',\n      Dashv: '\\u2AE4',\n      dashv: '\\u22A3',\n      dbkarow: '\\u290F',\n      dblac: '\\u02DD',\n      Dcaron: '\\u010E',\n      dcaron: '\\u010F',\n      Dcy: '\\u0414',\n      dcy: '\\u0434',\n      DD: '\\u2145',\n      dd: '\\u2146',\n      ddagger: '\\u2021',\n      ddarr: '\\u21CA',\n      DDotrahd: '\\u2911',\n      ddotseq: '\\u2A77',\n      deg: '\\u00B0',\n      Del: '\\u2207',\n      Delta: '\\u0394',\n      delta: '\\u03B4',\n      demptyv: '\\u29B1',\n      dfisht: '\\u297F',\n      Dfr: '\\uD835\\uDD07',\n      dfr: '\\uD835\\uDD21',\n      dHar: '\\u2965',\n      dharl: '\\u21C3',\n      dharr: '\\u21C2',\n      DiacriticalAcute: '\\u00B4',\n      DiacriticalDot: '\\u02D9',\n      DiacriticalDoubleAcute: '\\u02DD',\n      DiacriticalGrave: '\\u0060',\n      DiacriticalTilde: '\\u02DC',\n      diam: '\\u22C4',\n      Diamond: '\\u22C4',\n      diamond: '\\u22C4',\n      diamondsuit: '\\u2666',\n      diams: '\\u2666',\n      die: '\\u00A8',\n      DifferentialD: '\\u2146',\n      digamma: '\\u03DD',\n      disin: '\\u22F2',\n      div: '\\u00F7',\n      divide: '\\u00F7',\n      divideontimes: '\\u22C7',\n      divonx: '\\u22C7',\n      DJcy: '\\u0402',\n      djcy: '\\u0452',\n      dlcorn: '\\u231E',\n      dlcrop: '\\u230D',\n      dollar: '\\u0024',\n      Dopf: '\\uD835\\uDD3B',\n      dopf: '\\uD835\\uDD55',\n      Dot: '\\u00A8',\n      dot: '\\u02D9',\n      DotDot: '\\u20DC',\n      doteq: '\\u2250',\n      doteqdot: '\\u2251',\n      DotEqual: '\\u2250',\n      dotminus: '\\u2238',\n      dotplus: '\\u2214',\n      dotsquare: '\\u22A1',\n      doublebarwedge: '\\u2306',\n      DoubleContourIntegral: '\\u222F',\n      DoubleDot: '\\u00A8',\n      DoubleDownArrow: '\\u21D3',\n      DoubleLeftArrow: '\\u21D0',\n      DoubleLeftRightArrow: '\\u21D4',\n      DoubleLeftTee: '\\u2AE4',\n      DoubleLongLeftArrow: '\\u27F8',\n      DoubleLongLeftRightArrow: '\\u27FA',\n      DoubleLongRightArrow: '\\u27F9',\n      DoubleRightArrow: '\\u21D2',\n      DoubleRightTee: '\\u22A8',\n      DoubleUpArrow: '\\u21D1',\n      DoubleUpDownArrow: '\\u21D5',\n      DoubleVerticalBar: '\\u2225',\n      DownArrow: '\\u2193',\n      Downarrow: '\\u21D3',\n      downarrow: '\\u2193',\n      DownArrowBar: '\\u2913',\n      DownArrowUpArrow: '\\u21F5',\n      DownBreve: '\\u0311',\n      downdownarrows: '\\u21CA',\n      downharpoonleft: '\\u21C3',\n      downharpoonright: '\\u21C2',\n      DownLeftRightVector: '\\u2950',\n      DownLeftTeeVector: '\\u295E',\n      DownLeftVector: '\\u21BD',\n      DownLeftVectorBar: '\\u2956',\n      DownRightTeeVector: '\\u295F',\n      DownRightVector: '\\u21C1',\n      DownRightVectorBar: '\\u2957',\n      DownTee: '\\u22A4',\n      DownTeeArrow: '\\u21A7',\n      drbkarow: '\\u2910',\n      drcorn: '\\u231F',\n      drcrop: '\\u230C',\n      Dscr: '\\uD835\\uDC9F',\n      dscr: '\\uD835\\uDCB9',\n      DScy: '\\u0405',\n      dscy: '\\u0455',\n      dsol: '\\u29F6',\n      Dstrok: '\\u0110',\n      dstrok: '\\u0111',\n      dtdot: '\\u22F1',\n      dtri: '\\u25BF',\n      dtrif: '\\u25BE',\n      duarr: '\\u21F5',\n      duhar: '\\u296F',\n      dwangle: '\\u29A6',\n      DZcy: '\\u040F',\n      dzcy: '\\u045F',\n      dzigrarr: '\\u27FF',\n      Eacute: '\\u00C9',\n      eacute: '\\u00E9',\n      easter: '\\u2A6E',\n      Ecaron: '\\u011A',\n      ecaron: '\\u011B',\n      ecir: '\\u2256',\n      Ecirc: '\\u00CA',\n      ecirc: '\\u00EA',\n      ecolon: '\\u2255',\n      Ecy: '\\u042D',\n      ecy: '\\u044D',\n      eDDot: '\\u2A77',\n      Edot: '\\u0116',\n      eDot: '\\u2251',\n      edot: '\\u0117',\n      ee: '\\u2147',\n      efDot: '\\u2252',\n      Efr: '\\uD835\\uDD08',\n      efr: '\\uD835\\uDD22',\n      eg: '\\u2A9A',\n      Egrave: '\\u00C8',\n      egrave: '\\u00E8',\n      egs: '\\u2A96',\n      egsdot: '\\u2A98',\n      el: '\\u2A99',\n      Element: '\\u2208',\n      elinters: '\\u23E7',\n      ell: '\\u2113',\n      els: '\\u2A95',\n      elsdot: '\\u2A97',\n      Emacr: '\\u0112',\n      emacr: '\\u0113',\n      empty: '\\u2205',\n      emptyset: '\\u2205',\n      EmptySmallSquare: '\\u25FB',\n      emptyv: '\\u2205',\n      EmptyVerySmallSquare: '\\u25AB',\n      emsp: '\\u2003',\n      emsp13: '\\u2004',\n      emsp14: '\\u2005',\n      ENG: '\\u014A',\n      eng: '\\u014B',\n      ensp: '\\u2002',\n      Eogon: '\\u0118',\n      eogon: '\\u0119',\n      Eopf: '\\uD835\\uDD3C',\n      eopf: '\\uD835\\uDD56',\n      epar: '\\u22D5',\n      eparsl: '\\u29E3',\n      eplus: '\\u2A71',\n      epsi: '\\u03B5',\n      Epsilon: '\\u0395',\n      epsilon: '\\u03B5',\n      epsiv: '\\u03F5',\n      eqcirc: '\\u2256',\n      eqcolon: '\\u2255',\n      eqsim: '\\u2242',\n      eqslantgtr: '\\u2A96',\n      eqslantless: '\\u2A95',\n      Equal: '\\u2A75',\n      equals: '\\u003D',\n      EqualTilde: '\\u2242',\n      equest: '\\u225F',\n      Equilibrium: '\\u21CC',\n      equiv: '\\u2261',\n      equivDD: '\\u2A78',\n      eqvparsl: '\\u29E5',\n      erarr: '\\u2971',\n      erDot: '\\u2253',\n      Escr: '\\u2130',\n      escr: '\\u212F',\n      esdot: '\\u2250',\n      Esim: '\\u2A73',\n      esim: '\\u2242',\n      Eta: '\\u0397',\n      eta: '\\u03B7',\n      ETH: '\\u00D0',\n      eth: '\\u00F0',\n      Euml: '\\u00CB',\n      euml: '\\u00EB',\n      euro: '\\u20AC',\n      excl: '\\u0021',\n      exist: '\\u2203',\n      Exists: '\\u2203',\n      expectation: '\\u2130',\n      ExponentialE: '\\u2147',\n      exponentiale: '\\u2147',\n      fallingdotseq: '\\u2252',\n      Fcy: '\\u0424',\n      fcy: '\\u0444',\n      female: '\\u2640',\n      ffilig: '\\uFB03',\n      fflig: '\\uFB00',\n      ffllig: '\\uFB04',\n      Ffr: '\\uD835\\uDD09',\n      ffr: '\\uD835\\uDD23',\n      filig: '\\uFB01',\n      FilledSmallSquare: '\\u25FC',\n      FilledVerySmallSquare: '\\u25AA',\n      fjlig: '\\u0066\\u006A',\n      flat: '\\u266D',\n      fllig: '\\uFB02',\n      fltns: '\\u25B1',\n      fnof: '\\u0192',\n      Fopf: '\\uD835\\uDD3D',\n      fopf: '\\uD835\\uDD57',\n      ForAll: '\\u2200',\n      forall: '\\u2200',\n      fork: '\\u22D4',\n      forkv: '\\u2AD9',\n      Fouriertrf: '\\u2131',\n      fpartint: '\\u2A0D',\n      frac12: '\\u00BD',\n      frac13: '\\u2153',\n      frac14: '\\u00BC',\n      frac15: '\\u2155',\n      frac16: '\\u2159',\n      frac18: '\\u215B',\n      frac23: '\\u2154',\n      frac25: '\\u2156',\n      frac34: '\\u00BE',\n      frac35: '\\u2157',\n      frac38: '\\u215C',\n      frac45: '\\u2158',\n      frac56: '\\u215A',\n      frac58: '\\u215D',\n      frac78: '\\u215E',\n      frasl: '\\u2044',\n      frown: '\\u2322',\n      Fscr: '\\u2131',\n      fscr: '\\uD835\\uDCBB',\n      gacute: '\\u01F5',\n      Gamma: '\\u0393',\n      gamma: '\\u03B3',\n      Gammad: '\\u03DC',\n      gammad: '\\u03DD',\n      gap: '\\u2A86',\n      Gbreve: '\\u011E',\n      gbreve: '\\u011F',\n      Gcedil: '\\u0122',\n      Gcirc: '\\u011C',\n      gcirc: '\\u011D',\n      Gcy: '\\u0413',\n      gcy: '\\u0433',\n      Gdot: '\\u0120',\n      gdot: '\\u0121',\n      gE: '\\u2267',\n      ge: '\\u2265',\n      gEl: '\\u2A8C',\n      gel: '\\u22DB',\n      geq: '\\u2265',\n      geqq: '\\u2267',\n      geqslant: '\\u2A7E',\n      ges: '\\u2A7E',\n      gescc: '\\u2AA9',\n      gesdot: '\\u2A80',\n      gesdoto: '\\u2A82',\n      gesdotol: '\\u2A84',\n      gesl: '\\u22DB\\uFE00',\n      gesles: '\\u2A94',\n      Gfr: '\\uD835\\uDD0A',\n      gfr: '\\uD835\\uDD24',\n      Gg: '\\u22D9',\n      gg: '\\u226B',\n      ggg: '\\u22D9',\n      gimel: '\\u2137',\n      GJcy: '\\u0403',\n      gjcy: '\\u0453',\n      gl: '\\u2277',\n      gla: '\\u2AA5',\n      glE: '\\u2A92',\n      glj: '\\u2AA4',\n      gnap: '\\u2A8A',\n      gnapprox: '\\u2A8A',\n      gnE: '\\u2269',\n      gne: '\\u2A88',\n      gneq: '\\u2A88',\n      gneqq: '\\u2269',\n      gnsim: '\\u22E7',\n      Gopf: '\\uD835\\uDD3E',\n      gopf: '\\uD835\\uDD58',\n      grave: '\\u0060',\n      GreaterEqual: '\\u2265',\n      GreaterEqualLess: '\\u22DB',\n      GreaterFullEqual: '\\u2267',\n      GreaterGreater: '\\u2AA2',\n      GreaterLess: '\\u2277',\n      GreaterSlantEqual: '\\u2A7E',\n      GreaterTilde: '\\u2273',\n      Gscr: '\\uD835\\uDCA2',\n      gscr: '\\u210A',\n      gsim: '\\u2273',\n      gsime: '\\u2A8E',\n      gsiml: '\\u2A90',\n      Gt: '\\u226B',\n      GT: '\\u003E',\n      gt: '\\u003E',\n      gtcc: '\\u2AA7',\n      gtcir: '\\u2A7A',\n      gtdot: '\\u22D7',\n      gtlPar: '\\u2995',\n      gtquest: '\\u2A7C',\n      gtrapprox: '\\u2A86',\n      gtrarr: '\\u2978',\n      gtrdot: '\\u22D7',\n      gtreqless: '\\u22DB',\n      gtreqqless: '\\u2A8C',\n      gtrless: '\\u2277',\n      gtrsim: '\\u2273',\n      gvertneqq: '\\u2269\\uFE00',\n      gvnE: '\\u2269\\uFE00',\n      Hacek: '\\u02C7',\n      hairsp: '\\u200A',\n      half: '\\u00BD',\n      hamilt: '\\u210B',\n      HARDcy: '\\u042A',\n      hardcy: '\\u044A',\n      hArr: '\\u21D4',\n      harr: '\\u2194',\n      harrcir: '\\u2948',\n      harrw: '\\u21AD',\n      Hat: '\\u005E',\n      hbar: '\\u210F',\n      Hcirc: '\\u0124',\n      hcirc: '\\u0125',\n      hearts: '\\u2665',\n      heartsuit: '\\u2665',\n      hellip: '\\u2026',\n      hercon: '\\u22B9',\n      Hfr: '\\u210C',\n      hfr: '\\uD835\\uDD25',\n      HilbertSpace: '\\u210B',\n      hksearow: '\\u2925',\n      hkswarow: '\\u2926',\n      hoarr: '\\u21FF',\n      homtht: '\\u223B',\n      hookleftarrow: '\\u21A9',\n      hookrightarrow: '\\u21AA',\n      Hopf: '\\u210D',\n      hopf: '\\uD835\\uDD59',\n      horbar: '\\u2015',\n      HorizontalLine: '\\u2500',\n      Hscr: '\\u210B',\n      hscr: '\\uD835\\uDCBD',\n      hslash: '\\u210F',\n      Hstrok: '\\u0126',\n      hstrok: '\\u0127',\n      HumpDownHump: '\\u224E',\n      HumpEqual: '\\u224F',\n      hybull: '\\u2043',\n      hyphen: '\\u2010',\n      Iacute: '\\u00CD',\n      iacute: '\\u00ED',\n      ic: '\\u2063',\n      Icirc: '\\u00CE',\n      icirc: '\\u00EE',\n      Icy: '\\u0418',\n      icy: '\\u0438',\n      Idot: '\\u0130',\n      IEcy: '\\u0415',\n      iecy: '\\u0435',\n      iexcl: '\\u00A1',\n      iff: '\\u21D4',\n      Ifr: '\\u2111',\n      ifr: '\\uD835\\uDD26',\n      Igrave: '\\u00CC',\n      igrave: '\\u00EC',\n      ii: '\\u2148',\n      iiiint: '\\u2A0C',\n      iiint: '\\u222D',\n      iinfin: '\\u29DC',\n      iiota: '\\u2129',\n      IJlig: '\\u0132',\n      ijlig: '\\u0133',\n      Im: '\\u2111',\n      Imacr: '\\u012A',\n      imacr: '\\u012B',\n      image: '\\u2111',\n      ImaginaryI: '\\u2148',\n      imagline: '\\u2110',\n      imagpart: '\\u2111',\n      imath: '\\u0131',\n      imof: '\\u22B7',\n      imped: '\\u01B5',\n      Implies: '\\u21D2',\n      in: '\\u2208',\n      incare: '\\u2105',\n      infin: '\\u221E',\n      infintie: '\\u29DD',\n      inodot: '\\u0131',\n      Int: '\\u222C',\n      int: '\\u222B',\n      intcal: '\\u22BA',\n      integers: '\\u2124',\n      Integral: '\\u222B',\n      intercal: '\\u22BA',\n      Intersection: '\\u22C2',\n      intlarhk: '\\u2A17',\n      intprod: '\\u2A3C',\n      InvisibleComma: '\\u2063',\n      InvisibleTimes: '\\u2062',\n      IOcy: '\\u0401',\n      iocy: '\\u0451',\n      Iogon: '\\u012E',\n      iogon: '\\u012F',\n      Iopf: '\\uD835\\uDD40',\n      iopf: '\\uD835\\uDD5A',\n      Iota: '\\u0399',\n      iota: '\\u03B9',\n      iprod: '\\u2A3C',\n      iquest: '\\u00BF',\n      Iscr: '\\u2110',\n      iscr: '\\uD835\\uDCBE',\n      isin: '\\u2208',\n      isindot: '\\u22F5',\n      isinE: '\\u22F9',\n      isins: '\\u22F4',\n      isinsv: '\\u22F3',\n      isinv: '\\u2208',\n      it: '\\u2062',\n      Itilde: '\\u0128',\n      itilde: '\\u0129',\n      Iukcy: '\\u0406',\n      iukcy: '\\u0456',\n      Iuml: '\\u00CF',\n      iuml: '\\u00EF',\n      Jcirc: '\\u0134',\n      jcirc: '\\u0135',\n      Jcy: '\\u0419',\n      jcy: '\\u0439',\n      Jfr: '\\uD835\\uDD0D',\n      jfr: '\\uD835\\uDD27',\n      jmath: '\\u0237',\n      Jopf: '\\uD835\\uDD41',\n      jopf: '\\uD835\\uDD5B',\n      Jscr: '\\uD835\\uDCA5',\n      jscr: '\\uD835\\uDCBF',\n      Jsercy: '\\u0408',\n      jsercy: '\\u0458',\n      Jukcy: '\\u0404',\n      jukcy: '\\u0454',\n      Kappa: '\\u039A',\n      kappa: '\\u03BA',\n      kappav: '\\u03F0',\n      Kcedil: '\\u0136',\n      kcedil: '\\u0137',\n      Kcy: '\\u041A',\n      kcy: '\\u043A',\n      Kfr: '\\uD835\\uDD0E',\n      kfr: '\\uD835\\uDD28',\n      kgreen: '\\u0138',\n      KHcy: '\\u0425',\n      khcy: '\\u0445',\n      KJcy: '\\u040C',\n      kjcy: '\\u045C',\n      Kopf: '\\uD835\\uDD42',\n      kopf: '\\uD835\\uDD5C',\n      Kscr: '\\uD835\\uDCA6',\n      kscr: '\\uD835\\uDCC0',\n      lAarr: '\\u21DA',\n      Lacute: '\\u0139',\n      lacute: '\\u013A',\n      laemptyv: '\\u29B4',\n      lagran: '\\u2112',\n      Lambda: '\\u039B',\n      lambda: '\\u03BB',\n      Lang: '\\u27EA',\n      lang: '\\u27E8',\n      langd: '\\u2991',\n      langle: '\\u27E8',\n      lap: '\\u2A85',\n      Laplacetrf: '\\u2112',\n      laquo: '\\u00AB',\n      Larr: '\\u219E',\n      lArr: '\\u21D0',\n      larr: '\\u2190',\n      larrb: '\\u21E4',\n      larrbfs: '\\u291F',\n      larrfs: '\\u291D',\n      larrhk: '\\u21A9',\n      larrlp: '\\u21AB',\n      larrpl: '\\u2939',\n      larrsim: '\\u2973',\n      larrtl: '\\u21A2',\n      lat: '\\u2AAB',\n      lAtail: '\\u291B',\n      latail: '\\u2919',\n      late: '\\u2AAD',\n      lates: '\\u2AAD\\uFE00',\n      lBarr: '\\u290E',\n      lbarr: '\\u290C',\n      lbbrk: '\\u2772',\n      lbrace: '\\u007B',\n      lbrack: '\\u005B',\n      lbrke: '\\u298B',\n      lbrksld: '\\u298F',\n      lbrkslu: '\\u298D',\n      Lcaron: '\\u013D',\n      lcaron: '\\u013E',\n      Lcedil: '\\u013B',\n      lcedil: '\\u013C',\n      lceil: '\\u2308',\n      lcub: '\\u007B',\n      Lcy: '\\u041B',\n      lcy: '\\u043B',\n      ldca: '\\u2936',\n      ldquo: '\\u201C',\n      ldquor: '\\u201E',\n      ldrdhar: '\\u2967',\n      ldrushar: '\\u294B',\n      ldsh: '\\u21B2',\n      lE: '\\u2266',\n      le: '\\u2264',\n      LeftAngleBracket: '\\u27E8',\n      LeftArrow: '\\u2190',\n      Leftarrow: '\\u21D0',\n      leftarrow: '\\u2190',\n      LeftArrowBar: '\\u21E4',\n      LeftArrowRightArrow: '\\u21C6',\n      leftarrowtail: '\\u21A2',\n      LeftCeiling: '\\u2308',\n      LeftDoubleBracket: '\\u27E6',\n      LeftDownTeeVector: '\\u2961',\n      LeftDownVector: '\\u21C3',\n      LeftDownVectorBar: '\\u2959',\n      LeftFloor: '\\u230A',\n      leftharpoondown: '\\u21BD',\n      leftharpoonup: '\\u21BC',\n      leftleftarrows: '\\u21C7',\n      LeftRightArrow: '\\u2194',\n      Leftrightarrow: '\\u21D4',\n      leftrightarrow: '\\u2194',\n      leftrightarrows: '\\u21C6',\n      leftrightharpoons: '\\u21CB',\n      leftrightsquigarrow: '\\u21AD',\n      LeftRightVector: '\\u294E',\n      LeftTee: '\\u22A3',\n      LeftTeeArrow: '\\u21A4',\n      LeftTeeVector: '\\u295A',\n      leftthreetimes: '\\u22CB',\n      LeftTriangle: '\\u22B2',\n      LeftTriangleBar: '\\u29CF',\n      LeftTriangleEqual: '\\u22B4',\n      LeftUpDownVector: '\\u2951',\n      LeftUpTeeVector: '\\u2960',\n      LeftUpVector: '\\u21BF',\n      LeftUpVectorBar: '\\u2958',\n      LeftVector: '\\u21BC',\n      LeftVectorBar: '\\u2952',\n      lEg: '\\u2A8B',\n      leg: '\\u22DA',\n      leq: '\\u2264',\n      leqq: '\\u2266',\n      leqslant: '\\u2A7D',\n      les: '\\u2A7D',\n      lescc: '\\u2AA8',\n      lesdot: '\\u2A7F',\n      lesdoto: '\\u2A81',\n      lesdotor: '\\u2A83',\n      lesg: '\\u22DA\\uFE00',\n      lesges: '\\u2A93',\n      lessapprox: '\\u2A85',\n      lessdot: '\\u22D6',\n      lesseqgtr: '\\u22DA',\n      lesseqqgtr: '\\u2A8B',\n      LessEqualGreater: '\\u22DA',\n      LessFullEqual: '\\u2266',\n      LessGreater: '\\u2276',\n      lessgtr: '\\u2276',\n      LessLess: '\\u2AA1',\n      lesssim: '\\u2272',\n      LessSlantEqual: '\\u2A7D',\n      LessTilde: '\\u2272',\n      lfisht: '\\u297C',\n      lfloor: '\\u230A',\n      Lfr: '\\uD835\\uDD0F',\n      lfr: '\\uD835\\uDD29',\n      lg: '\\u2276',\n      lgE: '\\u2A91',\n      lHar: '\\u2962',\n      lhard: '\\u21BD',\n      lharu: '\\u21BC',\n      lharul: '\\u296A',\n      lhblk: '\\u2584',\n      LJcy: '\\u0409',\n      ljcy: '\\u0459',\n      Ll: '\\u22D8',\n      ll: '\\u226A',\n      llarr: '\\u21C7',\n      llcorner: '\\u231E',\n      Lleftarrow: '\\u21DA',\n      llhard: '\\u296B',\n      lltri: '\\u25FA',\n      Lmidot: '\\u013F',\n      lmidot: '\\u0140',\n      lmoust: '\\u23B0',\n      lmoustache: '\\u23B0',\n      lnap: '\\u2A89',\n      lnapprox: '\\u2A89',\n      lnE: '\\u2268',\n      lne: '\\u2A87',\n      lneq: '\\u2A87',\n      lneqq: '\\u2268',\n      lnsim: '\\u22E6',\n      loang: '\\u27EC',\n      loarr: '\\u21FD',\n      lobrk: '\\u27E6',\n      LongLeftArrow: '\\u27F5',\n      Longleftarrow: '\\u27F8',\n      longleftarrow: '\\u27F5',\n      LongLeftRightArrow: '\\u27F7',\n      Longleftrightarrow: '\\u27FA',\n      longleftrightarrow: '\\u27F7',\n      longmapsto: '\\u27FC',\n      LongRightArrow: '\\u27F6',\n      Longrightarrow: '\\u27F9',\n      longrightarrow: '\\u27F6',\n      looparrowleft: '\\u21AB',\n      looparrowright: '\\u21AC',\n      lopar: '\\u2985',\n      Lopf: '\\uD835\\uDD43',\n      lopf: '\\uD835\\uDD5D',\n      loplus: '\\u2A2D',\n      lotimes: '\\u2A34',\n      lowast: '\\u2217',\n      lowbar: '\\u005F',\n      LowerLeftArrow: '\\u2199',\n      LowerRightArrow: '\\u2198',\n      loz: '\\u25CA',\n      lozenge: '\\u25CA',\n      lozf: '\\u29EB',\n      lpar: '\\u0028',\n      lparlt: '\\u2993',\n      lrarr: '\\u21C6',\n      lrcorner: '\\u231F',\n      lrhar: '\\u21CB',\n      lrhard: '\\u296D',\n      lrm: '\\u200E',\n      lrtri: '\\u22BF',\n      lsaquo: '\\u2039',\n      Lscr: '\\u2112',\n      lscr: '\\uD835\\uDCC1',\n      Lsh: '\\u21B0',\n      lsh: '\\u21B0',\n      lsim: '\\u2272',\n      lsime: '\\u2A8D',\n      lsimg: '\\u2A8F',\n      lsqb: '\\u005B',\n      lsquo: '\\u2018',\n      lsquor: '\\u201A',\n      Lstrok: '\\u0141',\n      lstrok: '\\u0142',\n      Lt: '\\u226A',\n      LT: '\\u003C',\n      lt: '\\u003C',\n      ltcc: '\\u2AA6',\n      ltcir: '\\u2A79',\n      ltdot: '\\u22D6',\n      lthree: '\\u22CB',\n      ltimes: '\\u22C9',\n      ltlarr: '\\u2976',\n      ltquest: '\\u2A7B',\n      ltri: '\\u25C3',\n      ltrie: '\\u22B4',\n      ltrif: '\\u25C2',\n      ltrPar: '\\u2996',\n      lurdshar: '\\u294A',\n      luruhar: '\\u2966',\n      lvertneqq: '\\u2268\\uFE00',\n      lvnE: '\\u2268\\uFE00',\n      macr: '\\u00AF',\n      male: '\\u2642',\n      malt: '\\u2720',\n      maltese: '\\u2720',\n      Map: '\\u2905',\n      map: '\\u21A6',\n      mapsto: '\\u21A6',\n      mapstodown: '\\u21A7',\n      mapstoleft: '\\u21A4',\n      mapstoup: '\\u21A5',\n      marker: '\\u25AE',\n      mcomma: '\\u2A29',\n      Mcy: '\\u041C',\n      mcy: '\\u043C',\n      mdash: '\\u2014',\n      mDDot: '\\u223A',\n      measuredangle: '\\u2221',\n      MediumSpace: '\\u205F',\n      Mellintrf: '\\u2133',\n      Mfr: '\\uD835\\uDD10',\n      mfr: '\\uD835\\uDD2A',\n      mho: '\\u2127',\n      micro: '\\u00B5',\n      mid: '\\u2223',\n      midast: '\\u002A',\n      midcir: '\\u2AF0',\n      middot: '\\u00B7',\n      minus: '\\u2212',\n      minusb: '\\u229F',\n      minusd: '\\u2238',\n      minusdu: '\\u2A2A',\n      MinusPlus: '\\u2213',\n      mlcp: '\\u2ADB',\n      mldr: '\\u2026',\n      mnplus: '\\u2213',\n      models: '\\u22A7',\n      Mopf: '\\uD835\\uDD44',\n      mopf: '\\uD835\\uDD5E',\n      mp: '\\u2213',\n      Mscr: '\\u2133',\n      mscr: '\\uD835\\uDCC2',\n      mstpos: '\\u223E',\n      Mu: '\\u039C',\n      mu: '\\u03BC',\n      multimap: '\\u22B8',\n      mumap: '\\u22B8',\n      nabla: '\\u2207',\n      Nacute: '\\u0143',\n      nacute: '\\u0144',\n      nang: '\\u2220\\u20D2',\n      nap: '\\u2249',\n      napE: '\\u2A70\\u0338',\n      napid: '\\u224B\\u0338',\n      napos: '\\u0149',\n      napprox: '\\u2249',\n      natur: '\\u266E',\n      natural: '\\u266E',\n      naturals: '\\u2115',\n      nbsp: '\\u00A0',\n      nbump: '\\u224E\\u0338',\n      nbumpe: '\\u224F\\u0338',\n      ncap: '\\u2A43',\n      Ncaron: '\\u0147',\n      ncaron: '\\u0148',\n      Ncedil: '\\u0145',\n      ncedil: '\\u0146',\n      ncong: '\\u2247',\n      ncongdot: '\\u2A6D\\u0338',\n      ncup: '\\u2A42',\n      Ncy: '\\u041D',\n      ncy: '\\u043D',\n      ndash: '\\u2013',\n      ne: '\\u2260',\n      nearhk: '\\u2924',\n      neArr: '\\u21D7',\n      nearr: '\\u2197',\n      nearrow: '\\u2197',\n      nedot: '\\u2250\\u0338',\n      NegativeMediumSpace: '\\u200B',\n      NegativeThickSpace: '\\u200B',\n      NegativeThinSpace: '\\u200B',\n      NegativeVeryThinSpace: '\\u200B',\n      nequiv: '\\u2262',\n      nesear: '\\u2928',\n      nesim: '\\u2242\\u0338',\n      NestedGreaterGreater: '\\u226B',\n      NestedLessLess: '\\u226A',\n      NewLine: '\\u000A',\n      nexist: '\\u2204',\n      nexists: '\\u2204',\n      Nfr: '\\uD835\\uDD11',\n      nfr: '\\uD835\\uDD2B',\n      ngE: '\\u2267\\u0338',\n      nge: '\\u2271',\n      ngeq: '\\u2271',\n      ngeqq: '\\u2267\\u0338',\n      ngeqslant: '\\u2A7E\\u0338',\n      nges: '\\u2A7E\\u0338',\n      nGg: '\\u22D9\\u0338',\n      ngsim: '\\u2275',\n      nGt: '\\u226B\\u20D2',\n      ngt: '\\u226F',\n      ngtr: '\\u226F',\n      nGtv: '\\u226B\\u0338',\n      nhArr: '\\u21CE',\n      nharr: '\\u21AE',\n      nhpar: '\\u2AF2',\n      ni: '\\u220B',\n      nis: '\\u22FC',\n      nisd: '\\u22FA',\n      niv: '\\u220B',\n      NJcy: '\\u040A',\n      njcy: '\\u045A',\n      nlArr: '\\u21CD',\n      nlarr: '\\u219A',\n      nldr: '\\u2025',\n      nlE: '\\u2266\\u0338',\n      nle: '\\u2270',\n      nLeftarrow: '\\u21CD',\n      nleftarrow: '\\u219A',\n      nLeftrightarrow: '\\u21CE',\n      nleftrightarrow: '\\u21AE',\n      nleq: '\\u2270',\n      nleqq: '\\u2266\\u0338',\n      nleqslant: '\\u2A7D\\u0338',\n      nles: '\\u2A7D\\u0338',\n      nless: '\\u226E',\n      nLl: '\\u22D8\\u0338',\n      nlsim: '\\u2274',\n      nLt: '\\u226A\\u20D2',\n      nlt: '\\u226E',\n      nltri: '\\u22EA',\n      nltrie: '\\u22EC',\n      nLtv: '\\u226A\\u0338',\n      nmid: '\\u2224',\n      NoBreak: '\\u2060',\n      NonBreakingSpace: '\\u00A0',\n      Nopf: '\\u2115',\n      nopf: '\\uD835\\uDD5F',\n      Not: '\\u2AEC',\n      not: '\\u00AC',\n      NotCongruent: '\\u2262',\n      NotCupCap: '\\u226D',\n      NotDoubleVerticalBar: '\\u2226',\n      NotElement: '\\u2209',\n      NotEqual: '\\u2260',\n      NotEqualTilde: '\\u2242\\u0338',\n      NotExists: '\\u2204',\n      NotGreater: '\\u226F',\n      NotGreaterEqual: '\\u2271',\n      NotGreaterFullEqual: '\\u2267\\u0338',\n      NotGreaterGreater: '\\u226B\\u0338',\n      NotGreaterLess: '\\u2279',\n      NotGreaterSlantEqual: '\\u2A7E\\u0338',\n      NotGreaterTilde: '\\u2275',\n      NotHumpDownHump: '\\u224E\\u0338',\n      NotHumpEqual: '\\u224F\\u0338',\n      notin: '\\u2209',\n      notindot: '\\u22F5\\u0338',\n      notinE: '\\u22F9\\u0338',\n      notinva: '\\u2209',\n      notinvb: '\\u22F7',\n      notinvc: '\\u22F6',\n      NotLeftTriangle: '\\u22EA',\n      NotLeftTriangleBar: '\\u29CF\\u0338',\n      NotLeftTriangleEqual: '\\u22EC',\n      NotLess: '\\u226E',\n      NotLessEqual: '\\u2270',\n      NotLessGreater: '\\u2278',\n      NotLessLess: '\\u226A\\u0338',\n      NotLessSlantEqual: '\\u2A7D\\u0338',\n      NotLessTilde: '\\u2274',\n      NotNestedGreaterGreater: '\\u2AA2\\u0338',\n      NotNestedLessLess: '\\u2AA1\\u0338',\n      notni: '\\u220C',\n      notniva: '\\u220C',\n      notnivb: '\\u22FE',\n      notnivc: '\\u22FD',\n      NotPrecedes: '\\u2280',\n      NotPrecedesEqual: '\\u2AAF\\u0338',\n      NotPrecedesSlantEqual: '\\u22E0',\n      NotReverseElement: '\\u220C',\n      NotRightTriangle: '\\u22EB',\n      NotRightTriangleBar: '\\u29D0\\u0338',\n      NotRightTriangleEqual: '\\u22ED',\n      NotSquareSubset: '\\u228F\\u0338',\n      NotSquareSubsetEqual: '\\u22E2',\n      NotSquareSuperset: '\\u2290\\u0338',\n      NotSquareSupersetEqual: '\\u22E3',\n      NotSubset: '\\u2282\\u20D2',\n      NotSubsetEqual: '\\u2288',\n      NotSucceeds: '\\u2281',\n      NotSucceedsEqual: '\\u2AB0\\u0338',\n      NotSucceedsSlantEqual: '\\u22E1',\n      NotSucceedsTilde: '\\u227F\\u0338',\n      NotSuperset: '\\u2283\\u20D2',\n      NotSupersetEqual: '\\u2289',\n      NotTilde: '\\u2241',\n      NotTildeEqual: '\\u2244',\n      NotTildeFullEqual: '\\u2247',\n      NotTildeTilde: '\\u2249',\n      NotVerticalBar: '\\u2224',\n      npar: '\\u2226',\n      nparallel: '\\u2226',\n      nparsl: '\\u2AFD\\u20E5',\n      npart: '\\u2202\\u0338',\n      npolint: '\\u2A14',\n      npr: '\\u2280',\n      nprcue: '\\u22E0',\n      npre: '\\u2AAF\\u0338',\n      nprec: '\\u2280',\n      npreceq: '\\u2AAF\\u0338',\n      nrArr: '\\u21CF',\n      nrarr: '\\u219B',\n      nrarrc: '\\u2933\\u0338',\n      nrarrw: '\\u219D\\u0338',\n      nRightarrow: '\\u21CF',\n      nrightarrow: '\\u219B',\n      nrtri: '\\u22EB',\n      nrtrie: '\\u22ED',\n      nsc: '\\u2281',\n      nsccue: '\\u22E1',\n      nsce: '\\u2AB0\\u0338',\n      Nscr: '\\uD835\\uDCA9',\n      nscr: '\\uD835\\uDCC3',\n      nshortmid: '\\u2224',\n      nshortparallel: '\\u2226',\n      nsim: '\\u2241',\n      nsime: '\\u2244',\n      nsimeq: '\\u2244',\n      nsmid: '\\u2224',\n      nspar: '\\u2226',\n      nsqsube: '\\u22E2',\n      nsqsupe: '\\u22E3',\n      nsub: '\\u2284',\n      nsubE: '\\u2AC5\\u0338',\n      nsube: '\\u2288',\n      nsubset: '\\u2282\\u20D2',\n      nsubseteq: '\\u2288',\n      nsubseteqq: '\\u2AC5\\u0338',\n      nsucc: '\\u2281',\n      nsucceq: '\\u2AB0\\u0338',\n      nsup: '\\u2285',\n      nsupE: '\\u2AC6\\u0338',\n      nsupe: '\\u2289',\n      nsupset: '\\u2283\\u20D2',\n      nsupseteq: '\\u2289',\n      nsupseteqq: '\\u2AC6\\u0338',\n      ntgl: '\\u2279',\n      Ntilde: '\\u00D1',\n      ntilde: '\\u00F1',\n      ntlg: '\\u2278',\n      ntriangleleft: '\\u22EA',\n      ntrianglelefteq: '\\u22EC',\n      ntriangleright: '\\u22EB',\n      ntrianglerighteq: '\\u22ED',\n      Nu: '\\u039D',\n      nu: '\\u03BD',\n      num: '\\u0023',\n      numero: '\\u2116',\n      numsp: '\\u2007',\n      nvap: '\\u224D\\u20D2',\n      nVDash: '\\u22AF',\n      nVdash: '\\u22AE',\n      nvDash: '\\u22AD',\n      nvdash: '\\u22AC',\n      nvge: '\\u2265\\u20D2',\n      nvgt: '\\u003E\\u20D2',\n      nvHarr: '\\u2904',\n      nvinfin: '\\u29DE',\n      nvlArr: '\\u2902',\n      nvle: '\\u2264\\u20D2',\n      nvlt: '\\u003C\\u20D2',\n      nvltrie: '\\u22B4\\u20D2',\n      nvrArr: '\\u2903',\n      nvrtrie: '\\u22B5\\u20D2',\n      nvsim: '\\u223C\\u20D2',\n      nwarhk: '\\u2923',\n      nwArr: '\\u21D6',\n      nwarr: '\\u2196',\n      nwarrow: '\\u2196',\n      nwnear: '\\u2927',\n      Oacute: '\\u00D3',\n      oacute: '\\u00F3',\n      oast: '\\u229B',\n      ocir: '\\u229A',\n      Ocirc: '\\u00D4',\n      ocirc: '\\u00F4',\n      Ocy: '\\u041E',\n      ocy: '\\u043E',\n      odash: '\\u229D',\n      Odblac: '\\u0150',\n      odblac: '\\u0151',\n      odiv: '\\u2A38',\n      odot: '\\u2299',\n      odsold: '\\u29BC',\n      OElig: '\\u0152',\n      oelig: '\\u0153',\n      ofcir: '\\u29BF',\n      Ofr: '\\uD835\\uDD12',\n      ofr: '\\uD835\\uDD2C',\n      ogon: '\\u02DB',\n      Ograve: '\\u00D2',\n      ograve: '\\u00F2',\n      ogt: '\\u29C1',\n      ohbar: '\\u29B5',\n      ohm: '\\u03A9',\n      oint: '\\u222E',\n      olarr: '\\u21BA',\n      olcir: '\\u29BE',\n      olcross: '\\u29BB',\n      oline: '\\u203E',\n      olt: '\\u29C0',\n      Omacr: '\\u014C',\n      omacr: '\\u014D',\n      Omega: '\\u03A9',\n      omega: '\\u03C9',\n      Omicron: '\\u039F',\n      omicron: '\\u03BF',\n      omid: '\\u29B6',\n      ominus: '\\u2296',\n      Oopf: '\\uD835\\uDD46',\n      oopf: '\\uD835\\uDD60',\n      opar: '\\u29B7',\n      OpenCurlyDoubleQuote: '\\u201C',\n      OpenCurlyQuote: '\\u2018',\n      operp: '\\u29B9',\n      oplus: '\\u2295',\n      Or: '\\u2A54',\n      or: '\\u2228',\n      orarr: '\\u21BB',\n      ord: '\\u2A5D',\n      order: '\\u2134',\n      orderof: '\\u2134',\n      ordf: '\\u00AA',\n      ordm: '\\u00BA',\n      origof: '\\u22B6',\n      oror: '\\u2A56',\n      orslope: '\\u2A57',\n      orv: '\\u2A5B',\n      oS: '\\u24C8',\n      Oscr: '\\uD835\\uDCAA',\n      oscr: '\\u2134',\n      Oslash: '\\u00D8',\n      oslash: '\\u00F8',\n      osol: '\\u2298',\n      Otilde: '\\u00D5',\n      otilde: '\\u00F5',\n      Otimes: '\\u2A37',\n      otimes: '\\u2297',\n      otimesas: '\\u2A36',\n      Ouml: '\\u00D6',\n      ouml: '\\u00F6',\n      ovbar: '\\u233D',\n      OverBar: '\\u203E',\n      OverBrace: '\\u23DE',\n      OverBracket: '\\u23B4',\n      OverParenthesis: '\\u23DC',\n      par: '\\u2225',\n      para: '\\u00B6',\n      parallel: '\\u2225',\n      parsim: '\\u2AF3',\n      parsl: '\\u2AFD',\n      part: '\\u2202',\n      PartialD: '\\u2202',\n      Pcy: '\\u041F',\n      pcy: '\\u043F',\n      percnt: '\\u0025',\n      period: '\\u002E',\n      permil: '\\u2030',\n      perp: '\\u22A5',\n      pertenk: '\\u2031',\n      Pfr: '\\uD835\\uDD13',\n      pfr: '\\uD835\\uDD2D',\n      Phi: '\\u03A6',\n      phi: '\\u03C6',\n      phiv: '\\u03D5',\n      phmmat: '\\u2133',\n      phone: '\\u260E',\n      Pi: '\\u03A0',\n      pi: '\\u03C0',\n      pitchfork: '\\u22D4',\n      piv: '\\u03D6',\n      planck: '\\u210F',\n      planckh: '\\u210E',\n      plankv: '\\u210F',\n      plus: '\\u002B',\n      plusacir: '\\u2A23',\n      plusb: '\\u229E',\n      pluscir: '\\u2A22',\n      plusdo: '\\u2214',\n      plusdu: '\\u2A25',\n      pluse: '\\u2A72',\n      PlusMinus: '\\u00B1',\n      plusmn: '\\u00B1',\n      plussim: '\\u2A26',\n      plustwo: '\\u2A27',\n      pm: '\\u00B1',\n      Poincareplane: '\\u210C',\n      pointint: '\\u2A15',\n      Popf: '\\u2119',\n      popf: '\\uD835\\uDD61',\n      pound: '\\u00A3',\n      Pr: '\\u2ABB',\n      pr: '\\u227A',\n      prap: '\\u2AB7',\n      prcue: '\\u227C',\n      prE: '\\u2AB3',\n      pre: '\\u2AAF',\n      prec: '\\u227A',\n      precapprox: '\\u2AB7',\n      preccurlyeq: '\\u227C',\n      Precedes: '\\u227A',\n      PrecedesEqual: '\\u2AAF',\n      PrecedesSlantEqual: '\\u227C',\n      PrecedesTilde: '\\u227E',\n      preceq: '\\u2AAF',\n      precnapprox: '\\u2AB9',\n      precneqq: '\\u2AB5',\n      precnsim: '\\u22E8',\n      precsim: '\\u227E',\n      Prime: '\\u2033',\n      prime: '\\u2032',\n      primes: '\\u2119',\n      prnap: '\\u2AB9',\n      prnE: '\\u2AB5',\n      prnsim: '\\u22E8',\n      prod: '\\u220F',\n      Product: '\\u220F',\n      profalar: '\\u232E',\n      profline: '\\u2312',\n      profsurf: '\\u2313',\n      prop: '\\u221D',\n      Proportion: '\\u2237',\n      Proportional: '\\u221D',\n      propto: '\\u221D',\n      prsim: '\\u227E',\n      prurel: '\\u22B0',\n      Pscr: '\\uD835\\uDCAB',\n      pscr: '\\uD835\\uDCC5',\n      Psi: '\\u03A8',\n      psi: '\\u03C8',\n      puncsp: '\\u2008',\n      Qfr: '\\uD835\\uDD14',\n      qfr: '\\uD835\\uDD2E',\n      qint: '\\u2A0C',\n      Qopf: '\\u211A',\n      qopf: '\\uD835\\uDD62',\n      qprime: '\\u2057',\n      Qscr: '\\uD835\\uDCAC',\n      qscr: '\\uD835\\uDCC6',\n      quaternions: '\\u210D',\n      quatint: '\\u2A16',\n      quest: '\\u003F',\n      questeq: '\\u225F',\n      QUOT: '\\u0022',\n      quot: '\\u0022',\n      rAarr: '\\u21DB',\n      race: '\\u223D\\u0331',\n      Racute: '\\u0154',\n      racute: '\\u0155',\n      radic: '\\u221A',\n      raemptyv: '\\u29B3',\n      Rang: '\\u27EB',\n      rang: '\\u27E9',\n      rangd: '\\u2992',\n      range: '\\u29A5',\n      rangle: '\\u27E9',\n      raquo: '\\u00BB',\n      Rarr: '\\u21A0',\n      rArr: '\\u21D2',\n      rarr: '\\u2192',\n      rarrap: '\\u2975',\n      rarrb: '\\u21E5',\n      rarrbfs: '\\u2920',\n      rarrc: '\\u2933',\n      rarrfs: '\\u291E',\n      rarrhk: '\\u21AA',\n      rarrlp: '\\u21AC',\n      rarrpl: '\\u2945',\n      rarrsim: '\\u2974',\n      Rarrtl: '\\u2916',\n      rarrtl: '\\u21A3',\n      rarrw: '\\u219D',\n      rAtail: '\\u291C',\n      ratail: '\\u291A',\n      ratio: '\\u2236',\n      rationals: '\\u211A',\n      RBarr: '\\u2910',\n      rBarr: '\\u290F',\n      rbarr: '\\u290D',\n      rbbrk: '\\u2773',\n      rbrace: '\\u007D',\n      rbrack: '\\u005D',\n      rbrke: '\\u298C',\n      rbrksld: '\\u298E',\n      rbrkslu: '\\u2990',\n      Rcaron: '\\u0158',\n      rcaron: '\\u0159',\n      Rcedil: '\\u0156',\n      rcedil: '\\u0157',\n      rceil: '\\u2309',\n      rcub: '\\u007D',\n      Rcy: '\\u0420',\n      rcy: '\\u0440',\n      rdca: '\\u2937',\n      rdldhar: '\\u2969',\n      rdquo: '\\u201D',\n      rdquor: '\\u201D',\n      rdsh: '\\u21B3',\n      Re: '\\u211C',\n      real: '\\u211C',\n      realine: '\\u211B',\n      realpart: '\\u211C',\n      reals: '\\u211D',\n      rect: '\\u25AD',\n      REG: '\\u00AE',\n      reg: '\\u00AE',\n      ReverseElement: '\\u220B',\n      ReverseEquilibrium: '\\u21CB',\n      ReverseUpEquilibrium: '\\u296F',\n      rfisht: '\\u297D',\n      rfloor: '\\u230B',\n      Rfr: '\\u211C',\n      rfr: '\\uD835\\uDD2F',\n      rHar: '\\u2964',\n      rhard: '\\u21C1',\n      rharu: '\\u21C0',\n      rharul: '\\u296C',\n      Rho: '\\u03A1',\n      rho: '\\u03C1',\n      rhov: '\\u03F1',\n      RightAngleBracket: '\\u27E9',\n      RightArrow: '\\u2192',\n      Rightarrow: '\\u21D2',\n      rightarrow: '\\u2192',\n      RightArrowBar: '\\u21E5',\n      RightArrowLeftArrow: '\\u21C4',\n      rightarrowtail: '\\u21A3',\n      RightCeiling: '\\u2309',\n      RightDoubleBracket: '\\u27E7',\n      RightDownTeeVector: '\\u295D',\n      RightDownVector: '\\u21C2',\n      RightDownVectorBar: '\\u2955',\n      RightFloor: '\\u230B',\n      rightharpoondown: '\\u21C1',\n      rightharpoonup: '\\u21C0',\n      rightleftarrows: '\\u21C4',\n      rightleftharpoons: '\\u21CC',\n      rightrightarrows: '\\u21C9',\n      rightsquigarrow: '\\u219D',\n      RightTee: '\\u22A2',\n      RightTeeArrow: '\\u21A6',\n      RightTeeVector: '\\u295B',\n      rightthreetimes: '\\u22CC',\n      RightTriangle: '\\u22B3',\n      RightTriangleBar: '\\u29D0',\n      RightTriangleEqual: '\\u22B5',\n      RightUpDownVector: '\\u294F',\n      RightUpTeeVector: '\\u295C',\n      RightUpVector: '\\u21BE',\n      RightUpVectorBar: '\\u2954',\n      RightVector: '\\u21C0',\n      RightVectorBar: '\\u2953',\n      ring: '\\u02DA',\n      risingdotseq: '\\u2253',\n      rlarr: '\\u21C4',\n      rlhar: '\\u21CC',\n      rlm: '\\u200F',\n      rmoust: '\\u23B1',\n      rmoustache: '\\u23B1',\n      rnmid: '\\u2AEE',\n      roang: '\\u27ED',\n      roarr: '\\u21FE',\n      robrk: '\\u27E7',\n      ropar: '\\u2986',\n      Ropf: '\\u211D',\n      ropf: '\\uD835\\uDD63',\n      roplus: '\\u2A2E',\n      rotimes: '\\u2A35',\n      RoundImplies: '\\u2970',\n      rpar: '\\u0029',\n      rpargt: '\\u2994',\n      rppolint: '\\u2A12',\n      rrarr: '\\u21C9',\n      Rrightarrow: '\\u21DB',\n      rsaquo: '\\u203A',\n      Rscr: '\\u211B',\n      rscr: '\\uD835\\uDCC7',\n      Rsh: '\\u21B1',\n      rsh: '\\u21B1',\n      rsqb: '\\u005D',\n      rsquo: '\\u2019',\n      rsquor: '\\u2019',\n      rthree: '\\u22CC',\n      rtimes: '\\u22CA',\n      rtri: '\\u25B9',\n      rtrie: '\\u22B5',\n      rtrif: '\\u25B8',\n      rtriltri: '\\u29CE',\n      RuleDelayed: '\\u29F4',\n      ruluhar: '\\u2968',\n      rx: '\\u211E',\n      Sacute: '\\u015A',\n      sacute: '\\u015B',\n      sbquo: '\\u201A',\n      Sc: '\\u2ABC',\n      sc: '\\u227B',\n      scap: '\\u2AB8',\n      Scaron: '\\u0160',\n      scaron: '\\u0161',\n      sccue: '\\u227D',\n      scE: '\\u2AB4',\n      sce: '\\u2AB0',\n      Scedil: '\\u015E',\n      scedil: '\\u015F',\n      Scirc: '\\u015C',\n      scirc: '\\u015D',\n      scnap: '\\u2ABA',\n      scnE: '\\u2AB6',\n      scnsim: '\\u22E9',\n      scpolint: '\\u2A13',\n      scsim: '\\u227F',\n      Scy: '\\u0421',\n      scy: '\\u0441',\n      sdot: '\\u22C5',\n      sdotb: '\\u22A1',\n      sdote: '\\u2A66',\n      searhk: '\\u2925',\n      seArr: '\\u21D8',\n      searr: '\\u2198',\n      searrow: '\\u2198',\n      sect: '\\u00A7',\n      semi: '\\u003B',\n      seswar: '\\u2929',\n      setminus: '\\u2216',\n      setmn: '\\u2216',\n      sext: '\\u2736',\n      Sfr: '\\uD835\\uDD16',\n      sfr: '\\uD835\\uDD30',\n      sfrown: '\\u2322',\n      sharp: '\\u266F',\n      SHCHcy: '\\u0429',\n      shchcy: '\\u0449',\n      SHcy: '\\u0428',\n      shcy: '\\u0448',\n      ShortDownArrow: '\\u2193',\n      ShortLeftArrow: '\\u2190',\n      shortmid: '\\u2223',\n      shortparallel: '\\u2225',\n      ShortRightArrow: '\\u2192',\n      ShortUpArrow: '\\u2191',\n      shy: '\\u00AD',\n      Sigma: '\\u03A3',\n      sigma: '\\u03C3',\n      sigmaf: '\\u03C2',\n      sigmav: '\\u03C2',\n      sim: '\\u223C',\n      simdot: '\\u2A6A',\n      sime: '\\u2243',\n      simeq: '\\u2243',\n      simg: '\\u2A9E',\n      simgE: '\\u2AA0',\n      siml: '\\u2A9D',\n      simlE: '\\u2A9F',\n      simne: '\\u2246',\n      simplus: '\\u2A24',\n      simrarr: '\\u2972',\n      slarr: '\\u2190',\n      SmallCircle: '\\u2218',\n      smallsetminus: '\\u2216',\n      smashp: '\\u2A33',\n      smeparsl: '\\u29E4',\n      smid: '\\u2223',\n      smile: '\\u2323',\n      smt: '\\u2AAA',\n      smte: '\\u2AAC',\n      smtes: '\\u2AAC\\uFE00',\n      SOFTcy: '\\u042C',\n      softcy: '\\u044C',\n      sol: '\\u002F',\n      solb: '\\u29C4',\n      solbar: '\\u233F',\n      Sopf: '\\uD835\\uDD4A',\n      sopf: '\\uD835\\uDD64',\n      spades: '\\u2660',\n      spadesuit: '\\u2660',\n      spar: '\\u2225',\n      sqcap: '\\u2293',\n      sqcaps: '\\u2293\\uFE00',\n      sqcup: '\\u2294',\n      sqcups: '\\u2294\\uFE00',\n      Sqrt: '\\u221A',\n      sqsub: '\\u228F',\n      sqsube: '\\u2291',\n      sqsubset: '\\u228F',\n      sqsubseteq: '\\u2291',\n      sqsup: '\\u2290',\n      sqsupe: '\\u2292',\n      sqsupset: '\\u2290',\n      sqsupseteq: '\\u2292',\n      squ: '\\u25A1',\n      Square: '\\u25A1',\n      square: '\\u25A1',\n      SquareIntersection: '\\u2293',\n      SquareSubset: '\\u228F',\n      SquareSubsetEqual: '\\u2291',\n      SquareSuperset: '\\u2290',\n      SquareSupersetEqual: '\\u2292',\n      SquareUnion: '\\u2294',\n      squarf: '\\u25AA',\n      squf: '\\u25AA',\n      srarr: '\\u2192',\n      Sscr: '\\uD835\\uDCAE',\n      sscr: '\\uD835\\uDCC8',\n      ssetmn: '\\u2216',\n      ssmile: '\\u2323',\n      sstarf: '\\u22C6',\n      Star: '\\u22C6',\n      star: '\\u2606',\n      starf: '\\u2605',\n      straightepsilon: '\\u03F5',\n      straightphi: '\\u03D5',\n      strns: '\\u00AF',\n      Sub: '\\u22D0',\n      sub: '\\u2282',\n      subdot: '\\u2ABD',\n      subE: '\\u2AC5',\n      sube: '\\u2286',\n      subedot: '\\u2AC3',\n      submult: '\\u2AC1',\n      subnE: '\\u2ACB',\n      subne: '\\u228A',\n      subplus: '\\u2ABF',\n      subrarr: '\\u2979',\n      Subset: '\\u22D0',\n      subset: '\\u2282',\n      subseteq: '\\u2286',\n      subseteqq: '\\u2AC5',\n      SubsetEqual: '\\u2286',\n      subsetneq: '\\u228A',\n      subsetneqq: '\\u2ACB',\n      subsim: '\\u2AC7',\n      subsub: '\\u2AD5',\n      subsup: '\\u2AD3',\n      succ: '\\u227B',\n      succapprox: '\\u2AB8',\n      succcurlyeq: '\\u227D',\n      Succeeds: '\\u227B',\n      SucceedsEqual: '\\u2AB0',\n      SucceedsSlantEqual: '\\u227D',\n      SucceedsTilde: '\\u227F',\n      succeq: '\\u2AB0',\n      succnapprox: '\\u2ABA',\n      succneqq: '\\u2AB6',\n      succnsim: '\\u22E9',\n      succsim: '\\u227F',\n      SuchThat: '\\u220B',\n      Sum: '\\u2211',\n      sum: '\\u2211',\n      sung: '\\u266A',\n      Sup: '\\u22D1',\n      sup: '\\u2283',\n      sup1: '\\u00B9',\n      sup2: '\\u00B2',\n      sup3: '\\u00B3',\n      supdot: '\\u2ABE',\n      supdsub: '\\u2AD8',\n      supE: '\\u2AC6',\n      supe: '\\u2287',\n      supedot: '\\u2AC4',\n      Superset: '\\u2283',\n      SupersetEqual: '\\u2287',\n      suphsol: '\\u27C9',\n      suphsub: '\\u2AD7',\n      suplarr: '\\u297B',\n      supmult: '\\u2AC2',\n      supnE: '\\u2ACC',\n      supne: '\\u228B',\n      supplus: '\\u2AC0',\n      Supset: '\\u22D1',\n      supset: '\\u2283',\n      supseteq: '\\u2287',\n      supseteqq: '\\u2AC6',\n      supsetneq: '\\u228B',\n      supsetneqq: '\\u2ACC',\n      supsim: '\\u2AC8',\n      supsub: '\\u2AD4',\n      supsup: '\\u2AD6',\n      swarhk: '\\u2926',\n      swArr: '\\u21D9',\n      swarr: '\\u2199',\n      swarrow: '\\u2199',\n      swnwar: '\\u292A',\n      szlig: '\\u00DF',\n      Tab: '\\u0009',\n      target: '\\u2316',\n      Tau: '\\u03A4',\n      tau: '\\u03C4',\n      tbrk: '\\u23B4',\n      Tcaron: '\\u0164',\n      tcaron: '\\u0165',\n      Tcedil: '\\u0162',\n      tcedil: '\\u0163',\n      Tcy: '\\u0422',\n      tcy: '\\u0442',\n      tdot: '\\u20DB',\n      telrec: '\\u2315',\n      Tfr: '\\uD835\\uDD17',\n      tfr: '\\uD835\\uDD31',\n      there4: '\\u2234',\n      Therefore: '\\u2234',\n      therefore: '\\u2234',\n      Theta: '\\u0398',\n      theta: '\\u03B8',\n      thetasym: '\\u03D1',\n      thetav: '\\u03D1',\n      thickapprox: '\\u2248',\n      thicksim: '\\u223C',\n      ThickSpace: '\\u205F\\u200A',\n      thinsp: '\\u2009',\n      ThinSpace: '\\u2009',\n      thkap: '\\u2248',\n      thksim: '\\u223C',\n      THORN: '\\u00DE',\n      thorn: '\\u00FE',\n      Tilde: '\\u223C',\n      tilde: '\\u02DC',\n      TildeEqual: '\\u2243',\n      TildeFullEqual: '\\u2245',\n      TildeTilde: '\\u2248',\n      times: '\\u00D7',\n      timesb: '\\u22A0',\n      timesbar: '\\u2A31',\n      timesd: '\\u2A30',\n      tint: '\\u222D',\n      toea: '\\u2928',\n      top: '\\u22A4',\n      topbot: '\\u2336',\n      topcir: '\\u2AF1',\n      Topf: '\\uD835\\uDD4B',\n      topf: '\\uD835\\uDD65',\n      topfork: '\\u2ADA',\n      tosa: '\\u2929',\n      tprime: '\\u2034',\n      TRADE: '\\u2122',\n      trade: '\\u2122',\n      triangle: '\\u25B5',\n      triangledown: '\\u25BF',\n      triangleleft: '\\u25C3',\n      trianglelefteq: '\\u22B4',\n      triangleq: '\\u225C',\n      triangleright: '\\u25B9',\n      trianglerighteq: '\\u22B5',\n      tridot: '\\u25EC',\n      trie: '\\u225C',\n      triminus: '\\u2A3A',\n      TripleDot: '\\u20DB',\n      triplus: '\\u2A39',\n      trisb: '\\u29CD',\n      tritime: '\\u2A3B',\n      trpezium: '\\u23E2',\n      Tscr: '\\uD835\\uDCAF',\n      tscr: '\\uD835\\uDCC9',\n      TScy: '\\u0426',\n      tscy: '\\u0446',\n      TSHcy: '\\u040B',\n      tshcy: '\\u045B',\n      Tstrok: '\\u0166',\n      tstrok: '\\u0167',\n      twixt: '\\u226C',\n      twoheadleftarrow: '\\u219E',\n      twoheadrightarrow: '\\u21A0',\n      Uacute: '\\u00DA',\n      uacute: '\\u00FA',\n      Uarr: '\\u219F',\n      uArr: '\\u21D1',\n      uarr: '\\u2191',\n      Uarrocir: '\\u2949',\n      Ubrcy: '\\u040E',\n      ubrcy: '\\u045E',\n      Ubreve: '\\u016C',\n      ubreve: '\\u016D',\n      Ucirc: '\\u00DB',\n      ucirc: '\\u00FB',\n      Ucy: '\\u0423',\n      ucy: '\\u0443',\n      udarr: '\\u21C5',\n      Udblac: '\\u0170',\n      udblac: '\\u0171',\n      udhar: '\\u296E',\n      ufisht: '\\u297E',\n      Ufr: '\\uD835\\uDD18',\n      ufr: '\\uD835\\uDD32',\n      Ugrave: '\\u00D9',\n      ugrave: '\\u00F9',\n      uHar: '\\u2963',\n      uharl: '\\u21BF',\n      uharr: '\\u21BE',\n      uhblk: '\\u2580',\n      ulcorn: '\\u231C',\n      ulcorner: '\\u231C',\n      ulcrop: '\\u230F',\n      ultri: '\\u25F8',\n      Umacr: '\\u016A',\n      umacr: '\\u016B',\n      uml: '\\u00A8',\n      UnderBar: '\\u005F',\n      UnderBrace: '\\u23DF',\n      UnderBracket: '\\u23B5',\n      UnderParenthesis: '\\u23DD',\n      Union: '\\u22C3',\n      UnionPlus: '\\u228E',\n      Uogon: '\\u0172',\n      uogon: '\\u0173',\n      Uopf: '\\uD835\\uDD4C',\n      uopf: '\\uD835\\uDD66',\n      UpArrow: '\\u2191',\n      Uparrow: '\\u21D1',\n      uparrow: '\\u2191',\n      UpArrowBar: '\\u2912',\n      UpArrowDownArrow: '\\u21C5',\n      UpDownArrow: '\\u2195',\n      Updownarrow: '\\u21D5',\n      updownarrow: '\\u2195',\n      UpEquilibrium: '\\u296E',\n      upharpoonleft: '\\u21BF',\n      upharpoonright: '\\u21BE',\n      uplus: '\\u228E',\n      UpperLeftArrow: '\\u2196',\n      UpperRightArrow: '\\u2197',\n      Upsi: '\\u03D2',\n      upsi: '\\u03C5',\n      upsih: '\\u03D2',\n      Upsilon: '\\u03A5',\n      upsilon: '\\u03C5',\n      UpTee: '\\u22A5',\n      UpTeeArrow: '\\u21A5',\n      upuparrows: '\\u21C8',\n      urcorn: '\\u231D',\n      urcorner: '\\u231D',\n      urcrop: '\\u230E',\n      Uring: '\\u016E',\n      uring: '\\u016F',\n      urtri: '\\u25F9',\n      Uscr: '\\uD835\\uDCB0',\n      uscr: '\\uD835\\uDCCA',\n      utdot: '\\u22F0',\n      Utilde: '\\u0168',\n      utilde: '\\u0169',\n      utri: '\\u25B5',\n      utrif: '\\u25B4',\n      uuarr: '\\u21C8',\n      Uuml: '\\u00DC',\n      uuml: '\\u00FC',\n      uwangle: '\\u29A7',\n      vangrt: '\\u299C',\n      varepsilon: '\\u03F5',\n      varkappa: '\\u03F0',\n      varnothing: '\\u2205',\n      varphi: '\\u03D5',\n      varpi: '\\u03D6',\n      varpropto: '\\u221D',\n      vArr: '\\u21D5',\n      varr: '\\u2195',\n      varrho: '\\u03F1',\n      varsigma: '\\u03C2',\n      varsubsetneq: '\\u228A\\uFE00',\n      varsubsetneqq: '\\u2ACB\\uFE00',\n      varsupsetneq: '\\u228B\\uFE00',\n      varsupsetneqq: '\\u2ACC\\uFE00',\n      vartheta: '\\u03D1',\n      vartriangleleft: '\\u22B2',\n      vartriangleright: '\\u22B3',\n      Vbar: '\\u2AEB',\n      vBar: '\\u2AE8',\n      vBarv: '\\u2AE9',\n      Vcy: '\\u0412',\n      vcy: '\\u0432',\n      VDash: '\\u22AB',\n      Vdash: '\\u22A9',\n      vDash: '\\u22A8',\n      vdash: '\\u22A2',\n      Vdashl: '\\u2AE6',\n      Vee: '\\u22C1',\n      vee: '\\u2228',\n      veebar: '\\u22BB',\n      veeeq: '\\u225A',\n      vellip: '\\u22EE',\n      Verbar: '\\u2016',\n      verbar: '\\u007C',\n      Vert: '\\u2016',\n      vert: '\\u007C',\n      VerticalBar: '\\u2223',\n      VerticalLine: '\\u007C',\n      VerticalSeparator: '\\u2758',\n      VerticalTilde: '\\u2240',\n      VeryThinSpace: '\\u200A',\n      Vfr: '\\uD835\\uDD19',\n      vfr: '\\uD835\\uDD33',\n      vltri: '\\u22B2',\n      vnsub: '\\u2282\\u20D2',\n      vnsup: '\\u2283\\u20D2',\n      Vopf: '\\uD835\\uDD4D',\n      vopf: '\\uD835\\uDD67',\n      vprop: '\\u221D',\n      vrtri: '\\u22B3',\n      Vscr: '\\uD835\\uDCB1',\n      vscr: '\\uD835\\uDCCB',\n      vsubnE: '\\u2ACB\\uFE00',\n      vsubne: '\\u228A\\uFE00',\n      vsupnE: '\\u2ACC\\uFE00',\n      vsupne: '\\u228B\\uFE00',\n      Vvdash: '\\u22AA',\n      vzigzag: '\\u299A',\n      Wcirc: '\\u0174',\n      wcirc: '\\u0175',\n      wedbar: '\\u2A5F',\n      Wedge: '\\u22C0',\n      wedge: '\\u2227',\n      wedgeq: '\\u2259',\n      weierp: '\\u2118',\n      Wfr: '\\uD835\\uDD1A',\n      wfr: '\\uD835\\uDD34',\n      Wopf: '\\uD835\\uDD4E',\n      wopf: '\\uD835\\uDD68',\n      wp: '\\u2118',\n      wr: '\\u2240',\n      wreath: '\\u2240',\n      Wscr: '\\uD835\\uDCB2',\n      wscr: '\\uD835\\uDCCC',\n      xcap: '\\u22C2',\n      xcirc: '\\u25EF',\n      xcup: '\\u22C3',\n      xdtri: '\\u25BD',\n      Xfr: '\\uD835\\uDD1B',\n      xfr: '\\uD835\\uDD35',\n      xhArr: '\\u27FA',\n      xharr: '\\u27F7',\n      Xi: '\\u039E',\n      xi: '\\u03BE',\n      xlArr: '\\u27F8',\n      xlarr: '\\u27F5',\n      xmap: '\\u27FC',\n      xnis: '\\u22FB',\n      xodot: '\\u2A00',\n      Xopf: '\\uD835\\uDD4F',\n      xopf: '\\uD835\\uDD69',\n      xoplus: '\\u2A01',\n      xotime: '\\u2A02',\n      xrArr: '\\u27F9',\n      xrarr: '\\u27F6',\n      Xscr: '\\uD835\\uDCB3',\n      xscr: '\\uD835\\uDCCD',\n      xsqcup: '\\u2A06',\n      xuplus: '\\u2A04',\n      xutri: '\\u25B3',\n      xvee: '\\u22C1',\n      xwedge: '\\u22C0',\n      Yacute: '\\u00DD',\n      yacute: '\\u00FD',\n      YAcy: '\\u042F',\n      yacy: '\\u044F',\n      Ycirc: '\\u0176',\n      ycirc: '\\u0177',\n      Ycy: '\\u042B',\n      ycy: '\\u044B',\n      yen: '\\u00A5',\n      Yfr: '\\uD835\\uDD1C',\n      yfr: '\\uD835\\uDD36',\n      YIcy: '\\u0407',\n      yicy: '\\u0457',\n      Yopf: '\\uD835\\uDD50',\n      yopf: '\\uD835\\uDD6A',\n      Yscr: '\\uD835\\uDCB4',\n      yscr: '\\uD835\\uDCCE',\n      YUcy: '\\u042E',\n      yucy: '\\u044E',\n      Yuml: '\\u0178',\n      yuml: '\\u00FF',\n      Zacute: '\\u0179',\n      zacute: '\\u017A',\n      Zcaron: '\\u017D',\n      zcaron: '\\u017E',\n      Zcy: '\\u0417',\n      zcy: '\\u0437',\n      Zdot: '\\u017B',\n      zdot: '\\u017C',\n      zeetrf: '\\u2128',\n      ZeroWidthSpace: '\\u200B',\n      Zeta: '\\u0396',\n      zeta: '\\u03B6',\n      Zfr: '\\u2128',\n      zfr: '\\uD835\\uDD37',\n      ZHcy: '\\u0416',\n      zhcy: '\\u0436',\n      zigrarr: '\\u21DD',\n      Zopf: '\\u2124',\n      zopf: '\\uD835\\uDD6B',\n      Zscr: '\\uD835\\uDCB5',\n      zscr: '\\uD835\\uDCCF',\n      zwj: '\\u200D',\n      zwnj: '\\u200C'\n    });\n\n    /**\n     * @deprecated use `HTML_ENTITIES` instead\n     * @see HTML_ENTITIES\n     */\n    exports.entityMap = exports.HTML_ENTITIES;\n  });\n  entities.XML_ENTITIES;\n  entities.HTML_ENTITIES;\n  entities.entityMap;\n\n  var NAMESPACE$1 = conventions.NAMESPACE;\n\n  //[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n  //[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n  //[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\n  var nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/; //\\u10000-\\uEFFFF\n  var nameChar = new RegExp(\"[\\\\-\\\\.0-9\" + nameStartChar.source.slice(1, -1) + \"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\n  var tagNamePattern = new RegExp('^' + nameStartChar.source + nameChar.source + '*(?:\\:' + nameStartChar.source + nameChar.source + '*)?$');\n  //var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n  //var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n\n  //S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n  //S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n  var S_TAG = 0; //tag name offerring\n  var S_ATTR = 1; //attr name offerring\n  var S_ATTR_SPACE = 2; //attr name end and space offer\n  var S_EQ = 3; //=space?\n  var S_ATTR_NOQUOT_VALUE = 4; //attr value(no quot value only)\n  var S_ATTR_END = 5; //attr value end and no space(quot end)\n  var S_TAG_SPACE = 6; //(attr value end || tag end ) && (space offer)\n  var S_TAG_CLOSE = 7; //closed el<el />\n\n  /**\n   * Creates an error that will not be caught by XMLReader aka the SAX parser.\n   *\n   * @param {string} message\n   * @param {any?} locator Optional, can provide details about the location in the source\n   * @constructor\n   */\n  function ParseError$1(message, locator) {\n    this.message = message;\n    this.locator = locator;\n    if (Error.captureStackTrace) Error.captureStackTrace(this, ParseError$1);\n  }\n  ParseError$1.prototype = new Error();\n  ParseError$1.prototype.name = ParseError$1.name;\n  function XMLReader$1() {}\n  XMLReader$1.prototype = {\n    parse: function (source, defaultNSMap, entityMap) {\n      var domBuilder = this.domBuilder;\n      domBuilder.startDocument();\n      _copy(defaultNSMap, defaultNSMap = {});\n      parse$1(source, defaultNSMap, entityMap, domBuilder, this.errorHandler);\n      domBuilder.endDocument();\n    }\n  };\n  function parse$1(source, defaultNSMapCopy, entityMap, domBuilder, errorHandler) {\n    function fixedFromCharCode(code) {\n      // String.prototype.fromCharCode does not supports\n      // > 2 bytes unicode chars directly\n      if (code > 0xffff) {\n        code -= 0x10000;\n        var surrogate1 = 0xd800 + (code >> 10),\n          surrogate2 = 0xdc00 + (code & 0x3ff);\n        return String.fromCharCode(surrogate1, surrogate2);\n      } else {\n        return String.fromCharCode(code);\n      }\n    }\n    function entityReplacer(a) {\n      var k = a.slice(1, -1);\n      if (Object.hasOwnProperty.call(entityMap, k)) {\n        return entityMap[k];\n      } else if (k.charAt(0) === '#') {\n        return fixedFromCharCode(parseInt(k.substr(1).replace('x', '0x')));\n      } else {\n        errorHandler.error('entity not found:' + a);\n        return a;\n      }\n    }\n    function appendText(end) {\n      //has some bugs\n      if (end > start) {\n        var xt = source.substring(start, end).replace(/&#?\\w+;/g, entityReplacer);\n        locator && position(start);\n        domBuilder.characters(xt, 0, end - start);\n        start = end;\n      }\n    }\n    function position(p, m) {\n      while (p >= lineEnd && (m = linePattern.exec(source))) {\n        lineStart = m.index;\n        lineEnd = lineStart + m[0].length;\n        locator.lineNumber++;\n        //console.log('line++:',locator,startPos,endPos)\n      }\n      locator.columnNumber = p - lineStart + 1;\n    }\n    var lineStart = 0;\n    var lineEnd = 0;\n    var linePattern = /.*(?:\\r\\n?|\\n)|.*$/g;\n    var locator = domBuilder.locator;\n    var parseStack = [{\n      currentNSMap: defaultNSMapCopy\n    }];\n    var closeMap = {};\n    var start = 0;\n    while (true) {\n      try {\n        var tagStart = source.indexOf('<', start);\n        if (tagStart < 0) {\n          if (!source.substr(start).match(/^\\s*$/)) {\n            var doc = domBuilder.doc;\n            var text = doc.createTextNode(source.substr(start));\n            doc.appendChild(text);\n            domBuilder.currentElement = text;\n          }\n          return;\n        }\n        if (tagStart > start) {\n          appendText(tagStart);\n        }\n        switch (source.charAt(tagStart + 1)) {\n          case '/':\n            var end = source.indexOf('>', tagStart + 3);\n            var tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n            var config = parseStack.pop();\n            if (end < 0) {\n              tagName = source.substring(tagStart + 2).replace(/[\\s<].*/, '');\n              errorHandler.error(\"end tag name: \" + tagName + ' is not complete:' + config.tagName);\n              end = tagStart + 1 + tagName.length;\n            } else if (tagName.match(/\\s</)) {\n              tagName = tagName.replace(/[\\s<].*/, '');\n              errorHandler.error(\"end tag name: \" + tagName + ' maybe not complete');\n              end = tagStart + 1 + tagName.length;\n            }\n            var localNSMap = config.localNSMap;\n            var endMatch = config.tagName == tagName;\n            var endIgnoreCaseMach = endMatch || config.tagName && config.tagName.toLowerCase() == tagName.toLowerCase();\n            if (endIgnoreCaseMach) {\n              domBuilder.endElement(config.uri, config.localName, tagName);\n              if (localNSMap) {\n                for (var prefix in localNSMap) {\n                  if (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n                    domBuilder.endPrefixMapping(prefix);\n                  }\n                }\n              }\n              if (!endMatch) {\n                errorHandler.fatalError(\"end tag name: \" + tagName + ' is not match the current start tagName:' + config.tagName); // No known test case\n              }\n            } else {\n              parseStack.push(config);\n            }\n            end++;\n            break;\n          // end elment\n          case '?':\n            // <?...?>\n            locator && position(tagStart);\n            end = parseInstruction(source, tagStart, domBuilder);\n            break;\n          case '!':\n            // <!doctype,<![CDATA,<!--\n            locator && position(tagStart);\n            end = parseDCC(source, tagStart, domBuilder, errorHandler);\n            break;\n          default:\n            locator && position(tagStart);\n            var el = new ElementAttributes();\n            var currentNSMap = parseStack[parseStack.length - 1].currentNSMap;\n            //elStartEnd\n            var end = parseElementStartPart(source, tagStart, el, currentNSMap, entityReplacer, errorHandler);\n            var len = el.length;\n            if (!el.closed && fixSelfClosed(source, end, el.tagName, closeMap)) {\n              el.closed = true;\n              if (!entityMap.nbsp) {\n                errorHandler.warning('unclosed xml attribute');\n              }\n            }\n            if (locator && len) {\n              var locator2 = copyLocator(locator, {});\n              //try{//attribute position fixed\n              for (var i = 0; i < len; i++) {\n                var a = el[i];\n                position(a.offset);\n                a.locator = copyLocator(locator, {});\n              }\n              domBuilder.locator = locator2;\n              if (appendElement$1(el, domBuilder, currentNSMap)) {\n                parseStack.push(el);\n              }\n              domBuilder.locator = locator;\n            } else {\n              if (appendElement$1(el, domBuilder, currentNSMap)) {\n                parseStack.push(el);\n              }\n            }\n            if (NAMESPACE$1.isHTML(el.uri) && !el.closed) {\n              end = parseHtmlSpecialContent(source, end, el.tagName, entityReplacer, domBuilder);\n            } else {\n              end++;\n            }\n        }\n      } catch (e) {\n        if (e instanceof ParseError$1) {\n          throw e;\n        }\n        errorHandler.error('element parse error: ' + e);\n        end = -1;\n      }\n      if (end > start) {\n        start = end;\n      } else {\n        //TODO: 这里有可能sax回退，有位置错误风险\n        appendText(Math.max(tagStart, start) + 1);\n      }\n    }\n  }\n  function copyLocator(f, t) {\n    t.lineNumber = f.lineNumber;\n    t.columnNumber = f.columnNumber;\n    return t;\n  }\n\n  /**\n   * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n   * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n   */\n  function parseElementStartPart(source, start, el, currentNSMap, entityReplacer, errorHandler) {\n    /**\n     * @param {string} qname\n     * @param {string} value\n     * @param {number} startIndex\n     */\n    function addAttribute(qname, value, startIndex) {\n      if (el.attributeNames.hasOwnProperty(qname)) {\n        errorHandler.fatalError('Attribute ' + qname + ' redefined');\n      }\n      el.addValue(qname,\n      // @see https://www.w3.org/TR/xml/#AVNormalize\n      // since the xmldom sax parser does not \"interpret\" DTD the following is not implemented:\n      // - recursive replacement of (DTD) entity references\n      // - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA\n      value.replace(/[\\t\\n\\r]/g, ' ').replace(/&#?\\w+;/g, entityReplacer), startIndex);\n    }\n    var attrName;\n    var value;\n    var p = ++start;\n    var s = S_TAG; //status\n    while (true) {\n      var c = source.charAt(p);\n      switch (c) {\n        case '=':\n          if (s === S_ATTR) {\n            //attrName\n            attrName = source.slice(start, p);\n            s = S_EQ;\n          } else if (s === S_ATTR_SPACE) {\n            s = S_EQ;\n          } else {\n            //fatalError: equal must after attrName or space after attrName\n            throw new Error('attribute equal must after attrName'); // No known test case\n          }\n          break;\n        case '\\'':\n        case '\"':\n          if (s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n          ) {\n            //equal\n            if (s === S_ATTR) {\n              errorHandler.warning('attribute value must after \"=\"');\n              attrName = source.slice(start, p);\n            }\n            start = p + 1;\n            p = source.indexOf(c, start);\n            if (p > 0) {\n              value = source.slice(start, p);\n              addAttribute(attrName, value, start - 1);\n              s = S_ATTR_END;\n            } else {\n              //fatalError: no end quot match\n              throw new Error('attribute value no end \\'' + c + '\\' match');\n            }\n          } else if (s == S_ATTR_NOQUOT_VALUE) {\n            value = source.slice(start, p);\n            addAttribute(attrName, value, start);\n            errorHandler.warning('attribute \"' + attrName + '\" missed start quot(' + c + ')!!');\n            start = p + 1;\n            s = S_ATTR_END;\n          } else {\n            //fatalError: no equal before\n            throw new Error('attribute value must after \"=\"'); // No known test case\n          }\n          break;\n        case '/':\n          switch (s) {\n            case S_TAG:\n              el.setTagName(source.slice(start, p));\n            case S_ATTR_END:\n            case S_TAG_SPACE:\n            case S_TAG_CLOSE:\n              s = S_TAG_CLOSE;\n              el.closed = true;\n            case S_ATTR_NOQUOT_VALUE:\n            case S_ATTR:\n              break;\n            case S_ATTR_SPACE:\n              el.closed = true;\n              break;\n            //case S_EQ:\n            default:\n              throw new Error(\"attribute invalid close char('/')\");\n            // No known test case\n          }\n          break;\n        case '':\n          //end document\n          errorHandler.error('unexpected end of input');\n          if (s == S_TAG) {\n            el.setTagName(source.slice(start, p));\n          }\n          return p;\n        case '>':\n          switch (s) {\n            case S_TAG:\n              el.setTagName(source.slice(start, p));\n            case S_ATTR_END:\n            case S_TAG_SPACE:\n            case S_TAG_CLOSE:\n              break;\n            //normal\n            case S_ATTR_NOQUOT_VALUE: //Compatible state\n            case S_ATTR:\n              value = source.slice(start, p);\n              if (value.slice(-1) === '/') {\n                el.closed = true;\n                value = value.slice(0, -1);\n              }\n            case S_ATTR_SPACE:\n              if (s === S_ATTR_SPACE) {\n                value = attrName;\n              }\n              if (s == S_ATTR_NOQUOT_VALUE) {\n                errorHandler.warning('attribute \"' + value + '\" missed quot(\")!');\n                addAttribute(attrName, value, start);\n              } else {\n                if (!NAMESPACE$1.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)) {\n                  errorHandler.warning('attribute \"' + value + '\" missed value!! \"' + value + '\" instead!!');\n                }\n                addAttribute(value, value, start);\n              }\n              break;\n            case S_EQ:\n              throw new Error('attribute value missed!!');\n          }\n          //\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n          return p;\n        /*xml space '\\x20' | #x9 | #xD | #xA; */\n        case '\\u0080':\n          c = ' ';\n        default:\n          if (c <= ' ') {\n            //space\n            switch (s) {\n              case S_TAG:\n                el.setTagName(source.slice(start, p)); //tagName\n                s = S_TAG_SPACE;\n                break;\n              case S_ATTR:\n                attrName = source.slice(start, p);\n                s = S_ATTR_SPACE;\n                break;\n              case S_ATTR_NOQUOT_VALUE:\n                var value = source.slice(start, p);\n                errorHandler.warning('attribute \"' + value + '\" missed quot(\")!!');\n                addAttribute(attrName, value, start);\n              case S_ATTR_END:\n                s = S_TAG_SPACE;\n                break;\n              //case S_TAG_SPACE:\n              //case S_EQ:\n              //case S_ATTR_SPACE:\n              //\tvoid();break;\n              //case S_TAG_CLOSE:\n              //ignore warning\n            }\n          } else {\n            //not space\n            //S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n            //S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n            switch (s) {\n              //case S_TAG:void();break;\n              //case S_ATTR:void();break;\n              //case S_ATTR_NOQUOT_VALUE:void();break;\n              case S_ATTR_SPACE:\n                el.tagName;\n                if (!NAMESPACE$1.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n                  errorHandler.warning('attribute \"' + attrName + '\" missed value!! \"' + attrName + '\" instead2!!');\n                }\n                addAttribute(attrName, attrName, start);\n                start = p;\n                s = S_ATTR;\n                break;\n              case S_ATTR_END:\n                errorHandler.warning('attribute space is required\"' + attrName + '\"!!');\n              case S_TAG_SPACE:\n                s = S_ATTR;\n                start = p;\n                break;\n              case S_EQ:\n                s = S_ATTR_NOQUOT_VALUE;\n                start = p;\n                break;\n              case S_TAG_CLOSE:\n                throw new Error(\"elements closed character '/' and '>' must be connected to\");\n            }\n          }\n      } //end outer switch\n      //console.log('p++',p)\n      p++;\n    }\n  }\n  /**\n   * @return true if has new namespace define\n   */\n  function appendElement$1(el, domBuilder, currentNSMap) {\n    var tagName = el.tagName;\n    var localNSMap = null;\n    //var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n    var i = el.length;\n    while (i--) {\n      var a = el[i];\n      var qName = a.qName;\n      var value = a.value;\n      var nsp = qName.indexOf(':');\n      if (nsp > 0) {\n        var prefix = a.prefix = qName.slice(0, nsp);\n        var localName = qName.slice(nsp + 1);\n        var nsPrefix = prefix === 'xmlns' && localName;\n      } else {\n        localName = qName;\n        prefix = null;\n        nsPrefix = qName === 'xmlns' && '';\n      }\n      //can not set prefix,because prefix !== ''\n      a.localName = localName;\n      //prefix == null for no ns prefix attribute\n      if (nsPrefix !== false) {\n        //hack!!\n        if (localNSMap == null) {\n          localNSMap = {};\n          //console.log(currentNSMap,0)\n          _copy(currentNSMap, currentNSMap = {});\n          //console.log(currentNSMap,1)\n        }\n        currentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n        a.uri = NAMESPACE$1.XMLNS;\n        domBuilder.startPrefixMapping(nsPrefix, value);\n      }\n    }\n    var i = el.length;\n    while (i--) {\n      a = el[i];\n      var prefix = a.prefix;\n      if (prefix) {\n        //no prefix attribute has no namespace\n        if (prefix === 'xml') {\n          a.uri = NAMESPACE$1.XML;\n        }\n        if (prefix !== 'xmlns') {\n          a.uri = currentNSMap[prefix || ''];\n\n          //{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n        }\n      }\n    }\n    var nsp = tagName.indexOf(':');\n    if (nsp > 0) {\n      prefix = el.prefix = tagName.slice(0, nsp);\n      localName = el.localName = tagName.slice(nsp + 1);\n    } else {\n      prefix = null; //important!!\n      localName = el.localName = tagName;\n    }\n    //no prefix element has default namespace\n    var ns = el.uri = currentNSMap[prefix || ''];\n    domBuilder.startElement(ns, localName, tagName, el);\n    //endPrefixMapping and startPrefixMapping have not any help for dom builder\n    //localNSMap = null\n    if (el.closed) {\n      domBuilder.endElement(ns, localName, tagName);\n      if (localNSMap) {\n        for (prefix in localNSMap) {\n          if (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n            domBuilder.endPrefixMapping(prefix);\n          }\n        }\n      }\n    } else {\n      el.currentNSMap = currentNSMap;\n      el.localNSMap = localNSMap;\n      //parseStack.push(el);\n      return true;\n    }\n  }\n  function parseHtmlSpecialContent(source, elStartEnd, tagName, entityReplacer, domBuilder) {\n    if (/^(?:script|textarea)$/i.test(tagName)) {\n      var elEndStart = source.indexOf('</' + tagName + '>', elStartEnd);\n      var text = source.substring(elStartEnd + 1, elEndStart);\n      if (/[&<]/.test(text)) {\n        if (/^script$/i.test(tagName)) {\n          //if(!/\\]\\]>/.test(text)){\n          //lexHandler.startCDATA();\n          domBuilder.characters(text, 0, text.length);\n          //lexHandler.endCDATA();\n          return elEndStart;\n          //}\n        } //}else{//text area\n        text = text.replace(/&#?\\w+;/g, entityReplacer);\n        domBuilder.characters(text, 0, text.length);\n        return elEndStart;\n        //}\n      }\n    }\n    return elStartEnd + 1;\n  }\n  function fixSelfClosed(source, elStartEnd, tagName, closeMap) {\n    //if(tagName in closeMap){\n    var pos = closeMap[tagName];\n    if (pos == null) {\n      //console.log(tagName)\n      pos = source.lastIndexOf('</' + tagName + '>');\n      if (pos < elStartEnd) {\n        //忘记闭合\n        pos = source.lastIndexOf('</' + tagName);\n      }\n      closeMap[tagName] = pos;\n    }\n    return pos < elStartEnd;\n    //}\n  }\n  function _copy(source, target) {\n    for (var n in source) {\n      if (Object.prototype.hasOwnProperty.call(source, n)) {\n        target[n] = source[n];\n      }\n    }\n  }\n  function parseDCC(source, start, domBuilder, errorHandler) {\n    //sure start with '<!'\n    var next = source.charAt(start + 2);\n    switch (next) {\n      case '-':\n        if (source.charAt(start + 3) === '-') {\n          var end = source.indexOf('-->', start + 4);\n          //append comment source.substring(4,end)//<!--\n          if (end > start) {\n            domBuilder.comment(source, start + 4, end - start - 4);\n            return end + 3;\n          } else {\n            errorHandler.error(\"Unclosed comment\");\n            return -1;\n          }\n        } else {\n          //error\n          return -1;\n        }\n      default:\n        if (source.substr(start + 3, 6) == 'CDATA[') {\n          var end = source.indexOf(']]>', start + 9);\n          domBuilder.startCDATA();\n          domBuilder.characters(source, start + 9, end - start - 9);\n          domBuilder.endCDATA();\n          return end + 3;\n        }\n        //<!DOCTYPE\n        //startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId)\n        var matchs = split(source, start);\n        var len = matchs.length;\n        if (len > 1 && /!doctype/i.test(matchs[0][0])) {\n          var name = matchs[1][0];\n          var pubid = false;\n          var sysid = false;\n          if (len > 3) {\n            if (/^public$/i.test(matchs[2][0])) {\n              pubid = matchs[3][0];\n              sysid = len > 4 && matchs[4][0];\n            } else if (/^system$/i.test(matchs[2][0])) {\n              sysid = matchs[3][0];\n            }\n          }\n          var lastMatch = matchs[len - 1];\n          domBuilder.startDTD(name, pubid, sysid);\n          domBuilder.endDTD();\n          return lastMatch.index + lastMatch[0].length;\n        }\n    }\n    return -1;\n  }\n  function parseInstruction(source, start, domBuilder) {\n    var end = source.indexOf('?>', start);\n    if (end) {\n      var match = source.substring(start, end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n      if (match) {\n        match[0].length;\n        domBuilder.processingInstruction(match[1], match[2]);\n        return end + 2;\n      } else {\n        //error\n        return -1;\n      }\n    }\n    return -1;\n  }\n  function ElementAttributes() {\n    this.attributeNames = {};\n  }\n  ElementAttributes.prototype = {\n    setTagName: function (tagName) {\n      if (!tagNamePattern.test(tagName)) {\n        throw new Error('invalid tagName:' + tagName);\n      }\n      this.tagName = tagName;\n    },\n    addValue: function (qName, value, offset) {\n      if (!tagNamePattern.test(qName)) {\n        throw new Error('invalid attribute:' + qName);\n      }\n      this.attributeNames[qName] = this.length;\n      this[this.length++] = {\n        qName: qName,\n        value: value,\n        offset: offset\n      };\n    },\n    length: 0,\n    getLocalName: function (i) {\n      return this[i].localName;\n    },\n    getLocator: function (i) {\n      return this[i].locator;\n    },\n    getQName: function (i) {\n      return this[i].qName;\n    },\n    getURI: function (i) {\n      return this[i].uri;\n    },\n    getValue: function (i) {\n      return this[i].value;\n    }\n    //\t,getIndex:function(uri, localName)){\n    //\t\tif(localName){\n    //\n    //\t\t}else{\n    //\t\t\tvar qName = uri\n    //\t\t}\n    //\t},\n    //\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n    //\tgetType:function(uri,localName){}\n    //\tgetType:function(i){},\n  };\n  function split(source, start) {\n    var match;\n    var buf = [];\n    var reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n    reg.lastIndex = start;\n    reg.exec(source); //skip <\n    while (match = reg.exec(source)) {\n      buf.push(match);\n      if (match[1]) return buf;\n    }\n  }\n  var XMLReader_1 = XMLReader$1;\n  var ParseError_1 = ParseError$1;\n  var sax = {\n    XMLReader: XMLReader_1,\n    ParseError: ParseError_1\n  };\n\n  var DOMImplementation = dom.DOMImplementation;\n  var NAMESPACE = conventions.NAMESPACE;\n  var ParseError = sax.ParseError;\n  var XMLReader = sax.XMLReader;\n\n  /**\n   * Normalizes line ending according to https://www.w3.org/TR/xml11/#sec-line-ends:\n   *\n   * > XML parsed entities are often stored in computer files which,\n   * > for editing convenience, are organized into lines.\n   * > These lines are typically separated by some combination\n   * > of the characters CARRIAGE RETURN (#xD) and LINE FEED (#xA).\n   * >\n   * > To simplify the tasks of applications, the XML processor must behave\n   * > as if it normalized all line breaks in external parsed entities (including the document entity)\n   * > on input, before parsing, by translating all of the following to a single #xA character:\n   * >\n   * > 1. the two-character sequence #xD #xA\n   * > 2. the two-character sequence #xD #x85\n   * > 3. the single character #x85\n   * > 4. the single character #x2028\n   * > 5. any #xD character that is not immediately followed by #xA or #x85.\n   *\n   * @param {string} input\n   * @returns {string}\n   */\n  function normalizeLineEndings(input) {\n    return input.replace(/\\r[\\n\\u0085]/g, '\\n').replace(/[\\r\\u0085\\u2028]/g, '\\n');\n  }\n\n  /**\n   * @typedef Locator\n   * @property {number} [columnNumber]\n   * @property {number} [lineNumber]\n   */\n\n  /**\n   * @typedef DOMParserOptions\n   * @property {DOMHandler} [domBuilder]\n   * @property {Function} [errorHandler]\n   * @property {(string) => string} [normalizeLineEndings] used to replace line endings before parsing\n   * \t\t\t\t\t\tdefaults to `normalizeLineEndings`\n   * @property {Locator} [locator]\n   * @property {Record<string, string>} [xmlns]\n   *\n   * @see normalizeLineEndings\n   */\n\n  /**\n   * The DOMParser interface provides the ability to parse XML or HTML source code\n   * from a string into a DOM `Document`.\n   *\n   * _xmldom is different from the spec in that it allows an `options` parameter,\n   * to override the default behavior._\n   *\n   * @param {DOMParserOptions} [options]\n   * @constructor\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser\n   * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization\n   */\n  function DOMParser$1(options) {\n    this.options = options || {\n      locator: {}\n    };\n  }\n  DOMParser$1.prototype.parseFromString = function (source, mimeType) {\n    var options = this.options;\n    var sax = new XMLReader();\n    var domBuilder = options.domBuilder || new DOMHandler(); //contentHandler and LexicalHandler\n    var errorHandler = options.errorHandler;\n    var locator = options.locator;\n    var defaultNSMap = options.xmlns || {};\n    var isHTML = /\\/x?html?$/.test(mimeType); //mimeType.toLowerCase().indexOf('html') > -1;\n    var entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\n    if (locator) {\n      domBuilder.setDocumentLocator(locator);\n    }\n    sax.errorHandler = buildErrorHandler(errorHandler, domBuilder, locator);\n    sax.domBuilder = options.domBuilder || domBuilder;\n    if (isHTML) {\n      defaultNSMap[''] = NAMESPACE.HTML;\n    }\n    defaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n    var normalize = options.normalizeLineEndings || normalizeLineEndings;\n    if (source && typeof source === 'string') {\n      sax.parse(normalize(source), defaultNSMap, entityMap);\n    } else {\n      sax.errorHandler.error('invalid doc source');\n    }\n    return domBuilder.doc;\n  };\n  function buildErrorHandler(errorImpl, domBuilder, locator) {\n    if (!errorImpl) {\n      if (domBuilder instanceof DOMHandler) {\n        return domBuilder;\n      }\n      errorImpl = domBuilder;\n    }\n    var errorHandler = {};\n    var isCallback = errorImpl instanceof Function;\n    locator = locator || {};\n    function build(key) {\n      var fn = errorImpl[key];\n      if (!fn && isCallback) {\n        fn = errorImpl.length == 2 ? function (msg) {\n          errorImpl(key, msg);\n        } : errorImpl;\n      }\n      errorHandler[key] = fn && function (msg) {\n        fn('[xmldom ' + key + ']\\t' + msg + _locator(locator));\n      } || function () {};\n    }\n    build('warning');\n    build('error');\n    build('fatalError');\n    return errorHandler;\n  }\n\n  //console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n  /**\n   * +ContentHandler+ErrorHandler\n   * +LexicalHandler+EntityResolver2\n   * -DeclHandler-DTDHandler\n   *\n   * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n   * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n   */\n  function DOMHandler() {\n    this.cdata = false;\n  }\n  function position(locator, node) {\n    node.lineNumber = locator.lineNumber;\n    node.columnNumber = locator.columnNumber;\n  }\n  /**\n   * @see org.xml.sax.ContentHandler#startDocument\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n   */\n  DOMHandler.prototype = {\n    startDocument: function () {\n      this.doc = new DOMImplementation().createDocument(null, null, null);\n      if (this.locator) {\n        this.doc.documentURI = this.locator.systemId;\n      }\n    },\n    startElement: function (namespaceURI, localName, qName, attrs) {\n      var doc = this.doc;\n      var el = doc.createElementNS(namespaceURI, qName || localName);\n      var len = attrs.length;\n      appendElement(this, el);\n      this.currentElement = el;\n      this.locator && position(this.locator, el);\n      for (var i = 0; i < len; i++) {\n        var namespaceURI = attrs.getURI(i);\n        var value = attrs.getValue(i);\n        var qName = attrs.getQName(i);\n        var attr = doc.createAttributeNS(namespaceURI, qName);\n        this.locator && position(attrs.getLocator(i), attr);\n        attr.value = attr.nodeValue = value;\n        el.setAttributeNode(attr);\n      }\n    },\n    endElement: function (namespaceURI, localName, qName) {\n      var current = this.currentElement;\n      current.tagName;\n      this.currentElement = current.parentNode;\n    },\n    startPrefixMapping: function (prefix, uri) {},\n    endPrefixMapping: function (prefix) {},\n    processingInstruction: function (target, data) {\n      var ins = this.doc.createProcessingInstruction(target, data);\n      this.locator && position(this.locator, ins);\n      appendElement(this, ins);\n    },\n    ignorableWhitespace: function (ch, start, length) {},\n    characters: function (chars, start, length) {\n      chars = _toString.apply(this, arguments);\n      //console.log(chars)\n      if (chars) {\n        if (this.cdata) {\n          var charNode = this.doc.createCDATASection(chars);\n        } else {\n          var charNode = this.doc.createTextNode(chars);\n        }\n        if (this.currentElement) {\n          this.currentElement.appendChild(charNode);\n        } else if (/^\\s*$/.test(chars)) {\n          this.doc.appendChild(charNode);\n          //process xml\n        }\n        this.locator && position(this.locator, charNode);\n      }\n    },\n    skippedEntity: function (name) {},\n    endDocument: function () {\n      this.doc.normalize();\n    },\n    setDocumentLocator: function (locator) {\n      if (this.locator = locator) {\n        // && !('lineNumber' in locator)){\n        locator.lineNumber = 0;\n      }\n    },\n    //LexicalHandler\n    comment: function (chars, start, length) {\n      chars = _toString.apply(this, arguments);\n      var comm = this.doc.createComment(chars);\n      this.locator && position(this.locator, comm);\n      appendElement(this, comm);\n    },\n    startCDATA: function () {\n      //used in characters() methods\n      this.cdata = true;\n    },\n    endCDATA: function () {\n      this.cdata = false;\n    },\n    startDTD: function (name, publicId, systemId) {\n      var impl = this.doc.implementation;\n      if (impl && impl.createDocumentType) {\n        var dt = impl.createDocumentType(name, publicId, systemId);\n        this.locator && position(this.locator, dt);\n        appendElement(this, dt);\n        this.doc.doctype = dt;\n      }\n    },\n    /**\n     * @see org.xml.sax.ErrorHandler\n     * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n     */\n    warning: function (error) {\n      console.warn('[xmldom warning]\\t' + error, _locator(this.locator));\n    },\n    error: function (error) {\n      console.error('[xmldom error]\\t' + error, _locator(this.locator));\n    },\n    fatalError: function (error) {\n      throw new ParseError(error, this.locator);\n    }\n  };\n  function _locator(l) {\n    if (l) {\n      return '\\n@' + (l.systemId || '') + '#[line:' + l.lineNumber + ',col:' + l.columnNumber + ']';\n    }\n  }\n  function _toString(chars, start, length) {\n    if (typeof chars == 'string') {\n      return chars.substr(start, length);\n    } else {\n      //java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n      if (chars.length >= start + length || start) {\n        return new java.lang.String(chars, start, length) + '';\n      }\n      return chars;\n    }\n  }\n\n  /*\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n   * used method of org.xml.sax.ext.LexicalHandler:\n   *  #comment(chars, start, length)\n   *  #startCDATA()\n   *  #endCDATA()\n   *  #startDTD(name, publicId, systemId)\n   *\n   *\n   * IGNORED method of org.xml.sax.ext.LexicalHandler:\n   *  #endDTD()\n   *  #startEntity(name)\n   *  #endEntity(name)\n   *\n   *\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n   * IGNORED method of org.xml.sax.ext.DeclHandler\n   * \t#attributeDecl(eName, aName, type, mode, value)\n   *  #elementDecl(name, model)\n   *  #externalEntityDecl(name, publicId, systemId)\n   *  #internalEntityDecl(name, value)\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n   * IGNORED method of org.xml.sax.EntityResolver2\n   *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n   *  #resolveEntity(publicId, systemId)\n   *  #getExternalSubset(name, baseURI)\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n   * IGNORED method of org.xml.sax.DTDHandler\n   *  #notationDecl(name, publicId, systemId) {};\n   *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n   */\n  \"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g, function (key) {\n    DOMHandler.prototype[key] = function () {\n      return null;\n    };\n  });\n\n  /* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\n  function appendElement(hander, node) {\n    if (!hander.currentElement) {\n      hander.doc.appendChild(node);\n    } else {\n      hander.currentElement.appendChild(node);\n    }\n  } //appendChild and setAttributeNS are preformance key\n\n  var __DOMHandler = DOMHandler;\n  var normalizeLineEndings_1 = normalizeLineEndings;\n  var DOMParser_1 = DOMParser$1;\n  var domParser = {\n    __DOMHandler: __DOMHandler,\n    normalizeLineEndings: normalizeLineEndings_1,\n    DOMParser: DOMParser_1\n  };\n\n  var DOMParser = domParser.DOMParser;\n\n  /*! @name mpd-parser @version 1.3.0 @license Apache-2.0 */\n  const isObject = obj => {\n    return !!obj && typeof obj === 'object';\n  };\n  const merge$1 = (...objects) => {\n    return objects.reduce((result, source) => {\n      if (typeof source !== 'object') {\n        return result;\n      }\n      Object.keys(source).forEach(key => {\n        if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n          result[key] = result[key].concat(source[key]);\n        } else if (isObject(result[key]) && isObject(source[key])) {\n          result[key] = merge$1(result[key], source[key]);\n        } else {\n          result[key] = source[key];\n        }\n      });\n      return result;\n    }, {});\n  };\n  const values = o => Object.keys(o).map(k => o[k]);\n  const range = (start, end) => {\n    const result = [];\n    for (let i = start; i < end; i++) {\n      result.push(i);\n    }\n    return result;\n  };\n  const flatten = lists => lists.reduce((x, y) => x.concat(y), []);\n  const from = list => {\n    if (!list.length) {\n      return [];\n    }\n    const result = [];\n    for (let i = 0; i < list.length; i++) {\n      result.push(list[i]);\n    }\n    return result;\n  };\n  const findIndexes = (l, key) => l.reduce((a, e, i) => {\n    if (e[key]) {\n      a.push(i);\n    }\n    return a;\n  }, []);\n  /**\n   * Returns a union of the included lists provided each element can be identified by a key.\n   *\n   * @param {Array} list - list of lists to get the union of\n   * @param {Function} keyFunction - the function to use as a key for each element\n   *\n   * @return {Array} the union of the arrays\n   */\n\n  const union = (lists, keyFunction) => {\n    return values(lists.reduce((acc, list) => {\n      list.forEach(el => {\n        acc[keyFunction(el)] = el;\n      });\n      return acc;\n    }, {}));\n  };\n  var errors = {\n    INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n    INVALID_NUMBER_OF_CONTENT_STEERING: 'INVALID_NUMBER_OF_CONTENT_STEERING',\n    DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n    DASH_INVALID_XML: 'DASH_INVALID_XML',\n    NO_BASE_URL: 'NO_BASE_URL',\n    MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n    SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n    UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n  };\n\n  /**\n   * @typedef {Object} SingleUri\n   * @property {string} uri - relative location of segment\n   * @property {string} resolvedUri - resolved location of segment\n   * @property {Object} byterange - Object containing information on how to make byte range\n   *   requests following byte-range-spec per RFC2616.\n   * @property {String} byterange.length - length of range request\n   * @property {String} byterange.offset - byte offset of range request\n   *\n   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n   */\n\n  /**\n   * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n   * that conforms to how m3u8-parser is structured\n   *\n   * @see https://github.com/videojs/m3u8-parser\n   *\n   * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n   * @param {string} source - source url for segment\n   * @param {string} range - optional range used for range calls,\n   *   follows  RFC 2616, Clause 14.35.1\n   * @return {SingleUri} full segment information transformed into a format similar\n   *   to m3u8-parser\n   */\n\n  const urlTypeToSegment = ({\n    baseUrl = '',\n    source = '',\n    range = '',\n    indexRange = ''\n  }) => {\n    const segment = {\n      uri: source,\n      resolvedUri: resolveUrl$1(baseUrl || '', source)\n    };\n    if (range || indexRange) {\n      const rangeStr = range ? range : indexRange;\n      const ranges = rangeStr.split('-'); // default to parsing this as a BigInt if possible\n\n      let startRange = window.BigInt ? window.BigInt(ranges[0]) : parseInt(ranges[0], 10);\n      let endRange = window.BigInt ? window.BigInt(ranges[1]) : parseInt(ranges[1], 10); // convert back to a number if less than MAX_SAFE_INTEGER\n\n      if (startRange < Number.MAX_SAFE_INTEGER && typeof startRange === 'bigint') {\n        startRange = Number(startRange);\n      }\n      if (endRange < Number.MAX_SAFE_INTEGER && typeof endRange === 'bigint') {\n        endRange = Number(endRange);\n      }\n      let length;\n      if (typeof endRange === 'bigint' || typeof startRange === 'bigint') {\n        length = window.BigInt(endRange) - window.BigInt(startRange) + window.BigInt(1);\n      } else {\n        length = endRange - startRange + 1;\n      }\n      if (typeof length === 'bigint' && length < Number.MAX_SAFE_INTEGER) {\n        length = Number(length);\n      } // byterange should be inclusive according to\n      // RFC 2616, Clause 14.35.1\n\n      segment.byterange = {\n        length,\n        offset: startRange\n      };\n    }\n    return segment;\n  };\n  const byteRangeToString = byterange => {\n    // `endRange` is one less than `offset + length` because the HTTP range\n    // header uses inclusive ranges\n    let endRange;\n    if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n      endRange = window.BigInt(byterange.offset) + window.BigInt(byterange.length) - window.BigInt(1);\n    } else {\n      endRange = byterange.offset + byterange.length - 1;\n    }\n    return `${byterange.offset}-${endRange}`;\n  };\n\n  /**\n   * parse the end number attribue that can be a string\n   * number, or undefined.\n   *\n   * @param {string|number|undefined} endNumber\n   *        The end number attribute.\n   *\n   * @return {number|null}\n   *          The result of parsing the end number.\n   */\n\n  const parseEndNumber = endNumber => {\n    if (endNumber && typeof endNumber !== 'number') {\n      endNumber = parseInt(endNumber, 10);\n    }\n    if (isNaN(endNumber)) {\n      return null;\n    }\n    return endNumber;\n  };\n  /**\n   * Functions for calculating the range of available segments in static and dynamic\n   * manifests.\n   */\n\n  const segmentRange = {\n    /**\n     * Returns the entire range of available segments for a static MPD\n     *\n     * @param {Object} attributes\n     *        Inheritied MPD attributes\n     * @return {{ start: number, end: number }}\n     *         The start and end numbers for available segments\n     */\n    static(attributes) {\n      const {\n        duration,\n        timescale = 1,\n        sourceDuration,\n        periodDuration\n      } = attributes;\n      const endNumber = parseEndNumber(attributes.endNumber);\n      const segmentDuration = duration / timescale;\n      if (typeof endNumber === 'number') {\n        return {\n          start: 0,\n          end: endNumber\n        };\n      }\n      if (typeof periodDuration === 'number') {\n        return {\n          start: 0,\n          end: periodDuration / segmentDuration\n        };\n      }\n      return {\n        start: 0,\n        end: sourceDuration / segmentDuration\n      };\n    },\n    /**\n     * Returns the current live window range of available segments for a dynamic MPD\n     *\n     * @param {Object} attributes\n     *        Inheritied MPD attributes\n     * @return {{ start: number, end: number }}\n     *         The start and end numbers for available segments\n     */\n    dynamic(attributes) {\n      const {\n        NOW,\n        clientOffset,\n        availabilityStartTime,\n        timescale = 1,\n        duration,\n        periodStart = 0,\n        minimumUpdatePeriod = 0,\n        timeShiftBufferDepth = Infinity\n      } = attributes;\n      const endNumber = parseEndNumber(attributes.endNumber); // clientOffset is passed in at the top level of mpd-parser and is an offset calculated\n      // after retrieving UTC server time.\n\n      const now = (NOW + clientOffset) / 1000; // WC stands for Wall Clock.\n      // Convert the period start time to EPOCH.\n\n      const periodStartWC = availabilityStartTime + periodStart; // Period end in EPOCH is manifest's retrieval time + time until next update.\n\n      const periodEndWC = now + minimumUpdatePeriod;\n      const periodDuration = periodEndWC - periodStartWC;\n      const segmentCount = Math.ceil(periodDuration * timescale / duration);\n      const availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n      const availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n      return {\n        start: Math.max(0, availableStart),\n        end: typeof endNumber === 'number' ? endNumber : Math.min(segmentCount, availableEnd)\n      };\n    }\n  };\n  /**\n   * Maps a range of numbers to objects with information needed to build the corresponding\n   * segment list\n   *\n   * @name toSegmentsCallback\n   * @function\n   * @param {number} number\n   *        Number of the segment\n   * @param {number} index\n   *        Index of the number in the range list\n   * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n   *         Object with segment timing and duration info\n   */\n\n  /**\n   * Returns a callback for Array.prototype.map for mapping a range of numbers to\n   * information needed to build the segment list.\n   *\n   * @param {Object} attributes\n   *        Inherited MPD attributes\n   * @return {toSegmentsCallback}\n   *         Callback map function\n   */\n\n  const toSegments = attributes => number => {\n    const {\n      duration,\n      timescale = 1,\n      periodStart,\n      startNumber = 1\n    } = attributes;\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodStart,\n      time: number * duration\n    };\n  };\n  /**\n   * Returns a list of objects containing segment timing and duration info used for\n   * building the list of segments. This uses the @duration attribute specified\n   * in the MPD manifest to derive the range of segments.\n   *\n   * @param {Object} attributes\n   *        Inherited MPD attributes\n   * @return {{number: number, duration: number, time: number, timeline: number}[]}\n   *         List of Objects with segment timing and duration info\n   */\n\n  const parseByDuration = attributes => {\n    const {\n      type,\n      duration,\n      timescale = 1,\n      periodDuration,\n      sourceDuration\n    } = attributes;\n    const {\n      start,\n      end\n    } = segmentRange[type](attributes);\n    const segments = range(start, end).map(toSegments(attributes));\n    if (type === 'static') {\n      const index = segments.length - 1; // section is either a period or the full source\n\n      const sectionDuration = typeof periodDuration === 'number' ? periodDuration : sourceDuration; // final segment may be less than full segment duration\n\n      segments[index].duration = sectionDuration - duration / timescale * index;\n    }\n    return segments;\n  };\n\n  /**\n   * Translates SegmentBase into a set of segments.\n   * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n   * node should be translated into segment.\n   *\n   * @param {Object} attributes\n   *   Object containing all inherited attributes from parent elements with attribute\n   *   names as keys\n   * @return {Object.<Array>} list of segments\n   */\n\n  const segmentsFromBase = attributes => {\n    const {\n      baseUrl,\n      initialization = {},\n      sourceDuration,\n      indexRange = '',\n      periodStart,\n      presentationTime,\n      number = 0,\n      duration\n    } = attributes; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n    if (!baseUrl) {\n      throw new Error(errors.NO_BASE_URL);\n    }\n    const initSegment = urlTypeToSegment({\n      baseUrl,\n      source: initialization.sourceURL,\n      range: initialization.range\n    });\n    const segment = urlTypeToSegment({\n      baseUrl,\n      source: baseUrl,\n      indexRange\n    });\n    segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n    // (since SegmentBase is only for one total segment)\n\n    if (duration) {\n      const segmentTimeInfo = parseByDuration(attributes);\n      if (segmentTimeInfo.length) {\n        segment.duration = segmentTimeInfo[0].duration;\n        segment.timeline = segmentTimeInfo[0].timeline;\n      }\n    } else if (sourceDuration) {\n      segment.duration = sourceDuration;\n      segment.timeline = periodStart;\n    } // If presentation time is provided, these segments are being generated by SIDX\n    // references, and should use the time provided. For the general case of SegmentBase,\n    // there should only be one segment in the period, so its presentation time is the same\n    // as its period start.\n\n    segment.presentationTime = presentationTime || periodStart;\n    segment.number = number;\n    return [segment];\n  };\n  /**\n   * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n   * according to the sidx information given.\n   *\n   * playlist.sidx has metadadata about the sidx where-as the sidx param\n   * is the parsed sidx box itself.\n   *\n   * @param {Object} playlist the playlist to update the sidx information for\n   * @param {Object} sidx the parsed sidx box\n   * @return {Object} the playlist object with the updated sidx information\n   */\n\n  const addSidxSegmentsToPlaylist$1 = (playlist, sidx, baseUrl) => {\n    // Retain init segment information\n    const initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial main manifest parsing\n\n    const sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n    const timeline = playlist.timeline || 0;\n    const sidxByteRange = playlist.sidx.byterange;\n    const sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n    const timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n    const mediaReferences = sidx.references.filter(r => r.referenceType !== 1);\n    const segments = [];\n    const type = playlist.endList ? 'static' : 'dynamic';\n    const periodStart = playlist.sidx.timeline;\n    let presentationTime = periodStart;\n    let number = playlist.mediaSequence || 0; // firstOffset is the offset from the end of the sidx box\n\n    let startIndex; // eslint-disable-next-line\n\n    if (typeof sidx.firstOffset === 'bigint') {\n      startIndex = window.BigInt(sidxEnd) + sidx.firstOffset;\n    } else {\n      startIndex = sidxEnd + sidx.firstOffset;\n    }\n    for (let i = 0; i < mediaReferences.length; i++) {\n      const reference = sidx.references[i]; // size of the referenced (sub)segment\n\n      const size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n      // this will be converted to seconds when generating segments\n\n      const duration = reference.subsegmentDuration; // should be an inclusive range\n\n      let endIndex; // eslint-disable-next-line\n\n      if (typeof startIndex === 'bigint') {\n        endIndex = startIndex + window.BigInt(size) - window.BigInt(1);\n      } else {\n        endIndex = startIndex + size - 1;\n      }\n      const indexRange = `${startIndex}-${endIndex}`;\n      const attributes = {\n        baseUrl,\n        timescale,\n        timeline,\n        periodStart,\n        presentationTime,\n        number,\n        duration,\n        sourceDuration,\n        indexRange,\n        type\n      };\n      const segment = segmentsFromBase(attributes)[0];\n      if (initSegment) {\n        segment.map = initSegment;\n      }\n      segments.push(segment);\n      if (typeof startIndex === 'bigint') {\n        startIndex += window.BigInt(size);\n      } else {\n        startIndex += size;\n      }\n      presentationTime += duration / timescale;\n      number++;\n    }\n    playlist.segments = segments;\n    return playlist;\n  };\n  const SUPPORTED_MEDIA_TYPES = ['AUDIO', 'SUBTITLES']; // allow one 60fps frame as leniency (arbitrarily chosen)\n\n  const TIME_FUDGE = 1 / 60;\n  /**\n   * Given a list of timelineStarts, combines, dedupes, and sorts them.\n   *\n   * @param {TimelineStart[]} timelineStarts - list of timeline starts\n   *\n   * @return {TimelineStart[]} the combined and deduped timeline starts\n   */\n\n  const getUniqueTimelineStarts = timelineStarts => {\n    return union(timelineStarts, ({\n      timeline\n    }) => timeline).sort((a, b) => a.timeline > b.timeline ? 1 : -1);\n  };\n  /**\n   * Finds the playlist with the matching NAME attribute.\n   *\n   * @param {Array} playlists - playlists to search through\n   * @param {string} name - the NAME attribute to search for\n   *\n   * @return {Object|null} the matching playlist object, or null\n   */\n\n  const findPlaylistWithName = (playlists, name) => {\n    for (let i = 0; i < playlists.length; i++) {\n      if (playlists[i].attributes.NAME === name) {\n        return playlists[i];\n      }\n    }\n    return null;\n  };\n  /**\n   * Gets a flattened array of media group playlists.\n   *\n   * @param {Object} manifest - the main manifest object\n   *\n   * @return {Array} the media group playlists\n   */\n\n  const getMediaGroupPlaylists = manifest => {\n    let mediaGroupPlaylists = [];\n    forEachMediaGroup$1(manifest, SUPPORTED_MEDIA_TYPES, (properties, type, group, label) => {\n      mediaGroupPlaylists = mediaGroupPlaylists.concat(properties.playlists || []);\n    });\n    return mediaGroupPlaylists;\n  };\n  /**\n   * Updates the playlist's media sequence numbers.\n   *\n   * @param {Object} config - options object\n   * @param {Object} config.playlist - the playlist to update\n   * @param {number} config.mediaSequence - the mediaSequence number to start with\n   */\n\n  const updateMediaSequenceForPlaylist = ({\n    playlist,\n    mediaSequence\n  }) => {\n    playlist.mediaSequence = mediaSequence;\n    playlist.segments.forEach((segment, index) => {\n      segment.number = playlist.mediaSequence + index;\n    });\n  };\n  /**\n   * Updates the media and discontinuity sequence numbers of newPlaylists given oldPlaylists\n   * and a complete list of timeline starts.\n   *\n   * If no matching playlist is found, only the discontinuity sequence number of the playlist\n   * will be updated.\n   *\n   * Since early available timelines are not supported, at least one segment must be present.\n   *\n   * @param {Object} config - options object\n   * @param {Object[]} oldPlaylists - the old playlists to use as a reference\n   * @param {Object[]} newPlaylists - the new playlists to update\n   * @param {Object} timelineStarts - all timelineStarts seen in the stream to this point\n   */\n\n  const updateSequenceNumbers = ({\n    oldPlaylists,\n    newPlaylists,\n    timelineStarts\n  }) => {\n    newPlaylists.forEach(playlist => {\n      playlist.discontinuitySequence = timelineStarts.findIndex(function ({\n        timeline\n      }) {\n        return timeline === playlist.timeline;\n      }); // Playlists NAMEs come from DASH Representation IDs, which are mandatory\n      // (see ISO_23009-1-2012 5.3.5.2).\n      //\n      // If the same Representation existed in a prior Period, it will retain the same NAME.\n\n      const oldPlaylist = findPlaylistWithName(oldPlaylists, playlist.attributes.NAME);\n      if (!oldPlaylist) {\n        // Since this is a new playlist, the media sequence values can start from 0 without\n        // consequence.\n        return;\n      } // TODO better support for live SIDX\n      //\n      // As of this writing, mpd-parser does not support multiperiod SIDX (in live or VOD).\n      // This is evident by a playlist only having a single SIDX reference. In a multiperiod\n      // playlist there would need to be multiple SIDX references. In addition, live SIDX is\n      // not supported when the SIDX properties change on refreshes.\n      //\n      // In the future, if support needs to be added, the merging logic here can be called\n      // after SIDX references are resolved. For now, exit early to prevent exceptions being\n      // thrown due to undefined references.\n\n      if (playlist.sidx) {\n        return;\n      } // Since we don't yet support early available timelines, we don't need to support\n      // playlists with no segments.\n\n      const firstNewSegment = playlist.segments[0];\n      const oldMatchingSegmentIndex = oldPlaylist.segments.findIndex(function (oldSegment) {\n        return Math.abs(oldSegment.presentationTime - firstNewSegment.presentationTime) < TIME_FUDGE;\n      }); // No matching segment from the old playlist means the entire playlist was refreshed.\n      // In this case the media sequence should account for this update, and the new segments\n      // should be marked as discontinuous from the prior content, since the last prior\n      // timeline was removed.\n\n      if (oldMatchingSegmentIndex === -1) {\n        updateMediaSequenceForPlaylist({\n          playlist,\n          mediaSequence: oldPlaylist.mediaSequence + oldPlaylist.segments.length\n        });\n        playlist.segments[0].discontinuity = true;\n        playlist.discontinuityStarts.unshift(0); // No matching segment does not necessarily mean there's missing content.\n        //\n        // If the new playlist's timeline is the same as the last seen segment's timeline,\n        // then a discontinuity can be added to identify that there's potentially missing\n        // content. If there's no missing content, the discontinuity should still be rather\n        // harmless. It's possible that if segment durations are accurate enough, that the\n        // existence of a gap can be determined using the presentation times and durations,\n        // but if the segment timing info is off, it may introduce more problems than simply\n        // adding the discontinuity.\n        //\n        // If the new playlist's timeline is different from the last seen segment's timeline,\n        // then a discontinuity can be added to identify that this is the first seen segment\n        // of a new timeline. However, the logic at the start of this function that\n        // determined the disconinuity sequence by timeline index is now off by one (the\n        // discontinuity of the newest timeline hasn't yet fallen off the manifest...since\n        // we added it), so the disconinuity sequence must be decremented.\n        //\n        // A period may also have a duration of zero, so the case of no segments is handled\n        // here even though we don't yet support early available periods.\n\n        if (!oldPlaylist.segments.length && playlist.timeline > oldPlaylist.timeline || oldPlaylist.segments.length && playlist.timeline > oldPlaylist.segments[oldPlaylist.segments.length - 1].timeline) {\n          playlist.discontinuitySequence--;\n        }\n        return;\n      } // If the first segment matched with a prior segment on a discontinuity (it's matching\n      // on the first segment of a period), then the discontinuitySequence shouldn't be the\n      // timeline's matching one, but instead should be the one prior, and the first segment\n      // of the new manifest should be marked with a discontinuity.\n      //\n      // The reason for this special case is that discontinuity sequence shows how many\n      // discontinuities have fallen off of the playlist, and discontinuities are marked on\n      // the first segment of a new \"timeline.\" Because of this, while DASH will retain that\n      // Period while the \"timeline\" exists, HLS keeps track of it via the discontinuity\n      // sequence, and that first segment is an indicator, but can be removed before that\n      // timeline is gone.\n\n      const oldMatchingSegment = oldPlaylist.segments[oldMatchingSegmentIndex];\n      if (oldMatchingSegment.discontinuity && !firstNewSegment.discontinuity) {\n        firstNewSegment.discontinuity = true;\n        playlist.discontinuityStarts.unshift(0);\n        playlist.discontinuitySequence--;\n      }\n      updateMediaSequenceForPlaylist({\n        playlist,\n        mediaSequence: oldPlaylist.segments[oldMatchingSegmentIndex].number\n      });\n    });\n  };\n  /**\n   * Given an old parsed manifest object and a new parsed manifest object, updates the\n   * sequence and timing values within the new manifest to ensure that it lines up with the\n   * old.\n   *\n   * @param {Array} oldManifest - the old main manifest object\n   * @param {Array} newManifest - the new main manifest object\n   *\n   * @return {Object} the updated new manifest object\n   */\n\n  const positionManifestOnTimeline = ({\n    oldManifest,\n    newManifest\n  }) => {\n    // Starting from v4.1.2 of the IOP, section 4.4.3.3 states:\n    //\n    // \"MPD@availabilityStartTime and Period@start shall not be changed over MPD updates.\"\n    //\n    // This was added from https://github.com/Dash-Industry-Forum/DASH-IF-IOP/issues/160\n    //\n    // Because of this change, and the difficulty of supporting periods with changing start\n    // times, periods with changing start times are not supported. This makes the logic much\n    // simpler, since periods with the same start time can be considerred the same period\n    // across refreshes.\n    //\n    // To give an example as to the difficulty of handling periods where the start time may\n    // change, if a single period manifest is refreshed with another manifest with a single\n    // period, and both the start and end times are increased, then the only way to determine\n    // if it's a new period or an old one that has changed is to look through the segments of\n    // each playlist and determine the presentation time bounds to find a match. In addition,\n    // if the period start changed to exceed the old period end, then there would be no\n    // match, and it would not be possible to determine whether the refreshed period is a new\n    // one or the old one.\n    const oldPlaylists = oldManifest.playlists.concat(getMediaGroupPlaylists(oldManifest));\n    const newPlaylists = newManifest.playlists.concat(getMediaGroupPlaylists(newManifest)); // Save all seen timelineStarts to the new manifest. Although this potentially means that\n    // there's a \"memory leak\" in that it will never stop growing, in reality, only a couple\n    // of properties are saved for each seen Period. Even long running live streams won't\n    // generate too many Periods, unless the stream is watched for decades. In the future,\n    // this can be optimized by mapping to discontinuity sequence numbers for each timeline,\n    // but it may not become an issue, and the additional info can be useful for debugging.\n\n    newManifest.timelineStarts = getUniqueTimelineStarts([oldManifest.timelineStarts, newManifest.timelineStarts]);\n    updateSequenceNumbers({\n      oldPlaylists,\n      newPlaylists,\n      timelineStarts: newManifest.timelineStarts\n    });\n    return newManifest;\n  };\n  const generateSidxKey = sidx => sidx && sidx.uri + '-' + byteRangeToString(sidx.byterange);\n  const mergeDiscontiguousPlaylists = playlists => {\n    // Break out playlists into groups based on their baseUrl\n    const playlistsByBaseUrl = playlists.reduce(function (acc, cur) {\n      if (!acc[cur.attributes.baseUrl]) {\n        acc[cur.attributes.baseUrl] = [];\n      }\n      acc[cur.attributes.baseUrl].push(cur);\n      return acc;\n    }, {});\n    let allPlaylists = [];\n    Object.values(playlistsByBaseUrl).forEach(playlistGroup => {\n      const mergedPlaylists = values(playlistGroup.reduce((acc, playlist) => {\n        // assuming playlist IDs are the same across periods\n        // TODO: handle multiperiod where representation sets are not the same\n        // across periods\n        const name = playlist.attributes.id + (playlist.attributes.lang || '');\n        if (!acc[name]) {\n          // First Period\n          acc[name] = playlist;\n          acc[name].attributes.timelineStarts = [];\n        } else {\n          // Subsequent Periods\n          if (playlist.segments) {\n            // first segment of subsequent periods signal a discontinuity\n            if (playlist.segments[0]) {\n              playlist.segments[0].discontinuity = true;\n            }\n            acc[name].segments.push(...playlist.segments);\n          } // bubble up contentProtection, this assumes all DRM content\n          // has the same contentProtection\n\n          if (playlist.attributes.contentProtection) {\n            acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n          }\n        }\n        acc[name].attributes.timelineStarts.push({\n          // Although they represent the same number, it's important to have both to make it\n          // compatible with HLS potentially having a similar attribute.\n          start: playlist.attributes.periodStart,\n          timeline: playlist.attributes.periodStart\n        });\n        return acc;\n      }, {}));\n      allPlaylists = allPlaylists.concat(mergedPlaylists);\n    });\n    return allPlaylists.map(playlist => {\n      playlist.discontinuityStarts = findIndexes(playlist.segments || [], 'discontinuity');\n      return playlist;\n    });\n  };\n  const addSidxSegmentsToPlaylist = (playlist, sidxMapping) => {\n    const sidxKey = generateSidxKey(playlist.sidx);\n    const sidxMatch = sidxKey && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n    if (sidxMatch) {\n      addSidxSegmentsToPlaylist$1(playlist, sidxMatch, playlist.sidx.resolvedUri);\n    }\n    return playlist;\n  };\n  const addSidxSegmentsToPlaylists = (playlists, sidxMapping = {}) => {\n    if (!Object.keys(sidxMapping).length) {\n      return playlists;\n    }\n    for (const i in playlists) {\n      playlists[i] = addSidxSegmentsToPlaylist(playlists[i], sidxMapping);\n    }\n    return playlists;\n  };\n  const formatAudioPlaylist = ({\n    attributes,\n    segments,\n    sidx,\n    mediaSequence,\n    discontinuitySequence,\n    discontinuityStarts\n  }, isAudioOnly) => {\n    const playlist = {\n      attributes: {\n        NAME: attributes.id,\n        BANDWIDTH: attributes.bandwidth,\n        CODECS: attributes.codecs,\n        ['PROGRAM-ID']: 1\n      },\n      uri: '',\n      endList: attributes.type === 'static',\n      timeline: attributes.periodStart,\n      resolvedUri: attributes.baseUrl || '',\n      targetDuration: attributes.duration,\n      discontinuitySequence,\n      discontinuityStarts,\n      timelineStarts: attributes.timelineStarts,\n      mediaSequence,\n      segments\n    };\n    if (attributes.contentProtection) {\n      playlist.contentProtection = attributes.contentProtection;\n    }\n    if (attributes.serviceLocation) {\n      playlist.attributes.serviceLocation = attributes.serviceLocation;\n    }\n    if (sidx) {\n      playlist.sidx = sidx;\n    }\n    if (isAudioOnly) {\n      playlist.attributes.AUDIO = 'audio';\n      playlist.attributes.SUBTITLES = 'subs';\n    }\n    return playlist;\n  };\n  const formatVttPlaylist = ({\n    attributes,\n    segments,\n    mediaSequence,\n    discontinuityStarts,\n    discontinuitySequence\n  }) => {\n    if (typeof segments === 'undefined') {\n      // vtt tracks may use single file in BaseURL\n      segments = [{\n        uri: attributes.baseUrl,\n        timeline: attributes.periodStart,\n        resolvedUri: attributes.baseUrl || '',\n        duration: attributes.sourceDuration,\n        number: 0\n      }]; // targetDuration should be the same duration as the only segment\n\n      attributes.duration = attributes.sourceDuration;\n    }\n    const m3u8Attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      ['PROGRAM-ID']: 1\n    };\n    if (attributes.codecs) {\n      m3u8Attributes.CODECS = attributes.codecs;\n    }\n    const vttPlaylist = {\n      attributes: m3u8Attributes,\n      uri: '',\n      endList: attributes.type === 'static',\n      timeline: attributes.periodStart,\n      resolvedUri: attributes.baseUrl || '',\n      targetDuration: attributes.duration,\n      timelineStarts: attributes.timelineStarts,\n      discontinuityStarts,\n      discontinuitySequence,\n      mediaSequence,\n      segments\n    };\n    if (attributes.serviceLocation) {\n      vttPlaylist.attributes.serviceLocation = attributes.serviceLocation;\n    }\n    return vttPlaylist;\n  };\n  const organizeAudioPlaylists = (playlists, sidxMapping = {}, isAudioOnly = false) => {\n    let mainPlaylist;\n    const formattedPlaylists = playlists.reduce((a, playlist) => {\n      const role = playlist.attributes.role && playlist.attributes.role.value || '';\n      const language = playlist.attributes.lang || '';\n      let label = playlist.attributes.label || 'main';\n      if (language && !playlist.attributes.label) {\n        const roleLabel = role ? ` (${role})` : '';\n        label = `${playlist.attributes.lang}${roleLabel}`;\n      }\n      if (!a[label]) {\n        a[label] = {\n          language,\n          autoselect: true,\n          default: role === 'main',\n          playlists: [],\n          uri: ''\n        };\n      }\n      const formatted = addSidxSegmentsToPlaylist(formatAudioPlaylist(playlist, isAudioOnly), sidxMapping);\n      a[label].playlists.push(formatted);\n      if (typeof mainPlaylist === 'undefined' && role === 'main') {\n        mainPlaylist = playlist;\n        mainPlaylist.default = true;\n      }\n      return a;\n    }, {}); // if no playlists have role \"main\", mark the first as main\n\n    if (!mainPlaylist) {\n      const firstLabel = Object.keys(formattedPlaylists)[0];\n      formattedPlaylists[firstLabel].default = true;\n    }\n    return formattedPlaylists;\n  };\n  const organizeVttPlaylists = (playlists, sidxMapping = {}) => {\n    return playlists.reduce((a, playlist) => {\n      const label = playlist.attributes.label || playlist.attributes.lang || 'text';\n      if (!a[label]) {\n        a[label] = {\n          language: label,\n          default: false,\n          autoselect: false,\n          playlists: [],\n          uri: ''\n        };\n      }\n      a[label].playlists.push(addSidxSegmentsToPlaylist(formatVttPlaylist(playlist), sidxMapping));\n      return a;\n    }, {});\n  };\n  const organizeCaptionServices = captionServices => captionServices.reduce((svcObj, svc) => {\n    if (!svc) {\n      return svcObj;\n    }\n    svc.forEach(service => {\n      const {\n        channel,\n        language\n      } = service;\n      svcObj[language] = {\n        autoselect: false,\n        default: false,\n        instreamId: channel,\n        language\n      };\n      if (service.hasOwnProperty('aspectRatio')) {\n        svcObj[language].aspectRatio = service.aspectRatio;\n      }\n      if (service.hasOwnProperty('easyReader')) {\n        svcObj[language].easyReader = service.easyReader;\n      }\n      if (service.hasOwnProperty('3D')) {\n        svcObj[language]['3D'] = service['3D'];\n      }\n    });\n    return svcObj;\n  }, {});\n  const formatVideoPlaylist = ({\n    attributes,\n    segments,\n    sidx,\n    discontinuityStarts\n  }) => {\n    const playlist = {\n      attributes: {\n        NAME: attributes.id,\n        AUDIO: 'audio',\n        SUBTITLES: 'subs',\n        RESOLUTION: {\n          width: attributes.width,\n          height: attributes.height\n        },\n        CODECS: attributes.codecs,\n        BANDWIDTH: attributes.bandwidth,\n        ['PROGRAM-ID']: 1\n      },\n      uri: '',\n      endList: attributes.type === 'static',\n      timeline: attributes.periodStart,\n      resolvedUri: attributes.baseUrl || '',\n      targetDuration: attributes.duration,\n      discontinuityStarts,\n      timelineStarts: attributes.timelineStarts,\n      segments\n    };\n    if (attributes.frameRate) {\n      playlist.attributes['FRAME-RATE'] = attributes.frameRate;\n    }\n    if (attributes.contentProtection) {\n      playlist.contentProtection = attributes.contentProtection;\n    }\n    if (attributes.serviceLocation) {\n      playlist.attributes.serviceLocation = attributes.serviceLocation;\n    }\n    if (sidx) {\n      playlist.sidx = sidx;\n    }\n    return playlist;\n  };\n  const videoOnly = ({\n    attributes\n  }) => attributes.mimeType === 'video/mp4' || attributes.mimeType === 'video/webm' || attributes.contentType === 'video';\n  const audioOnly = ({\n    attributes\n  }) => attributes.mimeType === 'audio/mp4' || attributes.mimeType === 'audio/webm' || attributes.contentType === 'audio';\n  const vttOnly = ({\n    attributes\n  }) => attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  /**\n   * Contains start and timeline properties denoting a timeline start. For DASH, these will\n   * be the same number.\n   *\n   * @typedef {Object} TimelineStart\n   * @property {number} start - the start time of the timeline\n   * @property {number} timeline - the timeline number\n   */\n\n  /**\n   * Adds appropriate media and discontinuity sequence values to the segments and playlists.\n   *\n   * Throughout mpd-parser, the `number` attribute is used in relation to `startNumber`, a\n   * DASH specific attribute used in constructing segment URI's from templates. However, from\n   * an HLS perspective, the `number` attribute on a segment would be its `mediaSequence`\n   * value, which should start at the original media sequence value (or 0) and increment by 1\n   * for each segment thereafter. Since DASH's `startNumber` values are independent per\n   * period, it doesn't make sense to use it for `number`. Instead, assume everything starts\n   * from a 0 mediaSequence value and increment from there.\n   *\n   * Note that VHS currently doesn't use the `number` property, but it can be helpful for\n   * debugging and making sense of the manifest.\n   *\n   * For live playlists, to account for values increasing in manifests when periods are\n   * removed on refreshes, merging logic should be used to update the numbers to their\n   * appropriate values (to ensure they're sequential and increasing).\n   *\n   * @param {Object[]} playlists - the playlists to update\n   * @param {TimelineStart[]} timelineStarts - the timeline starts for the manifest\n   */\n\n  const addMediaSequenceValues = (playlists, timelineStarts) => {\n    // increment all segments sequentially\n    playlists.forEach(playlist => {\n      playlist.mediaSequence = 0;\n      playlist.discontinuitySequence = timelineStarts.findIndex(function ({\n        timeline\n      }) {\n        return timeline === playlist.timeline;\n      });\n      if (!playlist.segments) {\n        return;\n      }\n      playlist.segments.forEach((segment, index) => {\n        segment.number = index;\n      });\n    });\n  };\n  /**\n   * Given a media group object, flattens all playlists within the media group into a single\n   * array.\n   *\n   * @param {Object} mediaGroupObject - the media group object\n   *\n   * @return {Object[]}\n   *         The media group playlists\n   */\n\n  const flattenMediaGroupPlaylists = mediaGroupObject => {\n    if (!mediaGroupObject) {\n      return [];\n    }\n    return Object.keys(mediaGroupObject).reduce((acc, label) => {\n      const labelContents = mediaGroupObject[label];\n      return acc.concat(labelContents.playlists);\n    }, []);\n  };\n  const toM3u8 = ({\n    dashPlaylists,\n    locations,\n    contentSteering,\n    sidxMapping = {},\n    previousManifest,\n    eventStream\n  }) => {\n    if (!dashPlaylists.length) {\n      return {};\n    } // grab all main manifest attributes\n\n    const {\n      sourceDuration: duration,\n      type,\n      suggestedPresentationDelay,\n      minimumUpdatePeriod\n    } = dashPlaylists[0].attributes;\n    const videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n    const audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n    const vttPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(vttOnly));\n    const captions = dashPlaylists.map(playlist => playlist.attributes.captionServices).filter(Boolean);\n    const manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: [],\n      endList: true,\n      mediaGroups: {\n        AUDIO: {},\n        VIDEO: {},\n        ['CLOSED-CAPTIONS']: {},\n        SUBTITLES: {}\n      },\n      uri: '',\n      duration,\n      playlists: addSidxSegmentsToPlaylists(videoPlaylists, sidxMapping)\n    };\n    if (minimumUpdatePeriod >= 0) {\n      manifest.minimumUpdatePeriod = minimumUpdatePeriod * 1000;\n    }\n    if (locations) {\n      manifest.locations = locations;\n    }\n    if (contentSteering) {\n      manifest.contentSteering = contentSteering;\n    }\n    if (type === 'dynamic') {\n      manifest.suggestedPresentationDelay = suggestedPresentationDelay;\n    }\n    if (eventStream && eventStream.length > 0) {\n      manifest.eventStream = eventStream;\n    }\n    const isAudioOnly = manifest.playlists.length === 0;\n    const organizedAudioGroup = audioPlaylists.length ? organizeAudioPlaylists(audioPlaylists, sidxMapping, isAudioOnly) : null;\n    const organizedVttGroup = vttPlaylists.length ? organizeVttPlaylists(vttPlaylists, sidxMapping) : null;\n    const formattedPlaylists = videoPlaylists.concat(flattenMediaGroupPlaylists(organizedAudioGroup), flattenMediaGroupPlaylists(organizedVttGroup));\n    const playlistTimelineStarts = formattedPlaylists.map(({\n      timelineStarts\n    }) => timelineStarts);\n    manifest.timelineStarts = getUniqueTimelineStarts(playlistTimelineStarts);\n    addMediaSequenceValues(formattedPlaylists, manifest.timelineStarts);\n    if (organizedAudioGroup) {\n      manifest.mediaGroups.AUDIO.audio = organizedAudioGroup;\n    }\n    if (organizedVttGroup) {\n      manifest.mediaGroups.SUBTITLES.subs = organizedVttGroup;\n    }\n    if (captions.length) {\n      manifest.mediaGroups['CLOSED-CAPTIONS'].cc = organizeCaptionServices(captions);\n    }\n    if (previousManifest) {\n      return positionManifestOnTimeline({\n        oldManifest: previousManifest,\n        newManifest: manifest\n      });\n    }\n    return manifest;\n  };\n\n  /**\n   * Calculates the R (repetition) value for a live stream (for the final segment\n   * in a manifest where the r value is negative 1)\n   *\n   * @param {Object} attributes\n   *        Object containing all inherited attributes from parent elements with attribute\n   *        names as keys\n   * @param {number} time\n   *        current time (typically the total time up until the final segment)\n   * @param {number} duration\n   *        duration property for the given <S />\n   *\n   * @return {number}\n   *        R value to reach the end of the given period\n   */\n  const getLiveRValue = (attributes, time, duration) => {\n    const {\n      NOW,\n      clientOffset,\n      availabilityStartTime,\n      timescale = 1,\n      periodStart = 0,\n      minimumUpdatePeriod = 0\n    } = attributes;\n    const now = (NOW + clientOffset) / 1000;\n    const periodStartWC = availabilityStartTime + periodStart;\n    const periodEndWC = now + minimumUpdatePeriod;\n    const periodDuration = periodEndWC - periodStartWC;\n    return Math.ceil((periodDuration * timescale - time) / duration);\n  };\n  /**\n   * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n   * timing and duration\n   *\n   * @param {Object} attributes\n   *        Object containing all inherited attributes from parent elements with attribute\n   *        names as keys\n   * @param {Object[]} segmentTimeline\n   *        List of objects representing the attributes of each S element contained within\n   *\n   * @return {{number: number, duration: number, time: number, timeline: number}[]}\n   *         List of Objects with segment timing and duration info\n   */\n\n  const parseByTimeline = (attributes, segmentTimeline) => {\n    const {\n      type,\n      minimumUpdatePeriod = 0,\n      media = '',\n      sourceDuration,\n      timescale = 1,\n      startNumber = 1,\n      periodStart: timeline\n    } = attributes;\n    const segments = [];\n    let time = -1;\n    for (let sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n      const S = segmentTimeline[sIndex];\n      const duration = S.d;\n      const repeat = S.r || 0;\n      const segmentTime = S.t || 0;\n      if (time < 0) {\n        // first segment\n        time = segmentTime;\n      }\n      if (segmentTime && segmentTime > time) {\n        // discontinuity\n        // TODO: How to handle this type of discontinuity\n        // timeline++ here would treat it like HLS discontuity and content would\n        // get appended without gap\n        // E.G.\n        //  <S t=\"0\" d=\"1\" />\n        //  <S d=\"1\" />\n        //  <S d=\"1\" />\n        //  <S t=\"5\" d=\"1\" />\n        // would have $Time$ values of [0, 1, 2, 5]\n        // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n        // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n        // does the value of sourceDuration consider this when calculating arbitrary\n        // negative @r repeat value?\n        // E.G. Same elements as above with this added at the end\n        //  <S d=\"1\" r=\"-1\" />\n        //  with a sourceDuration of 10\n        // Would the 2 gaps be included in the time duration calculations resulting in\n        // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n        // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n        time = segmentTime;\n      }\n      let count;\n      if (repeat < 0) {\n        const nextS = sIndex + 1;\n        if (nextS === segmentTimeline.length) {\n          // last segment\n          if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n            count = getLiveRValue(attributes, time, duration);\n          } else {\n            // TODO: This may be incorrect depending on conclusion of TODO above\n            count = (sourceDuration * timescale - time) / duration;\n          }\n        } else {\n          count = (segmentTimeline[nextS].t - time) / duration;\n        }\n      } else {\n        count = repeat + 1;\n      }\n      const end = startNumber + segments.length + count;\n      let number = startNumber + segments.length;\n      while (number < end) {\n        segments.push({\n          number,\n          duration: duration / timescale,\n          time,\n          timeline\n        });\n        time += duration;\n        number++;\n      }\n    }\n    return segments;\n  };\n  const identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n  /**\n   * Replaces template identifiers with corresponding values. To be used as the callback\n   * for String.prototype.replace\n   *\n   * @name replaceCallback\n   * @function\n   * @param {string} match\n   *        Entire match of identifier\n   * @param {string} identifier\n   *        Name of matched identifier\n   * @param {string} format\n   *        Format tag string. Its presence indicates that padding is expected\n   * @param {string} width\n   *        Desired length of the replaced value. Values less than this width shall be left\n   *        zero padded\n   * @return {string}\n   *         Replacement for the matched identifier\n   */\n\n  /**\n   * Returns a function to be used as a callback for String.prototype.replace to replace\n   * template identifiers\n   *\n   * @param {Obect} values\n   *        Object containing values that shall be used to replace known identifiers\n   * @param {number} values.RepresentationID\n   *        Value of the Representation@id attribute\n   * @param {number} values.Number\n   *        Number of the corresponding segment\n   * @param {number} values.Bandwidth\n   *        Value of the Representation@bandwidth attribute.\n   * @param {number} values.Time\n   *        Timestamp value of the corresponding segment\n   * @return {replaceCallback}\n   *         Callback to be used with String.prototype.replace to replace identifiers\n   */\n\n  const identifierReplacement = values => (match, identifier, format, width) => {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n    const value = '' + values[identifier];\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n    if (value.length >= width) {\n      return value;\n    }\n    return `${new Array(width - value.length + 1).join('0')}${value}`;\n  };\n  /**\n   * Constructs a segment url from a template string\n   *\n   * @param {string} url\n   *        Template string to construct url from\n   * @param {Obect} values\n   *        Object containing values that shall be used to replace known identifiers\n   * @param {number} values.RepresentationID\n   *        Value of the Representation@id attribute\n   * @param {number} values.Number\n   *        Number of the corresponding segment\n   * @param {number} values.Bandwidth\n   *        Value of the Representation@bandwidth attribute.\n   * @param {number} values.Time\n   *        Timestamp value of the corresponding segment\n   * @return {string}\n   *         Segment url with identifiers replaced\n   */\n\n  const constructTemplateUrl = (url, values) => url.replace(identifierPattern, identifierReplacement(values));\n  /**\n   * Generates a list of objects containing timing and duration information about each\n   * segment needed to generate segment uris and the complete segment object\n   *\n   * @param {Object} attributes\n   *        Object containing all inherited attributes from parent elements with attribute\n   *        names as keys\n   * @param {Object[]|undefined} segmentTimeline\n   *        List of objects representing the attributes of each S element contained within\n   *        the SegmentTimeline element\n   * @return {{number: number, duration: number, time: number, timeline: number}[]}\n   *         List of Objects with segment timing and duration info\n   */\n\n  const parseTemplateInfo = (attributes, segmentTimeline) => {\n    if (!attributes.duration && !segmentTimeline) {\n      // if neither @duration or SegmentTimeline are present, then there shall be exactly\n      // one media segment\n      return [{\n        number: attributes.startNumber || 1,\n        duration: attributes.sourceDuration,\n        time: 0,\n        timeline: attributes.periodStart\n      }];\n    }\n    if (attributes.duration) {\n      return parseByDuration(attributes);\n    }\n    return parseByTimeline(attributes, segmentTimeline);\n  };\n  /**\n   * Generates a list of segments using information provided by the SegmentTemplate element\n   *\n   * @param {Object} attributes\n   *        Object containing all inherited attributes from parent elements with attribute\n   *        names as keys\n   * @param {Object[]|undefined} segmentTimeline\n   *        List of objects representing the attributes of each S element contained within\n   *        the SegmentTimeline element\n   * @return {Object[]}\n   *         List of segment objects\n   */\n\n  const segmentsFromTemplate = (attributes, segmentTimeline) => {\n    const templateValues = {\n      RepresentationID: attributes.id,\n      Bandwidth: attributes.bandwidth || 0\n    };\n    const {\n      initialization = {\n        sourceURL: '',\n        range: ''\n      }\n    } = attributes;\n    const mapSegment = urlTypeToSegment({\n      baseUrl: attributes.baseUrl,\n      source: constructTemplateUrl(initialization.sourceURL, templateValues),\n      range: initialization.range\n    });\n    const segments = parseTemplateInfo(attributes, segmentTimeline);\n    return segments.map(segment => {\n      templateValues.Number = segment.number;\n      templateValues.Time = segment.time;\n      const uri = constructTemplateUrl(attributes.media || '', templateValues); // See DASH spec section 5.3.9.2.2\n      // - if timescale isn't present on any level, default to 1.\n\n      const timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n      const presentationTimeOffset = attributes.presentationTimeOffset || 0;\n      const presentationTime =\n      // Even if the @t attribute is not specified for the segment, segment.time is\n      // calculated in mpd-parser prior to this, so it's assumed to be available.\n      attributes.periodStart + (segment.time - presentationTimeOffset) / timescale;\n      const map = {\n        uri,\n        timeline: segment.timeline,\n        duration: segment.duration,\n        resolvedUri: resolveUrl$1(attributes.baseUrl || '', uri),\n        map: mapSegment,\n        number: segment.number,\n        presentationTime\n      };\n      return map;\n    });\n  };\n\n  /**\n   * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n   * to an object that matches the output of a segment in videojs/mpd-parser\n   *\n   * @param {Object} attributes\n   *   Object containing all inherited attributes from parent elements with attribute\n   *   names as keys\n   * @param {Object} segmentUrl\n   *   <SegmentURL> node to translate into a segment object\n   * @return {Object} translated segment object\n   */\n\n  const SegmentURLToSegmentObject = (attributes, segmentUrl) => {\n    const {\n      baseUrl,\n      initialization = {}\n    } = attributes;\n    const initSegment = urlTypeToSegment({\n      baseUrl,\n      source: initialization.sourceURL,\n      range: initialization.range\n    });\n    const segment = urlTypeToSegment({\n      baseUrl,\n      source: segmentUrl.media,\n      range: segmentUrl.mediaRange\n    });\n    segment.map = initSegment;\n    return segment;\n  };\n  /**\n   * Generates a list of segments using information provided by the SegmentList element\n   * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n   * node should be translated into segment.\n   *\n   * @param {Object} attributes\n   *   Object containing all inherited attributes from parent elements with attribute\n   *   names as keys\n   * @param {Object[]|undefined} segmentTimeline\n   *        List of objects representing the attributes of each S element contained within\n   *        the SegmentTimeline element\n   * @return {Object.<Array>} list of segments\n   */\n\n  const segmentsFromList = (attributes, segmentTimeline) => {\n    const {\n      duration,\n      segmentUrls = [],\n      periodStart\n    } = attributes; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n    // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n    if (!duration && !segmentTimeline || duration && segmentTimeline) {\n      throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n    }\n    const segmentUrlMap = segmentUrls.map(segmentUrlObject => SegmentURLToSegmentObject(attributes, segmentUrlObject));\n    let segmentTimeInfo;\n    if (duration) {\n      segmentTimeInfo = parseByDuration(attributes);\n    }\n    if (segmentTimeline) {\n      segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n    }\n    const segments = segmentTimeInfo.map((segmentTime, index) => {\n      if (segmentUrlMap[index]) {\n        const segment = segmentUrlMap[index]; // See DASH spec section 5.3.9.2.2\n        // - if timescale isn't present on any level, default to 1.\n\n        const timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n        const presentationTimeOffset = attributes.presentationTimeOffset || 0;\n        segment.timeline = segmentTime.timeline;\n        segment.duration = segmentTime.duration;\n        segment.number = segmentTime.number;\n        segment.presentationTime = periodStart + (segmentTime.time - presentationTimeOffset) / timescale;\n        return segment;\n      } // Since we're mapping we should get rid of any blank segments (in case\n      // the given SegmentTimeline is handling for more elements than we have\n      // SegmentURLs for).\n    }).filter(segment => segment);\n    return segments;\n  };\n  const generateSegments = ({\n    attributes,\n    segmentInfo\n  }) => {\n    let segmentAttributes;\n    let segmentsFn;\n    if (segmentInfo.template) {\n      segmentsFn = segmentsFromTemplate;\n      segmentAttributes = merge$1(attributes, segmentInfo.template);\n    } else if (segmentInfo.base) {\n      segmentsFn = segmentsFromBase;\n      segmentAttributes = merge$1(attributes, segmentInfo.base);\n    } else if (segmentInfo.list) {\n      segmentsFn = segmentsFromList;\n      segmentAttributes = merge$1(attributes, segmentInfo.list);\n    }\n    const segmentsInfo = {\n      attributes\n    };\n    if (!segmentsFn) {\n      return segmentsInfo;\n    }\n    const segments = segmentsFn(segmentAttributes, segmentInfo.segmentTimeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n    // must be in seconds. Since we've generated the segment list, we no longer need\n    // @duration to be in @timescale units, so we can convert it here.\n\n    if (segmentAttributes.duration) {\n      const {\n        duration,\n        timescale = 1\n      } = segmentAttributes;\n      segmentAttributes.duration = duration / timescale;\n    } else if (segments.length) {\n      // if there is no @duration attribute, use the largest segment duration as\n      // as target duration\n      segmentAttributes.duration = segments.reduce((max, segment) => {\n        return Math.max(max, Math.ceil(segment.duration));\n      }, 0);\n    } else {\n      segmentAttributes.duration = 0;\n    }\n    segmentsInfo.attributes = segmentAttributes;\n    segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n    if (segmentInfo.base && segmentAttributes.indexRange) {\n      segmentsInfo.sidx = segments[0];\n      segmentsInfo.segments = [];\n    }\n    return segmentsInfo;\n  };\n  const toPlaylists = representations => representations.map(generateSegments);\n  const findChildren = (element, name) => from(element.childNodes).filter(({\n    tagName\n  }) => tagName === name);\n  const getContent = element => element.textContent.trim();\n\n  /**\n   * Converts the provided string that may contain a division operation to a number.\n   *\n   * @param {string} value - the provided string value\n   *\n   * @return {number} the parsed string value\n   */\n  const parseDivisionValue = value => {\n    return parseFloat(value.split('/').reduce((prev, current) => prev / current));\n  };\n  const parseDuration = str => {\n    const SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n    const SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n    const SECONDS_IN_DAY = 24 * 60 * 60;\n    const SECONDS_IN_HOUR = 60 * 60;\n    const SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n    const durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n    const match = durationRegex.exec(str);\n    if (!match) {\n      return 0;\n    }\n    const [year, month, day, hour, minute, second] = match.slice(1);\n    return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n  };\n  const parseDate = str => {\n    // Date format without timezone according to ISO 8601\n    // YYY-MM-DDThh:mm:ss.ssssss\n    const dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n    // expressed by ending with 'Z'\n\n    if (dateRegex.test(str)) {\n      str += 'Z';\n    }\n    return Date.parse(str);\n  };\n  const parsers = {\n    /**\n     * Specifies the duration of the entire Media Presentation. Format is a duration string\n     * as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    mediaPresentationDuration(value) {\n      return parseDuration(value);\n    },\n    /**\n     * Specifies the Segment availability start time for all Segments referred to in this\n     * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n     * time. Format is a date string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The date as seconds from unix epoch\n     */\n    availabilityStartTime(value) {\n      return parseDate(value) / 1000;\n    },\n    /**\n     * Specifies the smallest period between potential changes to the MPD. Format is a\n     * duration string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    minimumUpdatePeriod(value) {\n      return parseDuration(value);\n    },\n    /**\n     * Specifies the suggested presentation delay. Format is a\n     * duration string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    suggestedPresentationDelay(value) {\n      return parseDuration(value);\n    },\n    /**\n     * specifices the type of mpd. Can be either \"static\" or \"dynamic\"\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     *\n     * @return {string}\n     *         The type as a string\n     */\n    type(value) {\n      return value;\n    },\n    /**\n     * Specifies the duration of the smallest time shifting buffer for any Representation\n     * in the MPD. Format is a duration string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    timeShiftBufferDepth(value) {\n      return parseDuration(value);\n    },\n    /**\n     * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n     * Format is a duration string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    start(value) {\n      return parseDuration(value);\n    },\n    /**\n     * Specifies the width of the visual presentation\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed width\n     */\n    width(value) {\n      return parseInt(value, 10);\n    },\n    /**\n     * Specifies the height of the visual presentation\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed height\n     */\n    height(value) {\n      return parseInt(value, 10);\n    },\n    /**\n     * Specifies the bitrate of the representation\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed bandwidth\n     */\n    bandwidth(value) {\n      return parseInt(value, 10);\n    },\n    /**\n     * Specifies the frame rate of the representation\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed frame rate\n     */\n    frameRate(value) {\n      return parseDivisionValue(value);\n    },\n    /**\n     * Specifies the number of the first Media Segment in this Representation in the Period\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed number\n     */\n    startNumber(value) {\n      return parseInt(value, 10);\n    },\n    /**\n     * Specifies the timescale in units per seconds\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed timescale\n     */\n    timescale(value) {\n      return parseInt(value, 10);\n    },\n    /**\n     * Specifies the presentationTimeOffset.\n     *\n     * @param {string} value\n     *        value of the attribute as a string\n     *\n     * @return {number}\n     *         The parsed presentationTimeOffset\n     */\n    presentationTimeOffset(value) {\n      return parseInt(value, 10);\n    },\n    /**\n     * Specifies the constant approximate Segment duration\n     * NOTE: The <Period> element also contains an @duration attribute. This duration\n     *       specifies the duration of the Period. This attribute is currently not\n     *       supported by the rest of the parser, however we still check for it to prevent\n     *       errors.\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed duration\n     */\n    duration(value) {\n      const parsedValue = parseInt(value, 10);\n      if (isNaN(parsedValue)) {\n        return parseDuration(value);\n      }\n      return parsedValue;\n    },\n    /**\n     * Specifies the Segment duration, in units of the value of the @timescale.\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed duration\n     */\n    d(value) {\n      return parseInt(value, 10);\n    },\n    /**\n     * Specifies the MPD start time, in @timescale units, the first Segment in the series\n     * starts relative to the beginning of the Period\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed time\n     */\n    t(value) {\n      return parseInt(value, 10);\n    },\n    /**\n     * Specifies the repeat count of the number of following contiguous Segments with the\n     * same duration expressed by the value of @d\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed number\n     */\n    r(value) {\n      return parseInt(value, 10);\n    },\n    /**\n     * Specifies the presentationTime.\n     *\n     * @param {string} value\n     *        value of the attribute as a string\n     *\n     * @return {number}\n     *         The parsed presentationTime\n     */\n    presentationTime(value) {\n      return parseInt(value, 10);\n    },\n    /**\n     * Default parser for all other attributes. Acts as a no-op and just returns the value\n     * as a string\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {string}\n     *         Unparsed value\n     */\n    DEFAULT(value) {\n      return value;\n    }\n  };\n  /**\n   * Gets all the attributes and values of the provided node, parses attributes with known\n   * types, and returns an object with attribute names mapped to values.\n   *\n   * @param {Node} el\n   *        The node to parse attributes from\n   * @return {Object}\n   *         Object with all attributes of el parsed\n   */\n\n  const parseAttributes = el => {\n    if (!(el && el.attributes)) {\n      return {};\n    }\n    return from(el.attributes).reduce((a, e) => {\n      const parseFn = parsers[e.name] || parsers.DEFAULT;\n      a[e.name] = parseFn(e.value);\n      return a;\n    }, {});\n  };\n  const keySystemsMap = {\n    'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n    'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n    'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n    'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime',\n    // ISO_IEC 23009-1_2022 5.8.5.2.2 The mp4 Protection Scheme\n    'urn:mpeg:dash:mp4protection:2011': 'mp4protection'\n  };\n  /**\n   * Builds a list of urls that is the product of the reference urls and BaseURL values\n   *\n   * @param {Object[]} references\n   *        List of objects containing the reference URL as well as its attributes\n   * @param {Node[]} baseUrlElements\n   *        List of BaseURL nodes from the mpd\n   * @return {Object[]}\n   *         List of objects with resolved urls and attributes\n   */\n\n  const buildBaseUrls = (references, baseUrlElements) => {\n    if (!baseUrlElements.length) {\n      return references;\n    }\n    return flatten(references.map(function (reference) {\n      return baseUrlElements.map(function (baseUrlElement) {\n        const initialBaseUrl = getContent(baseUrlElement);\n        const resolvedBaseUrl = resolveUrl$1(reference.baseUrl, initialBaseUrl);\n        const finalBaseUrl = merge$1(parseAttributes(baseUrlElement), {\n          baseUrl: resolvedBaseUrl\n        }); // If the URL is resolved, we want to get the serviceLocation from the reference\n        // assuming there is no serviceLocation on the initialBaseUrl\n\n        if (resolvedBaseUrl !== initialBaseUrl && !finalBaseUrl.serviceLocation && reference.serviceLocation) {\n          finalBaseUrl.serviceLocation = reference.serviceLocation;\n        }\n        return finalBaseUrl;\n      });\n    }));\n  };\n  /**\n   * Contains all Segment information for its containing AdaptationSet\n   *\n   * @typedef {Object} SegmentInformation\n   * @property {Object|undefined} template\n   *           Contains the attributes for the SegmentTemplate node\n   * @property {Object[]|undefined} segmentTimeline\n   *           Contains a list of atrributes for each S node within the SegmentTimeline node\n   * @property {Object|undefined} list\n   *           Contains the attributes for the SegmentList node\n   * @property {Object|undefined} base\n   *           Contains the attributes for the SegmentBase node\n   */\n\n  /**\n   * Returns all available Segment information contained within the AdaptationSet node\n   *\n   * @param {Node} adaptationSet\n   *        The AdaptationSet node to get Segment information from\n   * @return {SegmentInformation}\n   *         The Segment information contained within the provided AdaptationSet\n   */\n\n  const getSegmentInformation = adaptationSet => {\n    const segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n    const segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n    const segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(s => merge$1({\n      tag: 'SegmentURL'\n    }, parseAttributes(s)));\n    const segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n    const segmentTimelineParentNode = segmentList || segmentTemplate;\n    const segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n    const segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n    const segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n    // @initialization and an <Initialization> node.  @initialization can be templated,\n    // while the node can have a url and range specified.  If the <SegmentTemplate> has\n    // both @initialization and an <Initialization> subelement we opt to override with\n    // the node, as this interaction is not defined in the spec.\n\n    const template = segmentTemplate && parseAttributes(segmentTemplate);\n    if (template && segmentInitialization) {\n      template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n    } else if (template && template.initialization) {\n      // If it is @initialization we convert it to an object since this is the format that\n      // later functions will rely on for the initialization segment.  This is only valid\n      // for <SegmentTemplate>\n      template.initialization = {\n        sourceURL: template.initialization\n      };\n    }\n    const segmentInfo = {\n      template,\n      segmentTimeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(s => parseAttributes(s)),\n      list: segmentList && merge$1(parseAttributes(segmentList), {\n        segmentUrls,\n        initialization: parseAttributes(segmentInitialization)\n      }),\n      base: segmentBase && merge$1(parseAttributes(segmentBase), {\n        initialization: parseAttributes(segmentInitialization)\n      })\n    };\n    Object.keys(segmentInfo).forEach(key => {\n      if (!segmentInfo[key]) {\n        delete segmentInfo[key];\n      }\n    });\n    return segmentInfo;\n  };\n  /**\n   * Contains Segment information and attributes needed to construct a Playlist object\n   * from a Representation\n   *\n   * @typedef {Object} RepresentationInformation\n   * @property {SegmentInformation} segmentInfo\n   *           Segment information for this Representation\n   * @property {Object} attributes\n   *           Inherited attributes for this Representation\n   */\n\n  /**\n   * Maps a Representation node to an object containing Segment information and attributes\n   *\n   * @name inheritBaseUrlsCallback\n   * @function\n   * @param {Node} representation\n   *        Representation node from the mpd\n   * @return {RepresentationInformation}\n   *         Representation information needed to construct a Playlist object\n   */\n\n  /**\n   * Returns a callback for Array.prototype.map for mapping Representation nodes to\n   * Segment information and attributes using inherited BaseURL nodes.\n   *\n   * @param {Object} adaptationSetAttributes\n   *        Contains attributes inherited by the AdaptationSet\n   * @param {Object[]} adaptationSetBaseUrls\n   *        List of objects containing resolved base URLs and attributes\n   *        inherited by the AdaptationSet\n   * @param {SegmentInformation} adaptationSetSegmentInfo\n   *        Contains Segment information for the AdaptationSet\n   * @return {inheritBaseUrlsCallback}\n   *         Callback map function\n   */\n\n  const inheritBaseUrls = (adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) => representation => {\n    const repBaseUrlElements = findChildren(representation, 'BaseURL');\n    const repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    const attributes = merge$1(adaptationSetAttributes, parseAttributes(representation));\n    const representationSegmentInfo = getSegmentInformation(representation);\n    return repBaseUrls.map(baseUrl => {\n      return {\n        segmentInfo: merge$1(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge$1(attributes, baseUrl)\n      };\n    });\n  };\n  /**\n   * Tranforms a series of content protection nodes to\n   * an object containing pssh data by key system\n   *\n   * @param {Node[]} contentProtectionNodes\n   *        Content protection nodes\n   * @return {Object}\n   *        Object containing pssh data by key system\n   */\n\n  const generateKeySystemInformation = contentProtectionNodes => {\n    return contentProtectionNodes.reduce((acc, node) => {\n      const attributes = parseAttributes(node); // Although it could be argued that according to the UUID RFC spec the UUID string (a-f chars) should be generated\n      // as a lowercase string it also mentions it should be treated as case-insensitive on input. Since the key system\n      // UUIDs in the keySystemsMap are hardcoded as lowercase in the codebase there isn't any reason not to do\n      // .toLowerCase() on the input UUID string from the manifest (at least I could not think of one).\n\n      if (attributes.schemeIdUri) {\n        attributes.schemeIdUri = attributes.schemeIdUri.toLowerCase();\n      }\n      const keySystem = keySystemsMap[attributes.schemeIdUri];\n      if (keySystem) {\n        acc[keySystem] = {\n          attributes\n        };\n        const psshNode = findChildren(node, 'cenc:pssh')[0];\n        if (psshNode) {\n          const pssh = getContent(psshNode);\n          acc[keySystem].pssh = pssh && decodeB64ToUint8Array(pssh);\n        }\n      }\n      return acc;\n    }, {});\n  }; // defined in ANSI_SCTE 214-1 2016\n\n  const parseCaptionServiceMetadata = service => {\n    // 608 captions\n    if (service.schemeIdUri === 'urn:scte:dash:cc:cea-608:2015') {\n      const values = typeof service.value !== 'string' ? [] : service.value.split(';');\n      return values.map(value => {\n        let channel;\n        let language; // default language to value\n\n        language = value;\n        if (/^CC\\d=/.test(value)) {\n          [channel, language] = value.split('=');\n        } else if (/^CC\\d$/.test(value)) {\n          channel = value;\n        }\n        return {\n          channel,\n          language\n        };\n      });\n    } else if (service.schemeIdUri === 'urn:scte:dash:cc:cea-708:2015') {\n      const values = typeof service.value !== 'string' ? [] : service.value.split(';');\n      return values.map(value => {\n        const flags = {\n          // service or channel number 1-63\n          'channel': undefined,\n          // language is a 3ALPHA per ISO 639.2/B\n          // field is required\n          'language': undefined,\n          // BIT 1/0 or ?\n          // default value is 1, meaning 16:9 aspect ratio, 0 is 4:3, ? is unknown\n          'aspectRatio': 1,\n          // BIT 1/0\n          // easy reader flag indicated the text is tailed to the needs of beginning readers\n          // default 0, or off\n          'easyReader': 0,\n          // BIT 1/0\n          // If 3d metadata is present (CEA-708.1) then 1\n          // default 0\n          '3D': 0\n        };\n        if (/=/.test(value)) {\n          const [channel, opts = ''] = value.split('=');\n          flags.channel = channel;\n          flags.language = value;\n          opts.split(',').forEach(opt => {\n            const [name, val] = opt.split(':');\n            if (name === 'lang') {\n              flags.language = val; // er for easyReadery\n            } else if (name === 'er') {\n              flags.easyReader = Number(val); // war for wide aspect ratio\n            } else if (name === 'war') {\n              flags.aspectRatio = Number(val);\n            } else if (name === '3D') {\n              flags['3D'] = Number(val);\n            }\n          });\n        } else {\n          flags.language = value;\n        }\n        if (flags.channel) {\n          flags.channel = 'SERVICE' + flags.channel;\n        }\n        return flags;\n      });\n    }\n  };\n  /**\n   * A map callback that will parse all event stream data for a collection of periods\n   * DASH ISO_IEC_23009 5.10.2.2\n   * https://dashif-documents.azurewebsites.net/Events/master/event.html#mpd-event-timing\n   *\n   * @param {PeriodInformation} period object containing necessary period information\n   * @return a collection of parsed eventstream event objects\n   */\n\n  const toEventStream = period => {\n    // get and flatten all EventStreams tags and parse attributes and children\n    return flatten(findChildren(period.node, 'EventStream').map(eventStream => {\n      const eventStreamAttributes = parseAttributes(eventStream);\n      const schemeIdUri = eventStreamAttributes.schemeIdUri; // find all Events per EventStream tag and map to return objects\n\n      return findChildren(eventStream, 'Event').map(event => {\n        const eventAttributes = parseAttributes(event);\n        const presentationTime = eventAttributes.presentationTime || 0;\n        const timescale = eventStreamAttributes.timescale || 1;\n        const duration = eventAttributes.duration || 0;\n        const start = presentationTime / timescale + period.attributes.start;\n        return {\n          schemeIdUri,\n          value: eventStreamAttributes.value,\n          id: eventAttributes.id,\n          start,\n          end: start + duration / timescale,\n          messageData: getContent(event) || eventAttributes.messageData,\n          contentEncoding: eventStreamAttributes.contentEncoding,\n          presentationTimeOffset: eventStreamAttributes.presentationTimeOffset || 0\n        };\n      });\n    }));\n  };\n  /**\n   * Maps an AdaptationSet node to a list of Representation information objects\n   *\n   * @name toRepresentationsCallback\n   * @function\n   * @param {Node} adaptationSet\n   *        AdaptationSet node from the mpd\n   * @return {RepresentationInformation[]}\n   *         List of objects containing Representaion information\n   */\n\n  /**\n   * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n   * Representation information objects\n   *\n   * @param {Object} periodAttributes\n   *        Contains attributes inherited by the Period\n   * @param {Object[]} periodBaseUrls\n   *        Contains list of objects with resolved base urls and attributes\n   *        inherited by the Period\n   * @param {string[]} periodSegmentInfo\n   *        Contains Segment Information at the period level\n   * @return {toRepresentationsCallback}\n   *         Callback map function\n   */\n\n  const toRepresentations = (periodAttributes, periodBaseUrls, periodSegmentInfo) => adaptationSet => {\n    const adaptationSetAttributes = parseAttributes(adaptationSet);\n    const adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    const role = findChildren(adaptationSet, 'Role')[0];\n    const roleAttributes = {\n      role: parseAttributes(role)\n    };\n    let attrs = merge$1(periodAttributes, adaptationSetAttributes, roleAttributes);\n    const accessibility = findChildren(adaptationSet, 'Accessibility')[0];\n    const captionServices = parseCaptionServiceMetadata(parseAttributes(accessibility));\n    if (captionServices) {\n      attrs = merge$1(attrs, {\n        captionServices\n      });\n    }\n    const label = findChildren(adaptationSet, 'Label')[0];\n    if (label && label.childNodes.length) {\n      const labelVal = label.childNodes[0].nodeValue.trim();\n      attrs = merge$1(attrs, {\n        label: labelVal\n      });\n    }\n    const contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n    if (Object.keys(contentProtection).length) {\n      attrs = merge$1(attrs, {\n        contentProtection\n      });\n    }\n    const segmentInfo = getSegmentInformation(adaptationSet);\n    const representations = findChildren(adaptationSet, 'Representation');\n    const adaptationSetSegmentInfo = merge$1(periodSegmentInfo, segmentInfo);\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n  /**\n   * Contains all period information for mapping nodes onto adaptation sets.\n   *\n   * @typedef {Object} PeriodInformation\n   * @property {Node} period.node\n   *           Period node from the mpd\n   * @property {Object} period.attributes\n   *           Parsed period attributes from node plus any added\n   */\n\n  /**\n   * Maps a PeriodInformation object to a list of Representation information objects for all\n   * AdaptationSet nodes contained within the Period.\n   *\n   * @name toAdaptationSetsCallback\n   * @function\n   * @param {PeriodInformation} period\n   *        Period object containing necessary period information\n   * @param {number} periodStart\n   *        Start time of the Period within the mpd\n   * @return {RepresentationInformation[]}\n   *         List of objects containing Representaion information\n   */\n\n  /**\n   * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n   * Representation information objects\n   *\n   * @param {Object} mpdAttributes\n   *        Contains attributes inherited by the mpd\n    * @param {Object[]} mpdBaseUrls\n   *        Contains list of objects with resolved base urls and attributes\n   *        inherited by the mpd\n   * @return {toAdaptationSetsCallback}\n   *         Callback map function\n   */\n\n  const toAdaptationSets = (mpdAttributes, mpdBaseUrls) => (period, index) => {\n    const periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period.node, 'BaseURL'));\n    const periodAttributes = merge$1(mpdAttributes, {\n      periodStart: period.attributes.start\n    });\n    if (typeof period.attributes.duration === 'number') {\n      periodAttributes.periodDuration = period.attributes.duration;\n    }\n    const adaptationSets = findChildren(period.node, 'AdaptationSet');\n    const periodSegmentInfo = getSegmentInformation(period.node);\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n  /**\n   * Tranforms an array of content steering nodes into an object\n   * containing CDN content steering information from the MPD manifest.\n   *\n   * For more information on the DASH spec for Content Steering parsing, see:\n   * https://dashif.org/docs/DASH-IF-CTS-00XX-Content-Steering-Community-Review.pdf\n   *\n   * @param {Node[]} contentSteeringNodes\n   *        Content steering nodes\n   * @param {Function} eventHandler\n   *        The event handler passed into the parser options to handle warnings\n   * @return {Object}\n   *        Object containing content steering data\n   */\n\n  const generateContentSteeringInformation = (contentSteeringNodes, eventHandler) => {\n    // If there are more than one ContentSteering tags, throw an error\n    if (contentSteeringNodes.length > 1) {\n      eventHandler({\n        type: 'warn',\n        message: 'The MPD manifest should contain no more than one ContentSteering tag'\n      });\n    } // Return a null value if there are no ContentSteering tags\n\n    if (!contentSteeringNodes.length) {\n      return null;\n    }\n    const infoFromContentSteeringTag = merge$1({\n      serverURL: getContent(contentSteeringNodes[0])\n    }, parseAttributes(contentSteeringNodes[0])); // Converts `queryBeforeStart` to a boolean, as well as setting the default value\n    // to `false` if it doesn't exist\n\n    infoFromContentSteeringTag.queryBeforeStart = infoFromContentSteeringTag.queryBeforeStart === 'true';\n    return infoFromContentSteeringTag;\n  };\n  /**\n   * Gets Period@start property for a given period.\n   *\n   * @param {Object} options\n   *        Options object\n   * @param {Object} options.attributes\n   *        Period attributes\n   * @param {Object} [options.priorPeriodAttributes]\n   *        Prior period attributes (if prior period is available)\n   * @param {string} options.mpdType\n   *        The MPD@type these periods came from\n   * @return {number|null}\n   *         The period start, or null if it's an early available period or error\n   */\n\n  const getPeriodStart = ({\n    attributes,\n    priorPeriodAttributes,\n    mpdType\n  }) => {\n    // Summary of period start time calculation from DASH spec section 5.3.2.1\n    //\n    // A period's start is the first period's start + time elapsed after playing all\n    // prior periods to this one. Periods continue one after the other in time (without\n    // gaps) until the end of the presentation.\n    //\n    // The value of Period@start should be:\n    // 1. if Period@start is present: value of Period@start\n    // 2. if previous period exists and it has @duration: previous Period@start +\n    //    previous Period@duration\n    // 3. if this is first period and MPD@type is 'static': 0\n    // 4. in all other cases, consider the period an \"early available period\" (note: not\n    //    currently supported)\n    // (1)\n    if (typeof attributes.start === 'number') {\n      return attributes.start;\n    } // (2)\n\n    if (priorPeriodAttributes && typeof priorPeriodAttributes.start === 'number' && typeof priorPeriodAttributes.duration === 'number') {\n      return priorPeriodAttributes.start + priorPeriodAttributes.duration;\n    } // (3)\n\n    if (!priorPeriodAttributes && mpdType === 'static') {\n      return 0;\n    } // (4)\n    // There is currently no logic for calculating the Period@start value if there is\n    // no Period@start or prior Period@start and Period@duration available. This is not made\n    // explicit by the DASH interop guidelines or the DASH spec, however, since there's\n    // nothing about any other resolution strategies, it's implied. Thus, this case should\n    // be considered an early available period, or error, and null should suffice for both\n    // of those cases.\n\n    return null;\n  };\n  /**\n   * Traverses the mpd xml tree to generate a list of Representation information objects\n   * that have inherited attributes from parent nodes\n   *\n   * @param {Node} mpd\n   *        The root node of the mpd\n   * @param {Object} options\n   *        Available options for inheritAttributes\n   * @param {string} options.manifestUri\n   *        The uri source of the mpd\n   * @param {number} options.NOW\n   *        Current time per DASH IOP.  Default is current time in ms since epoch\n   * @param {number} options.clientOffset\n   *        Client time difference from NOW (in milliseconds)\n   * @return {RepresentationInformation[]}\n   *         List of objects containing Representation information\n   */\n\n  const inheritAttributes = (mpd, options = {}) => {\n    const {\n      manifestUri = '',\n      NOW = Date.now(),\n      clientOffset = 0,\n      // TODO: For now, we are expecting an eventHandler callback function\n      // to be passed into the mpd parser as an option.\n      // In the future, we should enable stream parsing by using the Stream class from vhs-utils.\n      // This will support new features including a standardized event handler.\n      // See the m3u8 parser for examples of how stream parsing is currently used for HLS parsing.\n      // https://github.com/videojs/vhs-utils/blob/88d6e10c631e57a5af02c5a62bc7376cd456b4f5/src/stream.js#L9\n      eventHandler = function () {}\n    } = options;\n    const periodNodes = findChildren(mpd, 'Period');\n    if (!periodNodes.length) {\n      throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n    }\n    const locations = findChildren(mpd, 'Location');\n    const mpdAttributes = parseAttributes(mpd);\n    const mpdBaseUrls = buildBaseUrls([{\n      baseUrl: manifestUri\n    }], findChildren(mpd, 'BaseURL'));\n    const contentSteeringNodes = findChildren(mpd, 'ContentSteering'); // See DASH spec section 5.3.1.2, Semantics of MPD element. Default type to 'static'.\n\n    mpdAttributes.type = mpdAttributes.type || 'static';\n    mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n    mpdAttributes.NOW = NOW;\n    mpdAttributes.clientOffset = clientOffset;\n    if (locations.length) {\n      mpdAttributes.locations = locations.map(getContent);\n    }\n    const periods = []; // Since toAdaptationSets acts on individual periods right now, the simplest approach to\n    // adding properties that require looking at prior periods is to parse attributes and add\n    // missing ones before toAdaptationSets is called. If more such properties are added, it\n    // may be better to refactor toAdaptationSets.\n\n    periodNodes.forEach((node, index) => {\n      const attributes = parseAttributes(node); // Use the last modified prior period, as it may contain added information necessary\n      // for this period.\n\n      const priorPeriod = periods[index - 1];\n      attributes.start = getPeriodStart({\n        attributes,\n        priorPeriodAttributes: priorPeriod ? priorPeriod.attributes : null,\n        mpdType: mpdAttributes.type\n      });\n      periods.push({\n        node,\n        attributes\n      });\n    });\n    return {\n      locations: mpdAttributes.locations,\n      contentSteeringInfo: generateContentSteeringInformation(contentSteeringNodes, eventHandler),\n      // TODO: There are occurences where this `representationInfo` array contains undesired\n      // duplicates. This generally occurs when there are multiple BaseURL nodes that are\n      // direct children of the MPD node. When we attempt to resolve URLs from a combination of the\n      // parent BaseURL and a child BaseURL, and the value does not resolve,\n      // we end up returning the child BaseURL multiple times.\n      // We need to determine a way to remove these duplicates in a safe way.\n      // See: https://github.com/videojs/mpd-parser/pull/17#discussion_r162750527\n      representationInfo: flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls))),\n      eventStream: flatten(periods.map(toEventStream))\n    };\n  };\n  const stringToMpdXml = manifestString => {\n    if (manifestString === '') {\n      throw new Error(errors.DASH_EMPTY_MANIFEST);\n    }\n    const parser = new DOMParser();\n    let xml;\n    let mpd;\n    try {\n      xml = parser.parseFromString(manifestString, 'application/xml');\n      mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n    } catch (e) {// ie 11 throws on invalid xml\n    }\n    if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n      throw new Error(errors.DASH_INVALID_XML);\n    }\n    return mpd;\n  };\n\n  /**\n   * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n   *\n   * @param {string} mpd\n   *        XML string of the MPD manifest\n   * @return {Object|null}\n   *         Attributes of UTCTiming node specified in the manifest. Null if none found\n   */\n\n  const parseUTCTimingScheme = mpd => {\n    const UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n    if (!UTCTimingNode) {\n      return null;\n    }\n    const attributes = parseAttributes(UTCTimingNode);\n    switch (attributes.schemeIdUri) {\n      case 'urn:mpeg:dash:utc:http-head:2014':\n      case 'urn:mpeg:dash:utc:http-head:2012':\n        attributes.method = 'HEAD';\n        break;\n      case 'urn:mpeg:dash:utc:http-xsdate:2014':\n      case 'urn:mpeg:dash:utc:http-iso:2014':\n      case 'urn:mpeg:dash:utc:http-xsdate:2012':\n      case 'urn:mpeg:dash:utc:http-iso:2012':\n        attributes.method = 'GET';\n        break;\n      case 'urn:mpeg:dash:utc:direct:2014':\n      case 'urn:mpeg:dash:utc:direct:2012':\n        attributes.method = 'DIRECT';\n        attributes.value = Date.parse(attributes.value);\n        break;\n      case 'urn:mpeg:dash:utc:http-ntp:2014':\n      case 'urn:mpeg:dash:utc:ntp:2014':\n      case 'urn:mpeg:dash:utc:sntp:2014':\n      default:\n        throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n    }\n    return attributes;\n  };\n  /*\n   * Given a DASH manifest string and options, parses the DASH manifest into an object in the\n   * form outputed by m3u8-parser and accepted by videojs/http-streaming.\n   *\n   * For live DASH manifests, if `previousManifest` is provided in options, then the newly\n   * parsed DASH manifest will have its media sequence and discontinuity sequence values\n   * updated to reflect its position relative to the prior manifest.\n   *\n   * @param {string} manifestString - the DASH manifest as a string\n   * @param {options} [options] - any options\n   *\n   * @return {Object} the manifest object\n   */\n\n  const parse = (manifestString, options = {}) => {\n    const parsedManifestInfo = inheritAttributes(stringToMpdXml(manifestString), options);\n    const playlists = toPlaylists(parsedManifestInfo.representationInfo);\n    return toM3u8({\n      dashPlaylists: playlists,\n      locations: parsedManifestInfo.locations,\n      contentSteering: parsedManifestInfo.contentSteeringInfo,\n      sidxMapping: options.sidxMapping,\n      previousManifest: options.previousManifest,\n      eventStream: parsedManifestInfo.eventStream\n    });\n  };\n  /**\n   * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n   *\n   * @param {string} manifestString\n   *        XML string of the MPD manifest\n   * @return {Object|null}\n   *         Attributes of UTCTiming node specified in the manifest. Null if none found\n   */\n\n  const parseUTCTiming = manifestString => parseUTCTimingScheme(stringToMpdXml(manifestString));\n\n  var MAX_UINT32 = Math.pow(2, 32);\n  var getUint64$1 = function (uint8) {\n    var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n    var value;\n    if (dv.getBigUint64) {\n      value = dv.getBigUint64(0);\n      if (value < Number.MAX_SAFE_INTEGER) {\n        return Number(value);\n      }\n      return value;\n    }\n    return dv.getUint32(0) * MAX_UINT32 + dv.getUint32(4);\n  };\n  var numbers = {\n    getUint64: getUint64$1,\n    MAX_UINT32: MAX_UINT32\n  };\n\n  var getUint64 = numbers.getUint64;\n  var parseSidx = function (data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        references: [],\n        referenceId: view.getUint32(4),\n        timescale: view.getUint32(8)\n      },\n      i = 12;\n    if (result.version === 0) {\n      result.earliestPresentationTime = view.getUint32(i);\n      result.firstOffset = view.getUint32(i + 4);\n      i += 8;\n    } else {\n      // read 64 bits\n      result.earliestPresentationTime = getUint64(data.subarray(i));\n      result.firstOffset = getUint64(data.subarray(i + 8));\n      i += 16;\n    }\n    i += 2; // reserved\n\n    var referenceCount = view.getUint16(i);\n    i += 2; // start of references\n\n    for (; referenceCount > 0; i += 12, referenceCount--) {\n      result.references.push({\n        referenceType: (data[i] & 0x80) >>> 7,\n        referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n        subsegmentDuration: view.getUint32(i + 4),\n        startsWithSap: !!(data[i + 8] & 0x80),\n        sapType: (data[i + 8] & 0x70) >>> 4,\n        sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n      });\n    }\n    return result;\n  };\n  var parseSidx_1 = parseSidx;\n\n  var ID3 = toUint8([0x49, 0x44, 0x33]);\n  var getId3Size = function getId3Size(bytes, offset) {\n    if (offset === void 0) {\n      offset = 0;\n    }\n    bytes = toUint8(bytes);\n    var flags = bytes[offset + 5];\n    var returnSize = bytes[offset + 6] << 21 | bytes[offset + 7] << 14 | bytes[offset + 8] << 7 | bytes[offset + 9];\n    var footerPresent = (flags & 16) >> 4;\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n    return returnSize + 10;\n  };\n  var getId3Offset = function getId3Offset(bytes, offset) {\n    if (offset === void 0) {\n      offset = 0;\n    }\n    bytes = toUint8(bytes);\n    if (bytes.length - offset < 10 || !bytesMatch(bytes, ID3, {\n      offset: offset\n    })) {\n      return offset;\n    }\n    offset += getId3Size(bytes, offset); // recursive check for id3 tags as some files\n    // have multiple ID3 tag sections even though\n    // they should not.\n\n    return getId3Offset(bytes, offset);\n  };\n\n  var normalizePath$1 = function normalizePath(path) {\n    if (typeof path === 'string') {\n      return stringToBytes(path);\n    }\n    if (typeof path === 'number') {\n      return path;\n    }\n    return path;\n  };\n  var normalizePaths$1 = function normalizePaths(paths) {\n    if (!Array.isArray(paths)) {\n      return [normalizePath$1(paths)];\n    }\n    return paths.map(function (p) {\n      return normalizePath$1(p);\n    });\n  };\n  /**\n   * find any number of boxes by name given a path to it in an iso bmff\n   * such as mp4.\n   *\n   * @param {TypedArray} bytes\n   *        bytes for the iso bmff to search for boxes in\n   *\n   * @param {Uint8Array[]|string[]|string|Uint8Array} name\n   *        An array of paths or a single path representing the name\n   *        of boxes to search through in bytes. Paths may be\n   *        uint8 (character codes) or strings.\n   *\n   * @param {boolean} [complete=false]\n   *        Should we search only for complete boxes on the final path.\n   *        This is very useful when you do not want to get back partial boxes\n   *        in the case of streaming files.\n   *\n   * @return {Uint8Array[]}\n   *         An array of the end paths that we found.\n   */\n\n  var findBox = function findBox(bytes, paths, complete) {\n    if (complete === void 0) {\n      complete = false;\n    }\n    paths = normalizePaths$1(paths);\n    bytes = toUint8(bytes);\n    var results = [];\n    if (!paths.length) {\n      // short-circuit the search for empty paths\n      return results;\n    }\n    var i = 0;\n    while (i < bytes.length) {\n      var size = (bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]) >>> 0;\n      var type = bytes.subarray(i + 4, i + 8); // invalid box format.\n\n      if (size === 0) {\n        break;\n      }\n      var end = i + size;\n      if (end > bytes.length) {\n        // this box is bigger than the number of bytes we have\n        // and complete is set, we cannot find any more boxes.\n        if (complete) {\n          break;\n        }\n        end = bytes.length;\n      }\n      var data = bytes.subarray(i + 8, end);\n      if (bytesMatch(type, paths[0])) {\n        if (paths.length === 1) {\n          // this is the end of the path and we've found the box we were\n          // looking for\n          results.push(data);\n        } else {\n          // recursively search for the next box along the path\n          results.push.apply(results, findBox(data, paths.slice(1), complete));\n        }\n      }\n      i = end;\n    } // we've finished searching all of bytes\n\n    return results;\n  };\n\n  // https://matroska-org.github.io/libebml/specs.html\n  // https://www.matroska.org/technical/elements.html\n  // https://www.webmproject.org/docs/container/\n\n  var EBML_TAGS = {\n    EBML: toUint8([0x1A, 0x45, 0xDF, 0xA3]),\n    DocType: toUint8([0x42, 0x82]),\n    Segment: toUint8([0x18, 0x53, 0x80, 0x67]),\n    SegmentInfo: toUint8([0x15, 0x49, 0xA9, 0x66]),\n    Tracks: toUint8([0x16, 0x54, 0xAE, 0x6B]),\n    Track: toUint8([0xAE]),\n    TrackNumber: toUint8([0xd7]),\n    DefaultDuration: toUint8([0x23, 0xe3, 0x83]),\n    TrackEntry: toUint8([0xAE]),\n    TrackType: toUint8([0x83]),\n    FlagDefault: toUint8([0x88]),\n    CodecID: toUint8([0x86]),\n    CodecPrivate: toUint8([0x63, 0xA2]),\n    VideoTrack: toUint8([0xe0]),\n    AudioTrack: toUint8([0xe1]),\n    // Not used yet, but will be used for live webm/mkv\n    // see https://www.matroska.org/technical/basics.html#block-structure\n    // see https://www.matroska.org/technical/basics.html#simpleblock-structure\n    Cluster: toUint8([0x1F, 0x43, 0xB6, 0x75]),\n    Timestamp: toUint8([0xE7]),\n    TimestampScale: toUint8([0x2A, 0xD7, 0xB1]),\n    BlockGroup: toUint8([0xA0]),\n    BlockDuration: toUint8([0x9B]),\n    Block: toUint8([0xA1]),\n    SimpleBlock: toUint8([0xA3])\n  };\n  /**\n   * This is a simple table to determine the length\n   * of things in ebml. The length is one based (starts at 1,\n   * rather than zero) and for every zero bit before a one bit\n   * we add one to length. We also need this table because in some\n   * case we have to xor all the length bits from another value.\n   */\n\n  var LENGTH_TABLE = [128, 64, 32, 16, 8, 4, 2, 1];\n  var getLength = function getLength(byte) {\n    var len = 1;\n    for (var i = 0; i < LENGTH_TABLE.length; i++) {\n      if (byte & LENGTH_TABLE[i]) {\n        break;\n      }\n      len++;\n    }\n    return len;\n  }; // length in ebml is stored in the first 4 to 8 bits\n  // of the first byte. 4 for the id length and 8 for the\n  // data size length. Length is measured by converting the number to binary\n  // then 1 + the number of zeros before a 1 is encountered starting\n  // from the left.\n\n  var getvint = function getvint(bytes, offset, removeLength, signed) {\n    if (removeLength === void 0) {\n      removeLength = true;\n    }\n    if (signed === void 0) {\n      signed = false;\n    }\n    var length = getLength(bytes[offset]);\n    var valueBytes = bytes.subarray(offset, offset + length); // NOTE that we do **not** subarray here because we need to copy these bytes\n    // as they will be modified below to remove the dataSizeLen bits and we do not\n    // want to modify the original data. normally we could just call slice on\n    // uint8array but ie 11 does not support that...\n\n    if (removeLength) {\n      valueBytes = Array.prototype.slice.call(bytes, offset, offset + length);\n      valueBytes[0] ^= LENGTH_TABLE[length - 1];\n    }\n    return {\n      length: length,\n      value: bytesToNumber(valueBytes, {\n        signed: signed\n      }),\n      bytes: valueBytes\n    };\n  };\n  var normalizePath = function normalizePath(path) {\n    if (typeof path === 'string') {\n      return path.match(/.{1,2}/g).map(function (p) {\n        return normalizePath(p);\n      });\n    }\n    if (typeof path === 'number') {\n      return numberToBytes(path);\n    }\n    return path;\n  };\n  var normalizePaths = function normalizePaths(paths) {\n    if (!Array.isArray(paths)) {\n      return [normalizePath(paths)];\n    }\n    return paths.map(function (p) {\n      return normalizePath(p);\n    });\n  };\n  var getInfinityDataSize = function getInfinityDataSize(id, bytes, offset) {\n    if (offset >= bytes.length) {\n      return bytes.length;\n    }\n    var innerid = getvint(bytes, offset, false);\n    if (bytesMatch(id.bytes, innerid.bytes)) {\n      return offset;\n    }\n    var dataHeader = getvint(bytes, offset + innerid.length);\n    return getInfinityDataSize(id, bytes, offset + dataHeader.length + dataHeader.value + innerid.length);\n  };\n  /**\n   * Notes on the EBLM format.\n   *\n   * EBLM uses \"vints\" tags. Every vint tag contains\n   * two parts\n   *\n   * 1. The length from the first byte. You get this by\n   *    converting the byte to binary and counting the zeros\n   *    before a 1. Then you add 1 to that. Examples\n   *    00011111 = length 4 because there are 3 zeros before a 1.\n   *    00100000 = length 3 because there are 2 zeros before a 1.\n   *    00000011 = length 7 because there are 6 zeros before a 1.\n   *\n   * 2. The bits used for length are removed from the first byte\n   *    Then all the bytes are merged into a value. NOTE: this\n   *    is not the case for id ebml tags as there id includes\n   *    length bits.\n   *\n   */\n\n  var findEbml = function findEbml(bytes, paths) {\n    paths = normalizePaths(paths);\n    bytes = toUint8(bytes);\n    var results = [];\n    if (!paths.length) {\n      return results;\n    }\n    var i = 0;\n    while (i < bytes.length) {\n      var id = getvint(bytes, i, false);\n      var dataHeader = getvint(bytes, i + id.length);\n      var dataStart = i + id.length + dataHeader.length; // dataSize is unknown or this is a live stream\n\n      if (dataHeader.value === 0x7f) {\n        dataHeader.value = getInfinityDataSize(id, bytes, dataStart);\n        if (dataHeader.value !== bytes.length) {\n          dataHeader.value -= dataStart;\n        }\n      }\n      var dataEnd = dataStart + dataHeader.value > bytes.length ? bytes.length : dataStart + dataHeader.value;\n      var data = bytes.subarray(dataStart, dataEnd);\n      if (bytesMatch(paths[0], id.bytes)) {\n        if (paths.length === 1) {\n          // this is the end of the paths and we've found the tag we were\n          // looking for\n          results.push(data);\n        } else {\n          // recursively search for the next tag inside of the data\n          // of this one\n          results = results.concat(findEbml(data, paths.slice(1)));\n        }\n      }\n      var totalLength = id.length + dataHeader.length + data.length; // move past this tag entirely, we are not looking for it\n\n      i += totalLength;\n    }\n    return results;\n  }; // see https://www.matroska.org/technical/basics.html#block-structure\n\n  var NAL_TYPE_ONE = toUint8([0x00, 0x00, 0x00, 0x01]);\n  var NAL_TYPE_TWO = toUint8([0x00, 0x00, 0x01]);\n  var EMULATION_PREVENTION = toUint8([0x00, 0x00, 0x03]);\n  /**\n   * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n   * Sequence Payload\"\n   *\n   * @param data {Uint8Array} the bytes of a RBSP from a NAL\n   * unit\n   * @return {Uint8Array} the RBSP without any Emulation\n   * Prevention Bytes\n   */\n\n  var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(bytes) {\n    var positions = [];\n    var i = 1; // Find all `Emulation Prevention Bytes`\n\n    while (i < bytes.length - 2) {\n      if (bytesMatch(bytes.subarray(i, i + 3), EMULATION_PREVENTION)) {\n        positions.push(i + 2);\n        i++;\n      }\n      i++;\n    } // If no Emulation Prevention Bytes were found just return the original\n    // array\n\n    if (positions.length === 0) {\n      return bytes;\n    } // Create a new array to hold the NAL unit data\n\n    var newLength = bytes.length - positions.length;\n    var newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === positions[0]) {\n        // Skip this byte\n        sourceIndex++; // Remove this position index\n\n        positions.shift();\n      }\n      newData[i] = bytes[sourceIndex];\n    }\n    return newData;\n  };\n  var findNal = function findNal(bytes, dataType, types, nalLimit) {\n    if (nalLimit === void 0) {\n      nalLimit = Infinity;\n    }\n    bytes = toUint8(bytes);\n    types = [].concat(types);\n    var i = 0;\n    var nalStart;\n    var nalsFound = 0; // keep searching until:\n    // we reach the end of bytes\n    // we reach the maximum number of nals they want to seach\n    // NOTE: that we disregard nalLimit when we have found the start\n    // of the nal we want so that we can find the end of the nal we want.\n\n    while (i < bytes.length && (nalsFound < nalLimit || nalStart)) {\n      var nalOffset = void 0;\n      if (bytesMatch(bytes.subarray(i), NAL_TYPE_ONE)) {\n        nalOffset = 4;\n      } else if (bytesMatch(bytes.subarray(i), NAL_TYPE_TWO)) {\n        nalOffset = 3;\n      } // we are unsynced,\n      // find the next nal unit\n\n      if (!nalOffset) {\n        i++;\n        continue;\n      }\n      nalsFound++;\n      if (nalStart) {\n        return discardEmulationPreventionBytes(bytes.subarray(nalStart, i));\n      }\n      var nalType = void 0;\n      if (dataType === 'h264') {\n        nalType = bytes[i + nalOffset] & 0x1f;\n      } else if (dataType === 'h265') {\n        nalType = bytes[i + nalOffset] >> 1 & 0x3f;\n      }\n      if (types.indexOf(nalType) !== -1) {\n        nalStart = i + nalOffset;\n      } // nal header is 1 length for h264, and 2 for h265\n\n      i += nalOffset + (dataType === 'h264' ? 1 : 2);\n    }\n    return bytes.subarray(0, 0);\n  };\n  var findH264Nal = function findH264Nal(bytes, type, nalLimit) {\n    return findNal(bytes, 'h264', type, nalLimit);\n  };\n  var findH265Nal = function findH265Nal(bytes, type, nalLimit) {\n    return findNal(bytes, 'h265', type, nalLimit);\n  };\n\n  var CONSTANTS = {\n    // \"webm\" string literal in hex\n    'webm': toUint8([0x77, 0x65, 0x62, 0x6d]),\n    // \"matroska\" string literal in hex\n    'matroska': toUint8([0x6d, 0x61, 0x74, 0x72, 0x6f, 0x73, 0x6b, 0x61]),\n    // \"fLaC\" string literal in hex\n    'flac': toUint8([0x66, 0x4c, 0x61, 0x43]),\n    // \"OggS\" string literal in hex\n    'ogg': toUint8([0x4f, 0x67, 0x67, 0x53]),\n    // ac-3 sync byte, also works for ec-3 as that is simply a codec\n    // of ac-3\n    'ac3': toUint8([0x0b, 0x77]),\n    // \"RIFF\" string literal in hex used for wav and avi\n    'riff': toUint8([0x52, 0x49, 0x46, 0x46]),\n    // \"AVI\" string literal in hex\n    'avi': toUint8([0x41, 0x56, 0x49]),\n    // \"WAVE\" string literal in hex\n    'wav': toUint8([0x57, 0x41, 0x56, 0x45]),\n    // \"ftyp3g\" string literal in hex\n    '3gp': toUint8([0x66, 0x74, 0x79, 0x70, 0x33, 0x67]),\n    // \"ftyp\" string literal in hex\n    'mp4': toUint8([0x66, 0x74, 0x79, 0x70]),\n    // \"styp\" string literal in hex\n    'fmp4': toUint8([0x73, 0x74, 0x79, 0x70]),\n    // \"ftypqt\" string literal in hex\n    'mov': toUint8([0x66, 0x74, 0x79, 0x70, 0x71, 0x74]),\n    // moov string literal in hex\n    'moov': toUint8([0x6D, 0x6F, 0x6F, 0x76]),\n    // moof string literal in hex\n    'moof': toUint8([0x6D, 0x6F, 0x6F, 0x66])\n  };\n  var _isLikely = {\n    aac: function aac(bytes) {\n      var offset = getId3Offset(bytes);\n      return bytesMatch(bytes, [0xFF, 0x10], {\n        offset: offset,\n        mask: [0xFF, 0x16]\n      });\n    },\n    mp3: function mp3(bytes) {\n      var offset = getId3Offset(bytes);\n      return bytesMatch(bytes, [0xFF, 0x02], {\n        offset: offset,\n        mask: [0xFF, 0x06]\n      });\n    },\n    webm: function webm(bytes) {\n      var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is webm\n\n      return bytesMatch(docType, CONSTANTS.webm);\n    },\n    mkv: function mkv(bytes) {\n      var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is matroska\n\n      return bytesMatch(docType, CONSTANTS.matroska);\n    },\n    mp4: function mp4(bytes) {\n      // if this file is another base media file format, it is not mp4\n      if (_isLikely['3gp'](bytes) || _isLikely.mov(bytes)) {\n        return false;\n      } // if this file starts with a ftyp or styp box its mp4\n\n      if (bytesMatch(bytes, CONSTANTS.mp4, {\n        offset: 4\n      }) || bytesMatch(bytes, CONSTANTS.fmp4, {\n        offset: 4\n      })) {\n        return true;\n      } // if this file starts with a moof/moov box its mp4\n\n      if (bytesMatch(bytes, CONSTANTS.moof, {\n        offset: 4\n      }) || bytesMatch(bytes, CONSTANTS.moov, {\n        offset: 4\n      })) {\n        return true;\n      }\n    },\n    mov: function mov(bytes) {\n      return bytesMatch(bytes, CONSTANTS.mov, {\n        offset: 4\n      });\n    },\n    '3gp': function gp(bytes) {\n      return bytesMatch(bytes, CONSTANTS['3gp'], {\n        offset: 4\n      });\n    },\n    ac3: function ac3(bytes) {\n      var offset = getId3Offset(bytes);\n      return bytesMatch(bytes, CONSTANTS.ac3, {\n        offset: offset\n      });\n    },\n    ts: function ts(bytes) {\n      if (bytes.length < 189 && bytes.length >= 1) {\n        return bytes[0] === 0x47;\n      }\n      var i = 0; // check the first 376 bytes for two matching sync bytes\n\n      while (i + 188 < bytes.length && i < 188) {\n        if (bytes[i] === 0x47 && bytes[i + 188] === 0x47) {\n          return true;\n        }\n        i += 1;\n      }\n      return false;\n    },\n    flac: function flac(bytes) {\n      var offset = getId3Offset(bytes);\n      return bytesMatch(bytes, CONSTANTS.flac, {\n        offset: offset\n      });\n    },\n    ogg: function ogg(bytes) {\n      return bytesMatch(bytes, CONSTANTS.ogg);\n    },\n    avi: function avi(bytes) {\n      return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.avi, {\n        offset: 8\n      });\n    },\n    wav: function wav(bytes) {\n      return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.wav, {\n        offset: 8\n      });\n    },\n    'h264': function h264(bytes) {\n      // find seq_parameter_set_rbsp\n      return findH264Nal(bytes, 7, 3).length;\n    },\n    'h265': function h265(bytes) {\n      // find video_parameter_set_rbsp or seq_parameter_set_rbsp\n      return findH265Nal(bytes, [32, 33], 3).length;\n    }\n  }; // get all the isLikely functions\n  // but make sure 'ts' is above h264 and h265\n  // but below everything else as it is the least specific\n\n  var isLikelyTypes = Object.keys(_isLikely) // remove ts, h264, h265\n  .filter(function (t) {\n    return t !== 'ts' && t !== 'h264' && t !== 'h265';\n  }) // add it back to the bottom\n  .concat(['ts', 'h264', 'h265']); // make sure we are dealing with uint8 data.\n\n  isLikelyTypes.forEach(function (type) {\n    var isLikelyFn = _isLikely[type];\n    _isLikely[type] = function (bytes) {\n      return isLikelyFn(toUint8(bytes));\n    };\n  }); // export after wrapping\n\n  var isLikely = _isLikely; // A useful list of file signatures can be found here\n  // https://en.wikipedia.org/wiki/List_of_file_signatures\n\n  var detectContainerForBytes = function detectContainerForBytes(bytes) {\n    bytes = toUint8(bytes);\n    for (var i = 0; i < isLikelyTypes.length; i++) {\n      var type = isLikelyTypes[i];\n      if (isLikely[type](bytes)) {\n        return type;\n      }\n    }\n    return '';\n  }; // fmp4 is not a container\n\n  var isLikelyFmp4MediaSegment = function isLikelyFmp4MediaSegment(bytes) {\n    return findBox(bytes, ['moof']).length > 0;\n  };\n\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n  var ONE_SECOND_IN_TS = 90000,\n    // 90kHz clock\n    secondsToVideoTs,\n    secondsToAudioTs,\n    videoTsToSeconds,\n    audioTsToSeconds,\n    audioTsToVideoTs,\n    videoTsToAudioTs,\n    metadataTsToSeconds;\n  secondsToVideoTs = function (seconds) {\n    return seconds * ONE_SECOND_IN_TS;\n  };\n  secondsToAudioTs = function (seconds, sampleRate) {\n    return seconds * sampleRate;\n  };\n  videoTsToSeconds = function (timestamp) {\n    return timestamp / ONE_SECOND_IN_TS;\n  };\n  audioTsToSeconds = function (timestamp, sampleRate) {\n    return timestamp / sampleRate;\n  };\n  audioTsToVideoTs = function (timestamp, sampleRate) {\n    return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n  };\n  videoTsToAudioTs = function (timestamp, sampleRate) {\n    return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n  };\n\n  /**\n   * Adjust ID3 tag or caption timing information by the timeline pts values\n   * (if keepOriginalTimestamps is false) and convert to seconds\n   */\n  metadataTsToSeconds = function (timestamp, timelineStartPts, keepOriginalTimestamps) {\n    return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n  };\n  var clock = {\n    ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n    secondsToVideoTs: secondsToVideoTs,\n    secondsToAudioTs: secondsToAudioTs,\n    videoTsToSeconds: videoTsToSeconds,\n    audioTsToSeconds: audioTsToSeconds,\n    audioTsToVideoTs: audioTsToVideoTs,\n    videoTsToAudioTs: videoTsToAudioTs,\n    metadataTsToSeconds: metadataTsToSeconds\n  };\n  var clock_1 = clock.ONE_SECOND_IN_TS;\n\n  /*! @name @videojs/http-streaming @version 3.13.2 @license Apache-2.0 */\n\n  /**\n   * @file resolve-url.js - Handling how URLs are resolved and manipulated\n   */\n  const resolveUrl = resolveUrl$1;\n  /**\n   * If the xhr request was redirected, return the responseURL, otherwise,\n   * return the original url.\n   *\n   * @api private\n   *\n   * @param  {string} url - an url being requested\n   * @param  {XMLHttpRequest} req - xhr request result\n   *\n   * @return {string}\n   */\n\n  const resolveManifestRedirect = (url, req) => {\n    // To understand how the responseURL below is set and generated:\n    // - https://fetch.spec.whatwg.org/#concept-response-url\n    // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n    if (req && req.responseURL && url !== req.responseURL) {\n      return req.responseURL;\n    }\n    return url;\n  };\n  const logger = source => {\n    if (videojs.log.debug) {\n      return videojs.log.debug.bind(videojs, 'VHS:', `${source} >`);\n    }\n    return function () {};\n  };\n\n  /**\n   * Provides a compatibility layer between Video.js 7 and 8 API changes for VHS.\n   */\n  /**\n   * Delegates to videojs.obj.merge (Video.js 8) or\n   * videojs.mergeOptions (Video.js 7).\n   */\n\n  function merge(...args) {\n    const context = videojs.obj || videojs;\n    const fn = context.merge || context.mergeOptions;\n    return fn.apply(context, args);\n  }\n  /**\n   * Delegates to videojs.time.createTimeRanges (Video.js 8) or\n   * videojs.createTimeRanges (Video.js 7).\n   */\n\n  function createTimeRanges(...args) {\n    const context = videojs.time || videojs;\n    const fn = context.createTimeRanges || context.createTimeRanges;\n    return fn.apply(context, args);\n  }\n  /**\n   * Converts provided buffered ranges to a descriptive string\n   *\n   * @param {TimeRanges} buffered - received buffered time ranges\n   *\n   * @return {string} - descriptive string\n   */\n\n  function bufferedRangesToString(buffered) {\n    if (buffered.length === 0) {\n      return 'Buffered Ranges are empty';\n    }\n    let bufferedRangesStr = 'Buffered Ranges: \\n';\n    for (let i = 0; i < buffered.length; i++) {\n      const start = buffered.start(i);\n      const end = buffered.end(i);\n      bufferedRangesStr += `${start} --> ${end}. Duration (${end - start})\\n`;\n    }\n    return bufferedRangesStr;\n  }\n\n  /**\n   * ranges\n   *\n   * Utilities for working with TimeRanges.\n   *\n   */\n\n  const TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n  // can be misleading because of precision differences or when the current media has poorly\n  // aligned audio and video, which can cause values to be slightly off from what you would\n  // expect. This value is what we consider to be safe to use in such comparisons to account\n  // for these scenarios.\n\n  const SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n  const filterRanges = function (timeRanges, predicate) {\n    const results = [];\n    let i;\n    if (timeRanges && timeRanges.length) {\n      // Search for ranges that match the predicate\n      for (i = 0; i < timeRanges.length; i++) {\n        if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n          results.push([timeRanges.start(i), timeRanges.end(i)]);\n        }\n      }\n    }\n    return createTimeRanges(results);\n  };\n  /**\n   * Attempts to find the buffered TimeRange that contains the specified\n   * time.\n   *\n   * @param {TimeRanges} buffered - the TimeRanges object to query\n   * @param {number} time  - the time to filter on.\n   * @return {TimeRanges} a new TimeRanges object\n   */\n\n  const findRange = function (buffered, time) {\n    return filterRanges(buffered, function (start, end) {\n      return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n    });\n  };\n  /**\n   * Returns the TimeRanges that begin later than the specified time.\n   *\n   * @param {TimeRanges} timeRanges - the TimeRanges object to query\n   * @param {number} time - the time to filter on.\n   * @return {TimeRanges} a new TimeRanges object.\n   */\n\n  const findNextRange = function (timeRanges, time) {\n    return filterRanges(timeRanges, function (start) {\n      return start - TIME_FUDGE_FACTOR >= time;\n    });\n  };\n  /**\n   * Returns gaps within a list of TimeRanges\n   *\n   * @param {TimeRanges} buffered - the TimeRanges object\n   * @return {TimeRanges} a TimeRanges object of gaps\n   */\n\n  const findGaps = function (buffered) {\n    if (buffered.length < 2) {\n      return createTimeRanges();\n    }\n    const ranges = [];\n    for (let i = 1; i < buffered.length; i++) {\n      const start = buffered.end(i - 1);\n      const end = buffered.start(i);\n      ranges.push([start, end]);\n    }\n    return createTimeRanges(ranges);\n  };\n  /**\n   * Calculate the intersection of two TimeRanges\n   *\n   * @param {TimeRanges} bufferA\n   * @param {TimeRanges} bufferB\n   * @return {TimeRanges} The interesection of `bufferA` with `bufferB`\n   */\n\n  const bufferIntersection = function (bufferA, bufferB) {\n    let start = null;\n    let end = null;\n    let arity = 0;\n    const extents = [];\n    const ranges = [];\n    if (!bufferA || !bufferA.length || !bufferB || !bufferB.length) {\n      return createTimeRanges();\n    } // Handle the case where we have both buffers and create an\n    // intersection of the two\n\n    let count = bufferA.length; // A) Gather up all start and end times\n\n    while (count--) {\n      extents.push({\n        time: bufferA.start(count),\n        type: 'start'\n      });\n      extents.push({\n        time: bufferA.end(count),\n        type: 'end'\n      });\n    }\n    count = bufferB.length;\n    while (count--) {\n      extents.push({\n        time: bufferB.start(count),\n        type: 'start'\n      });\n      extents.push({\n        time: bufferB.end(count),\n        type: 'end'\n      });\n    } // B) Sort them by time\n\n    extents.sort(function (a, b) {\n      return a.time - b.time;\n    }); // C) Go along one by one incrementing arity for start and decrementing\n    //    arity for ends\n\n    for (count = 0; count < extents.length; count++) {\n      if (extents[count].type === 'start') {\n        arity++; // D) If arity is ever incremented to 2 we are entering an\n        //    overlapping range\n\n        if (arity === 2) {\n          start = extents[count].time;\n        }\n      } else if (extents[count].type === 'end') {\n        arity--; // E) If arity is ever decremented to 1 we leaving an\n        //    overlapping range\n\n        if (arity === 1) {\n          end = extents[count].time;\n        }\n      } // F) Record overlapping ranges\n\n      if (start !== null && end !== null) {\n        ranges.push([start, end]);\n        start = null;\n        end = null;\n      }\n    }\n    return createTimeRanges(ranges);\n  };\n  /**\n   * Gets a human readable string for a TimeRange\n   *\n   * @param {TimeRange} range\n   * @return {string} a human readable string\n   */\n\n  const printableRange = range => {\n    const strArr = [];\n    if (!range || !range.length) {\n      return '';\n    }\n    for (let i = 0; i < range.length; i++) {\n      strArr.push(range.start(i) + ' => ' + range.end(i));\n    }\n    return strArr.join(', ');\n  };\n  /**\n   * Calculates the amount of time left in seconds until the player hits the end of the\n   * buffer and causes a rebuffer\n   *\n   * @param {TimeRange} buffered\n   *        The state of the buffer\n   * @param {Numnber} currentTime\n   *        The current time of the player\n   * @param {number} playbackRate\n   *        The current playback rate of the player. Defaults to 1.\n   * @return {number}\n   *         Time until the player has to start rebuffering in seconds.\n   * @function timeUntilRebuffer\n   */\n\n  const timeUntilRebuffer = function (buffered, currentTime, playbackRate = 1) {\n    const bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n    return (bufferedEnd - currentTime) / playbackRate;\n  };\n  /**\n   * Converts a TimeRanges object into an array representation\n   *\n   * @param {TimeRanges} timeRanges\n   * @return {Array}\n   */\n\n  const timeRangesToArray = timeRanges => {\n    const timeRangesList = [];\n    for (let i = 0; i < timeRanges.length; i++) {\n      timeRangesList.push({\n        start: timeRanges.start(i),\n        end: timeRanges.end(i)\n      });\n    }\n    return timeRangesList;\n  };\n  /**\n   * Determines if two time range objects are different.\n   *\n   * @param {TimeRange} a\n   *        the first time range object to check\n   *\n   * @param {TimeRange} b\n   *        the second time range object to check\n   *\n   * @return {Boolean}\n   *         Whether the time range objects differ\n   */\n\n  const isRangeDifferent = function (a, b) {\n    // same object\n    if (a === b) {\n      return false;\n    } // one or the other is undefined\n\n    if (!a && b || !b && a) {\n      return true;\n    } // length is different\n\n    if (a.length !== b.length) {\n      return true;\n    } // see if any start/end pair is different\n\n    for (let i = 0; i < a.length; i++) {\n      if (a.start(i) !== b.start(i) || a.end(i) !== b.end(i)) {\n        return true;\n      }\n    } // if the length and every pair is the same\n    // this is the same time range\n\n    return false;\n  };\n  const lastBufferedEnd = function (a) {\n    if (!a || !a.length || !a.end) {\n      return;\n    }\n    return a.end(a.length - 1);\n  };\n  /**\n   * A utility function to add up the amount of time in a timeRange\n   * after a specified startTime.\n   * ie:[[0, 10], [20, 40], [50, 60]] with a startTime 0\n   *     would return 40 as there are 40s seconds after 0 in the timeRange\n   *\n   * @param {TimeRange} range\n   *        The range to check against\n   * @param {number} startTime\n   *        The time in the time range that you should start counting from\n   *\n   * @return {number}\n   *          The number of seconds in the buffer passed the specified time.\n   */\n\n  const timeAheadOf = function (range, startTime) {\n    let time = 0;\n    if (!range || !range.length) {\n      return time;\n    }\n    for (let i = 0; i < range.length; i++) {\n      const start = range.start(i);\n      const end = range.end(i); // startTime is after this range entirely\n\n      if (startTime > end) {\n        continue;\n      } // startTime is within this range\n\n      if (startTime > start && startTime <= end) {\n        time += end - startTime;\n        continue;\n      } // startTime is before this range.\n\n      time += end - start;\n    }\n    return time;\n  };\n\n  /**\n   * @file playlist.js\n   *\n   * Playlist related utilities.\n   */\n  /**\n   * Get the duration of a segment, with special cases for\n   * llhls segments that do not have a duration yet.\n   *\n   * @param {Object} playlist\n   *        the playlist that the segment belongs to.\n   * @param {Object} segment\n   *        the segment to get a duration for.\n   *\n   * @return {number}\n   *          the segment duration\n   */\n\n  const segmentDurationWithParts = (playlist, segment) => {\n    // if this isn't a preload segment\n    // then we will have a segment duration that is accurate.\n    if (!segment.preload) {\n      return segment.duration;\n    } // otherwise we have to add up parts and preload hints\n    // to get an up to date duration.\n\n    let result = 0;\n    (segment.parts || []).forEach(function (p) {\n      result += p.duration;\n    }); // for preload hints we have to use partTargetDuration\n    // as they won't even have a duration yet.\n\n    (segment.preloadHints || []).forEach(function (p) {\n      if (p.type === 'PART') {\n        result += playlist.partTargetDuration;\n      }\n    });\n    return result;\n  };\n  /**\n   * A function to get a combined list of parts and segments with durations\n   * and indexes.\n   *\n   * @param {Playlist} playlist the playlist to get the list for.\n   *\n   * @return {Array} The part/segment list.\n   */\n\n  const getPartsAndSegments = playlist => (playlist.segments || []).reduce((acc, segment, si) => {\n    if (segment.parts) {\n      segment.parts.forEach(function (part, pi) {\n        acc.push({\n          duration: part.duration,\n          segmentIndex: si,\n          partIndex: pi,\n          part,\n          segment\n        });\n      });\n    } else {\n      acc.push({\n        duration: segment.duration,\n        segmentIndex: si,\n        partIndex: null,\n        segment,\n        part: null\n      });\n    }\n    return acc;\n  }, []);\n  const getLastParts = media => {\n    const lastSegment = media.segments && media.segments.length && media.segments[media.segments.length - 1];\n    return lastSegment && lastSegment.parts || [];\n  };\n  const getKnownPartCount = ({\n    preloadSegment\n  }) => {\n    if (!preloadSegment) {\n      return;\n    }\n    const {\n      parts,\n      preloadHints\n    } = preloadSegment;\n    let partCount = (preloadHints || []).reduce((count, hint) => count + (hint.type === 'PART' ? 1 : 0), 0);\n    partCount += parts && parts.length ? parts.length : 0;\n    return partCount;\n  };\n  /**\n   * Get the number of seconds to delay from the end of a\n   * live playlist.\n   *\n   * @param {Playlist} main the main playlist\n   * @param {Playlist} media the media playlist\n   * @return {number} the hold back in seconds.\n   */\n\n  const liveEdgeDelay = (main, media) => {\n    if (media.endList) {\n      return 0;\n    } // dash suggestedPresentationDelay trumps everything\n\n    if (main && main.suggestedPresentationDelay) {\n      return main.suggestedPresentationDelay;\n    }\n    const hasParts = getLastParts(media).length > 0; // look for \"part\" delays from ll-hls first\n\n    if (hasParts && media.serverControl && media.serverControl.partHoldBack) {\n      return media.serverControl.partHoldBack;\n    } else if (hasParts && media.partTargetDuration) {\n      return media.partTargetDuration * 3; // finally look for full segment delays\n    } else if (media.serverControl && media.serverControl.holdBack) {\n      return media.serverControl.holdBack;\n    } else if (media.targetDuration) {\n      return media.targetDuration * 3;\n    }\n    return 0;\n  };\n  /**\n   * walk backward until we find a duration we can use\n   * or return a failure\n   *\n   * @param {Playlist} playlist the playlist to walk through\n   * @param {Number} endSequence the mediaSequence to stop walking on\n   */\n\n  const backwardDuration = function (playlist, endSequence) {\n    let result = 0;\n    let i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n    // the interval, use it\n\n    let segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n    // information that is earlier than endSequence\n\n    if (segment) {\n      if (typeof segment.start !== 'undefined') {\n        return {\n          result: segment.start,\n          precise: true\n        };\n      }\n      if (typeof segment.end !== 'undefined') {\n        return {\n          result: segment.end - segment.duration,\n          precise: true\n        };\n      }\n    }\n    while (i--) {\n      segment = playlist.segments[i];\n      if (typeof segment.end !== 'undefined') {\n        return {\n          result: result + segment.end,\n          precise: true\n        };\n      }\n      result += segmentDurationWithParts(playlist, segment);\n      if (typeof segment.start !== 'undefined') {\n        return {\n          result: result + segment.start,\n          precise: true\n        };\n      }\n    }\n    return {\n      result,\n      precise: false\n    };\n  };\n  /**\n   * walk forward until we find a duration we can use\n   * or return a failure\n   *\n   * @param {Playlist} playlist the playlist to walk through\n   * @param {number} endSequence the mediaSequence to stop walking on\n   */\n\n  const forwardDuration = function (playlist, endSequence) {\n    let result = 0;\n    let segment;\n    let i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n    // information\n\n    for (; i < playlist.segments.length; i++) {\n      segment = playlist.segments[i];\n      if (typeof segment.start !== 'undefined') {\n        return {\n          result: segment.start - result,\n          precise: true\n        };\n      }\n      result += segmentDurationWithParts(playlist, segment);\n      if (typeof segment.end !== 'undefined') {\n        return {\n          result: segment.end - result,\n          precise: true\n        };\n      }\n    } // indicate we didn't find a useful duration estimate\n\n    return {\n      result: -1,\n      precise: false\n    };\n  };\n  /**\n    * Calculate the media duration from the segments associated with a\n    * playlist. The duration of a subinterval of the available segments\n    * may be calculated by specifying an end index.\n    *\n    * @param {Object} playlist a media playlist object\n    * @param {number=} endSequence an exclusive upper boundary\n    * for the playlist.  Defaults to playlist length.\n    * @param {number} expired the amount of time that has dropped\n    * off the front of the playlist in a live scenario\n    * @return {number} the duration between the first available segment\n    * and end index.\n    */\n\n  const intervalDuration = function (playlist, endSequence, expired) {\n    if (typeof endSequence === 'undefined') {\n      endSequence = playlist.mediaSequence + playlist.segments.length;\n    }\n    if (endSequence < playlist.mediaSequence) {\n      return 0;\n    } // do a backward walk to estimate the duration\n\n    const backward = backwardDuration(playlist, endSequence);\n    if (backward.precise) {\n      // if we were able to base our duration estimate on timing\n      // information provided directly from the Media Source, return\n      // it\n      return backward.result;\n    } // walk forward to see if a precise duration estimate can be made\n    // that way\n\n    const forward = forwardDuration(playlist, endSequence);\n    if (forward.precise) {\n      // we found a segment that has been buffered and so it's\n      // position is known precisely\n      return forward.result;\n    } // return the less-precise, playlist-based duration estimate\n\n    return backward.result + expired;\n  };\n  /**\n    * Calculates the duration of a playlist. If a start and end index\n    * are specified, the duration will be for the subset of the media\n    * timeline between those two indices. The total duration for live\n    * playlists is always Infinity.\n    *\n    * @param {Object} playlist a media playlist object\n    * @param {number=} endSequence an exclusive upper\n    * boundary for the playlist. Defaults to the playlist media\n    * sequence number plus its length.\n    * @param {number=} expired the amount of time that has\n    * dropped off the front of the playlist in a live scenario\n    * @return {number} the duration between the start index and end\n    * index.\n    */\n\n  const duration = function (playlist, endSequence, expired) {\n    if (!playlist) {\n      return 0;\n    }\n    if (typeof expired !== 'number') {\n      expired = 0;\n    } // if a slice of the total duration is not requested, use\n    // playlist-level duration indicators when they're present\n\n    if (typeof endSequence === 'undefined') {\n      // if present, use the duration specified in the playlist\n      if (playlist.totalDuration) {\n        return playlist.totalDuration;\n      } // duration should be Infinity for live playlists\n\n      if (!playlist.endList) {\n        return window.Infinity;\n      }\n    } // calculate the total duration based on the segment durations\n\n    return intervalDuration(playlist, endSequence, expired);\n  };\n  /**\n    * Calculate the time between two indexes in the current playlist\n    * neight the start- nor the end-index need to be within the current\n    * playlist in which case, the targetDuration of the playlist is used\n    * to approximate the durations of the segments\n    *\n    * @param {Array} options.durationList list to iterate over for durations.\n    * @param {number} options.defaultDuration duration to use for elements before or after the durationList\n    * @param {number} options.startIndex partsAndSegments index to start\n    * @param {number} options.endIndex partsAndSegments index to end.\n    * @return {number} the number of seconds between startIndex and endIndex\n    */\n\n  const sumDurations = function ({\n    defaultDuration,\n    durationList,\n    startIndex,\n    endIndex\n  }) {\n    let durations = 0;\n    if (startIndex > endIndex) {\n      [startIndex, endIndex] = [endIndex, startIndex];\n    }\n    if (startIndex < 0) {\n      for (let i = startIndex; i < Math.min(0, endIndex); i++) {\n        durations += defaultDuration;\n      }\n      startIndex = 0;\n    }\n    for (let i = startIndex; i < endIndex; i++) {\n      durations += durationList[i].duration;\n    }\n    return durations;\n  };\n  /**\n   * Calculates the playlist end time\n   *\n   * @param {Object} playlist a media playlist object\n   * @param {number=} expired the amount of time that has\n   *                  dropped off the front of the playlist in a live scenario\n   * @param {boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n   *                        playlist end calculation should consider the safe live end\n   *                        (truncate the playlist end by three segments). This is normally\n   *                        used for calculating the end of the playlist's seekable range.\n   *                        This takes into account the value of liveEdgePadding.\n   *                        Setting liveEdgePadding to 0 is equivalent to setting this to false.\n   * @param {number} liveEdgePadding a number indicating how far from the end of the playlist we should be in seconds.\n   *                 If this is provided, it is used in the safe live end calculation.\n   *                 Setting useSafeLiveEnd=false or liveEdgePadding=0 are equivalent.\n   *                 Corresponds to suggestedPresentationDelay in DASH manifests.\n   * @return {number} the end time of playlist\n   * @function playlistEnd\n   */\n\n  const playlistEnd = function (playlist, expired, useSafeLiveEnd, liveEdgePadding) {\n    if (!playlist || !playlist.segments) {\n      return null;\n    }\n    if (playlist.endList) {\n      return duration(playlist);\n    }\n    if (expired === null) {\n      return null;\n    }\n    expired = expired || 0;\n    let lastSegmentEndTime = intervalDuration(playlist, playlist.mediaSequence + playlist.segments.length, expired);\n    if (useSafeLiveEnd) {\n      liveEdgePadding = typeof liveEdgePadding === 'number' ? liveEdgePadding : liveEdgeDelay(null, playlist);\n      lastSegmentEndTime -= liveEdgePadding;\n    } // don't return a time less than zero\n\n    return Math.max(0, lastSegmentEndTime);\n  };\n  /**\n    * Calculates the interval of time that is currently seekable in a\n    * playlist. The returned time ranges are relative to the earliest\n    * moment in the specified playlist that is still available. A full\n    * seekable implementation for live streams would need to offset\n    * these values by the duration of content that has expired from the\n    * stream.\n    *\n    * @param {Object} playlist a media playlist object\n    * dropped off the front of the playlist in a live scenario\n    * @param {number=} expired the amount of time that has\n    * dropped off the front of the playlist in a live scenario\n    * @param {number} liveEdgePadding how far from the end of the playlist we should be in seconds.\n    *        Corresponds to suggestedPresentationDelay in DASH manifests.\n    * @return {TimeRanges} the periods of time that are valid targets\n    * for seeking\n    */\n\n  const seekable = function (playlist, expired, liveEdgePadding) {\n    const useSafeLiveEnd = true;\n    const seekableStart = expired || 0;\n    let seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding);\n    if (seekableEnd === null) {\n      return createTimeRanges();\n    } // Clamp seekable end since it can not be less than the seekable start\n\n    if (seekableEnd < seekableStart) {\n      seekableEnd = seekableStart;\n    }\n    return createTimeRanges(seekableStart, seekableEnd);\n  };\n  /**\n   * Determine the index and estimated starting time of the segment that\n   * contains a specified playback position in a media playlist.\n   *\n   * @param {Object} options.playlist the media playlist to query\n   * @param {number} options.currentTime The number of seconds since the earliest\n   * possible position to determine the containing segment for\n   * @param {number} options.startTime the time when the segment/part starts\n   * @param {number} options.startingSegmentIndex the segment index to start looking at.\n   * @param {number?} [options.startingPartIndex] the part index to look at within the segment.\n   *\n   * @return {Object} an object with partIndex, segmentIndex, and startTime.\n   */\n\n  const getMediaInfoForTime = function ({\n    playlist,\n    currentTime,\n    startingSegmentIndex,\n    startingPartIndex,\n    startTime,\n    exactManifestTimings\n  }) {\n    let time = currentTime - startTime;\n    const partsAndSegments = getPartsAndSegments(playlist);\n    let startIndex = 0;\n    for (let i = 0; i < partsAndSegments.length; i++) {\n      const partAndSegment = partsAndSegments[i];\n      if (startingSegmentIndex !== partAndSegment.segmentIndex) {\n        continue;\n      } // skip this if part index does not match.\n\n      if (typeof startingPartIndex === 'number' && typeof partAndSegment.partIndex === 'number' && startingPartIndex !== partAndSegment.partIndex) {\n        continue;\n      }\n      startIndex = i;\n      break;\n    }\n    if (time < 0) {\n      // Walk backward from startIndex in the playlist, adding durations\n      // until we find a segment that contains `time` and return it\n      if (startIndex > 0) {\n        for (let i = startIndex - 1; i >= 0; i--) {\n          const partAndSegment = partsAndSegments[i];\n          time += partAndSegment.duration;\n          if (exactManifestTimings) {\n            if (time < 0) {\n              continue;\n            }\n          } else if (time + TIME_FUDGE_FACTOR <= 0) {\n            continue;\n          }\n          return {\n            partIndex: partAndSegment.partIndex,\n            segmentIndex: partAndSegment.segmentIndex,\n            startTime: startTime - sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: partsAndSegments,\n              startIndex,\n              endIndex: i\n            })\n          };\n        }\n      } // We were unable to find a good segment within the playlist\n      // so select the first segment\n\n      return {\n        partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n        segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n        startTime: currentTime\n      };\n    } // When startIndex is negative, we first walk forward to first segment\n    // adding target durations. If we \"run out of time\" before getting to\n    // the first segment, return the first segment\n\n    if (startIndex < 0) {\n      for (let i = startIndex; i < 0; i++) {\n        time -= playlist.targetDuration;\n        if (time < 0) {\n          return {\n            partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n            segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n            startTime: currentTime\n          };\n        }\n      }\n      startIndex = 0;\n    } // Walk forward from startIndex in the playlist, subtracting durations\n    // until we find a segment that contains `time` and return it\n\n    for (let i = startIndex; i < partsAndSegments.length; i++) {\n      const partAndSegment = partsAndSegments[i];\n      time -= partAndSegment.duration;\n      const canUseFudgeFactor = partAndSegment.duration > TIME_FUDGE_FACTOR;\n      const isExactlyAtTheEnd = time === 0;\n      const isExtremelyCloseToTheEnd = canUseFudgeFactor && time + TIME_FUDGE_FACTOR >= 0;\n      if (isExactlyAtTheEnd || isExtremelyCloseToTheEnd) {\n        // 1) We are exactly at the end of the current segment.\n        // 2) We are extremely close to the end of the current segment (The difference is less than  1 / 30).\n        //    We may encounter this situation when\n        //    we don't have exact match between segment duration info in the manifest and the actual duration of the segment\n        //    For example:\n        //    We appended 3 segments 10 seconds each, meaning we should have 30 sec buffered,\n        //    but we the actual buffered is 29.99999\n        //\n        // In both cases:\n        // if we passed current time -> it means that we already played current segment\n        // if we passed buffered.end -> it means that this segment is already loaded and buffered\n        // we should select the next segment if we have one:\n        if (i !== partsAndSegments.length - 1) {\n          continue;\n        }\n      }\n      if (exactManifestTimings) {\n        if (time > 0) {\n          continue;\n        }\n      } else if (time - TIME_FUDGE_FACTOR >= 0) {\n        continue;\n      }\n      return {\n        partIndex: partAndSegment.partIndex,\n        segmentIndex: partAndSegment.segmentIndex,\n        startTime: startTime + sumDurations({\n          defaultDuration: playlist.targetDuration,\n          durationList: partsAndSegments,\n          startIndex,\n          endIndex: i\n        })\n      };\n    } // We are out of possible candidates so load the last one...\n\n    return {\n      segmentIndex: partsAndSegments[partsAndSegments.length - 1].segmentIndex,\n      partIndex: partsAndSegments[partsAndSegments.length - 1].partIndex,\n      startTime: currentTime\n    };\n  };\n  /**\n   * Check whether the playlist is excluded or not.\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist is excluded or not\n   * @function isExcluded\n   */\n\n  const isExcluded = function (playlist) {\n    return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n  };\n  /**\n   * Check whether the playlist is compatible with current playback configuration or has\n   * been excluded permanently for being incompatible.\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist is incompatible or not\n   * @function isIncompatible\n   */\n\n  const isIncompatible = function (playlist) {\n    return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n  };\n  /**\n   * Check whether the playlist is enabled or not.\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist is enabled or not\n   * @function isEnabled\n   */\n\n  const isEnabled = function (playlist) {\n    const excluded = isExcluded(playlist);\n    return !playlist.disabled && !excluded;\n  };\n  /**\n   * Check whether the playlist has been manually disabled through the representations api.\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist is disabled manually or not\n   * @function isDisabled\n   */\n\n  const isDisabled = function (playlist) {\n    return playlist.disabled;\n  };\n  /**\n   * Returns whether the current playlist is an AES encrypted HLS stream\n   *\n   * @return {boolean} true if it's an AES encrypted HLS stream\n   */\n\n  const isAes = function (media) {\n    for (let i = 0; i < media.segments.length; i++) {\n      if (media.segments[i].key) {\n        return true;\n      }\n    }\n    return false;\n  };\n  /**\n   * Checks if the playlist has a value for the specified attribute\n   *\n   * @param {string} attr\n   *        Attribute to check for\n   * @param {Object} playlist\n   *        The media playlist object\n   * @return {boolean}\n   *         Whether the playlist contains a value for the attribute or not\n   * @function hasAttribute\n   */\n\n  const hasAttribute = function (attr, playlist) {\n    return playlist.attributes && playlist.attributes[attr];\n  };\n  /**\n   * Estimates the time required to complete a segment download from the specified playlist\n   *\n   * @param {number} segmentDuration\n   *        Duration of requested segment\n   * @param {number} bandwidth\n   *        Current measured bandwidth of the player\n   * @param {Object} playlist\n   *        The media playlist object\n   * @param {number=} bytesReceived\n   *        Number of bytes already received for the request. Defaults to 0\n   * @return {number|NaN}\n   *         The estimated time to request the segment. NaN if bandwidth information for\n   *         the given playlist is unavailable\n   * @function estimateSegmentRequestTime\n   */\n\n  const estimateSegmentRequestTime = function (segmentDuration, bandwidth, playlist, bytesReceived = 0) {\n    if (!hasAttribute('BANDWIDTH', playlist)) {\n      return NaN;\n    }\n    const size = segmentDuration * playlist.attributes.BANDWIDTH;\n    return (size - bytesReceived * 8) / bandwidth;\n  };\n  /*\n   * Returns whether the current playlist is the lowest rendition\n   *\n   * @return {Boolean} true if on lowest rendition\n   */\n\n  const isLowestEnabledRendition = (main, media) => {\n    if (main.playlists.length === 1) {\n      return true;\n    }\n    const currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n    return main.playlists.filter(playlist => {\n      if (!isEnabled(playlist)) {\n        return false;\n      }\n      return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n    }).length === 0;\n  };\n  const playlistMatch = (a, b) => {\n    // both playlits are null\n    // or only one playlist is non-null\n    // no match\n    if (!a && !b || !a && b || a && !b) {\n      return false;\n    } // playlist objects are the same, match\n\n    if (a === b) {\n      return true;\n    } // first try to use id as it should be the most\n    // accurate\n\n    if (a.id && b.id && a.id === b.id) {\n      return true;\n    } // next try to use reslovedUri as it should be the\n    // second most accurate.\n\n    if (a.resolvedUri && b.resolvedUri && a.resolvedUri === b.resolvedUri) {\n      return true;\n    } // finally try to use uri as it should be accurate\n    // but might miss a few cases for relative uris\n\n    if (a.uri && b.uri && a.uri === b.uri) {\n      return true;\n    }\n    return false;\n  };\n  const someAudioVariant = function (main, callback) {\n    const AUDIO = main && main.mediaGroups && main.mediaGroups.AUDIO || {};\n    let found = false;\n    for (const groupName in AUDIO) {\n      for (const label in AUDIO[groupName]) {\n        found = callback(AUDIO[groupName][label]);\n        if (found) {\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    return !!found;\n  };\n  const isAudioOnly = main => {\n    // we are audio only if we have no main playlists but do\n    // have media group playlists.\n    if (!main || !main.playlists || !main.playlists.length) {\n      // without audio variants or playlists this\n      // is not an audio only main.\n      const found = someAudioVariant(main, variant => variant.playlists && variant.playlists.length || variant.uri);\n      return found;\n    } // if every playlist has only an audio codec it is audio only\n\n    for (let i = 0; i < main.playlists.length; i++) {\n      const playlist = main.playlists[i];\n      const CODECS = playlist.attributes && playlist.attributes.CODECS; // all codecs are audio, this is an audio playlist.\n\n      if (CODECS && CODECS.split(',').every(c => isAudioCodec(c))) {\n        continue;\n      } // playlist is in an audio group it is audio only\n\n      const found = someAudioVariant(main, variant => playlistMatch(playlist, variant));\n      if (found) {\n        continue;\n      } // if we make it here this playlist isn't audio and we\n      // are not audio only\n\n      return false;\n    } // if we make it past every playlist without returning, then\n    // this is an audio only playlist.\n\n    return true;\n  }; // exports\n\n  var Playlist = {\n    liveEdgeDelay,\n    duration,\n    seekable,\n    getMediaInfoForTime,\n    isEnabled,\n    isDisabled,\n    isExcluded,\n    isIncompatible,\n    playlistEnd,\n    isAes,\n    hasAttribute,\n    estimateSegmentRequestTime,\n    isLowestEnabledRendition,\n    isAudioOnly,\n    playlistMatch,\n    segmentDurationWithParts\n  };\n  const {\n    log\n  } = videojs;\n  const createPlaylistID = (index, uri) => {\n    return `${index}-${uri}`;\n  }; // default function for creating a group id\n\n  const groupID = (type, group, label) => {\n    return `placeholder-uri-${type}-${group}-${label}`;\n  };\n  /**\n   * Parses a given m3u8 playlist\n   *\n   * @param {Function} [onwarn]\n   *        a function to call when the parser triggers a warning event.\n   * @param {Function} [oninfo]\n   *        a function to call when the parser triggers an info event.\n   * @param {string} manifestString\n   *        The downloaded manifest string\n   * @param {Object[]} [customTagParsers]\n   *        An array of custom tag parsers for the m3u8-parser instance\n   * @param {Object[]} [customTagMappers]\n   *        An array of custom tag mappers for the m3u8-parser instance\n   * @param {boolean} [llhls]\n   *        Whether to keep ll-hls features in the manifest after parsing.\n   * @return {Object}\n   *         The manifest object\n   */\n\n  const parseManifest = ({\n    onwarn,\n    oninfo,\n    manifestString,\n    customTagParsers = [],\n    customTagMappers = [],\n    llhls\n  }) => {\n    const parser = new Parser();\n    if (onwarn) {\n      parser.on('warn', onwarn);\n    }\n    if (oninfo) {\n      parser.on('info', oninfo);\n    }\n    customTagParsers.forEach(customParser => parser.addParser(customParser));\n    customTagMappers.forEach(mapper => parser.addTagMapper(mapper));\n    parser.push(manifestString);\n    parser.end();\n    const manifest = parser.manifest; // remove llhls features from the parsed manifest\n    // if we don't want llhls support.\n\n    if (!llhls) {\n      ['preloadSegment', 'skip', 'serverControl', 'renditionReports', 'partInf', 'partTargetDuration'].forEach(function (k) {\n        if (manifest.hasOwnProperty(k)) {\n          delete manifest[k];\n        }\n      });\n      if (manifest.segments) {\n        manifest.segments.forEach(function (segment) {\n          ['parts', 'preloadHints'].forEach(function (k) {\n            if (segment.hasOwnProperty(k)) {\n              delete segment[k];\n            }\n          });\n        });\n      }\n    }\n    if (!manifest.targetDuration) {\n      let targetDuration = 10;\n      if (manifest.segments && manifest.segments.length) {\n        targetDuration = manifest.segments.reduce((acc, s) => Math.max(acc, s.duration), 0);\n      }\n      if (onwarn) {\n        onwarn({\n          message: `manifest has no targetDuration defaulting to ${targetDuration}`\n        });\n      }\n      manifest.targetDuration = targetDuration;\n    }\n    const parts = getLastParts(manifest);\n    if (parts.length && !manifest.partTargetDuration) {\n      const partTargetDuration = parts.reduce((acc, p) => Math.max(acc, p.duration), 0);\n      if (onwarn) {\n        onwarn({\n          message: `manifest has no partTargetDuration defaulting to ${partTargetDuration}`\n        });\n        log.error('LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.');\n      }\n      manifest.partTargetDuration = partTargetDuration;\n    }\n    return manifest;\n  };\n  /**\n   * Loops through all supported media groups in main and calls the provided\n   * callback for each group\n   *\n   * @param {Object} main\n   *        The parsed main manifest object\n   * @param {Function} callback\n   *        Callback to call for each media group\n   */\n\n  const forEachMediaGroup = (main, callback) => {\n    if (!main.mediaGroups) {\n      return;\n    }\n    ['AUDIO', 'SUBTITLES'].forEach(mediaType => {\n      if (!main.mediaGroups[mediaType]) {\n        return;\n      }\n      for (const groupKey in main.mediaGroups[mediaType]) {\n        for (const labelKey in main.mediaGroups[mediaType][groupKey]) {\n          const mediaProperties = main.mediaGroups[mediaType][groupKey][labelKey];\n          callback(mediaProperties, mediaType, groupKey, labelKey);\n        }\n      }\n    });\n  };\n  /**\n   * Adds properties and attributes to the playlist to keep consistent functionality for\n   * playlists throughout VHS.\n   *\n   * @param {Object} config\n   *        Arguments object\n   * @param {Object} config.playlist\n   *        The media playlist\n   * @param {string} [config.uri]\n   *        The uri to the media playlist (if media playlist is not from within a main\n   *        playlist)\n   * @param {string} id\n   *        ID to use for the playlist\n   */\n\n  const setupMediaPlaylist = ({\n    playlist,\n    uri,\n    id\n  }) => {\n    playlist.id = id;\n    playlist.playlistErrors_ = 0;\n    if (uri) {\n      // For media playlists, m3u8-parser does not have access to a URI, as HLS media\n      // playlists do not contain their own source URI, but one is needed for consistency in\n      // VHS.\n      playlist.uri = uri;\n    } // For HLS main playlists, even though certain attributes MUST be defined, the\n    // stream may still be played without them.\n    // For HLS media playlists, m3u8-parser does not attach an attributes object to the\n    // manifest.\n    //\n    // To avoid undefined reference errors through the project, and make the code easier\n    // to write/read, add an empty attributes object for these cases.\n\n    playlist.attributes = playlist.attributes || {};\n  };\n  /**\n   * Adds ID, resolvedUri, and attributes properties to each playlist of the main, where\n   * necessary. In addition, creates playlist IDs for each playlist and adds playlist ID to\n   * playlist references to the playlists array.\n   *\n   * @param {Object} main\n   *        The main playlist\n   */\n\n  const setupMediaPlaylists = main => {\n    let i = main.playlists.length;\n    while (i--) {\n      const playlist = main.playlists[i];\n      setupMediaPlaylist({\n        playlist,\n        id: createPlaylistID(i, playlist.uri)\n      });\n      playlist.resolvedUri = resolveUrl(main.uri, playlist.uri);\n      main.playlists[playlist.id] = playlist; // URI reference added for backwards compatibility\n\n      main.playlists[playlist.uri] = playlist; // Although the spec states an #EXT-X-STREAM-INF tag MUST have a BANDWIDTH attribute,\n      // the stream can be played without it. Although an attributes property may have been\n      // added to the playlist to prevent undefined references, issue a warning to fix the\n      // manifest.\n\n      if (!playlist.attributes.BANDWIDTH) {\n        log.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n      }\n    }\n  };\n  /**\n   * Adds resolvedUri properties to each media group.\n   *\n   * @param {Object} main\n   *        The main playlist\n   */\n\n  const resolveMediaGroupUris = main => {\n    forEachMediaGroup(main, properties => {\n      if (properties.uri) {\n        properties.resolvedUri = resolveUrl(main.uri, properties.uri);\n      }\n    });\n  };\n  /**\n   * Creates a main playlist wrapper to insert a sole media playlist into.\n   *\n   * @param {Object} media\n   *        Media playlist\n   * @param {string} uri\n   *        The media URI\n   *\n   * @return {Object}\n   *         main playlist\n   */\n\n  const mainForMedia = (media, uri) => {\n    const id = createPlaylistID(0, uri);\n    const main = {\n      mediaGroups: {\n        'AUDIO': {},\n        'VIDEO': {},\n        'CLOSED-CAPTIONS': {},\n        'SUBTITLES': {}\n      },\n      uri: window.location.href,\n      resolvedUri: window.location.href,\n      playlists: [{\n        uri,\n        id,\n        resolvedUri: uri,\n        // m3u8-parser does not attach an attributes property to media playlists so make\n        // sure that the property is attached to avoid undefined reference errors\n        attributes: {}\n      }]\n    }; // set up ID reference\n\n    main.playlists[id] = main.playlists[0]; // URI reference added for backwards compatibility\n\n    main.playlists[uri] = main.playlists[0];\n    return main;\n  };\n  /**\n   * Does an in-place update of the main manifest to add updated playlist URI references\n   * as well as other properties needed by VHS that aren't included by the parser.\n   *\n   * @param {Object} main\n   *        main manifest object\n   * @param {string} uri\n   *        The source URI\n   * @param {function} createGroupID\n   *        A function to determine how to create the groupID for mediaGroups\n   */\n\n  const addPropertiesToMain = (main, uri, createGroupID = groupID) => {\n    main.uri = uri;\n    for (let i = 0; i < main.playlists.length; i++) {\n      if (!main.playlists[i].uri) {\n        // Set up phony URIs for the playlists since playlists are referenced by their URIs\n        // throughout VHS, but some formats (e.g., DASH) don't have external URIs\n        // TODO: consider adding dummy URIs in mpd-parser\n        const phonyUri = `placeholder-uri-${i}`;\n        main.playlists[i].uri = phonyUri;\n      }\n    }\n    const audioOnlyMain = isAudioOnly(main);\n    forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n      // add a playlist array under properties\n      if (!properties.playlists || !properties.playlists.length) {\n        // If the manifest is audio only and this media group does not have a uri, check\n        // if the media group is located in the main list of playlists. If it is, don't add\n        // placeholder properties as it shouldn't be considered an alternate audio track.\n        if (audioOnlyMain && mediaType === 'AUDIO' && !properties.uri) {\n          for (let i = 0; i < main.playlists.length; i++) {\n            const p = main.playlists[i];\n            if (p.attributes && p.attributes.AUDIO && p.attributes.AUDIO === groupKey) {\n              return;\n            }\n          }\n        }\n        properties.playlists = [_extends$1({}, properties)];\n      }\n      properties.playlists.forEach(function (p, i) {\n        const groupId = createGroupID(mediaType, groupKey, labelKey, p);\n        const id = createPlaylistID(i, groupId);\n        if (p.uri) {\n          p.resolvedUri = p.resolvedUri || resolveUrl(main.uri, p.uri);\n        } else {\n          // DEPRECATED, this has been added to prevent a breaking change.\n          // previously we only ever had a single media group playlist, so\n          // we mark the first playlist uri without prepending the index as we used to\n          // ideally we would do all of the playlists the same way.\n          p.uri = i === 0 ? groupId : id; // don't resolve a placeholder uri to an absolute url, just use\n          // the placeholder again\n\n          p.resolvedUri = p.uri;\n        }\n        p.id = p.id || id; // add an empty attributes object, all playlists are\n        // expected to have this.\n\n        p.attributes = p.attributes || {}; // setup ID and URI references (URI for backwards compatibility)\n\n        main.playlists[p.id] = p;\n        main.playlists[p.uri] = p;\n      });\n    });\n    setupMediaPlaylists(main);\n    resolveMediaGroupUris(main);\n  };\n  class DateRangesStorage {\n    constructor() {\n      this.offset_ = null;\n      this.pendingDateRanges_ = new Map();\n      this.processedDateRanges_ = new Map();\n    }\n    setOffset(segments = []) {\n      // already set\n      if (this.offset_ !== null) {\n        return;\n      } // no segment to process\n\n      if (!segments.length) {\n        return;\n      }\n      const [firstSegment] = segments; // no program date time\n\n      if (firstSegment.programDateTime === undefined) {\n        return;\n      } // Set offset as ProgramDateTime for the very first segment of the very first playlist load:\n\n      this.offset_ = firstSegment.programDateTime / 1000;\n    }\n    setPendingDateRanges(dateRanges = []) {\n      if (!dateRanges.length) {\n        return;\n      }\n      const [dateRange] = dateRanges;\n      const startTime = dateRange.startDate.getTime();\n      this.trimProcessedDateRanges_(startTime);\n      this.pendingDateRanges_ = dateRanges.reduce((map, pendingDateRange) => {\n        map.set(pendingDateRange.id, pendingDateRange);\n        return map;\n      }, new Map());\n    }\n    processDateRange(dateRange) {\n      this.pendingDateRanges_.delete(dateRange.id);\n      this.processedDateRanges_.set(dateRange.id, dateRange);\n    }\n    getDateRangesToProcess() {\n      if (this.offset_ === null) {\n        return [];\n      }\n      const dateRangeClasses = {};\n      const dateRangesToProcess = [];\n      this.pendingDateRanges_.forEach((dateRange, id) => {\n        if (this.processedDateRanges_.has(id)) {\n          return;\n        }\n        dateRange.startTime = dateRange.startDate.getTime() / 1000 - this.offset_;\n        dateRange.processDateRange = () => this.processDateRange(dateRange);\n        dateRangesToProcess.push(dateRange);\n        if (!dateRange.class) {\n          return;\n        }\n        if (dateRangeClasses[dateRange.class]) {\n          const length = dateRangeClasses[dateRange.class].push(dateRange);\n          dateRange.classListIndex = length - 1;\n        } else {\n          dateRangeClasses[dateRange.class] = [dateRange];\n          dateRange.classListIndex = 0;\n        }\n      });\n      for (const dateRange of dateRangesToProcess) {\n        const classList = dateRangeClasses[dateRange.class] || [];\n        if (dateRange.endDate) {\n          dateRange.endTime = dateRange.endDate.getTime() / 1000 - this.offset_;\n        } else if (dateRange.endOnNext && classList[dateRange.classListIndex + 1]) {\n          dateRange.endTime = classList[dateRange.classListIndex + 1].startTime;\n        } else if (dateRange.duration) {\n          dateRange.endTime = dateRange.startTime + dateRange.duration;\n        } else if (dateRange.plannedDuration) {\n          dateRange.endTime = dateRange.startTime + dateRange.plannedDuration;\n        } else {\n          dateRange.endTime = dateRange.startTime;\n        }\n      }\n      return dateRangesToProcess;\n    }\n    trimProcessedDateRanges_(startTime) {\n      const copy = new Map(this.processedDateRanges_);\n      copy.forEach((dateRange, id) => {\n        if (dateRange.startDate.getTime() < startTime) {\n          this.processedDateRanges_.delete(id);\n        }\n      });\n    }\n  }\n  const QUOTA_EXCEEDED_ERR = 22;\n  const getStreamingNetworkErrorMetadata = ({\n    requestType,\n    request,\n    error,\n    parseFailure\n  }) => {\n    const isBadStatus = request.status < 200 || request.status > 299;\n    const isFailure = request.status >= 400 && request.status <= 499;\n    const errorMetadata = {\n      uri: request.uri,\n      requestType\n    };\n    const isBadStatusOrParseFailure = isBadStatus && !isFailure || parseFailure;\n    if (error && isFailure) {\n      // copy original error and add to the metadata.\n      errorMetadata.error = _extends$1({}, error);\n      errorMetadata.errorType = videojs.Error.NetworkRequestFailed;\n    } else if (request.aborted) {\n      errorMetadata.errorType = videojs.Error.NetworkRequestAborted;\n    } else if (request.timedout) {\n      errorMetadata.erroType = videojs.Error.NetworkRequestTimeout;\n    } else if (isBadStatusOrParseFailure) {\n      const errorType = parseFailure ? videojs.Error.NetworkBodyParserFailed : videojs.Error.NetworkBadStatus;\n      errorMetadata.errorType = errorType;\n      errorMetadata.status = request.status;\n      errorMetadata.headers = request.headers;\n    }\n    return errorMetadata;\n  };\n  const {\n    EventTarget: EventTarget$1\n  } = videojs;\n  const addLLHLSQueryDirectives = (uri, media) => {\n    if (media.endList || !media.serverControl) {\n      return uri;\n    }\n    const parameters = {};\n    if (media.serverControl.canBlockReload) {\n      const {\n        preloadSegment\n      } = media; // next msn is a zero based value, length is not.\n\n      let nextMSN = media.mediaSequence + media.segments.length; // If preload segment has parts then it is likely\n      // that we are going to request a part of that preload segment.\n      // the logic below is used to determine that.\n\n      if (preloadSegment) {\n        const parts = preloadSegment.parts || []; // _HLS_part is a zero based index\n\n        const nextPart = getKnownPartCount(media) - 1; // if nextPart is > -1 and not equal to just the\n        // length of parts, then we know we had part preload hints\n        // and we need to add the _HLS_part= query\n\n        if (nextPart > -1 && nextPart !== parts.length - 1) {\n          // add existing parts to our preload hints\n          // eslint-disable-next-line\n          parameters._HLS_part = nextPart;\n        } // this if statement makes sure that we request the msn\n        // of the preload segment if:\n        // 1. the preload segment had parts (and was not yet a full segment)\n        //    but was added to our segments array\n        // 2. the preload segment had preload hints for parts that are not in\n        //    the manifest yet.\n        // in all other cases we want the segment after the preload segment\n        // which will be given by using media.segments.length because it is 1 based\n        // rather than 0 based.\n\n        if (nextPart > -1 || parts.length) {\n          nextMSN--;\n        }\n      } // add _HLS_msn= in front of any _HLS_part query\n      // eslint-disable-next-line\n\n      parameters._HLS_msn = nextMSN;\n    }\n    if (media.serverControl && media.serverControl.canSkipUntil) {\n      // add _HLS_skip= infront of all other queries.\n      // eslint-disable-next-line\n      parameters._HLS_skip = media.serverControl.canSkipDateranges ? 'v2' : 'YES';\n    }\n    if (Object.keys(parameters).length) {\n      const parsedUri = new window.URL(uri);\n      ['_HLS_skip', '_HLS_msn', '_HLS_part'].forEach(function (name) {\n        if (!parameters.hasOwnProperty(name)) {\n          return;\n        }\n        parsedUri.searchParams.set(name, parameters[name]);\n      });\n      uri = parsedUri.toString();\n    }\n    return uri;\n  };\n  /**\n   * Returns a new segment object with properties and\n   * the parts array merged.\n   *\n   * @param {Object} a the old segment\n   * @param {Object} b the new segment\n   *\n   * @return {Object} the merged segment\n   */\n\n  const updateSegment = (a, b) => {\n    if (!a) {\n      return b;\n    }\n    const result = merge(a, b); // if only the old segment has preload hints\n    // and the new one does not, remove preload hints.\n\n    if (a.preloadHints && !b.preloadHints) {\n      delete result.preloadHints;\n    } // if only the old segment has parts\n    // then the parts are no longer valid\n\n    if (a.parts && !b.parts) {\n      delete result.parts; // if both segments have parts\n      // copy part propeties from the old segment\n      // to the new one.\n    } else if (a.parts && b.parts) {\n      for (let i = 0; i < b.parts.length; i++) {\n        if (a.parts && a.parts[i]) {\n          result.parts[i] = merge(a.parts[i], b.parts[i]);\n        }\n      }\n    } // set skipped to false for segments that have\n    // have had information merged from the old segment.\n\n    if (!a.skipped && b.skipped) {\n      result.skipped = false;\n    } // set preload to false for segments that have\n    // had information added in the new segment.\n\n    if (a.preload && !b.preload) {\n      result.preload = false;\n    }\n    return result;\n  };\n  /**\n   * Returns a new array of segments that is the result of merging\n   * properties from an older list of segments onto an updated\n   * list. No properties on the updated playlist will be ovewritten.\n   *\n   * @param {Array} original the outdated list of segments\n   * @param {Array} update the updated list of segments\n   * @param {number=} offset the index of the first update\n   * segment in the original segment list. For non-live playlists,\n   * this should always be zero and does not need to be\n   * specified. For live playlists, it should be the difference\n   * between the media sequence numbers in the original and updated\n   * playlists.\n   * @return {Array} a list of merged segment objects\n   */\n\n  const updateSegments = (original, update, offset) => {\n    const oldSegments = original.slice();\n    const newSegments = update.slice();\n    offset = offset || 0;\n    const result = [];\n    let currentMap;\n    for (let newIndex = 0; newIndex < newSegments.length; newIndex++) {\n      const oldSegment = oldSegments[newIndex + offset];\n      const newSegment = newSegments[newIndex];\n      if (oldSegment) {\n        currentMap = oldSegment.map || currentMap;\n        result.push(updateSegment(oldSegment, newSegment));\n      } else {\n        // carry over map to new segment if it is missing\n        if (currentMap && !newSegment.map) {\n          newSegment.map = currentMap;\n        }\n        result.push(newSegment);\n      }\n    }\n    return result;\n  };\n  const resolveSegmentUris = (segment, baseUri) => {\n    // preloadSegment will not have a uri at all\n    // as the segment isn't actually in the manifest yet, only parts\n    if (!segment.resolvedUri && segment.uri) {\n      segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n    }\n    if (segment.key && !segment.key.resolvedUri) {\n      segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n    }\n    if (segment.map && !segment.map.resolvedUri) {\n      segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n    }\n    if (segment.map && segment.map.key && !segment.map.key.resolvedUri) {\n      segment.map.key.resolvedUri = resolveUrl(baseUri, segment.map.key.uri);\n    }\n    if (segment.parts && segment.parts.length) {\n      segment.parts.forEach(p => {\n        if (p.resolvedUri) {\n          return;\n        }\n        p.resolvedUri = resolveUrl(baseUri, p.uri);\n      });\n    }\n    if (segment.preloadHints && segment.preloadHints.length) {\n      segment.preloadHints.forEach(p => {\n        if (p.resolvedUri) {\n          return;\n        }\n        p.resolvedUri = resolveUrl(baseUri, p.uri);\n      });\n    }\n  };\n  const getAllSegments = function (media) {\n    const segments = media.segments || [];\n    const preloadSegment = media.preloadSegment; // a preloadSegment with only preloadHints is not currently\n    // a usable segment, only include a preloadSegment that has\n    // parts.\n\n    if (preloadSegment && preloadSegment.parts && preloadSegment.parts.length) {\n      // if preloadHints has a MAP that means that the\n      // init segment is going to change. We cannot use any of the parts\n      // from this preload segment.\n      if (preloadSegment.preloadHints) {\n        for (let i = 0; i < preloadSegment.preloadHints.length; i++) {\n          if (preloadSegment.preloadHints[i].type === 'MAP') {\n            return segments;\n          }\n        }\n      } // set the duration for our preload segment to target duration.\n\n      preloadSegment.duration = media.targetDuration;\n      preloadSegment.preload = true;\n      segments.push(preloadSegment);\n    }\n    return segments;\n  }; // consider the playlist unchanged if the playlist object is the same or\n  // the number of segments is equal, the media sequence number is unchanged,\n  // and this playlist hasn't become the end of the playlist\n\n  const isPlaylistUnchanged = (a, b) => a === b || a.segments && b.segments && a.segments.length === b.segments.length && a.endList === b.endList && a.mediaSequence === b.mediaSequence && a.preloadSegment === b.preloadSegment;\n  /**\n    * Returns a new main playlist that is the result of merging an\n    * updated media playlist into the original version. If the\n    * updated media playlist does not match any of the playlist\n    * entries in the original main playlist, null is returned.\n    *\n    * @param {Object} main a parsed main M3U8 object\n    * @param {Object} media a parsed media M3U8 object\n    * @return {Object} a new object that represents the original\n    * main playlist with the updated media playlist merged in, or\n    * null if the merge produced no change.\n    */\n\n  const updateMain$1 = (main, newMedia, unchangedCheck = isPlaylistUnchanged) => {\n    const result = merge(main, {});\n    const oldMedia = result.playlists[newMedia.id];\n    if (!oldMedia) {\n      return null;\n    }\n    if (unchangedCheck(oldMedia, newMedia)) {\n      return null;\n    }\n    newMedia.segments = getAllSegments(newMedia);\n    const mergedPlaylist = merge(oldMedia, newMedia); // always use the new media's preload segment\n\n    if (mergedPlaylist.preloadSegment && !newMedia.preloadSegment) {\n      delete mergedPlaylist.preloadSegment;\n    } // if the update could overlap existing segment information, merge the two segment lists\n\n    if (oldMedia.segments) {\n      if (newMedia.skip) {\n        newMedia.segments = newMedia.segments || []; // add back in objects for skipped segments, so that we merge\n        // old properties into the new segments\n\n        for (let i = 0; i < newMedia.skip.skippedSegments; i++) {\n          newMedia.segments.unshift({\n            skipped: true\n          });\n        }\n      }\n      mergedPlaylist.segments = updateSegments(oldMedia.segments, newMedia.segments, newMedia.mediaSequence - oldMedia.mediaSequence);\n    } // resolve any segment URIs to prevent us from having to do it later\n\n    mergedPlaylist.segments.forEach(segment => {\n      resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n    }); // TODO Right now in the playlists array there are two references to each playlist, one\n    // that is referenced by index, and one by URI. The index reference may no longer be\n    // necessary.\n\n    for (let i = 0; i < result.playlists.length; i++) {\n      if (result.playlists[i].id === newMedia.id) {\n        result.playlists[i] = mergedPlaylist;\n      }\n    }\n    result.playlists[newMedia.id] = mergedPlaylist; // URI reference added for backwards compatibility\n\n    result.playlists[newMedia.uri] = mergedPlaylist; // update media group playlist references.\n\n    forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n      if (!properties.playlists) {\n        return;\n      }\n      for (let i = 0; i < properties.playlists.length; i++) {\n        if (newMedia.id === properties.playlists[i].id) {\n          properties.playlists[i] = mergedPlaylist;\n        }\n      }\n    });\n    return result;\n  };\n  /**\n   * Calculates the time to wait before refreshing a live playlist\n   *\n   * @param {Object} media\n   *        The current media\n   * @param {boolean} update\n   *        True if there were any updates from the last refresh, false otherwise\n   * @return {number}\n   *         The time in ms to wait before refreshing the live playlist\n   */\n\n  const refreshDelay = (media, update) => {\n    const segments = media.segments || [];\n    const lastSegment = segments[segments.length - 1];\n    const lastPart = lastSegment && lastSegment.parts && lastSegment.parts[lastSegment.parts.length - 1];\n    const lastDuration = lastPart && lastPart.duration || lastSegment && lastSegment.duration;\n    if (update && lastDuration) {\n      return lastDuration * 1000;\n    } // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n\n    return (media.partTargetDuration || media.targetDuration || 10) * 500;\n  };\n  const playlistMetadataPayload = (playlists, type, isLive) => {\n    if (!playlists) {\n      return;\n    }\n    const renditions = [];\n    playlists.forEach(playlist => {\n      // we need attributes to populate rendition data.\n      if (!playlist.attributes) {\n        return;\n      }\n      const {\n        BANDWIDTH,\n        RESOLUTION,\n        CODECS\n      } = playlist.attributes;\n      renditions.push({\n        id: playlist.id,\n        bandwidth: BANDWIDTH,\n        resolution: RESOLUTION,\n        codecs: CODECS\n      });\n    });\n    return {\n      type,\n      isLive,\n      renditions\n    };\n  };\n  /**\n   * Load a playlist from a remote location\n   *\n   * @class PlaylistLoader\n   * @extends Stream\n   * @param {string|Object} src url or object of manifest\n   * @param {boolean} withCredentials the withCredentials xhr option\n   * @class\n   */\n\n  class PlaylistLoader extends EventTarget$1 {\n    constructor(src, vhs, options = {}) {\n      super();\n      if (!src) {\n        throw new Error('A non-empty playlist URL or object is required');\n      }\n      this.logger_ = logger('PlaylistLoader');\n      const {\n        withCredentials = false\n      } = options;\n      this.src = src;\n      this.vhs_ = vhs;\n      this.withCredentials = withCredentials;\n      this.addDateRangesToTextTrack_ = options.addDateRangesToTextTrack;\n      const vhsOptions = vhs.options_;\n      this.customTagParsers = vhsOptions && vhsOptions.customTagParsers || [];\n      this.customTagMappers = vhsOptions && vhsOptions.customTagMappers || [];\n      this.llhls = vhsOptions && vhsOptions.llhls;\n      this.dateRangesStorage_ = new DateRangesStorage(); // initialize the loader state\n\n      this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n      this.handleMediaupdatetimeout_ = this.handleMediaupdatetimeout_.bind(this);\n      this.on('mediaupdatetimeout', this.handleMediaupdatetimeout_);\n      this.on('loadedplaylist', this.handleLoadedPlaylist_.bind(this));\n    }\n    handleLoadedPlaylist_() {\n      const mediaPlaylist = this.media();\n      if (!mediaPlaylist) {\n        return;\n      }\n      this.dateRangesStorage_.setOffset(mediaPlaylist.segments);\n      this.dateRangesStorage_.setPendingDateRanges(mediaPlaylist.dateRanges);\n      const availableDateRanges = this.dateRangesStorage_.getDateRangesToProcess();\n      if (!availableDateRanges.length || !this.addDateRangesToTextTrack_) {\n        return;\n      }\n      this.addDateRangesToTextTrack_(availableDateRanges);\n    }\n    handleMediaupdatetimeout_() {\n      if (this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n      const media = this.media();\n      let uri = resolveUrl(this.main.uri, media.uri);\n      if (this.llhls) {\n        uri = addLLHLSQueryDirectives(uri, media);\n      }\n      this.state = 'HAVE_CURRENT_METADATA';\n      this.request = this.vhs_.xhr({\n        uri,\n        withCredentials: this.withCredentials,\n        requestType: 'hls-playlist'\n      }, (error, req) => {\n        // disposed\n        if (!this.request) {\n          return;\n        }\n        if (error) {\n          return this.playlistRequestError(this.request, this.media(), 'HAVE_METADATA');\n        }\n        this.haveMetadata({\n          playlistString: this.request.responseText,\n          url: this.media().uri,\n          id: this.media().id\n        });\n      });\n    }\n    playlistRequestError(xhr, playlist, startingState) {\n      const {\n        uri,\n        id\n      } = playlist; // any in-flight request is now finished\n\n      this.request = null;\n      if (startingState) {\n        this.state = startingState;\n      }\n      this.error = {\n        playlist: this.main.playlists[id],\n        status: xhr.status,\n        message: `HLS playlist request error at URL: ${uri}.`,\n        responseText: xhr.responseText,\n        code: xhr.status >= 500 ? 4 : 2,\n        metadata: getStreamingNetworkErrorMetadata({\n          requestType: xhr.requestType,\n          request: xhr,\n          error: xhr.error\n        })\n      };\n      this.trigger('error');\n    }\n    parseManifest_({\n      url,\n      manifestString\n    }) {\n      try {\n        return parseManifest({\n          onwarn: ({\n            message\n          }) => this.logger_(`m3u8-parser warn for ${url}: ${message}`),\n          oninfo: ({\n            message\n          }) => this.logger_(`m3u8-parser info for ${url}: ${message}`),\n          manifestString,\n          customTagParsers: this.customTagParsers,\n          customTagMappers: this.customTagMappers,\n          llhls: this.llhls\n        });\n      } catch (error) {\n        this.error = error;\n        this.error.metadata = {\n          errorType: videojs.Error.StreamingHlsPlaylistParserError,\n          error\n        };\n      }\n    }\n    /**\n     * Update the playlist loader's state in response to a new or updated playlist.\n     *\n     * @param {string} [playlistString]\n     *        Playlist string (if playlistObject is not provided)\n     * @param {Object} [playlistObject]\n     *        Playlist object (if playlistString is not provided)\n     * @param {string} url\n     *        URL of playlist\n     * @param {string} id\n     *        ID to use for playlist\n     */\n\n    haveMetadata({\n      playlistString,\n      playlistObject,\n      url,\n      id\n    }) {\n      // any in-flight request is now finished\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n      const metadata = {\n        playlistInfo: {\n          type: 'media',\n          uri: url\n        }\n      };\n      this.trigger({\n        type: 'playlistparsestart',\n        metadata\n      });\n      const playlist = playlistObject || this.parseManifest_({\n        url,\n        manifestString: playlistString\n      });\n      playlist.lastRequest = Date.now();\n      setupMediaPlaylist({\n        playlist,\n        uri: url,\n        id\n      }); // merge this playlist into the main manifest\n\n      const update = updateMain$1(this.main, playlist);\n      this.targetDuration = playlist.partTargetDuration || playlist.targetDuration;\n      this.pendingMedia_ = null;\n      if (update) {\n        this.main = update;\n        this.media_ = this.main.playlists[id];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n      this.updateMediaUpdateTimeout_(refreshDelay(this.media(), !!update));\n      metadata.parsedPlaylist = playlistMetadataPayload(this.main.playlists, metadata.playlistInfo.type, !this.media_.endList);\n      this.trigger({\n        type: 'playlistparsecomplete',\n        metadata\n      });\n      this.trigger('loadedplaylist');\n    }\n    /**\n      * Abort any outstanding work and clean up.\n      */\n\n    dispose() {\n      this.trigger('dispose');\n      this.stopRequest();\n      window.clearTimeout(this.mediaUpdateTimeout);\n      window.clearTimeout(this.finalRenditionTimeout);\n      this.dateRangesStorage_ = new DateRangesStorage();\n      this.off();\n    }\n    stopRequest() {\n      if (this.request) {\n        const oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    /**\n      * When called without any arguments, returns the currently\n      * active media playlist. When called with a single argument,\n      * triggers the playlist loader to asynchronously switch to the\n      * specified media playlist. Calling this method while the\n      * loader is in the HAVE_NOTHING causes an error to be emitted\n      * but otherwise has no effect.\n      *\n      * @param {Object=} playlist the parsed media playlist\n      * object to switch to\n      * @param {boolean=} shouldDelay whether we should delay the request by half target duration\n      *\n      * @return {Playlist} the current loaded media\n      */\n\n    media(playlist, shouldDelay) {\n      // getter\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      } // find the playlist object if the target playlist has been\n      // specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.main.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n        playlist = this.main.playlists[playlist];\n      }\n      window.clearTimeout(this.finalRenditionTimeout);\n      if (shouldDelay) {\n        const delay = (playlist.partTargetDuration || playlist.targetDuration) / 2 * 1000 || 5 * 1000;\n        this.finalRenditionTimeout = window.setTimeout(this.media.bind(this, playlist, false), delay);\n        return;\n      }\n      const startingState = this.state;\n      const mediaChange = !this.media_ || playlist.id !== this.media_.id;\n      const mainPlaylistRef = this.main.playlists[playlist.id]; // switch to fully loaded playlists immediately\n\n      if (mainPlaylistRef && mainPlaylistRef.endList ||\n      // handle the case of a playlist object (e.g., if using vhs-json with a resolved\n      // media playlist or, for the case of demuxed audio, a resolved audio media group)\n      playlist.endList && playlist.segments.length) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          if (startingState === 'HAVE_MAIN_MANIFEST') {\n            // The initial playlist was a main manifest, and the first media selected was\n            // also provided (in the form of a resolved playlist object) as part of the\n            // source object (rather than just a URL). Therefore, since the media playlist\n            // doesn't need to be requested, loadedmetadata won't trigger as part of the\n            // normal flow, and needs an explicit trigger here.\n            this.trigger('loadedmetadata');\n          } else {\n            this.trigger('mediachange');\n          }\n        }\n        return;\n      } // We update/set the timeout here so that live playlists\n      // that are not a media change will \"start\" the loader as expected.\n      // We expect that this function will start the media update timeout\n      // cycle again. This also prevents a playlist switch failure from\n      // causing us to stall during live.\n\n      this.updateMediaUpdateTimeout_(refreshDelay(playlist, true)); // switching to the active playlist is a no-op\n\n      if (!mediaChange) {\n        return;\n      }\n      this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n      if (this.request) {\n        if (playlist.resolvedUri === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      } // request the new playlist\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n      this.pendingMedia_ = playlist;\n      const metadata = {\n        playlistInfo: {\n          type: 'media',\n          uri: playlist.uri\n        }\n      };\n      this.trigger({\n        type: 'playlistrequeststart',\n        metadata\n      });\n      this.request = this.vhs_.xhr({\n        uri: playlist.resolvedUri,\n        withCredentials: this.withCredentials,\n        requestType: 'hls-playlist'\n      }, (error, req) => {\n        // disposed\n        if (!this.request) {\n          return;\n        }\n        playlist.lastRequest = Date.now();\n        playlist.resolvedUri = resolveManifestRedirect(playlist.resolvedUri, req);\n        if (error) {\n          return this.playlistRequestError(this.request, playlist, startingState);\n        }\n        this.trigger({\n          type: 'playlistrequestcomplete',\n          metadata\n        });\n        this.haveMetadata({\n          playlistString: req.responseText,\n          url: playlist.uri,\n          id: playlist.id\n        }); // fire loadedmetadata the first time a media playlist is loaded\n\n        if (startingState === 'HAVE_MAIN_MANIFEST') {\n          this.trigger('loadedmetadata');\n        } else {\n          this.trigger('mediachange');\n        }\n      });\n    }\n    /**\n     * pause loading of the playlist\n     */\n\n    pause() {\n      if (this.mediaUpdateTimeout) {\n        window.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = null;\n      }\n      this.stopRequest();\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      } // Need to restore state now that no activity is happening\n\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MAIN_MANIFEST or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MAIN_MANIFEST';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n    load(shouldDelay) {\n      if (this.mediaUpdateTimeout) {\n        window.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = null;\n      }\n      const media = this.media();\n      if (shouldDelay) {\n        const delay = media ? (media.partTargetDuration || media.targetDuration) / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window.setTimeout(() => {\n          this.mediaUpdateTimeout = null;\n          this.load();\n        }, delay);\n        return;\n      }\n      if (!this.started) {\n        this.start();\n        return;\n      }\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n    updateMediaUpdateTimeout_(delay) {\n      if (this.mediaUpdateTimeout) {\n        window.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = null;\n      } // we only have use mediaupdatetimeout for live playlists.\n\n      if (!this.media() || this.media().endList) {\n        return;\n      }\n      this.mediaUpdateTimeout = window.setTimeout(() => {\n        this.mediaUpdateTimeout = null;\n        this.trigger('mediaupdatetimeout');\n        this.updateMediaUpdateTimeout_(delay);\n      }, delay);\n    }\n    /**\n     * start loading of the playlist\n     */\n\n    start() {\n      this.started = true;\n      if (typeof this.src === 'object') {\n        // in the case of an entirely constructed manifest object (meaning there's no actual\n        // manifest on a server), default the uri to the page's href\n        if (!this.src.uri) {\n          this.src.uri = window.location.href;\n        } // resolvedUri is added on internally after the initial request. Since there's no\n        // request for pre-resolved manifests, add on resolvedUri here.\n\n        this.src.resolvedUri = this.src.uri; // Since a manifest object was passed in as the source (instead of a URL), the first\n        // request can be skipped (since the top level of the manifest, at a minimum, is\n        // already available as a parsed manifest object). However, if the manifest object\n        // represents a main playlist, some media playlists may need to be resolved before\n        // the starting segment list is available. Therefore, go directly to setup of the\n        // initial playlist, and let the normal flow continue from there.\n        //\n        // Note that the call to setup is asynchronous, as other sections of VHS may assume\n        // that the first request is asynchronous.\n\n        setTimeout(() => {\n          this.setupInitialPlaylist(this.src);\n        }, 0);\n        return;\n      }\n      const metadata = {\n        playlistInfo: {\n          type: 'multivariant',\n          uri: this.src\n        }\n      };\n      this.trigger({\n        type: 'playlistrequeststart',\n        metadata\n      }); // request the specified URL\n\n      this.request = this.vhs_.xhr({\n        uri: this.src,\n        withCredentials: this.withCredentials,\n        requestType: 'hls-playlist'\n      }, (error, req) => {\n        // disposed\n        if (!this.request) {\n          return;\n        } // clear the loader's request reference\n\n        this.request = null;\n        if (error) {\n          this.error = {\n            status: req.status,\n            message: `HLS playlist request error at URL: ${this.src}.`,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2,\n            metadata: getStreamingNetworkErrorMetadata({\n              requestType: req.requestType,\n              request: req,\n              error\n            })\n          };\n          if (this.state === 'HAVE_NOTHING') {\n            this.started = false;\n          }\n          return this.trigger('error');\n        }\n        this.trigger({\n          type: 'playlistrequestcomplete',\n          metadata\n        });\n        this.src = resolveManifestRedirect(this.src, req);\n        this.trigger({\n          type: 'playlistparsestart',\n          metadata\n        });\n        const manifest = this.parseManifest_({\n          manifestString: req.responseText,\n          url: this.src\n        }); // we haven't loaded any variant playlists here so we default to false for isLive.\n\n        metadata.parsedPlaylist = playlistMetadataPayload(manifest.playlists, metadata.playlistInfo.type, false);\n        this.trigger({\n          type: 'playlistparsecomplete',\n          metadata\n        });\n        this.setupInitialPlaylist(manifest);\n      });\n    }\n    srcUri() {\n      return typeof this.src === 'string' ? this.src : this.src.uri;\n    }\n    /**\n     * Given a manifest object that's either a main or media playlist, trigger the proper\n     * events and set the state of the playlist loader.\n     *\n     * If the manifest object represents a main playlist, `loadedplaylist` will be\n     * triggered to allow listeners to select a playlist. If none is selected, the loader\n     * will default to the first one in the playlists array.\n     *\n     * If the manifest object represents a media playlist, `loadedplaylist` will be\n     * triggered followed by `loadedmetadata`, as the only available playlist is loaded.\n     *\n     * In the case of a media playlist, a main playlist object wrapper with one playlist\n     * will be created so that all logic can handle playlists in the same fashion (as an\n     * assumed manifest object schema).\n     *\n     * @param {Object} manifest\n     *        The parsed manifest object\n     */\n\n    setupInitialPlaylist(manifest) {\n      this.state = 'HAVE_MAIN_MANIFEST';\n      if (manifest.playlists) {\n        this.main = manifest;\n        addPropertiesToMain(this.main, this.srcUri()); // If the initial main playlist has playlists wtih segments already resolved,\n        // then resolve URIs in advance, as they are usually done after a playlist request,\n        // which may not happen if the playlist is resolved.\n\n        manifest.playlists.forEach(playlist => {\n          playlist.segments = getAllSegments(playlist);\n          playlist.segments.forEach(segment => {\n            resolveSegmentUris(segment, playlist.resolvedUri);\n          });\n        });\n        this.trigger('loadedplaylist');\n        if (!this.request) {\n          // no media playlist was specifically selected so start\n          // from the first listed one\n          this.media(this.main.playlists[0]);\n        }\n        return;\n      } // In order to support media playlists passed in as vhs-json, the case where the uri\n      // is not provided as part of the manifest should be considered, and an appropriate\n      // default used.\n\n      const uri = this.srcUri() || window.location.href;\n      this.main = mainForMedia(manifest, uri);\n      this.haveMetadata({\n        playlistObject: manifest,\n        url: uri,\n        id: this.main.playlists[0].id\n      });\n      this.trigger('loadedmetadata');\n    }\n    /**\n     * Updates or deletes a preexisting pathway clone.\n     * Ensures that all playlists related to the old pathway clone are\n     * either updated or deleted.\n     *\n     * @param {Object} clone On update, the pathway clone object for the newly updated pathway clone.\n     *        On delete, the old pathway clone object to be deleted.\n     * @param {boolean} isUpdate True if the pathway is to be updated,\n     *        false if it is meant to be deleted.\n     */\n\n    updateOrDeleteClone(clone, isUpdate) {\n      const main = this.main;\n      const pathway = clone.ID;\n      let i = main.playlists.length; // Iterate backwards through the playlist so we can remove playlists if necessary.\n\n      while (i--) {\n        const p = main.playlists[i];\n        if (p.attributes['PATHWAY-ID'] === pathway) {\n          const oldPlaylistUri = p.resolvedUri;\n          const oldPlaylistId = p.id; // update the indexed playlist and add new playlists by ID and URI\n\n          if (isUpdate) {\n            const newPlaylistUri = this.createCloneURI_(p.resolvedUri, clone);\n            const newPlaylistId = createPlaylistID(pathway, newPlaylistUri);\n            const attributes = this.createCloneAttributes_(pathway, p.attributes);\n            const updatedPlaylist = this.createClonePlaylist_(p, newPlaylistId, clone, attributes);\n            main.playlists[i] = updatedPlaylist;\n            main.playlists[newPlaylistId] = updatedPlaylist;\n            main.playlists[newPlaylistUri] = updatedPlaylist;\n          } else {\n            // Remove the indexed playlist.\n            main.playlists.splice(i, 1);\n          } // Remove playlists by the old ID and URI.\n\n          delete main.playlists[oldPlaylistId];\n          delete main.playlists[oldPlaylistUri];\n        }\n      }\n      this.updateOrDeleteCloneMedia(clone, isUpdate);\n    }\n    /**\n     * Updates or deletes media data based on the pathway clone object.\n     * Due to the complexity of the media groups and playlists, in all cases\n     * we remove all of the old media groups and playlists.\n     * On updates, we then create new media groups and playlists based on the\n     * new pathway clone object.\n     *\n     * @param {Object} clone The pathway clone object for the newly updated pathway clone.\n     * @param {boolean} isUpdate True if the pathway is to be updated,\n     *        false if it is meant to be deleted.\n     */\n\n    updateOrDeleteCloneMedia(clone, isUpdate) {\n      const main = this.main;\n      const id = clone.ID;\n      ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(mediaType => {\n        if (!main.mediaGroups[mediaType] || !main.mediaGroups[mediaType][id]) {\n          return;\n        }\n        for (const groupKey in main.mediaGroups[mediaType]) {\n          // Remove all media playlists for the media group for this pathway clone.\n          if (groupKey === id) {\n            for (const labelKey in main.mediaGroups[mediaType][groupKey]) {\n              const oldMedia = main.mediaGroups[mediaType][groupKey][labelKey];\n              oldMedia.playlists.forEach((p, i) => {\n                const oldMediaPlaylist = main.playlists[p.id];\n                const oldPlaylistId = oldMediaPlaylist.id;\n                const oldPlaylistUri = oldMediaPlaylist.resolvedUri;\n                delete main.playlists[oldPlaylistId];\n                delete main.playlists[oldPlaylistUri];\n              });\n            } // Delete the old media group.\n\n            delete main.mediaGroups[mediaType][groupKey];\n          }\n        }\n      }); // Create the new media groups and playlists if there is an update.\n\n      if (isUpdate) {\n        this.createClonedMediaGroups_(clone);\n      }\n    }\n    /**\n     * Given a pathway clone object, clones all necessary playlists.\n     *\n     * @param {Object} clone The pathway clone object.\n     * @param {Object} basePlaylist The original playlist to clone from.\n     */\n\n    addClonePathway(clone, basePlaylist = {}) {\n      const main = this.main;\n      const index = main.playlists.length;\n      const uri = this.createCloneURI_(basePlaylist.resolvedUri, clone);\n      const playlistId = createPlaylistID(clone.ID, uri);\n      const attributes = this.createCloneAttributes_(clone.ID, basePlaylist.attributes);\n      const playlist = this.createClonePlaylist_(basePlaylist, playlistId, clone, attributes);\n      main.playlists[index] = playlist; // add playlist by ID and URI\n\n      main.playlists[playlistId] = playlist;\n      main.playlists[uri] = playlist;\n      this.createClonedMediaGroups_(clone);\n    }\n    /**\n     * Given a pathway clone object we create clones of all media.\n     * In this function, all necessary information and updated playlists\n     * are added to the `mediaGroup` object.\n     * Playlists are also added to the `playlists` array so the media groups\n     * will be properly linked.\n     *\n     * @param {Object} clone The pathway clone object.\n     */\n\n    createClonedMediaGroups_(clone) {\n      const id = clone.ID;\n      const baseID = clone['BASE-ID'];\n      const main = this.main;\n      ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(mediaType => {\n        // If the media type doesn't exist, or there is already a clone, skip\n        // to the next media type.\n        if (!main.mediaGroups[mediaType] || main.mediaGroups[mediaType][id]) {\n          return;\n        }\n        for (const groupKey in main.mediaGroups[mediaType]) {\n          if (groupKey === baseID) {\n            // Create the group.\n            main.mediaGroups[mediaType][id] = {};\n          } else {\n            // There is no need to iterate over label keys in this case.\n            continue;\n          }\n          for (const labelKey in main.mediaGroups[mediaType][groupKey]) {\n            const oldMedia = main.mediaGroups[mediaType][groupKey][labelKey];\n            main.mediaGroups[mediaType][id][labelKey] = _extends$1({}, oldMedia);\n            const newMedia = main.mediaGroups[mediaType][id][labelKey]; // update URIs on the media\n\n            const newUri = this.createCloneURI_(oldMedia.resolvedUri, clone);\n            newMedia.resolvedUri = newUri;\n            newMedia.uri = newUri; // Reset playlists in the new media group.\n\n            newMedia.playlists = []; // Create new playlists in the newly cloned media group.\n\n            oldMedia.playlists.forEach((p, i) => {\n              const oldMediaPlaylist = main.playlists[p.id];\n              const group = groupID(mediaType, id, labelKey);\n              const newPlaylistID = createPlaylistID(id, group); // Check to see if it already exists\n\n              if (oldMediaPlaylist && !main.playlists[newPlaylistID]) {\n                const newMediaPlaylist = this.createClonePlaylist_(oldMediaPlaylist, newPlaylistID, clone);\n                const newPlaylistUri = newMediaPlaylist.resolvedUri;\n                main.playlists[newPlaylistID] = newMediaPlaylist;\n                main.playlists[newPlaylistUri] = newMediaPlaylist;\n              }\n              newMedia.playlists[i] = this.createClonePlaylist_(p, newPlaylistID, clone);\n            });\n          }\n        }\n      });\n    }\n    /**\n     * Using the original playlist to be cloned, and the pathway clone object\n     * information, we create a new playlist.\n     *\n     * @param {Object} basePlaylist  The original playlist to be cloned from.\n     * @param {string} id The desired id of the newly cloned playlist.\n     * @param {Object} clone The pathway clone object.\n     * @param {Object} attributes An optional object to populate the `attributes` property in the playlist.\n     *\n     * @return {Object} The combined cloned playlist.\n     */\n\n    createClonePlaylist_(basePlaylist, id, clone, attributes) {\n      const uri = this.createCloneURI_(basePlaylist.resolvedUri, clone);\n      const newProps = {\n        resolvedUri: uri,\n        uri,\n        id\n      }; // Remove all segments from previous playlist in the clone.\n\n      if (basePlaylist.segments) {\n        newProps.segments = [];\n      }\n      if (attributes) {\n        newProps.attributes = attributes;\n      }\n      return merge(basePlaylist, newProps);\n    }\n    /**\n     * Generates an updated URI for a cloned pathway based on the original\n     * pathway's URI and the paramaters from the pathway clone object in the\n     * content steering server response.\n     *\n     * @param {string} baseUri URI to be updated in the cloned pathway.\n     * @param {Object} clone The pathway clone object.\n     *\n     * @return {string} The updated URI for the cloned pathway.\n     */\n\n    createCloneURI_(baseURI, clone) {\n      const uri = new URL(baseURI);\n      uri.hostname = clone['URI-REPLACEMENT'].HOST;\n      const params = clone['URI-REPLACEMENT'].PARAMS; // Add params to the cloned URL.\n\n      for (const key of Object.keys(params)) {\n        uri.searchParams.set(key, params[key]);\n      }\n      return uri.href;\n    }\n    /**\n     * Helper function to create the attributes needed for the new clone.\n     * This mainly adds the necessary media attributes.\n     *\n     * @param {string} id The pathway clone object ID.\n     * @param {Object} oldAttributes The old attributes to compare to.\n     * @return {Object} The new attributes to add to the playlist.\n     */\n\n    createCloneAttributes_(id, oldAttributes) {\n      const attributes = {\n        ['PATHWAY-ID']: id\n      };\n      ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(mediaType => {\n        if (oldAttributes[mediaType]) {\n          attributes[mediaType] = id;\n        }\n      });\n      return attributes;\n    }\n    /**\n     * Returns the key ID set from a playlist\n     *\n     * @param {playlist} playlist to fetch the key ID set from.\n     * @return a Set of 32 digit hex strings that represent the unique keyIds for that playlist.\n     */\n\n    getKeyIdSet(playlist) {\n      if (playlist.contentProtection) {\n        const keyIds = new Set();\n        for (const keysystem in playlist.contentProtection) {\n          const keyId = playlist.contentProtection[keysystem].attributes.keyId;\n          if (keyId) {\n            keyIds.add(keyId.toLowerCase());\n          }\n        }\n        return keyIds;\n      }\n    }\n  }\n\n  /**\n   * @file xhr.js\n   */\n\n  const callbackWrapper = function (request, error, response, callback) {\n    const reqResponse = request.responseType === 'arraybuffer' ? request.response : request.responseText;\n    if (!error && reqResponse) {\n      request.responseTime = Date.now();\n      request.roundTripTime = request.responseTime - request.requestTime;\n      request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n      if (!request.bandwidth) {\n        request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n      }\n    }\n    if (response.headers) {\n      request.responseHeaders = response.headers;\n    } // videojs.xhr now uses a specific code on the error\n    // object to signal that a request has timed out instead\n    // of setting a boolean on the request object\n\n    if (error && error.code === 'ETIMEDOUT') {\n      request.timedout = true;\n    } // videojs.xhr no longer considers status codes outside of 200 and 0\n    // (for file uris) to be errors, but the old XHR did, so emulate that\n    // behavior. Status 206 may be used in response to byterange requests.\n\n    if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n      error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n    }\n    callback(error, request);\n  };\n  /**\n   * Iterates over the request hooks Set and calls them in order\n   *\n   * @param {Set} hooks the hook Set to iterate over\n   * @param {Object} options the request options to pass to the xhr wrapper\n   * @return the callback hook function return value, the modified or new options Object.\n   */\n\n  const callAllRequestHooks = (requestSet, options) => {\n    if (!requestSet || !requestSet.size) {\n      return;\n    }\n    let newOptions = options;\n    requestSet.forEach(requestCallback => {\n      newOptions = requestCallback(newOptions);\n    });\n    return newOptions;\n  };\n  /**\n   * Iterates over the response hooks Set and calls them in order.\n   *\n   * @param {Set} hooks the hook Set to iterate over\n   * @param {Object} request the xhr request object\n   * @param {Object} error the xhr error object\n   * @param {Object} response the xhr response object\n   */\n\n  const callAllResponseHooks = (responseSet, request, error, response) => {\n    if (!responseSet || !responseSet.size) {\n      return;\n    }\n    responseSet.forEach(responseCallback => {\n      responseCallback(request, error, response);\n    });\n  };\n  const xhrFactory = function () {\n    const xhr = function XhrFunction(options, callback) {\n      // Add a default timeout\n      options = merge({\n        timeout: 45e3\n      }, options); // Allow an optional user-specified function to modify the option\n      // object before we construct the xhr request\n      // TODO: Remove beforeRequest in the next major release.\n\n      const beforeRequest = XhrFunction.beforeRequest || videojs.Vhs.xhr.beforeRequest; // onRequest and onResponse hooks as a Set, at either the player or global level.\n      // TODO: new Set added here for beforeRequest alias. Remove this when beforeRequest is removed.\n\n      const _requestCallbackSet = XhrFunction._requestCallbackSet || videojs.Vhs.xhr._requestCallbackSet || new Set();\n      const _responseCallbackSet = XhrFunction._responseCallbackSet || videojs.Vhs.xhr._responseCallbackSet;\n      if (beforeRequest && typeof beforeRequest === 'function') {\n        videojs.log.warn('beforeRequest is deprecated, use onRequest instead.');\n        _requestCallbackSet.add(beforeRequest);\n      } // Use the standard videojs.xhr() method unless `videojs.Vhs.xhr` has been overriden\n      // TODO: switch back to videojs.Vhs.xhr.name === 'XhrFunction' when we drop IE11\n\n      const xhrMethod = videojs.Vhs.xhr.original === true ? videojs.xhr : videojs.Vhs.xhr; // call all registered onRequest hooks, assign new options.\n\n      const beforeRequestOptions = callAllRequestHooks(_requestCallbackSet, options); // Remove the beforeRequest function from the hooks set so stale beforeRequest functions are not called.\n\n      _requestCallbackSet.delete(beforeRequest); // xhrMethod will call XMLHttpRequest.open and XMLHttpRequest.send\n\n      const request = xhrMethod(beforeRequestOptions || options, function (error, response) {\n        // call all registered onResponse hooks\n        callAllResponseHooks(_responseCallbackSet, request, error, response);\n        return callbackWrapper(request, error, response, callback);\n      });\n      const originalAbort = request.abort;\n      request.abort = function () {\n        request.aborted = true;\n        return originalAbort.apply(request, arguments);\n      };\n      request.uri = options.uri;\n      request.requestType = options.requestType;\n      request.requestTime = Date.now();\n      return request;\n    };\n    xhr.original = true;\n    return xhr;\n  };\n  /**\n   * Turns segment byterange into a string suitable for use in\n   * HTTP Range requests\n   *\n   * @param {Object} byterange - an object with two values defining the start and end\n   *                             of a byte-range\n   */\n\n  const byterangeStr = function (byterange) {\n    // `byterangeEnd` is one less than `offset + length` because the HTTP range\n    // header uses inclusive ranges\n    let byterangeEnd;\n    const byterangeStart = byterange.offset;\n    if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n      byterangeEnd = window.BigInt(byterange.offset) + window.BigInt(byterange.length) - window.BigInt(1);\n    } else {\n      byterangeEnd = byterange.offset + byterange.length - 1;\n    }\n    return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n  };\n  /**\n   * Defines headers for use in the xhr request for a particular segment.\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   */\n\n  const segmentXhrHeaders = function (segment) {\n    const headers = {};\n    if (segment.byterange) {\n      headers.Range = byterangeStr(segment.byterange);\n    }\n    return headers;\n  };\n\n  /**\n   * @file bin-utils.js\n   */\n\n  /**\n   * convert a TimeRange to text\n   *\n   * @param {TimeRange} range the timerange to use for conversion\n   * @param {number} i the iterator on the range to convert\n   * @return {string} the range in string format\n   */\n\n  const textRange = function (range, i) {\n    return range.start(i) + '-' + range.end(i);\n  };\n  /**\n   * format a number as hex string\n   *\n   * @param {number} e The number\n   * @param {number} i the iterator\n   * @return {string} the hex formatted number as a string\n   */\n\n  const formatHexString = function (e, i) {\n    const value = e.toString(16);\n    return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n  };\n  const formatAsciiString = function (e) {\n    if (e >= 0x20 && e < 0x7e) {\n      return String.fromCharCode(e);\n    }\n    return '.';\n  };\n  /**\n   * Creates an object for sending to a web worker modifying properties that are TypedArrays\n   * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n   *\n   * @param {Object} message\n   *        Object of properties and values to send to the web worker\n   * @return {Object}\n   *         Modified message with TypedArray values expanded\n   * @function createTransferableMessage\n   */\n\n  const createTransferableMessage = function (message) {\n    const transferable = {};\n    Object.keys(message).forEach(key => {\n      const value = message[key];\n      if (isArrayBufferView(value)) {\n        transferable[key] = {\n          bytes: value.buffer,\n          byteOffset: value.byteOffset,\n          byteLength: value.byteLength\n        };\n      } else {\n        transferable[key] = value;\n      }\n    });\n    return transferable;\n  };\n  /**\n   * Returns a unique string identifier for a media initialization\n   * segment.\n   *\n   * @param {Object} initSegment\n   *        the init segment object.\n   *\n   * @return {string} the generated init segment id\n   */\n\n  const initSegmentId = function (initSegment) {\n    const byterange = initSegment.byterange || {\n      length: Infinity,\n      offset: 0\n    };\n    return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n  };\n  /**\n   * Returns a unique string identifier for a media segment key.\n   *\n   * @param {Object} key the encryption key\n   * @return {string} the unique id for the media segment key.\n   */\n\n  const segmentKeyId = function (key) {\n    return key.resolvedUri;\n  };\n  /**\n   * utils to help dump binary data to the console\n   *\n   * @param {Array|TypedArray} data\n   *        data to dump to a string\n   *\n   * @return {string} the data as a hex string.\n   */\n\n  const hexDump = data => {\n    const bytes = Array.prototype.slice.call(data);\n    const step = 16;\n    let result = '';\n    let hex;\n    let ascii;\n    for (let j = 0; j < bytes.length / step; j++) {\n      hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n      ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n      result += hex + ' ' + ascii + '\\n';\n    }\n    return result;\n  };\n  const tagDump = ({\n    bytes\n  }) => hexDump(bytes);\n  const textRanges = ranges => {\n    let result = '';\n    let i;\n    for (i = 0; i < ranges.length; i++) {\n      result += textRange(ranges, i) + ' ';\n    }\n    return result;\n  };\n  var utils = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    createTransferableMessage: createTransferableMessage,\n    initSegmentId: initSegmentId,\n    segmentKeyId: segmentKeyId,\n    hexDump: hexDump,\n    tagDump: tagDump,\n    textRanges: textRanges\n  });\n\n  // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n  // 25% was arbitrarily chosen, and may need to be refined over time.\n\n  const SEGMENT_END_FUDGE_PERCENT = 0.25;\n  /**\n   * Converts a player time (any time that can be gotten/set from player.currentTime(),\n   * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n   * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n   *\n   * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n   * point\" (a point where we have a mapping from program time to player time, with player\n   * time being the post transmux start of the segment).\n   *\n   * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n   *\n   * @param {number} playerTime the player time\n   * @param {Object} segment the segment which contains the player time\n   * @return {Date} program time\n   */\n\n  const playerTimeToProgramTime = (playerTime, segment) => {\n    if (!segment.dateTimeObject) {\n      // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n      // be used to map the start of a segment with a real world time).\n      return null;\n    }\n    const transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n    const transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n    const startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n    const offsetFromSegmentStart = playerTime - startOfSegment;\n    return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n  };\n  const originalSegmentVideoDuration = videoTimingInfo => {\n    return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n  };\n  /**\n   * Finds a segment that contains the time requested given as an ISO-8601 string. The\n   * returned segment might be an estimate or an accurate match.\n   *\n   * @param {string} programTime The ISO-8601 programTime to find a match for\n   * @param {Object} playlist A playlist object to search within\n   */\n\n  const findSegmentForProgramTime = (programTime, playlist) => {\n    // Assumptions:\n    //  - verifyProgramDateTimeTags has already been run\n    //  - live streams have been started\n    let dateTimeObject;\n    try {\n      dateTimeObject = new Date(programTime);\n    } catch (e) {\n      return null;\n    }\n    if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n      return null;\n    }\n    let segment = playlist.segments[0];\n    if (dateTimeObject < new Date(segment.dateTimeObject)) {\n      // Requested time is before stream start.\n      return null;\n    }\n    for (let i = 0; i < playlist.segments.length - 1; i++) {\n      segment = playlist.segments[i];\n      const nextSegmentStart = new Date(playlist.segments[i + 1].dateTimeObject);\n      if (dateTimeObject < nextSegmentStart) {\n        break;\n      }\n    }\n    const lastSegment = playlist.segments[playlist.segments.length - 1];\n    const lastSegmentStart = lastSegment.dateTimeObject;\n    const lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n    const lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n    if (dateTimeObject > lastSegmentEnd) {\n      // Beyond the end of the stream, or our best guess of the end of the stream.\n      return null;\n    }\n    if (dateTimeObject > new Date(lastSegmentStart)) {\n      segment = lastSegment;\n    }\n    return {\n      segment,\n      estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n      // Although, given that all segments have accurate date time objects, the segment\n      // selected should be accurate, unless the video has been transmuxed at some point\n      // (determined by the presence of the videoTimingInfo object), the segment's \"player\n      // time\" (the start time in the player) can't be considered accurate.\n      type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n    };\n  };\n  /**\n   * Finds a segment that contains the given player time(in seconds).\n   *\n   * @param {number} time The player time to find a match for\n   * @param {Object} playlist A playlist object to search within\n   */\n\n  const findSegmentForPlayerTime = (time, playlist) => {\n    // Assumptions:\n    // - there will always be a segment.duration\n    // - we can start from zero\n    // - segments are in time order\n    if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n      return null;\n    }\n    let segmentEnd = 0;\n    let segment;\n    for (let i = 0; i < playlist.segments.length; i++) {\n      segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n      // should contain the most accurate values we have for the segment's player times.\n      //\n      // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n      // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n      // calculate an end value.\n\n      segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n      if (time <= segmentEnd) {\n        break;\n      }\n    }\n    const lastSegment = playlist.segments[playlist.segments.length - 1];\n    if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n      // The time requested is beyond the stream end.\n      return null;\n    }\n    if (time > segmentEnd) {\n      // The time is within or beyond the last segment.\n      //\n      // Check to see if the time is beyond a reasonable guess of the end of the stream.\n      if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n        // Technically, because the duration value is only an estimate, the time may still\n        // exist in the last segment, however, there isn't enough information to make even\n        // a reasonable estimate.\n        return null;\n      }\n      segment = lastSegment;\n    }\n    return {\n      segment,\n      estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n      // Because videoTimingInfo is only set after transmux, it is the only way to get\n      // accurate timing values.\n      type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n    };\n  };\n  /**\n   * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n   * If the offset returned is positive, the programTime occurs after the\n   * comparisonTimestamp.\n   * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n   *\n   * @param {string} comparisonTimeStamp An ISO-8601 timestamp to compare against\n   * @param {string} programTime The programTime as an ISO-8601 string\n   * @return {number} offset\n   */\n\n  const getOffsetFromTimestamp = (comparisonTimeStamp, programTime) => {\n    let segmentDateTime;\n    let programDateTime;\n    try {\n      segmentDateTime = new Date(comparisonTimeStamp);\n      programDateTime = new Date(programTime);\n    } catch (e) {// TODO handle error\n    }\n    const segmentTimeEpoch = segmentDateTime.getTime();\n    const programTimeEpoch = programDateTime.getTime();\n    return (programTimeEpoch - segmentTimeEpoch) / 1000;\n  };\n  /**\n   * Checks that all segments in this playlist have programDateTime tags.\n   *\n   * @param {Object} playlist A playlist object\n   */\n\n  const verifyProgramDateTimeTags = playlist => {\n    if (!playlist.segments || playlist.segments.length === 0) {\n      return false;\n    }\n    for (let i = 0; i < playlist.segments.length; i++) {\n      const segment = playlist.segments[i];\n      if (!segment.dateTimeObject) {\n        return false;\n      }\n    }\n    return true;\n  };\n  /**\n   * Returns the programTime of the media given a playlist and a playerTime.\n   * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n   * If the segments containing the time requested have not been buffered yet, an estimate\n   * may be returned to the callback.\n   *\n   * @param {Object} args\n   * @param {Object} args.playlist A playlist object to search within\n   * @param {number} time A playerTime in seconds\n   * @param {Function} callback(err, programTime)\n   * @return {string} err.message A detailed error message\n   * @return {Object} programTime\n   * @return {number} programTime.mediaSeconds The streamTime in seconds\n   * @return {string} programTime.programDateTime The programTime as an ISO-8601 String\n   */\n\n  const getProgramTime = ({\n    playlist,\n    time = undefined,\n    callback\n  }) => {\n    if (!callback) {\n      throw new Error('getProgramTime: callback must be provided');\n    }\n    if (!playlist || time === undefined) {\n      return callback({\n        message: 'getProgramTime: playlist and time must be provided'\n      });\n    }\n    const matchedSegment = findSegmentForPlayerTime(time, playlist);\n    if (!matchedSegment) {\n      return callback({\n        message: 'valid programTime was not found'\n      });\n    }\n    if (matchedSegment.type === 'estimate') {\n      return callback({\n        message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n        seekTime: matchedSegment.estimatedStart\n      });\n    }\n    const programTimeObject = {\n      mediaSeconds: time\n    };\n    const programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n    if (programTime) {\n      programTimeObject.programDateTime = programTime.toISOString();\n    }\n    return callback(null, programTimeObject);\n  };\n  /**\n   * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n   *\n   * @param {Object} args\n   * @param {string} args.programTime A programTime to seek to as an ISO-8601 String\n   * @param {Object} args.playlist A playlist to look within\n   * @param {number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n   * @param {Function} args.seekTo A method to perform a seek\n   * @param {boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n   * @param {Object} args.tech The tech to seek on\n   * @param {Function} args.callback(err, newTime) A callback to return the new time to\n   * @return {string} err.message A detailed error message\n   * @return {number} newTime The exact time that was seeked to in seconds\n   */\n\n  const seekToProgramTime = ({\n    programTime,\n    playlist,\n    retryCount = 2,\n    seekTo,\n    pauseAfterSeek = true,\n    tech,\n    callback\n  }) => {\n    if (!callback) {\n      throw new Error('seekToProgramTime: callback must be provided');\n    }\n    if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n      return callback({\n        message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n      });\n    }\n    if (!playlist.endList && !tech.hasStarted_) {\n      return callback({\n        message: 'player must be playing a live stream to start buffering'\n      });\n    }\n    if (!verifyProgramDateTimeTags(playlist)) {\n      return callback({\n        message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n      });\n    }\n    const matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n    if (!matchedSegment) {\n      return callback({\n        message: `${programTime} was not found in the stream`\n      });\n    }\n    const segment = matchedSegment.segment;\n    const mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n    if (matchedSegment.type === 'estimate') {\n      // we've run out of retries\n      if (retryCount === 0) {\n        return callback({\n          message: `${programTime} is not buffered yet. Try again`\n        });\n      }\n      seekTo(matchedSegment.estimatedStart + mediaOffset);\n      tech.one('seeked', () => {\n        seekToProgramTime({\n          programTime,\n          playlist,\n          retryCount: retryCount - 1,\n          seekTo,\n          pauseAfterSeek,\n          tech,\n          callback\n        });\n      });\n      return;\n    } // Since the segment.start value is determined from the buffered end or ending time\n    // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n    // modifications.\n\n    const seekToTime = segment.start + mediaOffset;\n    const seekedCallback = () => {\n      return callback(null, tech.currentTime());\n    }; // listen for seeked event\n\n    tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n    if (pauseAfterSeek) {\n      tech.pause();\n    }\n    seekTo(seekToTime);\n  };\n\n  // which will only happen if the request is complete.\n\n  const callbackOnCompleted = (request, cb) => {\n    if (request.readyState === 4) {\n      return cb();\n    }\n    return;\n  };\n  const containerRequest = (uri, xhr, cb, requestType) => {\n    let bytes = [];\n    let id3Offset;\n    let finished = false;\n    const endRequestAndCallback = function (err, req, type, _bytes) {\n      req.abort();\n      finished = true;\n      return cb(err, req, type, _bytes);\n    };\n    const progressListener = function (error, request) {\n      if (finished) {\n        return;\n      }\n      if (error) {\n        error.metadata = getStreamingNetworkErrorMetadata({\n          requestType,\n          request,\n          error\n        });\n        return endRequestAndCallback(error, request, '', bytes);\n      } // grap the new part of content that was just downloaded\n\n      const newPart = request.responseText.substring(bytes && bytes.byteLength || 0, request.responseText.length); // add that onto bytes\n\n      bytes = concatTypedArrays(bytes, stringToBytes(newPart, true));\n      id3Offset = id3Offset || getId3Offset(bytes); // we need at least 10 bytes to determine a type\n      // or we need at least two bytes after an id3Offset\n\n      if (bytes.length < 10 || id3Offset && bytes.length < id3Offset + 2) {\n        return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n      }\n      const type = detectContainerForBytes(bytes); // if this looks like a ts segment but we don't have enough data\n      // to see the second sync byte, wait until we have enough data\n      // before declaring it ts\n\n      if (type === 'ts' && bytes.length < 188) {\n        return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n      } // this may be an unsynced ts segment\n      // wait for 376 bytes before detecting no container\n\n      if (!type && bytes.length < 376) {\n        return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n      }\n      return endRequestAndCallback(null, request, type, bytes);\n    };\n    const options = {\n      uri,\n      beforeSend(request) {\n        // this forces the browser to pass the bytes to us unprocessed\n        request.overrideMimeType('text/plain; charset=x-user-defined');\n        request.addEventListener('progress', function ({\n          total,\n          loaded\n        }) {\n          return callbackWrapper(request, null, {\n            statusCode: request.status\n          }, progressListener);\n        });\n      }\n    };\n    const request = xhr(options, function (error, response) {\n      return callbackWrapper(request, error, response, progressListener);\n    });\n    return request;\n  };\n  const {\n    EventTarget\n  } = videojs;\n  const dashPlaylistUnchanged = function (a, b) {\n    if (!isPlaylistUnchanged(a, b)) {\n      return false;\n    } // for dash the above check will often return true in scenarios where\n    // the playlist actually has changed because mediaSequence isn't a\n    // dash thing, and we often set it to 1. So if the playlists have the same amount\n    // of segments we return true.\n    // So for dash we need to make sure that the underlying segments are different.\n    // if sidx changed then the playlists are different.\n\n    if (a.sidx && b.sidx && (a.sidx.offset !== b.sidx.offset || a.sidx.length !== b.sidx.length)) {\n      return false;\n    } else if (!a.sidx && b.sidx || a.sidx && !b.sidx) {\n      return false;\n    } // one or the other does not have segments\n    // there was a change.\n\n    if (a.segments && !b.segments || !a.segments && b.segments) {\n      return false;\n    } // neither has segments nothing changed\n\n    if (!a.segments && !b.segments) {\n      return true;\n    } // check segments themselves\n\n    for (let i = 0; i < a.segments.length; i++) {\n      const aSegment = a.segments[i];\n      const bSegment = b.segments[i]; // if uris are different between segments there was a change\n\n      if (aSegment.uri !== bSegment.uri) {\n        return false;\n      } // neither segment has a byterange, there will be no byterange change.\n\n      if (!aSegment.byterange && !bSegment.byterange) {\n        continue;\n      }\n      const aByterange = aSegment.byterange;\n      const bByterange = bSegment.byterange; // if byterange only exists on one of the segments, there was a change.\n\n      if (aByterange && !bByterange || !aByterange && bByterange) {\n        return false;\n      } // if both segments have byterange with different offsets, there was a change.\n\n      if (aByterange.offset !== bByterange.offset || aByterange.length !== bByterange.length) {\n        return false;\n      }\n    } // if everything was the same with segments, this is the same playlist.\n\n    return true;\n  };\n  /**\n   * Use the representation IDs from the mpd object to create groupIDs, the NAME is set to mandatory representation\n   * ID in the parser. This allows for continuous playout across periods with the same representation IDs\n   * (continuous periods as defined in DASH-IF 3.2.12). This is assumed in the mpd-parser as well. If we want to support\n   * periods without continuous playback this function may need modification as well as the parser.\n   */\n\n  const dashGroupId = (type, group, label, playlist) => {\n    // If the manifest somehow does not have an ID (non-dash compliant), use the label.\n    const playlistId = playlist.attributes.NAME || label;\n    return `placeholder-uri-${type}-${group}-${playlistId}`;\n  };\n  /**\n   * Parses the main XML string and updates playlist URI references.\n   *\n   * @param {Object} config\n   *        Object of arguments\n   * @param {string} config.mainXml\n   *        The mpd XML\n   * @param {string} config.srcUrl\n   *        The mpd URL\n   * @param {Date} config.clientOffset\n   *         A time difference between server and client\n   * @param {Object} config.sidxMapping\n   *        SIDX mappings for moof/mdat URIs and byte ranges\n   * @return {Object}\n   *         The parsed mpd manifest object\n   */\n\n  const parseMainXml = ({\n    mainXml,\n    srcUrl,\n    clientOffset,\n    sidxMapping,\n    previousManifest\n  }) => {\n    const manifest = parse(mainXml, {\n      manifestUri: srcUrl,\n      clientOffset,\n      sidxMapping,\n      previousManifest\n    });\n    addPropertiesToMain(manifest, srcUrl, dashGroupId);\n    return manifest;\n  };\n  /**\n   * Removes any mediaGroup labels that no longer exist in the newMain\n   *\n   * @param {Object} update\n   *         The previous mpd object being updated\n   * @param {Object} newMain\n   *         The new mpd object\n   */\n\n  const removeOldMediaGroupLabels = (update, newMain) => {\n    forEachMediaGroup(update, (properties, type, group, label) => {\n      if (!(label in newMain.mediaGroups[type][group])) {\n        delete update.mediaGroups[type][group][label];\n      }\n    });\n  };\n  /**\n   * Returns a new main manifest that is the result of merging an updated main manifest\n   * into the original version.\n   *\n   * @param {Object} oldMain\n   *        The old parsed mpd object\n   * @param {Object} newMain\n   *        The updated parsed mpd object\n   * @return {Object}\n   *         A new object representing the original main manifest with the updated media\n   *         playlists merged in\n   */\n\n  const updateMain = (oldMain, newMain, sidxMapping) => {\n    let noChanges = true;\n    let update = merge(oldMain, {\n      // These are top level properties that can be updated\n      duration: newMain.duration,\n      minimumUpdatePeriod: newMain.minimumUpdatePeriod,\n      timelineStarts: newMain.timelineStarts\n    }); // First update the playlists in playlist list\n\n    for (let i = 0; i < newMain.playlists.length; i++) {\n      const playlist = newMain.playlists[i];\n      if (playlist.sidx) {\n        const sidxKey = generateSidxKey(playlist.sidx); // add sidx segments to the playlist if we have all the sidx info already\n\n        if (sidxMapping && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx) {\n          addSidxSegmentsToPlaylist$1(playlist, sidxMapping[sidxKey].sidx, playlist.sidx.resolvedUri);\n        }\n      }\n      const playlistUpdate = updateMain$1(update, playlist, dashPlaylistUnchanged);\n      if (playlistUpdate) {\n        update = playlistUpdate;\n        noChanges = false;\n      }\n    } // Then update media group playlists\n\n    forEachMediaGroup(newMain, (properties, type, group, label) => {\n      if (properties.playlists && properties.playlists.length) {\n        const id = properties.playlists[0].id;\n        const playlistUpdate = updateMain$1(update, properties.playlists[0], dashPlaylistUnchanged);\n        if (playlistUpdate) {\n          update = playlistUpdate; // add new mediaGroup label if it doesn't exist and assign the new mediaGroup.\n\n          if (!(label in update.mediaGroups[type][group])) {\n            update.mediaGroups[type][group][label] = properties;\n          } // update the playlist reference within media groups\n\n          update.mediaGroups[type][group][label].playlists[0] = update.playlists[id];\n          noChanges = false;\n        }\n      }\n    }); // remove mediaGroup labels and references that no longer exist in the newMain\n\n    removeOldMediaGroupLabels(update, newMain);\n    if (newMain.minimumUpdatePeriod !== oldMain.minimumUpdatePeriod) {\n      noChanges = false;\n    }\n    if (noChanges) {\n      return null;\n    }\n    return update;\n  }; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n  // If the SIDXs have maps, the two maps should match,\n  // both `a` and `b` missing SIDXs is considered matching.\n  // If `a` or `b` but not both have a map, they aren't matching.\n\n  const equivalentSidx = (a, b) => {\n    const neitherMap = Boolean(!a.map && !b.map);\n    const equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n    return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n  }; // exported for testing\n\n  const compareSidxEntry = (playlists, oldSidxMapping) => {\n    const newSidxMapping = {};\n    for (const id in playlists) {\n      const playlist = playlists[id];\n      const currentSidxInfo = playlist.sidx;\n      if (currentSidxInfo) {\n        const key = generateSidxKey(currentSidxInfo);\n        if (!oldSidxMapping[key]) {\n          break;\n        }\n        const savedSidxInfo = oldSidxMapping[key].sidxInfo;\n        if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n          newSidxMapping[key] = oldSidxMapping[key];\n        }\n      }\n    }\n    return newSidxMapping;\n  };\n  /**\n   *  A function that filters out changed items as they need to be requested separately.\n   *\n   *  The method is exported for testing\n   *\n   *  @param {Object} main the parsed mpd XML returned via mpd-parser\n   *  @param {Object} oldSidxMapping the SIDX to compare against\n   */\n\n  const filterChangedSidxMappings = (main, oldSidxMapping) => {\n    const videoSidx = compareSidxEntry(main.playlists, oldSidxMapping);\n    let mediaGroupSidx = videoSidx;\n    forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n      if (properties.playlists && properties.playlists.length) {\n        const playlists = properties.playlists;\n        mediaGroupSidx = merge(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n      }\n    });\n    return mediaGroupSidx;\n  };\n  class DashPlaylistLoader extends EventTarget {\n    // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n    // playlist loader setups from media groups will expect to be able to pass a playlist\n    // (since there aren't external URLs to media playlists with DASH)\n    constructor(srcUrlOrPlaylist, vhs, options = {}, mainPlaylistLoader) {\n      super();\n      this.mainPlaylistLoader_ = mainPlaylistLoader || this;\n      if (!mainPlaylistLoader) {\n        this.isMain_ = true;\n      }\n      const {\n        withCredentials = false\n      } = options;\n      this.vhs_ = vhs;\n      this.withCredentials = withCredentials;\n      this.addMetadataToTextTrack = options.addMetadataToTextTrack;\n      if (!srcUrlOrPlaylist) {\n        throw new Error('A non-empty playlist URL or object is required');\n      } // event naming?\n\n      this.on('minimumUpdatePeriod', () => {\n        this.refreshXml_();\n      }); // live playlist staleness timeout\n\n      this.on('mediaupdatetimeout', () => {\n        this.refreshMedia_(this.media().id);\n      });\n      this.state = 'HAVE_NOTHING';\n      this.loadedPlaylists_ = {};\n      this.logger_ = logger('DashPlaylistLoader'); // initialize the loader state\n      // The mainPlaylistLoader will be created with a string\n\n      if (this.isMain_) {\n        this.mainPlaylistLoader_.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n        // once multi-period is refactored\n\n        this.mainPlaylistLoader_.sidxMapping_ = {};\n      } else {\n        this.childPlaylist_ = srcUrlOrPlaylist;\n      }\n    }\n    requestErrored_(err, request, startingState) {\n      // disposed\n      if (!this.request) {\n        return true;\n      } // pending request is cleared\n\n      this.request = null;\n      if (err) {\n        // use the provided error object or create one\n        // based on the request/response\n        this.error = typeof err === 'object' && !(err instanceof Error) ? err : {\n          status: request.status,\n          message: 'DASH request error at URL: ' + request.uri,\n          response: request.response,\n          // MEDIA_ERR_NETWORK\n          code: 2,\n          metadata: err.metadata\n        };\n        if (startingState) {\n          this.state = startingState;\n        }\n        this.trigger('error');\n        return true;\n      }\n    }\n    /**\n     * Verify that the container of the sidx segment can be parsed\n     * and if it can, get and parse that segment.\n     */\n\n    addSidxSegments_(playlist, startingState, cb) {\n      const sidxKey = playlist.sidx && generateSidxKey(playlist.sidx); // playlist lacks sidx or sidx segments were added to this playlist already.\n\n      if (!playlist.sidx || !sidxKey || this.mainPlaylistLoader_.sidxMapping_[sidxKey]) {\n        // keep this function async\n        this.mediaRequest_ = window.setTimeout(() => cb(false), 0);\n        return;\n      } // resolve the segment URL relative to the playlist\n\n      const uri = resolveManifestRedirect(playlist.sidx.resolvedUri);\n      const fin = (err, request) => {\n        if (this.requestErrored_(err, request, startingState)) {\n          return;\n        }\n        const sidxMapping = this.mainPlaylistLoader_.sidxMapping_;\n        const {\n          requestType\n        } = request;\n        let sidx;\n        try {\n          sidx = parseSidx_1(toUint8(request.response).subarray(8));\n        } catch (e) {\n          e.metadata = getStreamingNetworkErrorMetadata({\n            requestType,\n            request,\n            parseFailure: true\n          }); // sidx parsing failed.\n\n          this.requestErrored_(e, request, startingState);\n          return;\n        }\n        sidxMapping[sidxKey] = {\n          sidxInfo: playlist.sidx,\n          sidx\n        };\n        addSidxSegmentsToPlaylist$1(playlist, sidx, playlist.sidx.resolvedUri);\n        return cb(true);\n      };\n      const REQUEST_TYPE = 'dash-sidx';\n      this.request = containerRequest(uri, this.vhs_.xhr, (err, request, container, bytes) => {\n        if (err) {\n          return fin(err, request);\n        }\n        if (!container || container !== 'mp4') {\n          const sidxContainer = container || 'unknown';\n          return fin({\n            status: request.status,\n            message: `Unsupported ${sidxContainer} container type for sidx segment at URL: ${uri}`,\n            // response is just bytes in this case\n            // but we really don't want to return that.\n            response: '',\n            playlist,\n            internal: true,\n            playlistExclusionDuration: Infinity,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          }, request);\n        } // if we already downloaded the sidx bytes in the container request, use them\n\n        const {\n          offset,\n          length\n        } = playlist.sidx.byterange;\n        if (bytes.length >= length + offset) {\n          return fin(err, {\n            response: bytes.subarray(offset, offset + length),\n            status: request.status,\n            uri: request.uri\n          });\n        } // otherwise request sidx bytes\n\n        this.request = this.vhs_.xhr({\n          uri,\n          responseType: 'arraybuffer',\n          requestType: 'dash-sidx',\n          headers: segmentXhrHeaders({\n            byterange: playlist.sidx.byterange\n          })\n        }, fin);\n      }, REQUEST_TYPE);\n    }\n    dispose() {\n      this.trigger('dispose');\n      this.stopRequest();\n      this.loadedPlaylists_ = {};\n      window.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      window.clearTimeout(this.mediaRequest_);\n      window.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n      this.mediaRequest_ = null;\n      this.minimumUpdatePeriodTimeout_ = null;\n      if (this.mainPlaylistLoader_.createMupOnMedia_) {\n        this.off('loadedmetadata', this.mainPlaylistLoader_.createMupOnMedia_);\n        this.mainPlaylistLoader_.createMupOnMedia_ = null;\n      }\n      this.off();\n    }\n    hasPendingRequest() {\n      return this.request || this.mediaRequest_;\n    }\n    stopRequest() {\n      if (this.request) {\n        const oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    media(playlist) {\n      // getter\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n      const startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.mainPlaylistLoader_.main.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n        playlist = this.mainPlaylistLoader_.main.playlists[playlist];\n      }\n      const mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to previously loaded playlists immediately\n\n      if (mediaChange && this.loadedPlaylists_[playlist.id] && this.loadedPlaylists_[playlist.id].endList) {\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n        return;\n      } // switching to the active playlist is a no-op\n\n      if (!mediaChange) {\n        return;\n      } // switching from an already loaded playlist\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n      this.addSidxSegments_(playlist, startingState, sidxChanged => {\n        // everything is ready just continue to haveMetadata\n        this.haveMetadata({\n          startingState,\n          playlist\n        });\n      });\n    }\n    haveMetadata({\n      startingState,\n      playlist\n    }) {\n      this.state = 'HAVE_METADATA';\n      this.loadedPlaylists_[playlist.id] = playlist;\n      this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n      this.refreshMedia_(playlist.id); // fire loadedmetadata the first time a media playlist is loaded\n      // to resolve setup of media groups\n\n      if (startingState === 'HAVE_MAIN_MANIFEST') {\n        this.trigger('loadedmetadata');\n      } else {\n        // trigger media change if the active media has been updated\n        this.trigger('mediachange');\n      }\n    }\n    pause() {\n      if (this.mainPlaylistLoader_.createMupOnMedia_) {\n        this.off('loadedmetadata', this.mainPlaylistLoader_.createMupOnMedia_);\n        this.mainPlaylistLoader_.createMupOnMedia_ = null;\n      }\n      this.stopRequest();\n      window.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n      if (this.isMain_) {\n        window.clearTimeout(this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_);\n        this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_ = null;\n      }\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n    load(isFinalRendition) {\n      window.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n      const media = this.media();\n      if (isFinalRendition) {\n        const delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window.setTimeout(() => this.load(), delay);\n        return;\n      } // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n      if (media && !media.endList) {\n        // Check to see if this is the main loader and the MUP was cleared (this happens\n        // when the loader was paused). `media` should be set at this point since one is always\n        // set during `start()`.\n        if (this.isMain_ && !this.minimumUpdatePeriodTimeout_) {\n          // Trigger minimumUpdatePeriod to refresh the main manifest\n          this.trigger('minimumUpdatePeriod'); // Since there was no prior minimumUpdatePeriodTimeout it should be recreated\n\n          this.updateMinimumUpdatePeriodTimeout_();\n        }\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n    start() {\n      this.started = true; // We don't need to request the main manifest again\n      // Call this asynchronously to match the xhr request behavior below\n\n      if (!this.isMain_) {\n        this.mediaRequest_ = window.setTimeout(() => this.haveMain_(), 0);\n        return;\n      }\n      this.requestMain_((req, mainChanged) => {\n        this.haveMain_();\n        if (!this.hasPendingRequest() && !this.media_) {\n          this.media(this.mainPlaylistLoader_.main.playlists[0]);\n        }\n      });\n    }\n    requestMain_(cb) {\n      const metadata = {\n        manifestInfo: {\n          uri: this.mainPlaylistLoader_.srcUrl\n        }\n      };\n      this.trigger({\n        type: 'manifestrequeststart',\n        metadata\n      });\n      this.request = this.vhs_.xhr({\n        uri: this.mainPlaylistLoader_.srcUrl,\n        withCredentials: this.withCredentials,\n        requestType: 'dash-manifest'\n      }, (error, req) => {\n        if (error) {\n          const {\n            requestType\n          } = req;\n          error.metadata = getStreamingNetworkErrorMetadata({\n            requestType,\n            request: req,\n            error\n          });\n        }\n        if (this.requestErrored_(error, req)) {\n          if (this.state === 'HAVE_NOTHING') {\n            this.started = false;\n          }\n          return;\n        }\n        this.trigger({\n          type: 'manifestrequestcomplete',\n          metadata\n        });\n        const mainChanged = req.responseText !== this.mainPlaylistLoader_.mainXml_;\n        this.mainPlaylistLoader_.mainXml_ = req.responseText;\n        if (req.responseHeaders && req.responseHeaders.date) {\n          this.mainLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          this.mainLoaded_ = Date.now();\n        }\n        this.mainPlaylistLoader_.srcUrl = resolveManifestRedirect(this.mainPlaylistLoader_.srcUrl, req);\n        if (mainChanged) {\n          this.handleMain_();\n          this.syncClientServerClock_(() => {\n            return cb(req, mainChanged);\n          });\n          return;\n        }\n        return cb(req, mainChanged);\n      });\n    }\n    /**\n     * Parses the main xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n    syncClientServerClock_(done) {\n      const utcTiming = parseUTCTiming(this.mainPlaylistLoader_.mainXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n\n      if (utcTiming === null) {\n        this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now();\n        return done();\n      }\n      if (utcTiming.method === 'DIRECT') {\n        this.mainPlaylistLoader_.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n      this.request = this.vhs_.xhr({\n        uri: resolveUrl(this.mainPlaylistLoader_.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials,\n        requestType: 'dash-clock-sync'\n      }, (error, req) => {\n        // disposed\n        if (!this.request) {\n          return;\n        }\n        if (error) {\n          const {\n            requestType\n          } = req;\n          this.error.metadata = getStreamingNetworkErrorMetadata({\n            requestType,\n            request: req,\n            error\n          }); // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n\n          this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now();\n          return done();\n        }\n        let serverTime;\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = this.mainLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n        this.mainPlaylistLoader_.clientOffset_ = serverTime - Date.now();\n        done();\n      });\n    }\n    haveMain_() {\n      this.state = 'HAVE_MAIN_MANIFEST';\n      if (this.isMain_) {\n        // We have the main playlist at this point, so\n        // trigger this to allow PlaylistController\n        // to make an initial playlist selection\n        this.trigger('loadedplaylist');\n      } else if (!this.media_) {\n        // no media playlist was specifically selected so select\n        // the one the child playlist loader was created with\n        this.media(this.childPlaylist_);\n      }\n    }\n    handleMain_() {\n      // clear media request\n      this.mediaRequest_ = null;\n      const oldMain = this.mainPlaylistLoader_.main;\n      const metadata = {\n        manifestInfo: {\n          uri: this.mainPlaylistLoader_.srcUrl\n        }\n      };\n      this.trigger({\n        type: 'manifestparsestart',\n        metadata\n      });\n      let newMain;\n      try {\n        newMain = parseMainXml({\n          mainXml: this.mainPlaylistLoader_.mainXml_,\n          srcUrl: this.mainPlaylistLoader_.srcUrl,\n          clientOffset: this.mainPlaylistLoader_.clientOffset_,\n          sidxMapping: this.mainPlaylistLoader_.sidxMapping_,\n          previousManifest: oldMain\n        });\n      } catch (error) {\n        this.error = error;\n        this.error.metadata = {\n          errorType: videojs.Error.StreamingDashManifestParserError,\n          error\n        };\n        this.trigger('error');\n      } // if we have an old main to compare the new main against\n\n      if (oldMain) {\n        newMain = updateMain(oldMain, newMain, this.mainPlaylistLoader_.sidxMapping_);\n      } // only update main if we have a new main\n\n      this.mainPlaylistLoader_.main = newMain ? newMain : oldMain;\n      const location = this.mainPlaylistLoader_.main.locations && this.mainPlaylistLoader_.main.locations[0];\n      if (location && location !== this.mainPlaylistLoader_.srcUrl) {\n        this.mainPlaylistLoader_.srcUrl = location;\n      }\n      if (!oldMain || newMain && newMain.minimumUpdatePeriod !== oldMain.minimumUpdatePeriod) {\n        this.updateMinimumUpdatePeriodTimeout_();\n      }\n      this.addEventStreamToMetadataTrack_(newMain);\n      if (newMain) {\n        const {\n          duration,\n          endList\n        } = newMain;\n        const renditions = [];\n        newMain.playlists.forEach(playlist => {\n          renditions.push({\n            id: playlist.id,\n            bandwidth: playlist.attributes.BANDWIDTH,\n            resolution: playlist.attributes.RESOLUTION,\n            codecs: playlist.attributes.CODECS\n          });\n        });\n        const parsedManifest = {\n          duration,\n          isLive: !endList,\n          renditions\n        };\n        metadata.parsedManifest = parsedManifest;\n        this.trigger({\n          type: 'manifestparsecomplete',\n          metadata\n        });\n      }\n      return Boolean(newMain);\n    }\n    updateMinimumUpdatePeriodTimeout_() {\n      const mpl = this.mainPlaylistLoader_; // cancel any pending creation of mup on media\n      // a new one will be added if needed.\n\n      if (mpl.createMupOnMedia_) {\n        mpl.off('loadedmetadata', mpl.createMupOnMedia_);\n        mpl.createMupOnMedia_ = null;\n      } // clear any pending timeouts\n\n      if (mpl.minimumUpdatePeriodTimeout_) {\n        window.clearTimeout(mpl.minimumUpdatePeriodTimeout_);\n        mpl.minimumUpdatePeriodTimeout_ = null;\n      }\n      let mup = mpl.main && mpl.main.minimumUpdatePeriod; // If the minimumUpdatePeriod has a value of 0, that indicates that the current\n      // MPD has no future validity, so a new one will need to be acquired when new\n      // media segments are to be made available. Thus, we use the target duration\n      // in this case\n\n      if (mup === 0) {\n        if (mpl.media()) {\n          mup = mpl.media().targetDuration * 1000;\n        } else {\n          mpl.createMupOnMedia_ = mpl.updateMinimumUpdatePeriodTimeout_;\n          mpl.one('loadedmetadata', mpl.createMupOnMedia_);\n        }\n      } // if minimumUpdatePeriod is invalid or <= zero, which\n      // can happen when a live video becomes VOD. skip timeout\n      // creation.\n\n      if (typeof mup !== 'number' || mup <= 0) {\n        if (mup < 0) {\n          this.logger_(`found invalid minimumUpdatePeriod of ${mup}, not setting a timeout`);\n        }\n        return;\n      }\n      this.createMUPTimeout_(mup);\n    }\n    createMUPTimeout_(mup) {\n      const mpl = this.mainPlaylistLoader_;\n      mpl.minimumUpdatePeriodTimeout_ = window.setTimeout(() => {\n        mpl.minimumUpdatePeriodTimeout_ = null;\n        mpl.trigger('minimumUpdatePeriod');\n        mpl.createMUPTimeout_(mup);\n      }, mup);\n    }\n    /**\n     * Sends request to refresh the main xml and updates the parsed main manifest\n     */\n\n    refreshXml_() {\n      this.requestMain_((req, mainChanged) => {\n        if (!mainChanged) {\n          return;\n        }\n        if (this.media_) {\n          this.media_ = this.mainPlaylistLoader_.main.playlists[this.media_.id];\n        } // This will filter out updated sidx info from the mapping\n\n        this.mainPlaylistLoader_.sidxMapping_ = filterChangedSidxMappings(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.sidxMapping_);\n        this.addSidxSegments_(this.media(), this.state, sidxChanged => {\n          // TODO: do we need to reload the current playlist?\n          this.refreshMedia_(this.media().id);\n        });\n      });\n    }\n    /**\n     * Refreshes the media playlist by re-parsing the main xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the main loader.\n     */\n\n    refreshMedia_(mediaID) {\n      if (!mediaID) {\n        throw new Error('refreshMedia_ must take a media id');\n      } // for main we have to reparse the main xml\n      // to re-create segments based on current timing values\n      // which may change media. We only skip updating the main manifest\n      // if this is the first time this.media_ is being set.\n      // as main was just parsed in that case.\n\n      if (this.media_ && this.isMain_) {\n        this.handleMain_();\n      }\n      const playlists = this.mainPlaylistLoader_.main.playlists;\n      const mediaChanged = !this.media_ || this.media_ !== playlists[mediaID];\n      if (mediaChanged) {\n        this.media_ = playlists[mediaID];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n      if (!this.mediaUpdateTimeout) {\n        const createMediaUpdateTimeout = () => {\n          if (this.media().endList) {\n            return;\n          }\n          this.mediaUpdateTimeout = window.setTimeout(() => {\n            this.trigger('mediaupdatetimeout');\n            createMediaUpdateTimeout();\n          }, refreshDelay(this.media(), Boolean(mediaChanged)));\n        };\n        createMediaUpdateTimeout();\n      }\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Takes eventstream data from a parsed DASH manifest and adds it to the metadata text track.\n     *\n     * @param {manifest} newMain the newly parsed manifest\n     */\n\n    addEventStreamToMetadataTrack_(newMain) {\n      // Only add new event stream metadata if we have a new manifest.\n      if (newMain && this.mainPlaylistLoader_.main.eventStream) {\n        // convert EventStream to ID3-like data.\n        const metadataArray = this.mainPlaylistLoader_.main.eventStream.map(eventStreamNode => {\n          return {\n            cueTime: eventStreamNode.start,\n            frames: [{\n              data: eventStreamNode.messageData\n            }]\n          };\n        });\n        this.addMetadataToTextTrack('EventStream', metadataArray, this.mainPlaylistLoader_.main.duration);\n      }\n    }\n    /**\n     * Returns the key ID set from a playlist\n     *\n     * @param {playlist} playlist to fetch the key ID set from.\n     * @return a Set of 32 digit hex strings that represent the unique keyIds for that playlist.\n     */\n\n    getKeyIdSet(playlist) {\n      if (playlist.contentProtection) {\n        const keyIds = new Set();\n        for (const keysystem in playlist.contentProtection) {\n          const defaultKID = playlist.contentProtection[keysystem].attributes['cenc:default_KID'];\n          if (defaultKID) {\n            // DASH keyIds are separated by dashes.\n            keyIds.add(defaultKID.replace(/-/g, '').toLowerCase());\n          }\n        }\n        return keyIds;\n      }\n    }\n  }\n  var Config = {\n    GOAL_BUFFER_LENGTH: 30,\n    MAX_GOAL_BUFFER_LENGTH: 60,\n    BACK_BUFFER_LENGTH: 30,\n    GOAL_BUFFER_LENGTH_RATE: 1,\n    // 0.5 MB/s\n    INITIAL_BANDWIDTH: 4194304,\n    // A fudge factor to apply to advertised playlist bitrates to account for\n    // temporary flucations in client bandwidth\n    BANDWIDTH_VARIANCE: 1.2,\n    // How much of the buffer must be filled before we consider upswitching\n    BUFFER_LOW_WATER_LINE: 0,\n    MAX_BUFFER_LOW_WATER_LINE: 30,\n    // TODO: Remove this when experimentalBufferBasedABR is removed\n    EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16,\n    BUFFER_LOW_WATER_LINE_RATE: 1,\n    // If the buffer is greater than the high water line, we won't switch down\n    BUFFER_HIGH_WATER_LINE: 30\n  };\n  const stringToArrayBuffer = string => {\n    const view = new Uint8Array(new ArrayBuffer(string.length));\n    for (let i = 0; i < string.length; i++) {\n      view[i] = string.charCodeAt(i);\n    }\n    return view.buffer;\n  };\n\n  /* global Blob, BlobBuilder, Worker */\n  // unify worker interface\n  const browserWorkerPolyFill = function (workerObj) {\n    // node only supports on/off\n    workerObj.on = workerObj.addEventListener;\n    workerObj.off = workerObj.removeEventListener;\n    return workerObj;\n  };\n  const createObjectURL = function (str) {\n    try {\n      return URL.createObjectURL(new Blob([str], {\n        type: 'application/javascript'\n      }));\n    } catch (e) {\n      const blob = new BlobBuilder();\n      blob.append(str);\n      return URL.createObjectURL(blob.getBlob());\n    }\n  };\n  const factory = function (code) {\n    return function () {\n      const objectUrl = createObjectURL(code);\n      const worker = browserWorkerPolyFill(new Worker(objectUrl));\n      worker.objURL = objectUrl;\n      const terminate = worker.terminate;\n      worker.on = worker.addEventListener;\n      worker.off = worker.removeEventListener;\n      worker.terminate = function () {\n        URL.revokeObjectURL(objectUrl);\n        return terminate.call(this);\n      };\n      return worker;\n    };\n  };\n  const transform = function (code) {\n    return `var browserWorkerPolyFill = ${browserWorkerPolyFill.toString()};\\n` + 'browserWorkerPolyFill(self);\\n' + code;\n  };\n  const getWorkerString = function (fn) {\n    return fn.toString().replace(/^function.+?{/, '').slice(0, -1);\n  };\n\n  /* rollup-plugin-worker-factory start for worker!/home/runner/work/http-streaming/http-streaming/src/transmuxer-worker.js */\n  const workerCode$1 = transform(getWorkerString(function () {\n    var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n\n    var Stream$8 = function () {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n\n        this.off = function (type, listener) {\n          var index;\n          if (!listeners[type]) {\n            return false;\n          }\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n          if (arguments.length === 2) {\n            length = callbacks.length;\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n            length = callbacks.length;\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n    Stream$8.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n      this.on('partialdone', function (flushSource) {\n        destination.partialFlush(flushSource);\n      });\n      this.on('endedtimeline', function (flushSource) {\n        destination.endTimeline(flushSource);\n      });\n      this.on('reset', function (flushSource) {\n        destination.reset(flushSource);\n      });\n      return destination;\n    }; // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n\n    Stream$8.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n    Stream$8.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n    Stream$8.prototype.partialFlush = function (flushSource) {\n      this.trigger('partialdone', flushSource);\n    };\n    Stream$8.prototype.endTimeline = function (flushSource) {\n      this.trigger('endedtimeline', flushSource);\n    };\n    Stream$8.prototype.reset = function (flushSource) {\n      this.trigger('reset', flushSource);\n    };\n    var stream = Stream$8;\n    var MAX_UINT32$1 = Math.pow(2, 32);\n    var getUint64$3 = function (uint8) {\n      var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n      var value;\n      if (dv.getBigUint64) {\n        value = dv.getBigUint64(0);\n        if (value < Number.MAX_SAFE_INTEGER) {\n          return Number(value);\n        }\n        return value;\n      }\n      return dv.getUint32(0) * MAX_UINT32$1 + dv.getUint32(4);\n    };\n    var numbers = {\n      getUint64: getUint64$3,\n      MAX_UINT32: MAX_UINT32$1\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n\n    var MAX_UINT32 = numbers.MAX_UINT32;\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun$1, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n    (function () {\n      var i;\n      types = {\n        avc1: [],\n        // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        // codingname\n        mvex: [],\n        mvhd: [],\n        pasp: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00,\n      // version 0\n      0x00, 0x00, 0x00,\n      // flags\n      0x00, 0x00, 0x00, 0x00,\n      // pre_defined\n      0x76, 0x69, 0x64, 0x65,\n      // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00,\n      // version 0\n      0x00, 0x00, 0x00,\n      // flags\n      0x00, 0x00, 0x00, 0x00,\n      // pre_defined\n      0x73, 0x6f, 0x75, 0x6e,\n      // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00,\n      // version 0\n      0x00, 0x00, 0x00,\n      // flags\n      0x00, 0x00, 0x00, 0x01,\n      // entry_count\n      0x00, 0x00, 0x00, 0x0c,\n      // entry_size\n      0x75, 0x72, 0x6c, 0x20,\n      // 'url' type\n      0x00,\n      // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00,\n      // version\n      0x00, 0x00, 0x00,\n      // flags\n      0x00, 0x00,\n      // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00,\n      // version\n      0x00, 0x00, 0x00,\n      // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00,\n      // version\n      0x00, 0x00, 0x00,\n      // flags\n      0x00, 0x00, 0x00, 0x00,\n      // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00,\n      // version\n      0x00, 0x00, 0x01,\n      // flags\n      0x00, 0x00,\n      // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n    box = function (type) {\n      var payload = [],\n        size = 0,\n        i,\n        result,\n        view;\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n      i = payload.length; // calculate the total size we need to allocate\n\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4); // copy the payload into the result\n\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n      return result;\n    };\n    dinf = function () {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n    esds = function (track) {\n      return box(types.esds, new Uint8Array([0x00,\n      // version\n      0x00, 0x00, 0x00,\n      // flags\n      // ES_Descriptor\n      0x03,\n      // tag, ES_DescrTag\n      0x19,\n      // length\n      0x00, 0x00,\n      // ES_ID\n      0x00,\n      // streamDependenceFlag, URL_flag, reserved, streamPriority\n      // DecoderConfigDescriptor\n      0x04,\n      // tag, DecoderConfigDescrTag\n      0x11,\n      // length\n      0x40,\n      // object type\n      0x15,\n      // streamType\n      0x00, 0x06, 0x00,\n      // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0,\n      // maxBitrate\n      0x00, 0x00, 0xda, 0xc0,\n      // avgBitrate\n      // DecoderSpecificInfo\n      0x05,\n      // tag, DecoderSpecificInfoTag\n      0x02,\n      // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n    ftyp = function () {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n    hdlr = function (type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n    mdat = function (data) {\n      return box(types.mdat, data);\n    };\n    mdhd = function (track) {\n      var result = new Uint8Array([0x00,\n      // version 0\n      0x00, 0x00, 0x00,\n      // flags\n      0x00, 0x00, 0x00, 0x02,\n      // creation_time\n      0x00, 0x00, 0x00, 0x03,\n      // modification_time\n      0x00, 0x01, 0x5f, 0x90,\n      // timescale, 90,000 \"ticks\" per second\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF,\n      // duration\n      0x55, 0xc4,\n      // 'und' language (undetermined)\n      0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n      return box(types.mdhd, result);\n    };\n    mdia = function (track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n    mfhd = function (sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00,\n      // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n    minf = function (track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n    moof = function (sequenceNumber, tracks) {\n      var trackFragments = [],\n        i = tracks.length; // build traf boxes for each track fragment\n\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n\n    moov = function (tracks) {\n      var i = tracks.length,\n        boxes = [];\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n    mvex = function (tracks) {\n      var i = tracks.length,\n        boxes = [];\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n    mvhd = function (duration) {\n      var bytes = new Uint8Array([0x00,\n      // version 0\n      0x00, 0x00, 0x00,\n      // flags\n      0x00, 0x00, 0x00, 0x01,\n      // creation_time\n      0x00, 0x00, 0x00, 0x02,\n      // modification_time\n      0x00, 0x01, 0x5f, 0x90,\n      // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF,\n      // duration\n      0x00, 0x01, 0x00, 0x00,\n      // 1.0 rate\n      0x01, 0x00,\n      // 1.0 volume\n      0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n      // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n    sdtp = function (track) {\n      var samples = track.samples || [],\n        bytes = new Uint8Array(4 + samples.length),\n        flags,\n        i; // leave the full box header (4 bytes) all zero\n      // write the sample table\n\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n      return box(types.sdtp, bytes);\n    };\n    stbl = function (track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n    (function () {\n      var videoSample, audioSample;\n      stsd = function (track) {\n        return box(types.stsd, new Uint8Array([0x00,\n        // version 0\n        0x00, 0x00, 0x00,\n        // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n      videoSample = function (track) {\n        var sps = track.sps || [],\n          pps = track.pps || [],\n          sequenceParameterSets = [],\n          pictureParameterSets = [],\n          i,\n          avc1Box; // assemble the SPSs\n\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        } // assemble the PPSs\n\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n        avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n        // reserved\n        0x00, 0x01,\n        // data_reference_index\n        0x00, 0x00,\n        // pre_defined\n        0x00, 0x00,\n        // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n        // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff,\n        // width\n        (track.height & 0xff00) >> 8, track.height & 0xff,\n        // height\n        0x00, 0x48, 0x00, 0x00,\n        // horizresolution\n        0x00, 0x48, 0x00, 0x00,\n        // vertresolution\n        0x00, 0x00, 0x00, 0x00,\n        // reserved\n        0x00, 0x01,\n        // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n        // compressorname\n        0x00, 0x18,\n        // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01,\n        // configurationVersion\n        track.profileIdc,\n        // AVCProfileIndication\n        track.profileCompatibility,\n        // profile_compatibility\n        track.levelIdc,\n        // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length],\n        // numOfSequenceParameterSets\n        sequenceParameterSets,\n        // \"SPS\"\n        [pps.length],\n        // numOfPictureParameterSets\n        pictureParameterSets // \"PPS\"\n        ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80,\n        // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0,\n        // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n        ]))];\n        if (track.sarRatio) {\n          var hSpacing = track.sarRatio[0],\n            vSpacing = track.sarRatio[1];\n          avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n        }\n        return box.apply(null, avc1Box);\n      };\n      audioSample = function (track) {\n        return box(types.mp4a, new Uint8Array([\n        // SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n        // reserved\n        0x00, 0x01,\n        // data_reference_index\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00,\n        // reserved\n        0x00, 0x00, 0x00, 0x00,\n        // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff,\n        // channelcount\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff,\n        // samplesize\n        0x00, 0x00,\n        // pre_defined\n        0x00, 0x00,\n        // reserved\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n    tkhd = function (track) {\n      var result = new Uint8Array([0x00,\n      // version 0\n      0x00, 0x00, 0x07,\n      // flags\n      0x00, 0x00, 0x00, 0x00,\n      // creation_time\n      0x00, 0x00, 0x00, 0x00,\n      // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n      // track_ID\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF,\n      // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x00,\n      // layer\n      0x00, 0x00,\n      // alternate_group\n      0x01, 0x00,\n      // non-audio track volume\n      0x00, 0x00,\n      // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n      // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00,\n      // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n      return box(types.tkhd, result);\n    };\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n\n    traf = function (track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00,\n      // version 0\n      0x00, 0x00, 0x3a,\n      // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n      // track_ID\n      0x00, 0x00, 0x00, 0x01,\n      // sample_description_index\n      0x00, 0x00, 0x00, 0x00,\n      // default_sample_duration\n      0x00, 0x00, 0x00, 0x00,\n      // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / MAX_UINT32);\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % MAX_UINT32);\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01,\n      // version 1\n      0x00, 0x00, 0x00,\n      // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n\n      dataOffset = 32 +\n      // tfhd\n      20 +\n      // tfdt\n      8 +\n      // traf header\n      16 +\n      // mfhd\n      8 +\n      // moof header\n      8; // mdat header\n      // audio tracks require less metadata\n\n      if (track.type === 'audio') {\n        trackFragmentRun = trun$1(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      } // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun$1(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n    trak = function (track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n    trex = function (track) {\n      var result = new Uint8Array([0x00,\n      // version 0\n      0x00, 0x00, 0x00,\n      // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n      // track_ID\n      0x00, 0x00, 0x00, 0x01,\n      // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00,\n      // default_sample_duration\n      0x00, 0x00, 0x00, 0x00,\n      // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]); // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n      return box(types.trex, result);\n    };\n    (function () {\n      var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n      trunHeader = function (samples, offset) {\n        var durationPresent = 0,\n          sizePresent = 0,\n          flagsPresent = 0,\n          compositionTimeOffset = 0; // trun flag constants\n\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n        return [0x00,\n        // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01,\n        // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF,\n        // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n      videoTrun = function (track, offset) {\n        var bytesOffest, bytes, header, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n        header = trunHeader(samples, offset);\n        bytes = new Uint8Array(header.length + samples.length * 16);\n        bytes.set(header);\n        bytesOffest = header.length;\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n          bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n\n          bytes[bytesOffest++] = sample.flags.isLeading << 2 | sample.flags.dependsOn;\n          bytes[bytesOffest++] = sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample;\n          bytes[bytesOffest++] = sample.flags.degradationPriority & 0xF0 << 8;\n          bytes[bytesOffest++] = sample.flags.degradationPriority & 0x0F; // sample_flags\n\n          bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.compositionTimeOffset & 0xFF; // sample_composition_time_offset\n        }\n        return box(types.trun, bytes);\n      };\n      audioTrun = function (track, offset) {\n        var bytes, bytesOffest, header, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n        header = trunHeader(samples, offset);\n        bytes = new Uint8Array(header.length + samples.length * 8);\n        bytes.set(header);\n        bytesOffest = header.length;\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n          bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n        }\n        return box(types.trun, bytes);\n      };\n      trun$1 = function (track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n        return videoTrun(track, offset);\n      };\n    })();\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function (tracks) {\n        var fileType = ftyp(),\n          movie = moov(tracks),\n          result;\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n\n    var groupNalsIntoFrames = function (nalUnits) {\n      var i,\n        currentNal,\n        currentFrame = [],\n        frames = []; // TODO added for LHLS, make sure this is OK\n\n      frames.byteLength = 0;\n      frames.nalCount = 0;\n      frames.duration = 0;\n      currentFrame.byteLength = 0;\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n            frames.byteLength += currentFrame.byteLength;\n            frames.nalCount += currentFrame.length;\n            frames.duration += currentFrame.duration;\n            frames.push(currentFrame);\n          }\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      } // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      } // Push the final frame\n      // TODO added for LHLS, make sure this is OK\n\n      frames.byteLength += currentFrame.byteLength;\n      frames.nalCount += currentFrame.length;\n      frames.duration += currentFrame.duration;\n      frames.push(currentFrame);\n      return frames;\n    }; // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n\n    var groupFramesIntoGops = function (frames) {\n      var i,\n        currentFrame,\n        currentGop = [],\n        gops = []; // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration; // push the final Gop\n\n      gops.push(currentGop);\n      return gops;\n    };\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n\n    var extendFirstKeyFrame = function (gops) {\n      var currentGop;\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n      return gops;\n    };\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n\n    var createDefaultSample = function () {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n\n    var sampleForFrame = function (frame, dataOffset) {\n      var sample = createDefaultSample();\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n\n      sample.size += frame.byteLength;\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n      return sample;\n    }; // generate the track's sample table from an array of gops\n\n    var generateSampleTable$1 = function (gops, baseDataOffset) {\n      var h,\n        i,\n        sample,\n        currentGop,\n        currentFrame,\n        dataOffset = baseDataOffset || 0,\n        samples = [];\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n          sample = sampleForFrame(currentFrame, dataOffset);\n          dataOffset += sample.size;\n          samples.push(sample);\n        }\n      }\n      return samples;\n    }; // generate the track's raw mdat data from an array of gops\n\n    var concatenateNalData = function (gops) {\n      var h,\n        i,\n        j,\n        currentGop,\n        currentFrame,\n        currentNal,\n        dataOffset = 0,\n        nalsByteLength = gops.byteLength,\n        numberOfNals = gops.nalCount,\n        totalByteLength = nalsByteLength + 4 * numberOfNals,\n        data = new Uint8Array(totalByteLength),\n        view = new DataView(data.buffer); // For each Gop..\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h]; // For each Frame..\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i]; // For each NAL..\n\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n      return data;\n    }; // generate the track's sample table from a frame\n\n    var generateSampleTableForFrame = function (frame, baseDataOffset) {\n      var sample,\n        dataOffset = baseDataOffset || 0,\n        samples = [];\n      sample = sampleForFrame(frame, dataOffset);\n      samples.push(sample);\n      return samples;\n    }; // generate the track's raw mdat data from a frame\n\n    var concatenateNalDataForFrame = function (frame) {\n      var i,\n        currentNal,\n        dataOffset = 0,\n        nalsByteLength = frame.byteLength,\n        numberOfNals = frame.length,\n        totalByteLength = nalsByteLength + 4 * numberOfNals,\n        data = new Uint8Array(totalByteLength),\n        view = new DataView(data.buffer); // For each NAL..\n\n      for (i = 0; i < frame.length; i++) {\n        currentNal = frame[i];\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n      return data;\n    };\n    var frameUtils$1 = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable$1,\n      concatenateNalData: concatenateNalData,\n      generateSampleTableForFrame: generateSampleTableForFrame,\n      concatenateNalDataForFrame: concatenateNalDataForFrame\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n    var zeroFill = function (count) {\n      var a = [];\n      while (count--) {\n        a.push(0);\n      }\n      return a;\n    };\n    var makeTable = function (metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    };\n    var silence;\n    var silence_1 = function () {\n      if (!silence) {\n        // Frames-of-silence to use for filling in missing AAC frames\n        var coneOfSilence = {\n          96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n          88200: [highPrefix, [231], zeroFill(170), [56]],\n          64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n          48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n          44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n          32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n          24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n          16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n          12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n          11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n          8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n        };\n        silence = makeTable(coneOfSilence);\n      }\n      return silence;\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS$4 = 90000,\n      // 90kHz clock\n      secondsToVideoTs,\n      secondsToAudioTs,\n      videoTsToSeconds,\n      audioTsToSeconds,\n      audioTsToVideoTs,\n      videoTsToAudioTs,\n      metadataTsToSeconds;\n    secondsToVideoTs = function (seconds) {\n      return seconds * ONE_SECOND_IN_TS$4;\n    };\n    secondsToAudioTs = function (seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n    videoTsToSeconds = function (timestamp) {\n      return timestamp / ONE_SECOND_IN_TS$4;\n    };\n    audioTsToSeconds = function (timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n    audioTsToVideoTs = function (timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n    videoTsToAudioTs = function (timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n    /**\n     * Adjust ID3 tag or caption timing information by the timeline pts values\n     * (if keepOriginalTimestamps is false) and convert to seconds\n     */\n\n    metadataTsToSeconds = function (timestamp, timelineStartPts, keepOriginalTimestamps) {\n      return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n    };\n    var clock$2 = {\n      ONE_SECOND_IN_TS: ONE_SECOND_IN_TS$4,\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs,\n      metadataTsToSeconds: metadataTsToSeconds\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var coneOfSilence = silence_1;\n    var clock$1 = clock$2;\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n\n    var sumFrameByteLengths = function (array) {\n      var i,\n        currentObj,\n        sum = 0; // sum the byteLength's all each nal unit in the frame\n\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n      return sum;\n    }; // Possibly pad (prefix) the audio track with silence if appending this track\n    // would lead to the introduction of a gap in the audio buffer\n\n    var prefixWithSilence = function (track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n      var baseMediaDecodeTimeTs,\n        frameDuration = 0,\n        audioGapDuration = 0,\n        audioFillFrameCount = 0,\n        audioFillDuration = 0,\n        silentFrame,\n        i,\n        firstFrame;\n      if (!frames.length) {\n        return;\n      }\n      baseMediaDecodeTimeTs = clock$1.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n      frameDuration = Math.ceil(clock$1.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n      if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n        // insert the shortest possible amount (audio gap or audio to video gap)\n        audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n        audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n        audioFillDuration = audioFillFrameCount * frameDuration;\n      } // don't attempt to fill gaps smaller than a single frame or larger\n      // than a half second\n\n      if (audioFillFrameCount < 1 || audioFillDuration > clock$1.ONE_SECOND_IN_TS / 2) {\n        return;\n      }\n      silentFrame = coneOfSilence()[track.samplerate];\n      if (!silentFrame) {\n        // we don't have a silent frame pregenerated for the sample rate, so use a frame\n        // from the content instead\n        silentFrame = frames[0].data;\n      }\n      for (i = 0; i < audioFillFrameCount; i++) {\n        firstFrame = frames[0];\n        frames.splice(0, 0, {\n          data: silentFrame,\n          dts: firstFrame.dts - frameDuration,\n          pts: firstFrame.pts - frameDuration\n        });\n      }\n      track.baseMediaDecodeTime -= Math.floor(clock$1.videoTsToAudioTs(audioFillDuration, track.samplerate));\n      return audioFillDuration;\n    }; // If the audio segment extends before the earliest allowed dts\n    // value, remove AAC frames until starts at or after the earliest\n    // allowed DTS so that we don't end up with a negative baseMedia-\n    // DecodeTime for the audio track\n\n    var trimAdtsFramesByEarliestDts = function (adtsFrames, track, earliestAllowedDts) {\n      if (track.minSegmentDts >= earliestAllowedDts) {\n        return adtsFrames;\n      } // We will need to recalculate the earliest segment Dts\n\n      track.minSegmentDts = Infinity;\n      return adtsFrames.filter(function (currentFrame) {\n        // If this is an allowed frame, keep it and record it's Dts\n        if (currentFrame.dts >= earliestAllowedDts) {\n          track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n          track.minSegmentPts = track.minSegmentDts;\n          return true;\n        } // Otherwise, discard it\n\n        return false;\n      });\n    }; // generate the track's raw mdat data from an array of frames\n\n    var generateSampleTable = function (frames) {\n      var i,\n        currentFrame,\n        samples = [];\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        samples.push({\n          size: currentFrame.data.byteLength,\n          duration: 1024 // For AAC audio, all samples contain 1024 samples\n        });\n      }\n      return samples;\n    }; // generate the track's sample table from an array of frames\n\n    var concatenateFrameData = function (frames) {\n      var i,\n        currentFrame,\n        dataOffset = 0,\n        data = new Uint8Array(sumFrameByteLengths(frames));\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        data.set(currentFrame.data, dataOffset);\n        dataOffset += currentFrame.data.byteLength;\n      }\n      return data;\n    };\n    var audioFrameUtils$1 = {\n      prefixWithSilence: prefixWithSilence,\n      trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n      generateSampleTable: generateSampleTable,\n      concatenateFrameData: concatenateFrameData\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS$3 = clock$2.ONE_SECOND_IN_TS;\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n\n    var collectDtsInfo = function (track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n\n    var clearDtsInfo = function (track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    var calculateTrackBaseMediaDecodeTime = function (track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n        scale,\n        minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n      baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$3;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n      return baseMediaDecodeTime;\n    };\n    var trackDecodeInfo$1 = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n      RBSP_TRAILING_BITS = 128;\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n\n    var parseSei = function (bytes) {\n      var i = 0,\n        result = {\n          payloadType: -1,\n          payloadSize: 0\n        },\n        payloadType = 0,\n        payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        } // Parse payload type\n\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n        payloadType += bytes[i++]; // Parse payload size\n\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n        payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          var userIdentifier = String.fromCharCode(bytes[i + 3], bytes[i + 4], bytes[i + 5], bytes[i + 6]);\n          if (userIdentifier === 'GA94') {\n            result.payloadType = payloadType;\n            result.payloadSize = payloadSize;\n            result.payload = bytes.subarray(i, i + payloadSize);\n            break;\n          } else {\n            result.payload = void 0;\n          }\n        } // skip the payload and parse the next message\n\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n      return result;\n    }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n    var parseUserData = function (sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      } // finally, user_data_type_code should be 0x03 for caption data\n\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      } // return the user_data_type_structure and strip the trailing\n      // marker bits\n\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    }; // see CEA-708-D, section 4.4\n\n    var parseCaptionPackets = function (pts, userData) {\n      var results = [],\n        i,\n        count,\n        offset,\n        data; // if this is just filler, return immediately\n\n      if (!(userData[0] & 0x40)) {\n        return results;\n      } // parse out the cc_data_1 and cc_data_2 fields\n\n      count = userData[0] & 0x1f;\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        }; // capture cc data when cc_valid is 1\n\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n      return results;\n    };\n    var discardEmulationPreventionBytes$1 = function (data) {\n      var length = data.byteLength,\n        emulationPreventionBytesPositions = [],\n        i = 1,\n        newLength,\n        newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n        newData[i] = data[sourceIndex];\n      }\n      return newData;\n    }; // exports\n\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes$1,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // Link To Transport\n    // -----------------\n\n    var Stream$7 = stream;\n    var cea708Parser = captionPacketParser;\n    var CaptionStream$2 = function (options) {\n      options = options || {};\n      CaptionStream$2.prototype.init.call(this); // parse708captions flag, default to true\n\n      this.parse708captions_ = typeof options.parse708captions === 'boolean' ? options.parse708captions : true;\n      this.captionPackets_ = [];\n      this.ccStreams_ = [new Cea608Stream(0, 0),\n      // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1),\n      // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0),\n      // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n      if (this.parse708captions_) {\n        this.cc708Stream_ = new Cea708Stream({\n          captionServices: options.captionServices\n        }); // eslint-disable-line no-use-before-define\n      }\n      this.reset(); // forward data and done events from CCs to this CaptionStream\n\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n      if (this.parse708captions_) {\n        this.cc708Stream_.on('data', this.trigger.bind(this, 'data'));\n        this.cc708Stream_.on('partialdone', this.trigger.bind(this, 'partialdone'));\n        this.cc708Stream_.on('done', this.trigger.bind(this, 'done'));\n      }\n    };\n    CaptionStream$2.prototype = new Stream$7();\n    CaptionStream$2.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      } // parse the sei\n\n      sei = cea708Parser.parseSei(event.escapedRBSP); // no payload data, skip\n\n      if (!sei.payload) {\n        return;\n      } // ignore everything but user_data_registered_itu_t_t35\n\n      if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      } // parse out the user data payload\n\n      userData = cea708Parser.parseUserData(sei); // ignore unrecognized userData\n\n      if (!userData) {\n        return;\n      } // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n        return;\n      } // parse out CC data packets and save them for later\n\n      newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n    CaptionStream$2.prototype.flushCCStreams = function (flushType) {\n      this.ccStreams_.forEach(function (cc) {\n        return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n      }, this);\n    };\n    CaptionStream$2.prototype.flushStream = function (flushType) {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.flushCCStreams(flushType);\n        return;\n      } // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      }); // sort caption byte-pairs based on their PTS values\n\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n        return a.pts - b.pts;\n      });\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        } else {\n          // Dispatch packet to the Cea708Stream\n          this.dispatchCea708Packet(packet);\n        }\n      }, this);\n      this.captionPackets_.length = 0;\n      this.flushCCStreams(flushType);\n    };\n    CaptionStream$2.prototype.flush = function () {\n      return this.flushStream('flush');\n    }; // Only called if handling partial data\n\n    CaptionStream$2.prototype.partialFlush = function () {\n      return this.flushStream('partialFlush');\n    };\n    CaptionStream$2.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    }; // From the CEA-608 spec:\n\n    /*\n     * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n     * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n     * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n     * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n     * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n     * to switch to captioning or Text.\n    */\n    // With that in mind, we ignore any data between an XDS control code and a\n    // subsequent closed-captioning control code.\n\n    CaptionStream$2.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsTextOrXDSActive(packet)) {\n        this.activeCea608Channel_[packet.type] = null;\n      } else if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, or the\n        // packets are Text/XDS data, discard the data; we don't want jumbled\n        // captions\n        return;\n      }\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n    CaptionStream$2.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n    CaptionStream$2.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n    CaptionStream$2.prototype.setsTextOrXDSActive = function (packet) {\n      return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n    };\n    CaptionStream$2.prototype.dispatchCea708Packet = function (packet) {\n      if (this.parse708captions_) {\n        this.cc708Stream_.push(packet);\n      }\n    }; // ----------------------\n    // Session to Application\n    // ----------------------\n    // This hash maps special and extended character codes to their\n    // proper Unicode equivalent. The first one-byte key is just a\n    // non-standard character code. The two-byte keys that follow are\n    // the extended CEA708 character codes, along with the preceding\n    // 0x10 extended character byte to distinguish these codes from\n    // non-extended character codes. Every CEA708 character code that\n    // is not in this object maps directly to a standard unicode\n    // character code.\n    // The transparent space and non-breaking transparent space are\n    // technically not fully supported since there is no code to\n    // make them transparent, so they have normal non-transparent\n    // stand-ins.\n    // The special closed caption (CC) character isn't a standard\n    // unicode character, so a fairly similar unicode character was\n    // chosen in it's place.\n\n    var CHARACTER_TRANSLATION_708 = {\n      0x7f: 0x266a,\n      // ♪\n      0x1020: 0x20,\n      // Transparent Space\n      0x1021: 0xa0,\n      // Nob-breaking Transparent Space\n      0x1025: 0x2026,\n      // …\n      0x102a: 0x0160,\n      // Š\n      0x102c: 0x0152,\n      // Œ\n      0x1030: 0x2588,\n      // █\n      0x1031: 0x2018,\n      // ‘\n      0x1032: 0x2019,\n      // ’\n      0x1033: 0x201c,\n      // “\n      0x1034: 0x201d,\n      // ”\n      0x1035: 0x2022,\n      // •\n      0x1039: 0x2122,\n      // ™\n      0x103a: 0x0161,\n      // š\n      0x103c: 0x0153,\n      // œ\n      0x103d: 0x2120,\n      // ℠\n      0x103f: 0x0178,\n      // Ÿ\n      0x1076: 0x215b,\n      // ⅛\n      0x1077: 0x215c,\n      // ⅜\n      0x1078: 0x215d,\n      // ⅝\n      0x1079: 0x215e,\n      // ⅞\n      0x107a: 0x23d0,\n      // ⏐\n      0x107b: 0x23a4,\n      // ⎤\n      0x107c: 0x23a3,\n      // ⎣\n      0x107d: 0x23af,\n      // ⎯\n      0x107e: 0x23a6,\n      // ⎦\n      0x107f: 0x23a1,\n      // ⎡\n      0x10a0: 0x3138 // ㄸ (CC char)\n    };\n    var get708CharFromCode = function (code) {\n      var newCode = CHARACTER_TRANSLATION_708[code] || code;\n      if (code & 0x1000 && code === newCode) {\n        // Invalid extended code\n        return '';\n      }\n      return String.fromCharCode(newCode);\n    };\n    var within708TextBlock = function (b) {\n      return 0x20 <= b && b <= 0x7f || 0xa0 <= b && b <= 0xff;\n    };\n    var Cea708Window = function (windowNum) {\n      this.windowNum = windowNum;\n      this.reset();\n    };\n    Cea708Window.prototype.reset = function () {\n      this.clearText();\n      this.pendingNewLine = false;\n      this.winAttr = {};\n      this.penAttr = {};\n      this.penLoc = {};\n      this.penColor = {}; // These default values are arbitrary,\n      // defineWindow will usually override them\n\n      this.visible = 0;\n      this.rowLock = 0;\n      this.columnLock = 0;\n      this.priority = 0;\n      this.relativePositioning = 0;\n      this.anchorVertical = 0;\n      this.anchorHorizontal = 0;\n      this.anchorPoint = 0;\n      this.rowCount = 1;\n      this.virtualRowCount = this.rowCount + 1;\n      this.columnCount = 41;\n      this.windowStyle = 0;\n      this.penStyle = 0;\n    };\n    Cea708Window.prototype.getText = function () {\n      return this.rows.join('\\n');\n    };\n    Cea708Window.prototype.clearText = function () {\n      this.rows = [''];\n      this.rowIdx = 0;\n    };\n    Cea708Window.prototype.newLine = function (pts) {\n      if (this.rows.length >= this.virtualRowCount && typeof this.beforeRowOverflow === 'function') {\n        this.beforeRowOverflow(pts);\n      }\n      if (this.rows.length > 0) {\n        this.rows.push('');\n        this.rowIdx++;\n      } // Show all virtual rows since there's no visible scrolling\n\n      while (this.rows.length > this.virtualRowCount) {\n        this.rows.shift();\n        this.rowIdx--;\n      }\n    };\n    Cea708Window.prototype.isEmpty = function () {\n      if (this.rows.length === 0) {\n        return true;\n      } else if (this.rows.length === 1) {\n        return this.rows[0] === '';\n      }\n      return false;\n    };\n    Cea708Window.prototype.addText = function (text) {\n      this.rows[this.rowIdx] += text;\n    };\n    Cea708Window.prototype.backspace = function () {\n      if (!this.isEmpty()) {\n        var row = this.rows[this.rowIdx];\n        this.rows[this.rowIdx] = row.substr(0, row.length - 1);\n      }\n    };\n    var Cea708Service = function (serviceNum, encoding, stream) {\n      this.serviceNum = serviceNum;\n      this.text = '';\n      this.currentWindow = new Cea708Window(-1);\n      this.windows = [];\n      this.stream = stream; // Try to setup a TextDecoder if an `encoding` value was provided\n\n      if (typeof encoding === 'string') {\n        this.createTextDecoder(encoding);\n      }\n    };\n    /**\n     * Initialize service windows\n     * Must be run before service use\n     *\n     * @param  {Integer}  pts               PTS value\n     * @param  {Function} beforeRowOverflow Function to execute before row overflow of a window\n     */\n\n    Cea708Service.prototype.init = function (pts, beforeRowOverflow) {\n      this.startPts = pts;\n      for (var win = 0; win < 8; win++) {\n        this.windows[win] = new Cea708Window(win);\n        if (typeof beforeRowOverflow === 'function') {\n          this.windows[win].beforeRowOverflow = beforeRowOverflow;\n        }\n      }\n    };\n    /**\n     * Set current window of service to be affected by commands\n     *\n     * @param  {Integer} windowNum Window number\n     */\n\n    Cea708Service.prototype.setCurrentWindow = function (windowNum) {\n      this.currentWindow = this.windows[windowNum];\n    };\n    /**\n     * Try to create a TextDecoder if it is natively supported\n     */\n\n    Cea708Service.prototype.createTextDecoder = function (encoding) {\n      if (typeof TextDecoder === 'undefined') {\n        this.stream.trigger('log', {\n          level: 'warn',\n          message: 'The `encoding` option is unsupported without TextDecoder support'\n        });\n      } else {\n        try {\n          this.textDecoder_ = new TextDecoder(encoding);\n        } catch (error) {\n          this.stream.trigger('log', {\n            level: 'warn',\n            message: 'TextDecoder could not be created with ' + encoding + ' encoding. ' + error\n          });\n        }\n      }\n    };\n    var Cea708Stream = function (options) {\n      options = options || {};\n      Cea708Stream.prototype.init.call(this);\n      var self = this;\n      var captionServices = options.captionServices || {};\n      var captionServiceEncodings = {};\n      var serviceProps; // Get service encodings from captionServices option block\n\n      Object.keys(captionServices).forEach(serviceName => {\n        serviceProps = captionServices[serviceName];\n        if (/^SERVICE/.test(serviceName)) {\n          captionServiceEncodings[serviceName] = serviceProps.encoding;\n        }\n      });\n      this.serviceEncodings = captionServiceEncodings;\n      this.current708Packet = null;\n      this.services = {};\n      this.push = function (packet) {\n        if (packet.type === 3) {\n          // 708 packet start\n          self.new708Packet();\n          self.add708Bytes(packet);\n        } else {\n          if (self.current708Packet === null) {\n            // This should only happen at the start of a file if there's no packet start.\n            self.new708Packet();\n          }\n          self.add708Bytes(packet);\n        }\n      };\n    };\n    Cea708Stream.prototype = new Stream$7();\n    /**\n     * Push current 708 packet, create new 708 packet.\n     */\n\n    Cea708Stream.prototype.new708Packet = function () {\n      if (this.current708Packet !== null) {\n        this.push708Packet();\n      }\n      this.current708Packet = {\n        data: [],\n        ptsVals: []\n      };\n    };\n    /**\n     * Add pts and both bytes from packet into current 708 packet.\n     */\n\n    Cea708Stream.prototype.add708Bytes = function (packet) {\n      var data = packet.ccData;\n      var byte0 = data >>> 8;\n      var byte1 = data & 0xff; // I would just keep a list of packets instead of bytes, but it isn't clear in the spec\n      // that service blocks will always line up with byte pairs.\n\n      this.current708Packet.ptsVals.push(packet.pts);\n      this.current708Packet.data.push(byte0);\n      this.current708Packet.data.push(byte1);\n    };\n    /**\n     * Parse completed 708 packet into service blocks and push each service block.\n     */\n\n    Cea708Stream.prototype.push708Packet = function () {\n      var packet708 = this.current708Packet;\n      var packetData = packet708.data;\n      var serviceNum = null;\n      var blockSize = null;\n      var i = 0;\n      var b = packetData[i++];\n      packet708.seq = b >> 6;\n      packet708.sizeCode = b & 0x3f; // 0b00111111;\n\n      for (; i < packetData.length; i++) {\n        b = packetData[i++];\n        serviceNum = b >> 5;\n        blockSize = b & 0x1f; // 0b00011111\n\n        if (serviceNum === 7 && blockSize > 0) {\n          // Extended service num\n          b = packetData[i++];\n          serviceNum = b;\n        }\n        this.pushServiceBlock(serviceNum, i, blockSize);\n        if (blockSize > 0) {\n          i += blockSize - 1;\n        }\n      }\n    };\n    /**\n     * Parse service block, execute commands, read text.\n     *\n     * Note: While many of these commands serve important purposes,\n     * many others just parse out the parameters or attributes, but\n     * nothing is done with them because this is not a full and complete\n     * implementation of the entire 708 spec.\n     *\n     * @param  {Integer} serviceNum Service number\n     * @param  {Integer} start      Start index of the 708 packet data\n     * @param  {Integer} size       Block size\n     */\n\n    Cea708Stream.prototype.pushServiceBlock = function (serviceNum, start, size) {\n      var b;\n      var i = start;\n      var packetData = this.current708Packet.data;\n      var service = this.services[serviceNum];\n      if (!service) {\n        service = this.initService(serviceNum, i);\n      }\n      for (; i < start + size && i < packetData.length; i++) {\n        b = packetData[i];\n        if (within708TextBlock(b)) {\n          i = this.handleText(i, service);\n        } else if (b === 0x18) {\n          i = this.multiByteCharacter(i, service);\n        } else if (b === 0x10) {\n          i = this.extendedCommands(i, service);\n        } else if (0x80 <= b && b <= 0x87) {\n          i = this.setCurrentWindow(i, service);\n        } else if (0x98 <= b && b <= 0x9f) {\n          i = this.defineWindow(i, service);\n        } else if (b === 0x88) {\n          i = this.clearWindows(i, service);\n        } else if (b === 0x8c) {\n          i = this.deleteWindows(i, service);\n        } else if (b === 0x89) {\n          i = this.displayWindows(i, service);\n        } else if (b === 0x8a) {\n          i = this.hideWindows(i, service);\n        } else if (b === 0x8b) {\n          i = this.toggleWindows(i, service);\n        } else if (b === 0x97) {\n          i = this.setWindowAttributes(i, service);\n        } else if (b === 0x90) {\n          i = this.setPenAttributes(i, service);\n        } else if (b === 0x91) {\n          i = this.setPenColor(i, service);\n        } else if (b === 0x92) {\n          i = this.setPenLocation(i, service);\n        } else if (b === 0x8f) {\n          service = this.reset(i, service);\n        } else if (b === 0x08) {\n          // BS: Backspace\n          service.currentWindow.backspace();\n        } else if (b === 0x0c) {\n          // FF: Form feed\n          service.currentWindow.clearText();\n        } else if (b === 0x0d) {\n          // CR: Carriage return\n          service.currentWindow.pendingNewLine = true;\n        } else if (b === 0x0e) {\n          // HCR: Horizontal carriage return\n          service.currentWindow.clearText();\n        } else if (b === 0x8d) {\n          // DLY: Delay, nothing to do\n          i++;\n        } else ;\n      }\n    };\n    /**\n     * Execute an extended command\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n    Cea708Stream.prototype.extendedCommands = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      if (within708TextBlock(b)) {\n        i = this.handleText(i, service, {\n          isExtended: true\n        });\n      }\n      return i;\n    };\n    /**\n     * Get PTS value of a given byte index\n     *\n     * @param  {Integer} byteIndex  Index of the byte\n     * @return {Integer}            PTS\n     */\n\n    Cea708Stream.prototype.getPts = function (byteIndex) {\n      // There's 1 pts value per 2 bytes\n      return this.current708Packet.ptsVals[Math.floor(byteIndex / 2)];\n    };\n    /**\n     * Initializes a service\n     *\n     * @param  {Integer} serviceNum Service number\n     * @return {Service}            Initialized service object\n     */\n\n    Cea708Stream.prototype.initService = function (serviceNum, i) {\n      var serviceName = 'SERVICE' + serviceNum;\n      var self = this;\n      var serviceName;\n      var encoding;\n      if (serviceName in this.serviceEncodings) {\n        encoding = this.serviceEncodings[serviceName];\n      }\n      this.services[serviceNum] = new Cea708Service(serviceNum, encoding, self);\n      this.services[serviceNum].init(this.getPts(i), function (pts) {\n        self.flushDisplayed(pts, self.services[serviceNum]);\n      });\n      return this.services[serviceNum];\n    };\n    /**\n     * Execute text writing to current window\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n    Cea708Stream.prototype.handleText = function (i, service, options) {\n      var isExtended = options && options.isExtended;\n      var isMultiByte = options && options.isMultiByte;\n      var packetData = this.current708Packet.data;\n      var extended = isExtended ? 0x1000 : 0x0000;\n      var currentByte = packetData[i];\n      var nextByte = packetData[i + 1];\n      var win = service.currentWindow;\n      var char;\n      var charCodeArray; // Converts an array of bytes to a unicode hex string.\n\n      function toHexString(byteArray) {\n        return byteArray.map(byte => {\n          return ('0' + (byte & 0xFF).toString(16)).slice(-2);\n        }).join('');\n      }\n      if (isMultiByte) {\n        charCodeArray = [currentByte, nextByte];\n        i++;\n      } else {\n        charCodeArray = [currentByte];\n      } // Use the TextDecoder if one was created for this service\n\n      if (service.textDecoder_ && !isExtended) {\n        char = service.textDecoder_.decode(new Uint8Array(charCodeArray));\n      } else {\n        // We assume any multi-byte char without a decoder is unicode.\n        if (isMultiByte) {\n          const unicode = toHexString(charCodeArray); // Takes a unicode hex string and creates a single character.\n\n          char = String.fromCharCode(parseInt(unicode, 16));\n        } else {\n          char = get708CharFromCode(extended | currentByte);\n        }\n      }\n      if (win.pendingNewLine && !win.isEmpty()) {\n        win.newLine(this.getPts(i));\n      }\n      win.pendingNewLine = false;\n      win.addText(char);\n      return i;\n    };\n    /**\n     * Handle decoding of multibyte character\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n    Cea708Stream.prototype.multiByteCharacter = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var firstByte = packetData[i + 1];\n      var secondByte = packetData[i + 2];\n      if (within708TextBlock(firstByte) && within708TextBlock(secondByte)) {\n        i = this.handleText(++i, service, {\n          isMultiByte: true\n        });\n      }\n      return i;\n    };\n    /**\n     * Parse and execute the CW# command.\n     *\n     * Set the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n    Cea708Stream.prototype.setCurrentWindow = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var windowNum = b & 0x07;\n      service.setCurrentWindow(windowNum);\n      return i;\n    };\n    /**\n     * Parse and execute the DF# command.\n     *\n     * Define a window and set it as the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n    Cea708Stream.prototype.defineWindow = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var windowNum = b & 0x07;\n      service.setCurrentWindow(windowNum);\n      var win = service.currentWindow;\n      b = packetData[++i];\n      win.visible = (b & 0x20) >> 5; // v\n\n      win.rowLock = (b & 0x10) >> 4; // rl\n\n      win.columnLock = (b & 0x08) >> 3; // cl\n\n      win.priority = b & 0x07; // p\n\n      b = packetData[++i];\n      win.relativePositioning = (b & 0x80) >> 7; // rp\n\n      win.anchorVertical = b & 0x7f; // av\n\n      b = packetData[++i];\n      win.anchorHorizontal = b; // ah\n\n      b = packetData[++i];\n      win.anchorPoint = (b & 0xf0) >> 4; // ap\n\n      win.rowCount = b & 0x0f; // rc\n\n      b = packetData[++i];\n      win.columnCount = b & 0x3f; // cc\n\n      b = packetData[++i];\n      win.windowStyle = (b & 0x38) >> 3; // ws\n\n      win.penStyle = b & 0x07; // ps\n      // The spec says there are (rowCount+1) \"virtual rows\"\n\n      win.virtualRowCount = win.rowCount + 1;\n      return i;\n    };\n    /**\n     * Parse and execute the SWA command.\n     *\n     * Set attributes of the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n    Cea708Stream.prototype.setWindowAttributes = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var winAttr = service.currentWindow.winAttr;\n      b = packetData[++i];\n      winAttr.fillOpacity = (b & 0xc0) >> 6; // fo\n\n      winAttr.fillRed = (b & 0x30) >> 4; // fr\n\n      winAttr.fillGreen = (b & 0x0c) >> 2; // fg\n\n      winAttr.fillBlue = b & 0x03; // fb\n\n      b = packetData[++i];\n      winAttr.borderType = (b & 0xc0) >> 6; // bt\n\n      winAttr.borderRed = (b & 0x30) >> 4; // br\n\n      winAttr.borderGreen = (b & 0x0c) >> 2; // bg\n\n      winAttr.borderBlue = b & 0x03; // bb\n\n      b = packetData[++i];\n      winAttr.borderType += (b & 0x80) >> 5; // bt\n\n      winAttr.wordWrap = (b & 0x40) >> 6; // ww\n\n      winAttr.printDirection = (b & 0x30) >> 4; // pd\n\n      winAttr.scrollDirection = (b & 0x0c) >> 2; // sd\n\n      winAttr.justify = b & 0x03; // j\n\n      b = packetData[++i];\n      winAttr.effectSpeed = (b & 0xf0) >> 4; // es\n\n      winAttr.effectDirection = (b & 0x0c) >> 2; // ed\n\n      winAttr.displayEffect = b & 0x03; // de\n\n      return i;\n    };\n    /**\n     * Gather text from all displayed windows and push a caption to output.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     */\n\n    Cea708Stream.prototype.flushDisplayed = function (pts, service) {\n      var displayedText = []; // TODO: Positioning not supported, displaying multiple windows will not necessarily\n      // display text in the correct order, but sample files so far have not shown any issue.\n\n      for (var winId = 0; winId < 8; winId++) {\n        if (service.windows[winId].visible && !service.windows[winId].isEmpty()) {\n          displayedText.push(service.windows[winId].getText());\n        }\n      }\n      service.endPts = pts;\n      service.text = displayedText.join('\\n\\n');\n      this.pushCaption(service);\n      service.startPts = pts;\n    };\n    /**\n     * Push a caption to output if the caption contains text.\n     *\n     * @param  {Service} service  The service object to be affected\n     */\n\n    Cea708Stream.prototype.pushCaption = function (service) {\n      if (service.text !== '') {\n        this.trigger('data', {\n          startPts: service.startPts,\n          endPts: service.endPts,\n          text: service.text,\n          stream: 'cc708_' + service.serviceNum\n        });\n        service.text = '';\n        service.startPts = service.endPts;\n      }\n    };\n    /**\n     * Parse and execute the DSW command.\n     *\n     * Set visible property of windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n    Cea708Stream.prototype.displayWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].visible = 1;\n        }\n      }\n      return i;\n    };\n    /**\n     * Parse and execute the HDW command.\n     *\n     * Set visible property of windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n    Cea708Stream.prototype.hideWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].visible = 0;\n        }\n      }\n      return i;\n    };\n    /**\n     * Parse and execute the TGW command.\n     *\n     * Set visible property of windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n    Cea708Stream.prototype.toggleWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].visible ^= 1;\n        }\n      }\n      return i;\n    };\n    /**\n     * Parse and execute the CLW command.\n     *\n     * Clear text of windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n    Cea708Stream.prototype.clearWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].clearText();\n        }\n      }\n      return i;\n    };\n    /**\n     * Parse and execute the DLW command.\n     *\n     * Re-initialize windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n    Cea708Stream.prototype.deleteWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].reset();\n        }\n      }\n      return i;\n    };\n    /**\n     * Parse and execute the SPA command.\n     *\n     * Set pen attributes of the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n    Cea708Stream.prototype.setPenAttributes = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var penAttr = service.currentWindow.penAttr;\n      b = packetData[++i];\n      penAttr.textTag = (b & 0xf0) >> 4; // tt\n\n      penAttr.offset = (b & 0x0c) >> 2; // o\n\n      penAttr.penSize = b & 0x03; // s\n\n      b = packetData[++i];\n      penAttr.italics = (b & 0x80) >> 7; // i\n\n      penAttr.underline = (b & 0x40) >> 6; // u\n\n      penAttr.edgeType = (b & 0x38) >> 3; // et\n\n      penAttr.fontStyle = b & 0x07; // fs\n\n      return i;\n    };\n    /**\n     * Parse and execute the SPC command.\n     *\n     * Set pen color of the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n    Cea708Stream.prototype.setPenColor = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var penColor = service.currentWindow.penColor;\n      b = packetData[++i];\n      penColor.fgOpacity = (b & 0xc0) >> 6; // fo\n\n      penColor.fgRed = (b & 0x30) >> 4; // fr\n\n      penColor.fgGreen = (b & 0x0c) >> 2; // fg\n\n      penColor.fgBlue = b & 0x03; // fb\n\n      b = packetData[++i];\n      penColor.bgOpacity = (b & 0xc0) >> 6; // bo\n\n      penColor.bgRed = (b & 0x30) >> 4; // br\n\n      penColor.bgGreen = (b & 0x0c) >> 2; // bg\n\n      penColor.bgBlue = b & 0x03; // bb\n\n      b = packetData[++i];\n      penColor.edgeRed = (b & 0x30) >> 4; // er\n\n      penColor.edgeGreen = (b & 0x0c) >> 2; // eg\n\n      penColor.edgeBlue = b & 0x03; // eb\n\n      return i;\n    };\n    /**\n     * Parse and execute the SPL command.\n     *\n     * Set pen location of the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n    Cea708Stream.prototype.setPenLocation = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var penLoc = service.currentWindow.penLoc; // Positioning isn't really supported at the moment, so this essentially just inserts a linebreak\n\n      service.currentWindow.pendingNewLine = true;\n      b = packetData[++i];\n      penLoc.row = b & 0x0f; // r\n\n      b = packetData[++i];\n      penLoc.column = b & 0x3f; // c\n\n      return i;\n    };\n    /**\n     * Execute the RST command.\n     *\n     * Reset service to a clean slate. Re-initialize.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Service}          Re-initialized service\n     */\n\n    Cea708Stream.prototype.reset = function (i, service) {\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n      return this.initService(service.serviceNum, i);\n    }; // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1,\n      // á\n      0x5c: 0xe9,\n      // é\n      0x5e: 0xed,\n      // í\n      0x5f: 0xf3,\n      // ó\n      0x60: 0xfa,\n      // ú\n      0x7b: 0xe7,\n      // ç\n      0x7c: 0xf7,\n      // ÷\n      0x7d: 0xd1,\n      // Ñ\n      0x7e: 0xf1,\n      // ñ\n      0x7f: 0x2588,\n      // █\n      0x0130: 0xae,\n      // ®\n      0x0131: 0xb0,\n      // °\n      0x0132: 0xbd,\n      // ½\n      0x0133: 0xbf,\n      // ¿\n      0x0134: 0x2122,\n      // ™\n      0x0135: 0xa2,\n      // ¢\n      0x0136: 0xa3,\n      // £\n      0x0137: 0x266a,\n      // ♪\n      0x0138: 0xe0,\n      // à\n      0x0139: 0xa0,\n      //\n      0x013a: 0xe8,\n      // è\n      0x013b: 0xe2,\n      // â\n      0x013c: 0xea,\n      // ê\n      0x013d: 0xee,\n      // î\n      0x013e: 0xf4,\n      // ô\n      0x013f: 0xfb,\n      // û\n      0x0220: 0xc1,\n      // Á\n      0x0221: 0xc9,\n      // É\n      0x0222: 0xd3,\n      // Ó\n      0x0223: 0xda,\n      // Ú\n      0x0224: 0xdc,\n      // Ü\n      0x0225: 0xfc,\n      // ü\n      0x0226: 0x2018,\n      // ‘\n      0x0227: 0xa1,\n      // ¡\n      0x0228: 0x2a,\n      // *\n      0x0229: 0x27,\n      // '\n      0x022a: 0x2014,\n      // —\n      0x022b: 0xa9,\n      // ©\n      0x022c: 0x2120,\n      // ℠\n      0x022d: 0x2022,\n      // •\n      0x022e: 0x201c,\n      // “\n      0x022f: 0x201d,\n      // ”\n      0x0230: 0xc0,\n      // À\n      0x0231: 0xc2,\n      // Â\n      0x0232: 0xc7,\n      // Ç\n      0x0233: 0xc8,\n      // È\n      0x0234: 0xca,\n      // Ê\n      0x0235: 0xcb,\n      // Ë\n      0x0236: 0xeb,\n      // ë\n      0x0237: 0xce,\n      // Î\n      0x0238: 0xcf,\n      // Ï\n      0x0239: 0xef,\n      // ï\n      0x023a: 0xd4,\n      // Ô\n      0x023b: 0xd9,\n      // Ù\n      0x023c: 0xf9,\n      // ù\n      0x023d: 0xdb,\n      // Û\n      0x023e: 0xab,\n      // «\n      0x023f: 0xbb,\n      // »\n      0x0320: 0xc3,\n      // Ã\n      0x0321: 0xe3,\n      // ã\n      0x0322: 0xcd,\n      // Í\n      0x0323: 0xcc,\n      // Ì\n      0x0324: 0xec,\n      // ì\n      0x0325: 0xd2,\n      // Ò\n      0x0326: 0xf2,\n      // ò\n      0x0327: 0xd5,\n      // Õ\n      0x0328: 0xf5,\n      // õ\n      0x0329: 0x7b,\n      // {\n      0x032a: 0x7d,\n      // }\n      0x032b: 0x5c,\n      // \\\n      0x032c: 0x5e,\n      // ^\n      0x032d: 0x5f,\n      // _\n      0x032e: 0x7c,\n      // |\n      0x032f: 0x7e,\n      // ~\n      0x0330: 0xc4,\n      // Ä\n      0x0331: 0xe4,\n      // ä\n      0x0332: 0xd6,\n      // Ö\n      0x0333: 0xf6,\n      // ö\n      0x0334: 0xdf,\n      // ß\n      0x0335: 0xa5,\n      // ¥\n      0x0336: 0xa4,\n      // ¤\n      0x0337: 0x2502,\n      // │\n      0x0338: 0xc5,\n      // Å\n      0x0339: 0xe5,\n      // å\n      0x033a: 0xd8,\n      // Ø\n      0x033b: 0xf8,\n      // ø\n      0x033c: 0x250c,\n      // ┌\n      0x033d: 0x2510,\n      // ┐\n      0x033e: 0x2514,\n      // └\n      0x033f: 0x2518 // ┘\n    };\n    var getCharFromCode = function (code) {\n      if (code === null) {\n        return '';\n      }\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    }; // the index of the last row in a CEA-608 display buffer\n\n    var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n    // We keep track of positioning information as we go by storing the\n    // number of indentations and the tab offset in this buffer.\n\n    var createDisplayBuffer = function () {\n      var result = [],\n        i = BOTTOM_ROW + 1;\n      while (i--) {\n        result.push({\n          text: '',\n          indent: 0,\n          offset: 0\n        });\n      }\n      return result;\n    };\n    var Cea608Stream = function (field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n      this.setConstants();\n      this.reset();\n      this.push = function (packet) {\n        var data, swap, char0, char1, text; // remove the parity bits\n\n        data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        } // Store control codes\n\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n          this.flushDisplayed(packet.pts); // flip memory\n\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_].text = this.nonDisplayed_[this.row_].text.slice(0, -1);\n          } else {\n            this.displayed_[this.row_].text = this.displayed_[this.row_].text.slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts; // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_].text = this.nonDisplayed_[this.row_].text.slice(0, -1);\n          } else {\n            this.displayed_[this.row_].text = this.displayed_[this.row_].text.slice(0, -1);\n          } // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          } // Detect offset control codes and adjust cursor\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          const offset = char1 & 0x03; // For an offest value 1-3, set the offset for that caption\n          // in the non-displayed array.\n\n          this.nonDisplayed_[this.row_].offset = offset;\n          this.column_ += offset; // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n          if (this.mode_ === 'rollUp') {\n            // This implies that the base row is incorrectly set.\n            // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n            // of roll-up rows set.\n            if (row - this.rollUpRows_ + 1 < 0) {\n              row = this.rollUpRows_ - 1;\n            }\n            this.setRollUp(packet.pts, row);\n          } // Ensure the row is between 0 and 14, otherwise use the most\n          // recent or default row.\n\n          if (row !== this.row_ && row >= 0 && row <= 14) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          } // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            const indentations = (data & 0xe) >> 1;\n            this.column_ = indentations * 4; // add to the number of indentations for positioning\n\n            this.nonDisplayed_[this.row_].indent += indentations;\n          }\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          } // We have a normal character in char0, and possibly one in char1\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n      };\n    };\n    Cea608Stream.prototype = new Stream$7(); // Trigger a cue point that captures the current state of the\n    // display buffer\n\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      const logWarning = index => {\n        this.trigger('log', {\n          level: 'warn',\n          message: 'Skipping a malformed 608 caption at index ' + index + '.'\n        });\n      };\n      const content = [];\n      this.displayed_.forEach((row, i) => {\n        if (row && row.text && row.text.length) {\n          try {\n            // remove spaces from the start and end of the string\n            row.text = row.text.trim();\n          } catch (e) {\n            // Ordinarily, this shouldn't happen. However, caption\n            // parsing errors should not throw exceptions and\n            // break playback.\n            logWarning(i);\n          } // See the below link for more details on the following fields:\n          // https://dvcs.w3.org/hg/text-tracks/raw-file/default/608toVTT/608toVTT.html#positioning-in-cea-608\n\n          if (row.text.length) {\n            content.push({\n              // The text to be displayed in the caption from this specific row, with whitespace removed.\n              text: row.text,\n              // Value between 1 and 15 representing the PAC row used to calculate line height.\n              line: i + 1,\n              // A number representing the indent position by percentage (CEA-608 PAC indent code).\n              // The value will be a number between 10 and 80. Offset is used to add an aditional\n              // value to the position if necessary.\n              position: 10 + Math.min(70, row.indent * 10) + row.offset * 2.5\n            });\n          }\n        } else if (row === undefined || row === null) {\n          logWarning(i);\n        }\n      });\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          content,\n          stream: this.name_\n        });\n      }\n    };\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n      this.formatting_ = [];\n    };\n    /**\n     * Sets up control code and related constants for this instance\n     */\n\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      } // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n\n      this.PADDING_ = 0x0000; // Pop-on Mode\n\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n\n    Cea608Stream.prototype.isNormalChar = function (char) {\n      return char >= 0x20 && char <= 0x7f;\n    };\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = {\n            text: '',\n            indent: 0,\n            offset: 0\n          };\n        }\n      }\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    }; // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    }; // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    }; // Mode Implementations\n\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_].text; // buffer characters\n\n      baseRow += text;\n      this.nonDisplayed_[this.row_].text = baseRow;\n    };\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_].text;\n      baseRow += text;\n      this.displayed_[this.row_].text = baseRow;\n    };\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i; // clear out inactive rows\n\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = {\n          text: '',\n          indent: 0,\n          offset: 0\n        };\n      }\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = {\n          text: '',\n          indent: 0,\n          offset: 0\n        };\n      } // shift displayed rows up\n\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      } // clear out the bottom row\n\n      this.displayed_[this.row_] = {\n        text: '',\n        indent: 0,\n        offset: 0\n      };\n    };\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_].text;\n      baseRow += text;\n      this.displayed_[this.row_].text = baseRow;\n    }; // exports\n\n    var captionStream = {\n      CaptionStream: CaptionStream$2,\n      Cea608Stream: Cea608Stream,\n      Cea708Stream: Cea708Stream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Accepts program elementary stream (PES) data events and corrects\n     * decode and presentation time stamps to account for a rollover\n     * of the 33 bit value.\n     */\n\n    var Stream$6 = stream;\n    var MAX_TS = 8589934592;\n    var RO_THRESH = 4294967296;\n    var TYPE_SHARED = 'shared';\n    var handleRollover$1 = function (value, reference) {\n      var direction = 1;\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n      return value;\n    };\n    var TimestampRolloverStream$1 = function (type) {\n      var lastDTS, referenceDTS;\n      TimestampRolloverStream$1.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n      // video and audio. We could use `undefined` here, but having a string\n      // makes debugging a little clearer.\n\n      this.type_ = type || TYPE_SHARED;\n      this.push = function (data) {\n        /**\n         * Rollover stream expects data from elementary stream.\n         * Elementary stream can push forward 2 types of data\n         * - Parsed Video/Audio/Timed-metadata PES (packetized elementary stream) packets\n         * - Tracks metadata from PMT (Program Map Table)\n         * Rollover stream expects pts/dts info to be available, since it stores lastDTS\n         * We should ignore non-PES packets since they may override lastDTS to undefined.\n         * lastDTS is important to signal the next segments\n         * about rollover from the previous segments.\n         */\n        if (data.type === 'metadata') {\n          this.trigger('data', data);\n          return;\n        } // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n        // streams will only accept data that matches their type.\n\n        if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n          return;\n        }\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n        data.dts = handleRollover$1(data.dts, referenceDTS);\n        data.pts = handleRollover$1(data.pts, referenceDTS);\n        lastDTS = data.dts;\n        this.trigger('data', data);\n      };\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n      this.reset = function () {\n        this.discontinuity();\n        this.trigger('reset');\n      };\n    };\n    TimestampRolloverStream$1.prototype = new Stream$6();\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      handleRollover: handleRollover$1\n    }; // Once IE11 support is dropped, this function should be removed.\n\n    var typedArrayIndexOf$1 = (typedArray, element, fromIndex) => {\n      if (!typedArray) {\n        return -1;\n      }\n      var currentIndex = fromIndex;\n      for (; currentIndex < typedArray.length; currentIndex++) {\n        if (typedArray[currentIndex] === element) {\n          return currentIndex;\n        }\n      }\n      return -1;\n    };\n    var typedArray = {\n      typedArrayIndexOf: typedArrayIndexOf$1\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Tools for parsing ID3 frame data\n     * @see http://id3.org/id3v2.3.0\n     */\n\n    var typedArrayIndexOf = typedArray.typedArrayIndexOf,\n      // Frames that allow different types of text encoding contain a text\n      // encoding description byte [ID3v2.4.0 section 4.]\n      textEncodingDescriptionByte = {\n        Iso88591: 0x00,\n        // ISO-8859-1, terminated with \\0.\n        Utf16: 0x01,\n        // UTF-16 encoded Unicode BOM, terminated with \\0\\0\n        Utf16be: 0x02,\n        // UTF-16BE encoded Unicode, without BOM, terminated with \\0\\0\n        Utf8: 0x03 // UTF-8 encoded Unicode, terminated with \\0\n      },\n      // return a percent-encoded representation of the specified byte range\n      // @see http://en.wikipedia.org/wiki/Percent-encoding \n      percentEncode$1 = function (bytes, start, end) {\n        var i,\n          result = '';\n        for (i = start; i < end; i++) {\n          result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n        }\n        return result;\n      },\n      // return the string representation of the specified byte range,\n      // interpreted as UTf-8.\n      parseUtf8 = function (bytes, start, end) {\n        return decodeURIComponent(percentEncode$1(bytes, start, end));\n      },\n      // return the string representation of the specified byte range,\n      // interpreted as ISO-8859-1.\n      parseIso88591$1 = function (bytes, start, end) {\n        return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n      },\n      parseSyncSafeInteger$1 = function (data) {\n        return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n      },\n      frameParsers = {\n        'APIC': function (frame) {\n          var i = 1,\n            mimeTypeEndIndex,\n            descriptionEndIndex,\n            LINK_MIME_TYPE = '-->';\n          if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n            // ignore frames with unrecognized character encodings\n            return;\n          } // parsing fields [ID3v2.4.0 section 4.14.]\n\n          mimeTypeEndIndex = typedArrayIndexOf(frame.data, 0, i);\n          if (mimeTypeEndIndex < 0) {\n            // malformed frame\n            return;\n          } // parsing Mime type field (terminated with \\0)\n\n          frame.mimeType = parseIso88591$1(frame.data, i, mimeTypeEndIndex);\n          i = mimeTypeEndIndex + 1; // parsing 1-byte Picture Type field\n\n          frame.pictureType = frame.data[i];\n          i++;\n          descriptionEndIndex = typedArrayIndexOf(frame.data, 0, i);\n          if (descriptionEndIndex < 0) {\n            // malformed frame\n            return;\n          } // parsing Description field (terminated with \\0)\n\n          frame.description = parseUtf8(frame.data, i, descriptionEndIndex);\n          i = descriptionEndIndex + 1;\n          if (frame.mimeType === LINK_MIME_TYPE) {\n            // parsing Picture Data field as URL (always represented as ISO-8859-1 [ID3v2.4.0 section 4.])\n            frame.url = parseIso88591$1(frame.data, i, frame.data.length);\n          } else {\n            // parsing Picture Data field as binary data\n            frame.pictureData = frame.data.subarray(i, frame.data.length);\n          }\n        },\n        'T*': function (frame) {\n          if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n            // ignore frames with unrecognized character encodings\n            return;\n          } // parse text field, do not include null terminator in the frame value\n          // frames that allow different types of encoding contain terminated text [ID3v2.4.0 section 4.]\n\n          frame.value = parseUtf8(frame.data, 1, frame.data.length).replace(/\\0*$/, ''); // text information frames supports multiple strings, stored as a terminator separated list [ID3v2.4.0 section 4.2.]\n\n          frame.values = frame.value.split('\\0');\n        },\n        'TXXX': function (frame) {\n          var descriptionEndIndex;\n          if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n            // ignore frames with unrecognized character encodings\n            return;\n          }\n          descriptionEndIndex = typedArrayIndexOf(frame.data, 0, 1);\n          if (descriptionEndIndex === -1) {\n            return;\n          } // parse the text fields\n\n          frame.description = parseUtf8(frame.data, 1, descriptionEndIndex); // do not include the null terminator in the tag value\n          // frames that allow different types of encoding contain terminated text\n          // [ID3v2.4.0 section 4.]\n\n          frame.value = parseUtf8(frame.data, descriptionEndIndex + 1, frame.data.length).replace(/\\0*$/, '');\n          frame.data = frame.value;\n        },\n        'W*': function (frame) {\n          // parse URL field; URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n          // if the value is followed by a string termination all the following information should be ignored [ID3v2.4.0 section 4.3]\n          frame.url = parseIso88591$1(frame.data, 0, frame.data.length).replace(/\\0.*$/, '');\n        },\n        'WXXX': function (frame) {\n          var descriptionEndIndex;\n          if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n            // ignore frames with unrecognized character encodings\n            return;\n          }\n          descriptionEndIndex = typedArrayIndexOf(frame.data, 0, 1);\n          if (descriptionEndIndex === -1) {\n            return;\n          } // parse the description and URL fields\n\n          frame.description = parseUtf8(frame.data, 1, descriptionEndIndex); // URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n          // if the value is followed by a string termination all the following information\n          // should be ignored [ID3v2.4.0 section 4.3]\n\n          frame.url = parseIso88591$1(frame.data, descriptionEndIndex + 1, frame.data.length).replace(/\\0.*$/, '');\n        },\n        'PRIV': function (frame) {\n          var i;\n          for (i = 0; i < frame.data.length; i++) {\n            if (frame.data[i] === 0) {\n              // parse the description and URL fields\n              frame.owner = parseIso88591$1(frame.data, 0, i);\n              break;\n            }\n          }\n          frame.privateData = frame.data.subarray(i + 1);\n          frame.data = frame.privateData;\n        }\n      };\n    var parseId3Frames$1 = function (data) {\n      var frameSize,\n        frameHeader,\n        frameStart = 10,\n        tagSize = 0,\n        frames = []; // If we don't have enough data for a header, 10 bytes, \n      // or 'ID3' in the first 3 bytes this is not a valid ID3 tag.\n\n      if (data.length < 10 || data[0] !== 'I'.charCodeAt(0) || data[1] !== 'D'.charCodeAt(0) || data[2] !== '3'.charCodeAt(0)) {\n        return;\n      } // the frame size is transmitted as a 28-bit integer in the\n      // last four bytes of the ID3 header.\n      // The most significant bit of each byte is dropped and the\n      // results concatenated to recover the actual value.\n\n      tagSize = parseSyncSafeInteger$1(data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n      // convenient for our comparisons to include it\n\n      tagSize += 10; // check bit 6 of byte 5 for the extended header flag.\n\n      var hasExtendedHeader = data[5] & 0x40;\n      if (hasExtendedHeader) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(data.subarray(10, 14));\n        tagSize -= parseSyncSafeInteger$1(data.subarray(16, 20)); // clip any padding off the end\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(data.subarray(frameStart + 4, frameStart + 8));\n        if (frameSize < 1) {\n          break;\n        }\n        frameHeader = String.fromCharCode(data[frameStart], data[frameStart + 1], data[frameStart + 2], data[frameStart + 3]);\n        var frame = {\n          id: frameHeader,\n          data: data.subarray(frameStart + 10, frameStart + frameSize + 10)\n        };\n        frame.key = frame.id; // parse frame values\n\n        if (frameParsers[frame.id]) {\n          // use frame specific parser\n          frameParsers[frame.id](frame);\n        } else if (frame.id[0] === 'T') {\n          // use text frame generic parser\n          frameParsers['T*'](frame);\n        } else if (frame.id[0] === 'W') {\n          // use URL link frame generic parser\n          frameParsers['W*'](frame);\n        }\n        frames.push(frame);\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < tagSize);\n      return frames;\n    };\n    var parseId3 = {\n      parseId3Frames: parseId3Frames$1,\n      parseSyncSafeInteger: parseSyncSafeInteger$1,\n      frameParsers: frameParsers\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Accepts program elementary stream (PES) data events and parses out\n     * ID3 metadata from them, if present.\n     * @see http://id3.org/id3v2.3.0\n     */\n\n    var Stream$5 = stream,\n      StreamTypes$3 = streamTypes,\n      id3 = parseId3,\n      MetadataStream;\n    MetadataStream = function (options) {\n      var settings = {\n          // the bytes of the program-level descriptor field in MP2T\n          // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n          // program element descriptors\"\n          descriptor: options && options.descriptor\n        },\n        // the total size in bytes of the ID3 tag being parsed\n        tagSize = 0,\n        // tag data that is not complete enough to be parsed\n        buffer = [],\n        // the total number of bytes currently in the buffer\n        bufferSize = 0,\n        i;\n      MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n      this.dispatchType = StreamTypes$3.METADATA_STREAM_TYPE.toString(16);\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        } // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        } // ignore events that don't look like ID3 data\n\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          this.trigger('log', {\n            level: 'warn',\n            message: 'Skipping unrecognized metadata packet'\n          });\n          return;\n        } // add this chunk to the data we've collected so far\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = id3.parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n\n          tagSize += 10;\n        } // if the entire frame has not arrived, wait for more data\n\n        if (bufferSize < tagSize) {\n          return;\n        } // collect the entire frame so it can be parsed\n\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        } // find the start of the first frame and the end of the tag\n\n        frameStart = 10;\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += id3.parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n          tagSize -= id3.parseSyncSafeInteger(tag.data.subarray(16, 20));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = id3.parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n          if (frameSize < 1) {\n            this.trigger('log', {\n              level: 'warn',\n              message: 'Malformed ID3 frame encountered. Skipping remaining metadata parsing.'\n            }); // If the frame is malformed, don't parse any further frames but allow previous valid parsed frames\n            // to be sent along.\n\n            break;\n          }\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id; // parse frame values\n\n          if (id3.frameParsers[frame.id]) {\n            // use frame specific parser\n            id3.frameParsers[frame.id](frame);\n          } else if (frame.id[0] === 'T') {\n            // use text frame generic parser\n            id3.frameParsers['T*'](frame);\n          } else if (frame.id[0] === 'W') {\n            // use URL link frame generic parser\n            id3.frameParsers['W*'](frame);\n          } // handle the special PRIV frame used to indicate the start\n          // time for raw AAC data\n\n          if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.data,\n              size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n            size *= 4;\n            size += d[7] & 0x03;\n            frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n            // on the value of this frame\n            // we couldn't have known the appropriate pts and dts before\n            // parsing this ID3 tag so set those values now\n\n            if (tag.pts === undefined && tag.dts === undefined) {\n              tag.pts = frame.timeStamp;\n              tag.dts = frame.timeStamp;\n            }\n            this.trigger('timestamp', frame);\n          }\n          tag.frames.push(frame);\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n        this.trigger('data', tag);\n      };\n    };\n    MetadataStream.prototype = new Stream$5();\n    var metadataStream = MetadataStream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * A stream-based mp2t to mp4 converter. This utility can be used to\n     * deliver mp4s to a SourceBuffer on platforms that support native\n     * Media Source Extensions.\n     */\n\n    var Stream$4 = stream,\n      CaptionStream$1 = captionStream,\n      StreamTypes$2 = streamTypes,\n      TimestampRolloverStream = timestampRolloverStream.TimestampRolloverStream; // object types\n\n    var TransportPacketStream, TransportParseStream, ElementaryStream; // constants\n\n    var MP2T_PACKET_LENGTH$1 = 188,\n      // bytes\n      SYNC_BYTE$1 = 0x47;\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n\n    TransportPacketStream = function () {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH$1),\n        bytesInBuffer = 0;\n      TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n          endIndex = MP2T_PACKET_LENGTH$1,\n          everything; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        } // While we have enough data for a packet\n\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE$1 && everything[endIndex] === SYNC_BYTE$1) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH$1;\n            endIndex += MP2T_PACKET_LENGTH$1;\n            continue;\n          } // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n\n          startIndex++;\n          endIndex++;\n        } // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH$1 && buffer[0] === SYNC_BYTE$1) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n        this.trigger('done');\n      };\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n      this.reset = function () {\n        bytesInBuffer = 0;\n        this.trigger('reset');\n      };\n    };\n    TransportPacketStream.prototype = new Stream$4();\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n\n    TransportParseStream = function () {\n      var parsePsi, parsePat, parsePmt, self;\n      TransportParseStream.prototype.init.call(this);\n      self = this;\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n      parsePsi = function (payload, psi) {\n        var offset = 0; // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n      parsePat = function (payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n        // skip the PSI header and parse the first PMT entry\n\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n\n      parsePmt = function (payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n\n        if (!(payload[5] & 0x01)) {\n          return;\n        } // overwrite any existing program map table\n\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        }; // the mapping table ends at the end of the current section\n\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n        offset = 12 + programInfoLength;\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n\n          if (streamType === StreamTypes$2.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === StreamTypes$2.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === StreamTypes$2.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          } // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        } // record the map on the packet as well\n\n        pmt.programMapTable = self.programMapTable;\n      };\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n\n      this.push = function (packet) {\n        var result = {},\n          offset = 4;\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        } // parse the rest of the packet based on the type\n\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = StreamTypes$2.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = StreamTypes$2.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n        this.trigger('data', result);\n      };\n    };\n    TransportParseStream.prototype = new Stream$4();\n    TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n\n    ElementaryStream = function () {\n      var self = this,\n        segmentHadPmt = false,\n        // PES packet fragments\n        video = {\n          data: [],\n          size: 0\n        },\n        audio = {\n          data: [],\n          size: 0\n        },\n        timedMetadata = {\n          data: [],\n          size: 0\n        },\n        programMapTable,\n        parsePes = function (payload, pes) {\n          var ptsDtsFlags;\n          const startPrefix = payload[0] << 16 | payload[1] << 8 | payload[2]; // default to an empty array\n\n          pes.data = new Uint8Array(); // In certain live streams, the start of a TS fragment has ts packets\n          // that are frame data that is continuing from the previous fragment. This\n          // is to check that the pes data is the start of a new pes payload\n\n          if (startPrefix !== 1) {\n            return;\n          } // get the packet length, this will be 0 for video\n\n          pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n          pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n          // and a DTS value. Determine what combination of values is\n          // available to work with.\n\n          ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n          // performs all bitwise operations on 32-bit integers but javascript\n          // supports a much greater range (52-bits) of integer using standard\n          // mathematical operations.\n          // We construct a 31-bit value using bitwise operators over the 31\n          // most significant bits and then multiply by 4 (equal to a left-shift\n          // of 2) before we add the final 2 least significant bits of the\n          // timestamp (equal to an OR.)\n\n          if (ptsDtsFlags & 0xC0) {\n            // the PTS and DTS are not written out directly. For information\n            // on how they are encoded, see\n            // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n            pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n            pes.pts *= 4; // Left shift by 2\n\n            pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n            pes.dts = pes.pts;\n            if (ptsDtsFlags & 0x40) {\n              pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n              pes.dts *= 4; // Left shift by 2\n\n              pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n            }\n          } // the data section starts immediately after the PES header.\n          // pes_header_data_length specifies the number of header bytes\n          // that follow the last byte of the field.\n\n          pes.data = payload.subarray(9 + payload[8]);\n        },\n        /**\n          * Pass completely parsed PES packets to the next stream in the pipeline\n         **/\n        flushStream = function (stream, type, forceFlush) {\n          var packetData = new Uint8Array(stream.size),\n            event = {\n              type: type\n            },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment; // do nothing if there is not enough buffered data for a complete\n          // PES header\n\n          if (!stream.data.length || stream.size < 9) {\n            return;\n          }\n          event.trackId = stream.data[0].pid; // reassemble the packet\n\n          for (i = 0; i < stream.data.length; i++) {\n            fragment = stream.data[i];\n            packetData.set(fragment.data, offset);\n            offset += fragment.data.byteLength;\n          } // parse assembled packet's PES header\n\n          parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n          // check that there is enough stream data to fill the packet\n\n          packetFlushable = type === 'video' || event.packetLength <= stream.size; // flush pending packets if the conditions are right\n\n          if (forceFlush || packetFlushable) {\n            stream.size = 0;\n            stream.data.length = 0;\n          } // only emit packets that are complete. this is to avoid assembling\n          // incomplete PES packets due to poor segmentation\n\n          if (packetFlushable) {\n            self.trigger('data', event);\n          }\n        };\n      ElementaryStream.prototype.init.call(this);\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n\n      this.push = function (data) {\n        ({\n          pat: function () {// we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function () {\n            var stream, streamType;\n            switch (data.streamType) {\n              case StreamTypes$2.H264_STREAM_TYPE:\n                stream = video;\n                streamType = 'video';\n                break;\n              case StreamTypes$2.ADTS_STREAM_TYPE:\n                stream = audio;\n                streamType = 'audio';\n                break;\n              case StreamTypes$2.METADATA_STREAM_TYPE:\n                stream = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n              default:\n                // ignore unknown stream types\n                return;\n            } // if a new packet is starting, we can flush the completed\n            // packet\n\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream, streamType, true);\n            } // buffer this fragment until we are sure we've received the\n            // complete payload\n\n            stream.data.push(data);\n            stream.size += data.data.byteLength;\n          },\n          pmt: function () {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            };\n            programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n            segmentHadPmt = true;\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n      this.reset = function () {\n        video.size = 0;\n        video.data.length = 0;\n        audio.size = 0;\n        audio.data.length = 0;\n        this.trigger('reset');\n      };\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n\n      this.flushStreams_ = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n      };\n      this.flush = function () {\n        // if on flush we haven't had a pmt emitted\n        // and we have a pmt to emit. emit the pmt\n        // so that we trigger a trackinfo downstream.\n        if (!segmentHadPmt && programMapTable) {\n          var pmt = {\n            type: 'metadata',\n            tracks: []\n          }; // translate audio and video streams to tracks\n\n          if (programMapTable.video !== null) {\n            pmt.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.video,\n              codec: 'avc',\n              type: 'video'\n            });\n          }\n          if (programMapTable.audio !== null) {\n            pmt.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.audio,\n              codec: 'adts',\n              type: 'audio'\n            });\n          }\n          self.trigger('data', pmt);\n        }\n        segmentHadPmt = false;\n        this.flushStreams_();\n        this.trigger('done');\n      };\n    };\n    ElementaryStream.prototype = new Stream$4();\n    var m2ts$1 = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH$1,\n      TransportPacketStream: TransportPacketStream,\n      TransportParseStream: TransportParseStream,\n      ElementaryStream: ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream,\n      CaptionStream: CaptionStream$1.CaptionStream,\n      Cea608Stream: CaptionStream$1.Cea608Stream,\n      Cea708Stream: CaptionStream$1.Cea708Stream,\n      MetadataStream: metadataStream\n    };\n    for (var type in StreamTypes$2) {\n      if (StreamTypes$2.hasOwnProperty(type)) {\n        m2ts$1[type] = StreamTypes$2[type];\n      }\n    }\n    var m2ts_1 = m2ts$1;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var Stream$3 = stream;\n    var ONE_SECOND_IN_TS$2 = clock$2.ONE_SECOND_IN_TS;\n    var AdtsStream$1;\n    var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n\n    AdtsStream$1 = function (handlePartialSegments) {\n      var buffer,\n        frameNum = 0;\n      AdtsStream$1.prototype.init.call(this);\n      this.skipWarn_ = function (start, end) {\n        this.trigger('log', {\n          level: 'warn',\n          message: `adts skiping bytes ${start} to ${end} in frame ${frameNum} outside syncword`\n        });\n      };\n      this.push = function (packet) {\n        var i = 0,\n          frameLength,\n          protectionSkipBytes,\n          oldBuffer,\n          sampleCount,\n          adtsFrameDuration;\n        if (!handlePartialSegments) {\n          frameNum = 0;\n        }\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        } // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n\n        if (buffer && buffer.length) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        } // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n        var skip; // We use i + 7 here because we want to be able to parse the entire header.\n        // If we don't have enough bytes to do that, then we definitely won't have a full frame.\n\n        while (i + 7 < buffer.length) {\n          // Look for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            if (typeof skip !== 'number') {\n              skip = i;\n            } // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n\n            i++;\n            continue;\n          }\n          if (typeof skip === 'number') {\n            this.skipWarn_(skip, i);\n            skip = null;\n          } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n          // NOTE: frame length includes the size of the header\n\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2]; // If we don't have enough data to actually finish this ADTS frame,\n          // then we have to wait for more data\n\n          if (buffer.byteLength - i < frameLength) {\n            break;\n          } // Otherwise, deliver the complete AAC frame\n\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            // data is the frame without it's header\n            data: buffer.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n          });\n          frameNum++;\n          i += frameLength;\n        }\n        if (typeof skip === 'number') {\n          this.skipWarn_(skip, i);\n          skip = null;\n        } // remove processed bytes from the buffer.\n\n        buffer = buffer.subarray(i);\n      };\n      this.flush = function () {\n        frameNum = 0;\n        this.trigger('done');\n      };\n      this.reset = function () {\n        buffer = void 0;\n        this.trigger('reset');\n      };\n      this.endTimeline = function () {\n        buffer = void 0;\n        this.trigger('endedtimeline');\n      };\n    };\n    AdtsStream$1.prototype = new Stream$3();\n    var adts = AdtsStream$1;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ExpGolomb$1;\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n\n    ExpGolomb$1 = function (workingData) {\n      var\n        // the number of bytes left to examine in workingData\n        workingBytesAvailable = workingData.byteLength,\n        // the current word being examined\n        workingWord = 0,\n        // :uint\n        // the number of bits left to examine in the current word\n        workingBitsAvailable = 0; // :uint;\n      // ():uint\n\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      }; // ():uint\n\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      }; // ():void\n\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n          workingBytes = new Uint8Array(4),\n          availableBytes = Math.min(4, workingBytesAvailable);\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      }; // (count:int):void\n\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n          this.loadWord();\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      }; // (size:int):uint\n\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n          // :uint\n          valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n\n        workingBitsAvailable -= bits;\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n        bits = size - bits;\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n        return valu;\n      }; // ():uint\n\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        } // we exhausted workingWord and still have not found a 1\n\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      }; // ():void\n\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():void\n\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():uint\n\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n\n        return this.readBits(clz + 1) - 1;\n      }; // ():int\n\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }; // Some convenience functions\n      // :Boolean\n\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      }; // ():int\n\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n      this.loadWord();\n    };\n    var expGolomb = ExpGolomb$1;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var Stream$2 = stream;\n    var ExpGolomb = expGolomb;\n    var H264Stream$1, NalByteStream;\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n\n    NalByteStream = function () {\n      var syncPoint = 0,\n        i,\n        buffer;\n      NalByteStream.prototype.init.call(this);\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n\n      this.push = function (data) {\n        var swapBuffer;\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        }\n        var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n        // advance the sync point to a NAL start, if necessary\n\n        for (; syncPoint < len - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n        while (i < len) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              } // deliver the NAL unit if it isn't empty\n\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              } // drop trailing zeroes\n\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < len);\n              syncPoint = i - 2;\n              i += 3;\n              break;\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              } // deliver the NAL unit\n\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        } // filter out the NAL units that were delivered\n\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n      this.reset = function () {\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('reset');\n      };\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        } // reset the stream state\n\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n    };\n    NalByteStream.prototype = new Stream$2(); // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      // TODO: the three profiles below don't\n      // appear to have sps data in the specificiation anymore?\n      138: true,\n      139: true,\n      134: true\n    };\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n\n    H264Stream$1 = function () {\n      var nalByteStream = new NalByteStream(),\n        self,\n        trackId,\n        currentPts,\n        currentDts,\n        discardEmulationPreventionBytes,\n        readSequenceParameterSet,\n        skipScalingList;\n      H264Stream$1.prototype.init.call(this);\n      self = this;\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n        nalByteStream.push(packet);\n      };\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data,\n          nalUnitTypeCode: data[0] & 0x1f\n        };\n        switch (event.nalUnitTypeCode) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n        } // This triggers data on the H264Stream\n\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n      nalByteStream.on('partialdone', function () {\n        self.trigger('partialdone');\n      });\n      nalByteStream.on('reset', function () {\n        self.trigger('reset');\n      });\n      nalByteStream.on('endedtimeline', function () {\n        self.trigger('endedtimeline');\n      });\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n      this.partialFlush = function () {\n        nalByteStream.partialFlush();\n      };\n      this.reset = function () {\n        nalByteStream.reset();\n      };\n      this.endTimeline = function () {\n        nalByteStream.endTimeline();\n      };\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n\n      skipScalingList = function (count, expGolombDecoder) {\n        var lastScale = 8,\n          nextScale = 8,\n          j,\n          deltaScale;\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n\n      discardEmulationPreventionBytes = function (data) {\n        var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n          newData[i] = data[sourceIndex];\n        }\n        return newData;\n      };\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n\n      readSequenceParameterSet = function (data) {\n        var frameCropLeftOffset = 0,\n          frameCropRightOffset = 0,\n          frameCropTopOffset = 0,\n          frameCropBottomOffset = 0,\n          expGolombDecoder,\n          profileIdc,\n          levelIdc,\n          profileCompatibility,\n          chromaFormatIdc,\n          picOrderCntType,\n          numRefFramesInPicOrderCntCycle,\n          picWidthInMbsMinus1,\n          picHeightInMapUnitsMinus1,\n          frameMbsOnlyFlag,\n          scalingListCount,\n          sarRatio = [1, 1],\n          aspectRatioIdc,\n          i;\n        expGolombDecoder = new ExpGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];\n                break;\n              case 2:\n                sarRatio = [12, 11];\n                break;\n              case 3:\n                sarRatio = [10, 11];\n                break;\n              case 4:\n                sarRatio = [16, 11];\n                break;\n              case 5:\n                sarRatio = [40, 33];\n                break;\n              case 6:\n                sarRatio = [24, 11];\n                break;\n              case 7:\n                sarRatio = [20, 11];\n                break;\n              case 8:\n                sarRatio = [32, 11];\n                break;\n              case 9:\n                sarRatio = [80, 33];\n                break;\n              case 10:\n                sarRatio = [18, 11];\n                break;\n              case 11:\n                sarRatio = [15, 11];\n                break;\n              case 12:\n                sarRatio = [64, 33];\n                break;\n              case 13:\n                sarRatio = [160, 99];\n                break;\n              case 14:\n                sarRatio = [4, 3];\n                break;\n              case 15:\n                sarRatio = [3, 2];\n                break;\n              case 16:\n                sarRatio = [2, 1];\n                break;\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n            if (sarRatio) {\n              sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: (picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2,\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n          // sar is sample aspect ratio\n          sarRatio: sarRatio\n        };\n      };\n    };\n    H264Stream$1.prototype = new Stream$2();\n    var h264 = {\n      H264Stream: H264Stream$1,\n      NalByteStream: NalByteStream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Utilities to detect basic properties and metadata about Aac data.\n     */\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    var parseId3TagSize = function (header, byteIndex) {\n      var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n        flags = header[byteIndex + 5],\n        footerPresent = (flags & 16) >> 4; // if we get a negative returnSize clamp it to 0\n\n      returnSize = returnSize >= 0 ? returnSize : 0;\n      if (footerPresent) {\n        return returnSize + 20;\n      }\n      return returnSize + 10;\n    };\n    var getId3Offset = function (data, offset) {\n      if (data.length - offset < 10 || data[offset] !== 'I'.charCodeAt(0) || data[offset + 1] !== 'D'.charCodeAt(0) || data[offset + 2] !== '3'.charCodeAt(0)) {\n        return offset;\n      }\n      offset += parseId3TagSize(data, offset);\n      return getId3Offset(data, offset);\n    }; // TODO: use vhs-utils\n\n    var isLikelyAacData$1 = function (data) {\n      var offset = getId3Offset(data, 0);\n      return data.length >= offset + 2 && (data[offset] & 0xFF) === 0xFF && (data[offset + 1] & 0xF0) === 0xF0 &&\n      // verify that the 2 layer bits are 0, aka this\n      // is not mp3 data but aac data.\n      (data[offset + 1] & 0x16) === 0x10;\n    };\n    var parseSyncSafeInteger = function (data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    }; // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n    var percentEncode = function (bytes, start, end) {\n      var i,\n        result = '';\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n      return result;\n    }; // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n\n    var parseIso88591 = function (bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    };\n    var parseAdtsSize = function (header, byteIndex) {\n      var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n        middle = header[byteIndex + 4] << 3,\n        highTwo = header[byteIndex + 3] & 0x3 << 11;\n      return highTwo | middle | lowThree;\n    };\n    var parseType$4 = function (header, byteIndex) {\n      if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n        return 'timed-metadata';\n      } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n        return 'audio';\n      }\n      return null;\n    };\n    var parseSampleRate = function (packet) {\n      var i = 0;\n      while (i + 5 < packet.length) {\n        if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n          // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n          i++;\n          continue;\n        }\n        return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n      }\n      return null;\n    };\n    var parseAacTimestamp = function (packet) {\n      var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n      if (packet[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n        if (frameSize < 1) {\n          return null;\n        }\n        frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n        if (frameHeader === 'PRIV') {\n          frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n          for (var i = 0; i < frame.byteLength; i++) {\n            if (frame[i] === 0) {\n              var owner = parseIso88591(frame, 0, i);\n              if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n                var d = frame.subarray(i + 1);\n                var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                size *= 4;\n                size += d[7] & 0x03;\n                return size;\n              }\n              break;\n            }\n          }\n        }\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < packet.byteLength);\n      return null;\n    };\n    var utils = {\n      isLikelyAacData: isLikelyAacData$1,\n      parseId3TagSize: parseId3TagSize,\n      parseAdtsSize: parseAdtsSize,\n      parseType: parseType$4,\n      parseSampleRate: parseSampleRate,\n      parseAacTimestamp: parseAacTimestamp\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * A stream-based aac to mp4 converter. This utility can be used to\n     * deliver mp4s to a SourceBuffer on platforms that support native\n     * Media Source Extensions.\n     */\n\n    var Stream$1 = stream;\n    var aacUtils = utils; // Constants\n\n    var AacStream$1;\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n    AacStream$1 = function () {\n      var everything = new Uint8Array(),\n        timeStamp = 0;\n      AacStream$1.prototype.init.call(this);\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n      this.push = function (bytes) {\n        var frameSize = 0,\n          byteIndex = 0,\n          bytesLeft,\n          chunk,\n          packet,\n          tempLength; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            } // check framesize\n\n            frameSize = aacUtils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            // Add to byteIndex to support multiple ID3 tags in sequence\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n            frameSize = aacUtils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n          byteIndex++;\n        }\n        bytesLeft = everything.length - byteIndex;\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n      this.reset = function () {\n        everything = new Uint8Array();\n        this.trigger('reset');\n      };\n      this.endTimeline = function () {\n        everything = new Uint8Array();\n        this.trigger('endedtimeline');\n      };\n    };\n    AacStream$1.prototype = new Stream$1();\n    var aac = AacStream$1;\n    var AUDIO_PROPERTIES$1 = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n    var audioProperties = AUDIO_PROPERTIES$1;\n    var VIDEO_PROPERTIES$1 = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio'];\n    var videoProperties = VIDEO_PROPERTIES$1;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * A stream-based mp2t to mp4 converter. This utility can be used to\n     * deliver mp4s to a SourceBuffer on platforms that support native\n     * Media Source Extensions.\n     */\n\n    var Stream = stream;\n    var mp4 = mp4Generator;\n    var frameUtils = frameUtils$1;\n    var audioFrameUtils = audioFrameUtils$1;\n    var trackDecodeInfo = trackDecodeInfo$1;\n    var m2ts = m2ts_1;\n    var clock = clock$2;\n    var AdtsStream = adts;\n    var H264Stream = h264.H264Stream;\n    var AacStream = aac;\n    var isLikelyAacData = utils.isLikelyAacData;\n    var ONE_SECOND_IN_TS$1 = clock$2.ONE_SECOND_IN_TS;\n    var AUDIO_PROPERTIES = audioProperties;\n    var VIDEO_PROPERTIES = videoProperties; // object types\n\n    var VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n    var retriggerForStream = function (key, event) {\n      event.stream = key;\n      this.trigger('log', event);\n    };\n    var addPipelineLogRetriggers = function (transmuxer, pipeline) {\n      var keys = Object.keys(pipeline);\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i]; // skip non-stream keys and headOfPipeline\n        // which is just a duplicate\n\n        if (key === 'headOfPipeline' || !pipeline[key].on) {\n          continue;\n        }\n        pipeline[key].on('log', retriggerForStream.bind(transmuxer, key));\n      }\n    };\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n\n    var arrayEquals = function (a, b) {\n      var i;\n      if (a.length !== b.length) {\n        return false;\n      } // compare the value of each element in the array\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    };\n    var generateSegmentTimingInfo = function (baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n      var ptsOffsetFromDts = startPts - startDts,\n        decodeDuration = endDts - startDts,\n        presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n      // however, the player time values will reflect a start from the baseMediaDecodeTime.\n      // In order to provide relevant values for the player times, base timing info on the\n      // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n      return {\n        start: {\n          dts: baseMediaDecodeTime,\n          pts: baseMediaDecodeTime + ptsOffsetFromDts\n        },\n        end: {\n          dts: baseMediaDecodeTime + decodeDuration,\n          pts: baseMediaDecodeTime + presentationDuration\n        },\n        prependedContentDuration: prependedContentDuration,\n        baseMediaDecodeTime: baseMediaDecodeTime\n      };\n    };\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    AudioSegmentStream = function (track, options) {\n      var adtsFrames = [],\n        sequenceNumber,\n        earliestAllowedDts = 0,\n        audioAppendStartTs = 0,\n        videoBaseMediaDecodeTime = Infinity;\n      options = options || {};\n      sequenceNumber = options.firstSequenceNumber || 0;\n      AudioSegmentStream.prototype.init.call(this);\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        } // buffer audio data until end() is called\n\n        adtsFrames.push(data);\n      };\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts;\n      };\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n      this.flush = function () {\n        var frames, moof, mdat, boxes, frameDuration, segmentDuration, videoClockCyclesOfSilencePrefixed; // return early if no audio data has been observed\n\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n        frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps); // amount of audio filled but the value is in video clock rather than audio clock\n\n        videoClockCyclesOfSilencePrefixed = audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n\n        track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n        mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n        adtsFrames = [];\n        moof = mp4.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        trackDecodeInfo.clearDtsInfo(track);\n        frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n        // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n        // valid use-case where an init segment/data should be triggered without associated\n        // frames. Leaving for now, but should be looked into.\n\n        if (frames.length) {\n          segmentDuration = frames.length * frameDuration;\n          this.trigger('segmentTimingInfo', generateSegmentTimingInfo(\n          // The audio track's baseMediaDecodeTime is in audio clock cycles, but the\n          // frame info is in video clock cycles. Convert to match expectation of\n          // listeners (that all timestamps will be based on video clock cycles).\n          clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate),\n          // frame times are already in video clock, as is segment duration\n          frames[0].dts, frames[0].pts, frames[0].dts + segmentDuration, frames[0].pts + segmentDuration, videoClockCyclesOfSilencePrefixed || 0));\n          this.trigger('timingInfo', {\n            start: frames[0].pts,\n            end: frames[0].pts + segmentDuration\n          });\n        }\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n      this.reset = function () {\n        trackDecodeInfo.clearDtsInfo(track);\n        adtsFrames = [];\n        this.trigger('reset');\n      };\n    };\n    AudioSegmentStream.prototype = new Stream();\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    VideoSegmentStream = function (track, options) {\n      var sequenceNumber,\n        nalUnits = [],\n        gopsToAlignWith = [],\n        config,\n        pps;\n      options = options || {};\n      sequenceNumber = options.firstSequenceNumber || 0;\n      VideoSegmentStream.prototype.init.call(this);\n      delete track.minPTS;\n      this.gopCache_ = [];\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        } // buffer video until flush() is called\n\n        nalUnits.push(nalUnit);\n      };\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n\n      this.flush = function () {\n        var frames,\n          gopForFusion,\n          gops,\n          moof,\n          mdat,\n          boxes,\n          prependedContentDuration = 0,\n          firstGop,\n          lastGop; // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n          nalUnits.shift();\n        } // Return early if no video data has been observed\n\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n          if (gopForFusion) {\n            // in order to provide more accurate timing information about the segment, save\n            // the number of seconds prepended to the original segment due to GOP fusion\n            prependedContentDuration = gopForFusion.duration;\n            gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        } // Trim gops to align with gopsToAlignWith\n\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            }); // Keep a maximum of 6 GOPs in the cache\n\n            this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n            nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n\n          trackDecodeInfo.clearDtsInfo(track);\n          gops = alignedGops;\n        }\n        trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n\n        track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n        mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n        firstGop = gops[0];\n        lastGop = gops[gops.length - 1];\n        this.trigger('segmentTimingInfo', generateSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n        this.trigger('timingInfo', {\n          start: gops[0].pts,\n          end: gops[gops.length - 1].pts + gops[gops.length - 1].duration\n        }); // save all the nals in the last GOP into the gop cache\n\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = [];\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n        moof = mp4.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.resetStream_(); // Continue with the flush process now\n\n        this.trigger('done', 'VideoSegmentStream');\n      };\n      this.reset = function () {\n        this.resetStream_();\n        nalUnits = [];\n        this.gopCache_.length = 0;\n        gopsToAlignWith.length = 0;\n        this.trigger('reset');\n      };\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n\n        config = undefined;\n        pps = undefined;\n      }; // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n          // Half-a-second in a 90khz clock\n          allowableOverlap = 10000,\n          // About 3 frames @ 30fps\n          nearestDistance = Infinity,\n          dtsDistance,\n          nearestGopObj,\n          currentGop,\n          currentGopObj,\n          i; // Search for the GOP nearest to the beginning of this nal unit\n\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          } // Reject Gops that would require a negative baseMediaDecodeTime\n\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          } // The distance between the end of the gop and the start of the nalUnit\n\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n        return null;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n          if (align.pts === gop.pts) {\n            break;\n          }\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          } // current gop starts before the current gop we want to align on. so increment gop\n          // index\n\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n          gopIndex--;\n        }\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n        var trimIndex;\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n        if (trimIndex === 0) {\n          return gops;\n        }\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, {\n          byteLength: 0,\n          duration: 0,\n          nalCount: 0\n        });\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      };\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n    VideoSegmentStream.prototype = new Stream();\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at media timeline start.\n     */\n\n    CoalesceStream = function (options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n      options = options || {};\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n      if (typeof options.keepOriginalTimestamps === 'boolean') {\n        this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n      } else {\n        this.keepOriginalTimestamps = false;\n      }\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n      CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.content || output.text) {\n          return this.pendingCaptions.push(output);\n        } // buffer incoming id3 tags until the final flush\n\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        } // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n\n        this.pendingTracks.push(output.track);\n        this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n        // We unshift audio and push video because\n        // as of Chrome 75 when switching from\n        // one init segment to another if the video\n        // mdat does not appear after the audio mdat\n        // only audio will play for the duration of our transmux.\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n          this.pendingBoxes.push(output.boxes);\n        }\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n          this.pendingBoxes.unshift(output.boxes);\n        }\n      };\n    };\n    CoalesceStream.prototype = new Stream();\n    CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n        event = {\n          captions: [],\n          captionStreams: {},\n          metadata: [],\n          info: {}\n        },\n        caption,\n        id3,\n        initSegment,\n        timelineStartPts = 0,\n        i;\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n          return;\n        }\n      }\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n      if (this.videoTrack || this.audioTrack) {\n        if (this.pendingTracks.length === 1) {\n          event.type = this.pendingTracks[0].type;\n        } else {\n          event.type = 'combined';\n        }\n        this.emittedTracks += this.pendingTracks.length;\n        initSegment = mp4.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n        event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n        // and track definitions\n\n        event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n        event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n        for (i = 0; i < this.pendingBoxes.length; i++) {\n          event.data.set(this.pendingBoxes[i], offset);\n          offset += this.pendingBoxes[i].byteLength;\n        } // Translate caption PTS times into second offsets to match the\n        // video timeline for the segment, and add track info\n\n        for (i = 0; i < this.pendingCaptions.length; i++) {\n          caption = this.pendingCaptions[i];\n          caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n          caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n          event.captionStreams[caption.stream] = true;\n          event.captions.push(caption);\n        } // Translate ID3 frame PTS times into second offsets to match the\n        // video timeline for the segment\n\n        for (i = 0; i < this.pendingMetadata.length; i++) {\n          id3 = this.pendingMetadata[i];\n          id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n          event.metadata.push(id3);\n        } // We add this to every single emitted segment even though we only need\n        // it for the first\n\n        event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n        this.pendingTracks.length = 0;\n        this.videoTrack = null;\n        this.pendingBoxes.length = 0;\n        this.pendingCaptions.length = 0;\n        this.pendingBytes = 0;\n        this.pendingMetadata.length = 0; // Emit the built segment\n        // We include captions and ID3 tags for backwards compatibility,\n        // ideally we should send only video and audio in the data event\n\n        this.trigger('data', event); // Emit each caption to the outside world\n        // Ideally, this would happen immediately on parsing captions,\n        // but we need to ensure that video data is sent back first\n        // so that caption timing can be adjusted to match video timing\n\n        for (i = 0; i < event.captions.length; i++) {\n          caption = event.captions[i];\n          this.trigger('caption', caption);\n        } // Emit each id3 tag to the outside world\n        // Ideally, this would happen immediately on parsing the tag,\n        // but we need to ensure that video data is sent back first\n        // so that ID3 frame timing can be adjusted to match video timing\n\n        for (i = 0; i < event.metadata.length; i++) {\n          id3 = event.metadata[i];\n          this.trigger('id3Frame', id3);\n        }\n      } // Only emit `done` if all tracks have been flushed and emitted\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n    CoalesceStream.prototype.setRemux = function (val) {\n      this.remuxTracks = val;\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n\n    Transmuxer = function (options) {\n      var self = this,\n        hasFlushed = true,\n        videoTrack,\n        audioTrack;\n      Transmuxer.prototype.init.call(this);\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.aacStream = new AacStream();\n        pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new AdtsStream();\n        pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type !== 'timed-metadata' && data.type !== 'audio' || pipeline.audioSegmentStream) {\n            return;\n          }\n          audioTrack = audioTrack || {\n            timelineStartInfo: {\n              baseMediaDecodeTime: self.baseMediaDecodeTime\n            },\n            codec: 'adts',\n            type: 'audio'\n          }; // hook up the audio segment stream to the first track with aac data\n\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n          pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n          pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n          pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream); // emit pmt info\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n        addPipelineLogRetriggers(this, pipeline);\n      };\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.packetStream = new m2ts.TransportPacketStream();\n        pipeline.parseStream = new m2ts.TransportParseStream();\n        pipeline.elementaryStream = new m2ts.ElementaryStream();\n        pipeline.timestampRolloverStream = new m2ts.TimestampRolloverStream();\n        pipeline.adtsStream = new AdtsStream();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts.CaptionStream(options);\n        pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n\n        pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n        pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n        pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n          if (data.type === 'metadata') {\n            i = data.tracks.length; // scan the tracks listed in the metadata\n\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            } // hook up the video segment stream to the first track with h264 data\n\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n              pipeline.videoSegmentStream.on('log', self.getLogTrigger_('videoSegmentStream'));\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.  Do not do this if keepOriginalTimestamps is set,\n                // because this is a particularly subtle form of timestamp alteration.\n                if (audioTrack && !options.keepOriginalTimestamps) {\n                  audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts - self.baseMediaDecodeTime);\n                }\n              });\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n              pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              });\n              pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n              pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n              pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo'));\n              pipeline.audioSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'audioSegmentTimingInfo')); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            } // emit pmt info\n\n            self.trigger('trackinfo', {\n              hasAudio: !!audioTrack,\n              hasVideo: !!videoTrack\n            });\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n          id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n          self.trigger('id3Frame', id3Frame);\n        });\n        pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n        addPipelineLogRetriggers(this, pipeline);\n      }; // hook up the segment streams once track metadata is delivered\n\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n        if (!options.keepOriginalTimestamps) {\n          this.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n          }\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n        }\n        if (pipeline.timestampRolloverStream) {\n          pipeline.timestampRolloverStream.discontinuity();\n        }\n      };\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n      this.setRemux = function (val) {\n        var pipeline = this.transmuxPipeline_;\n        options.remux = val;\n        if (pipeline && pipeline.coalesceStream) {\n          pipeline.coalesceStream.setRemux(val);\n        }\n      };\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      };\n      this.getLogTrigger_ = function (key) {\n        var self = this;\n        return function (event) {\n          event.stream = key;\n          self.trigger('log', event);\n        };\n      }; // feed incoming data to the front of the parsing pipeline\n\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData(data);\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n          hasFlushed = false;\n        }\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      }; // flush any buffered data\n\n      this.flush = function () {\n        hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n        this.transmuxPipeline_.headOfPipeline.flush();\n      };\n      this.endTimeline = function () {\n        this.transmuxPipeline_.headOfPipeline.endTimeline();\n      };\n      this.reset = function () {\n        if (this.transmuxPipeline_.headOfPipeline) {\n          this.transmuxPipeline_.headOfPipeline.reset();\n        }\n      }; // Caption data has to be reset when seeking outside buffered range\n\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n    Transmuxer.prototype = new Stream();\n    var transmuxer = {\n      Transmuxer: Transmuxer,\n      VideoSegmentStream: VideoSegmentStream,\n      AudioSegmentStream: AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n      // exported for testing\n      generateSegmentTimingInfo: generateSegmentTimingInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var toUnsigned$3 = function (value) {\n      return value >>> 0;\n    };\n    var toHexString$1 = function (value) {\n      return ('00' + value.toString(16)).slice(-2);\n    };\n    var bin = {\n      toUnsigned: toUnsigned$3,\n      toHexString: toHexString$1\n    };\n    var parseType$3 = function (buffer) {\n      var result = '';\n      result += String.fromCharCode(buffer[0]);\n      result += String.fromCharCode(buffer[1]);\n      result += String.fromCharCode(buffer[2]);\n      result += String.fromCharCode(buffer[3]);\n      return result;\n    };\n    var parseType_1 = parseType$3;\n    var toUnsigned$2 = bin.toUnsigned;\n    var parseType$2 = parseType_1;\n    var findBox$2 = function (data, path) {\n      var results = [],\n        i,\n        size,\n        type,\n        end,\n        subresults;\n      if (!path.length) {\n        // short-circuit the search for empty paths\n        return null;\n      }\n      for (i = 0; i < data.byteLength;) {\n        size = toUnsigned$2(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n        type = parseType$2(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength;\n        if (type === path[0]) {\n          if (path.length === 1) {\n            // this is the end of the path and we've found the box we were\n            // looking for\n            results.push(data.subarray(i + 8, end));\n          } else {\n            // recursively search for the next box along the path\n            subresults = findBox$2(data.subarray(i + 8, end), path.slice(1));\n            if (subresults.length) {\n              results = results.concat(subresults);\n            }\n          }\n        }\n        i = end;\n      } // we've finished searching all of data\n\n      return results;\n    };\n    var findBox_1 = findBox$2;\n    var toUnsigned$1 = bin.toUnsigned;\n    var getUint64$2 = numbers.getUint64;\n    var tfdt = function (data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4))\n      };\n      if (result.version === 1) {\n        result.baseMediaDecodeTime = getUint64$2(data.subarray(4));\n      } else {\n        result.baseMediaDecodeTime = toUnsigned$1(data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]);\n      }\n      return result;\n    };\n    var parseTfdt$2 = tfdt;\n    var parseSampleFlags$1 = function (flags) {\n      return {\n        isLeading: (flags[0] & 0x0c) >>> 2,\n        dependsOn: flags[0] & 0x03,\n        isDependedOn: (flags[1] & 0xc0) >>> 6,\n        hasRedundancy: (flags[1] & 0x30) >>> 4,\n        paddingValue: (flags[1] & 0x0e) >>> 1,\n        isNonSyncSample: flags[1] & 0x01,\n        degradationPriority: flags[2] << 8 | flags[3]\n      };\n    };\n    var parseSampleFlags_1 = parseSampleFlags$1;\n    var parseSampleFlags = parseSampleFlags_1;\n    var trun = function (data) {\n      var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01,\n        // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04,\n        // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01,\n        // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02,\n        // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04,\n        // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n        // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n        offset = 8,\n        sample;\n      if (dataOffsetPresent) {\n        // 32 bit signed integer\n        result.dataOffset = view.getInt32(offset);\n        offset += 4;\n      } // Overrides the flags for the first sample only. The order of\n      // optional values will be: duration, size, compositionTimeOffset\n\n      if (firstSampleFlagsPresent && sampleCount) {\n        sample = {\n          flags: parseSampleFlags(data.subarray(offset, offset + 4))\n        };\n        offset += 4;\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          if (result.version === 1) {\n            sample.compositionTimeOffset = view.getInt32(offset);\n          } else {\n            sample.compositionTimeOffset = view.getUint32(offset);\n          }\n          offset += 4;\n        }\n        result.samples.push(sample);\n        sampleCount--;\n      }\n      while (sampleCount--) {\n        sample = {};\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleFlagsPresent) {\n          sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          if (result.version === 1) {\n            sample.compositionTimeOffset = view.getInt32(offset);\n          } else {\n            sample.compositionTimeOffset = view.getUint32(offset);\n          }\n          offset += 4;\n        }\n        result.samples.push(sample);\n      }\n      return result;\n    };\n    var parseTrun$2 = trun;\n    var tfhd = function (data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n        baseDataOffsetPresent = result.flags[2] & 0x01,\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\n        defaultSampleSizePresent = result.flags[2] & 0x10,\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\n        durationIsEmpty = result.flags[0] & 0x010000,\n        defaultBaseIsMoof = result.flags[0] & 0x020000,\n        i;\n      i = 8;\n      if (baseDataOffsetPresent) {\n        i += 4; // truncate top 4 bytes\n        // FIXME: should we read the full 64 bits?\n\n        result.baseDataOffset = view.getUint32(12);\n        i += 4;\n      }\n      if (sampleDescriptionIndexPresent) {\n        result.sampleDescriptionIndex = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleDurationPresent) {\n        result.defaultSampleDuration = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleSizePresent) {\n        result.defaultSampleSize = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleFlagsPresent) {\n        result.defaultSampleFlags = view.getUint32(i);\n      }\n      if (durationIsEmpty) {\n        result.durationIsEmpty = true;\n      }\n      if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n        result.baseDataOffsetIsMoof = true;\n      }\n      return result;\n    };\n    var parseTfhd$2 = tfhd;\n    var win;\n    if (typeof window !== \"undefined\") {\n      win = window;\n    } else if (typeof commonjsGlobal !== \"undefined\") {\n      win = commonjsGlobal;\n    } else if (typeof self !== \"undefined\") {\n      win = self;\n    } else {\n      win = {};\n    }\n    var window_1 = win;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Reads in-band CEA-708 captions out of FMP4 segments.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     */\n\n    var discardEmulationPreventionBytes = captionPacketParser.discardEmulationPreventionBytes;\n    var CaptionStream = captionStream.CaptionStream;\n    var findBox$1 = findBox_1;\n    var parseTfdt$1 = parseTfdt$2;\n    var parseTrun$1 = parseTrun$2;\n    var parseTfhd$1 = parseTfhd$2;\n    var window$2 = window_1;\n    /**\n      * Maps an offset in the mdat to a sample based on the the size of the samples.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Number} offset - The offset into the mdat\n      * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n      * @return {?Object} The matching sample, or null if no match was found.\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n    var mapToSample = function (offset, samples) {\n      var approximateOffset = offset;\n      for (var i = 0; i < samples.length; i++) {\n        var sample = samples[i];\n        if (approximateOffset < sample.size) {\n          return sample;\n        }\n        approximateOffset -= sample.size;\n      }\n      return null;\n    };\n    /**\n      * Finds SEI nal units contained in a Media Data Box.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Uint8Array} avcStream - The bytes of the mdat\n      * @param {Object[]} samples - The samples parsed out by `parseSamples`\n      * @param {Number} trackId - The trackId of this video track\n      * @return {Object[]} seiNals - the parsed SEI NALUs found.\n      *   The contents of the seiNal should match what is expected by\n      *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n      *\n      * @see ISO-BMFF-12/2015, Section 8.1.1\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n     **/\n\n    var findSeiNals = function (avcStream, samples, trackId) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n        result = {\n          logs: [],\n          seiNals: []\n        },\n        seiNal,\n        i,\n        length,\n        lastMatchedSample;\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // Bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          continue;\n        }\n        switch (avcStream[i] & 0x1F) {\n          case 0x06:\n            var data = avcStream.subarray(i + 1, i + 1 + length);\n            var matchingSample = mapToSample(i, samples);\n            seiNal = {\n              nalUnitType: 'sei_rbsp',\n              size: length,\n              data: data,\n              escapedRBSP: discardEmulationPreventionBytes(data),\n              trackId: trackId\n            };\n            if (matchingSample) {\n              seiNal.pts = matchingSample.pts;\n              seiNal.dts = matchingSample.dts;\n              lastMatchedSample = matchingSample;\n            } else if (lastMatchedSample) {\n              // If a matching sample cannot be found, use the last\n              // sample's values as they should be as close as possible\n              seiNal.pts = lastMatchedSample.pts;\n              seiNal.dts = lastMatchedSample.dts;\n            } else {\n              result.logs.push({\n                level: 'warn',\n                message: 'We\\'ve encountered a nal unit without data at ' + i + ' for trackId ' + trackId + '. See mux.js#223.'\n              });\n              break;\n            }\n            result.seiNals.push(seiNal);\n            break;\n        }\n      }\n      return result;\n    };\n    /**\n      * Parses sample information out of Track Run Boxes and calculates\n      * the absolute presentation and decode timestamps of each sample.\n      *\n      * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n      * @param {Number|BigInt} baseMediaDecodeTime - base media decode time from tfdt\n          @see ISO-BMFF-12/2015, Section 8.8.12\n      * @param {Object} tfhd - The parsed Track Fragment Header\n      *   @see inspect.parseTfhd\n      * @return {Object[]} the parsed samples\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n    var parseSamples = function (truns, baseMediaDecodeTime, tfhd) {\n      var currentDts = baseMediaDecodeTime;\n      var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n      var defaultSampleSize = tfhd.defaultSampleSize || 0;\n      var trackId = tfhd.trackId;\n      var allSamples = [];\n      truns.forEach(function (trun) {\n        // Note: We currently do not parse the sample table as well\n        // as the trun. It's possible some sources will require this.\n        // moov > trak > mdia > minf > stbl\n        var trackRun = parseTrun$1(trun);\n        var samples = trackRun.samples;\n        samples.forEach(function (sample) {\n          if (sample.duration === undefined) {\n            sample.duration = defaultSampleDuration;\n          }\n          if (sample.size === undefined) {\n            sample.size = defaultSampleSize;\n          }\n          sample.trackId = trackId;\n          sample.dts = currentDts;\n          if (sample.compositionTimeOffset === undefined) {\n            sample.compositionTimeOffset = 0;\n          }\n          if (typeof currentDts === 'bigint') {\n            sample.pts = currentDts + window$2.BigInt(sample.compositionTimeOffset);\n            currentDts += window$2.BigInt(sample.duration);\n          } else {\n            sample.pts = currentDts + sample.compositionTimeOffset;\n            currentDts += sample.duration;\n          }\n        });\n        allSamples = allSamples.concat(samples);\n      });\n      return allSamples;\n    };\n    /**\n      * Parses out caption nals from an FMP4 segment's video tracks.\n      *\n      * @param {Uint8Array} segment - The bytes of a single segment\n      * @param {Number} videoTrackId - The trackId of a video track in the segment\n      * @return {Object.<Number, Object[]>} A mapping of video trackId to\n      *   a list of seiNals found in that track\n     **/\n\n    var parseCaptionNals = function (segment, videoTrackId) {\n      // To get the samples\n      var trafs = findBox$1(segment, ['moof', 'traf']); // To get SEI NAL units\n\n      var mdats = findBox$1(segment, ['mdat']);\n      var captionNals = {};\n      var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n      mdats.forEach(function (mdat, index) {\n        var matchingTraf = trafs[index];\n        mdatTrafPairs.push({\n          mdat: mdat,\n          traf: matchingTraf\n        });\n      });\n      mdatTrafPairs.forEach(function (pair) {\n        var mdat = pair.mdat;\n        var traf = pair.traf;\n        var tfhd = findBox$1(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n        var headerInfo = parseTfhd$1(tfhd[0]);\n        var trackId = headerInfo.trackId;\n        var tfdt = findBox$1(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n        var baseMediaDecodeTime = tfdt.length > 0 ? parseTfdt$1(tfdt[0]).baseMediaDecodeTime : 0;\n        var truns = findBox$1(traf, ['trun']);\n        var samples;\n        var result; // Only parse video data for the chosen video track\n\n        if (videoTrackId === trackId && truns.length > 0) {\n          samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n          result = findSeiNals(mdat, samples, trackId);\n          if (!captionNals[trackId]) {\n            captionNals[trackId] = {\n              seiNals: [],\n              logs: []\n            };\n          }\n          captionNals[trackId].seiNals = captionNals[trackId].seiNals.concat(result.seiNals);\n          captionNals[trackId].logs = captionNals[trackId].logs.concat(result.logs);\n        }\n      });\n      return captionNals;\n    };\n    /**\n      * Parses out inband captions from an MP4 container and returns\n      * caption objects that can be used by WebVTT and the TextTrack API.\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n      * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number} trackId - The id of the video track to parse\n      * @param {Number} timescale - The timescale for the video track from the init segment\n      *\n      * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n      * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n      * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n      * @return {Object[]} parsedCaptions[].content - A list of individual caption segments\n      * @return {String} parsedCaptions[].content.text - The visible content of the caption segment\n      * @return {Number} parsedCaptions[].content.line - The line height from 1-15 for positioning of the caption segment\n      * @return {Number} parsedCaptions[].content.position - The column indent percentage for cue positioning from 10-80\n     **/\n\n    var parseEmbeddedCaptions = function (segment, trackId, timescale) {\n      var captionNals; // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n\n      if (trackId === null) {\n        return null;\n      }\n      captionNals = parseCaptionNals(segment, trackId);\n      var trackNals = captionNals[trackId] || {};\n      return {\n        seiNals: trackNals.seiNals,\n        logs: trackNals.logs,\n        timescale: timescale\n      };\n    };\n    /**\n      * Converts SEI NALUs into captions that can be used by video.js\n     **/\n\n    var CaptionParser = function () {\n      var isInitialized = false;\n      var captionStream; // Stores segments seen before trackId and timescale are set\n\n      var segmentCache; // Stores video track ID of the track being parsed\n\n      var trackId; // Stores the timescale of the track being parsed\n\n      var timescale; // Stores captions parsed so far\n\n      var parsedCaptions; // Stores whether we are receiving partial data or not\n\n      var parsingPartial;\n      /**\n        * A method to indicate whether a CaptionParser has been initalized\n        * @returns {Boolean}\n       **/\n\n      this.isInitialized = function () {\n        return isInitialized;\n      };\n      /**\n        * Initializes the underlying CaptionStream, SEI NAL parsing\n        * and management, and caption collection\n       **/\n\n      this.init = function (options) {\n        captionStream = new CaptionStream();\n        isInitialized = true;\n        parsingPartial = options ? options.isPartial : false; // Collect dispatched captions\n\n        captionStream.on('data', function (event) {\n          // Convert to seconds in the source's timescale\n          event.startTime = event.startPts / timescale;\n          event.endTime = event.endPts / timescale;\n          parsedCaptions.captions.push(event);\n          parsedCaptions.captionStreams[event.stream] = true;\n        });\n        captionStream.on('log', function (log) {\n          parsedCaptions.logs.push(log);\n        });\n      };\n      /**\n        * Determines if a new video track will be selected\n        * or if the timescale changed\n        * @return {Boolean}\n       **/\n\n      this.isNewInit = function (videoTrackIds, timescales) {\n        if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n          return false;\n        }\n        return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n      };\n      /**\n        * Parses out SEI captions and interacts with underlying\n        * CaptionStream to return dispatched captions\n        *\n        * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n        * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n        * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n        * @see parseEmbeddedCaptions\n        * @see m2ts/caption-stream.js\n       **/\n\n      this.parse = function (segment, videoTrackIds, timescales) {\n        var parsedData;\n        if (!this.isInitialized()) {\n          return null; // This is not likely to be a video segment\n        } else if (!videoTrackIds || !timescales) {\n          return null;\n        } else if (this.isNewInit(videoTrackIds, timescales)) {\n          // Use the first video track only as there is no\n          // mechanism to switch to other video tracks\n          trackId = videoTrackIds[0];\n          timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n          // data until we have one.\n          // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n        } else if (trackId === null || !timescale) {\n          segmentCache.push(segment);\n          return null;\n        } // Now that a timescale and trackId is set, parse cached segments\n\n        while (segmentCache.length > 0) {\n          var cachedSegment = segmentCache.shift();\n          this.parse(cachedSegment, videoTrackIds, timescales);\n        }\n        parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n        if (parsedData && parsedData.logs) {\n          parsedCaptions.logs = parsedCaptions.logs.concat(parsedData.logs);\n        }\n        if (parsedData === null || !parsedData.seiNals) {\n          if (parsedCaptions.logs.length) {\n            return {\n              logs: parsedCaptions.logs,\n              captions: [],\n              captionStreams: []\n            };\n          }\n          return null;\n        }\n        this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n        this.flushStream();\n        return parsedCaptions;\n      };\n      /**\n        * Pushes SEI NALUs onto CaptionStream\n        * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n        * Assumes that `parseCaptionNals` has been called first\n        * @see m2ts/caption-stream.js\n        **/\n\n      this.pushNals = function (nals) {\n        if (!this.isInitialized() || !nals || nals.length === 0) {\n          return null;\n        }\n        nals.forEach(function (nal) {\n          captionStream.push(nal);\n        });\n      };\n      /**\n        * Flushes underlying CaptionStream to dispatch processed, displayable captions\n        * @see m2ts/caption-stream.js\n       **/\n\n      this.flushStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n        if (!parsingPartial) {\n          captionStream.flush();\n        } else {\n          captionStream.partialFlush();\n        }\n      };\n      /**\n        * Reset caption buckets for new data\n       **/\n\n      this.clearParsedCaptions = function () {\n        parsedCaptions.captions = [];\n        parsedCaptions.captionStreams = {};\n        parsedCaptions.logs = [];\n      };\n      /**\n        * Resets underlying CaptionStream\n        * @see m2ts/caption-stream.js\n       **/\n\n      this.resetCaptionStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n        captionStream.reset();\n      };\n      /**\n        * Convenience method to clear all captions flushed from the\n        * CaptionStream and still being parsed\n        * @see m2ts/caption-stream.js\n       **/\n\n      this.clearAllCaptions = function () {\n        this.clearParsedCaptions();\n        this.resetCaptionStream();\n      };\n      /**\n        * Reset caption parser\n       **/\n\n      this.reset = function () {\n        segmentCache = [];\n        trackId = null;\n        timescale = null;\n        if (!parsedCaptions) {\n          parsedCaptions = {\n            captions: [],\n            // CC1, CC2, CC3, CC4\n            captionStreams: {},\n            logs: []\n          };\n        } else {\n          this.clearParsedCaptions();\n        }\n        this.resetCaptionStream();\n      };\n      this.reset();\n    };\n    var captionParser = CaptionParser;\n    /**\n     * Returns the first string in the data array ending with a null char '\\0'\n     * @param {UInt8} data \n     * @returns the string with the null char\n     */\n\n    var uint8ToCString$1 = function (data) {\n      var index = 0;\n      var curChar = String.fromCharCode(data[index]);\n      var retString = '';\n      while (curChar !== '\\0') {\n        retString += curChar;\n        index++;\n        curChar = String.fromCharCode(data[index]);\n      } // Add nullChar\n\n      retString += curChar;\n      return retString;\n    };\n    var string = {\n      uint8ToCString: uint8ToCString$1\n    };\n    var uint8ToCString = string.uint8ToCString;\n    var getUint64$1 = numbers.getUint64;\n    /**\n     * Based on: ISO/IEC 23009 Section: 5.10.3.3\n     * References:\n     * https://dashif-documents.azurewebsites.net/Events/master/event.html#emsg-format\n     * https://aomediacodec.github.io/id3-emsg/\n     * \n     * Takes emsg box data as a uint8 array and returns a emsg box object\n     * @param {UInt8Array} boxData data from emsg box\n     * @returns A parsed emsg box object\n     */\n\n    var parseEmsgBox = function (boxData) {\n      // version + flags\n      var offset = 4;\n      var version = boxData[0];\n      var scheme_id_uri, value, timescale, presentation_time, presentation_time_delta, event_duration, id, message_data;\n      if (version === 0) {\n        scheme_id_uri = uint8ToCString(boxData.subarray(offset));\n        offset += scheme_id_uri.length;\n        value = uint8ToCString(boxData.subarray(offset));\n        offset += value.length;\n        var dv = new DataView(boxData.buffer);\n        timescale = dv.getUint32(offset);\n        offset += 4;\n        presentation_time_delta = dv.getUint32(offset);\n        offset += 4;\n        event_duration = dv.getUint32(offset);\n        offset += 4;\n        id = dv.getUint32(offset);\n        offset += 4;\n      } else if (version === 1) {\n        var dv = new DataView(boxData.buffer);\n        timescale = dv.getUint32(offset);\n        offset += 4;\n        presentation_time = getUint64$1(boxData.subarray(offset));\n        offset += 8;\n        event_duration = dv.getUint32(offset);\n        offset += 4;\n        id = dv.getUint32(offset);\n        offset += 4;\n        scheme_id_uri = uint8ToCString(boxData.subarray(offset));\n        offset += scheme_id_uri.length;\n        value = uint8ToCString(boxData.subarray(offset));\n        offset += value.length;\n      }\n      message_data = new Uint8Array(boxData.subarray(offset, boxData.byteLength));\n      var emsgBox = {\n        scheme_id_uri,\n        value,\n        // if timescale is undefined or 0 set to 1 \n        timescale: timescale ? timescale : 1,\n        presentation_time,\n        presentation_time_delta,\n        event_duration,\n        id,\n        message_data\n      };\n      return isValidEmsgBox(version, emsgBox) ? emsgBox : undefined;\n    };\n    /**\n     * Scales a presentation time or time delta with an offset with a provided timescale\n     * @param {number} presentationTime \n     * @param {number} timescale \n     * @param {number} timeDelta \n     * @param {number} offset \n     * @returns the scaled time as a number\n     */\n\n    var scaleTime = function (presentationTime, timescale, timeDelta, offset) {\n      return presentationTime || presentationTime === 0 ? presentationTime / timescale : offset + timeDelta / timescale;\n    };\n    /**\n     * Checks the emsg box data for validity based on the version\n     * @param {number} version of the emsg box to validate\n     * @param {Object} emsg the emsg data to validate\n     * @returns if the box is valid as a boolean\n     */\n\n    var isValidEmsgBox = function (version, emsg) {\n      var hasScheme = emsg.scheme_id_uri !== '\\0';\n      var isValidV0Box = version === 0 && isDefined(emsg.presentation_time_delta) && hasScheme;\n      var isValidV1Box = version === 1 && isDefined(emsg.presentation_time) && hasScheme; // Only valid versions of emsg are 0 and 1\n\n      return !(version > 1) && isValidV0Box || isValidV1Box;\n    }; // Utility function to check if an object is defined\n\n    var isDefined = function (data) {\n      return data !== undefined || data !== null;\n    };\n    var emsg$1 = {\n      parseEmsgBox: parseEmsgBox,\n      scaleTime: scaleTime\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Utilities to detect basic properties and metadata about MP4s.\n     */\n\n    var toUnsigned = bin.toUnsigned;\n    var toHexString = bin.toHexString;\n    var findBox = findBox_1;\n    var parseType$1 = parseType_1;\n    var emsg = emsg$1;\n    var parseTfhd = parseTfhd$2;\n    var parseTrun = parseTrun$2;\n    var parseTfdt = parseTfdt$2;\n    var getUint64 = numbers.getUint64;\n    var timescale, startTime, compositionStartTime, getVideoTrackIds, getTracks, getTimescaleFromMediaHeader, getEmsgID3;\n    var window$1 = window_1;\n    var parseId3Frames = parseId3.parseId3Frames;\n    /**\n     * Parses an MP4 initialization segment and extracts the timescale\n     * values for any declared tracks. Timescale values indicate the\n     * number of clock ticks per second to assume for time-based values\n     * elsewhere in the MP4.\n     *\n     * To determine the start time of an MP4, you need two pieces of\n     * information: the timescale unit and the earliest base media decode\n     * time. Multiple timescales can be specified within an MP4 but the\n     * base media decode time is always expressed in the timescale from\n     * the media header box for the track:\n     * ```\n     * moov > trak > mdia > mdhd.timescale\n     * ```\n     * @param init {Uint8Array} the bytes of the init segment\n     * @return {object} a hash of track ids to timescale values or null if\n     * the init segment is malformed.\n     */\n\n    timescale = function (init) {\n      var result = {},\n        traks = findBox(init, ['moov', 'trak']); // mdhd timescale\n\n      return traks.reduce(function (result, trak) {\n        var tkhd, version, index, id, mdhd;\n        tkhd = findBox(trak, ['tkhd'])[0];\n        if (!tkhd) {\n          return null;\n        }\n        version = tkhd[0];\n        index = version === 0 ? 12 : 20;\n        id = toUnsigned(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n        mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n        if (!mdhd) {\n          return null;\n        }\n        version = mdhd[0];\n        index = version === 0 ? 12 : 20;\n        result[id] = toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n        return result;\n      }, result);\n    };\n    /**\n     * Determine the base media decode start time, in seconds, for an MP4\n     * fragment. If multiple fragments are specified, the earliest time is\n     * returned.\n     *\n     * The base media decode time can be parsed from track fragment\n     * metadata:\n     * ```\n     * moof > traf > tfdt.baseMediaDecodeTime\n     * ```\n     * It requires the timescale value from the mdhd to interpret.\n     *\n     * @param timescale {object} a hash of track ids to timescale values.\n     * @return {number} the earliest base media decode start time for the\n     * fragment, in seconds\n     */\n\n    startTime = function (timescale, fragment) {\n      var trafs; // we need info from two childrend of each track fragment box\n\n      trafs = findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n      var lowestTime = trafs.reduce(function (acc, traf) {\n        var tfhd = findBox(traf, ['tfhd'])[0]; // get the track id from the tfhd\n\n        var id = toUnsigned(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n        var scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n        var tfdt = findBox(traf, ['tfdt'])[0];\n        var dv = new DataView(tfdt.buffer, tfdt.byteOffset, tfdt.byteLength);\n        var baseTime; // version 1 is 64 bit\n\n        if (tfdt[0] === 1) {\n          baseTime = getUint64(tfdt.subarray(4, 12));\n        } else {\n          baseTime = dv.getUint32(4);\n        } // convert base time to seconds if it is a valid number.\n\n        let seconds;\n        if (typeof baseTime === 'bigint') {\n          seconds = baseTime / window$1.BigInt(scale);\n        } else if (typeof baseTime === 'number' && !isNaN(baseTime)) {\n          seconds = baseTime / scale;\n        }\n        if (seconds < Number.MAX_SAFE_INTEGER) {\n          seconds = Number(seconds);\n        }\n        if (seconds < acc) {\n          acc = seconds;\n        }\n        return acc;\n      }, Infinity);\n      return typeof lowestTime === 'bigint' || isFinite(lowestTime) ? lowestTime : 0;\n    };\n    /**\n     * Determine the composition start, in seconds, for an MP4\n     * fragment.\n     *\n     * The composition start time of a fragment can be calculated using the base\n     * media decode time, composition time offset, and timescale, as follows:\n     *\n     * compositionStartTime = (baseMediaDecodeTime + compositionTimeOffset) / timescale\n     *\n     * All of the aforementioned information is contained within a media fragment's\n     * `traf` box, except for timescale info, which comes from the initialization\n     * segment, so a track id (also contained within a `traf`) is also necessary to\n     * associate it with a timescale\n     *\n     *\n     * @param timescales {object} - a hash of track ids to timescale values.\n     * @param fragment {Unit8Array} - the bytes of a media segment\n     * @return {number} the composition start time for the fragment, in seconds\n     **/\n\n    compositionStartTime = function (timescales, fragment) {\n      var trafBoxes = findBox(fragment, ['moof', 'traf']);\n      var baseMediaDecodeTime = 0;\n      var compositionTimeOffset = 0;\n      var trackId;\n      if (trafBoxes && trafBoxes.length) {\n        // The spec states that track run samples contained within a `traf` box are contiguous, but\n        // it does not explicitly state whether the `traf` boxes themselves are contiguous.\n        // We will assume that they are, so we only need the first to calculate start time.\n        var tfhd = findBox(trafBoxes[0], ['tfhd'])[0];\n        var trun = findBox(trafBoxes[0], ['trun'])[0];\n        var tfdt = findBox(trafBoxes[0], ['tfdt'])[0];\n        if (tfhd) {\n          var parsedTfhd = parseTfhd(tfhd);\n          trackId = parsedTfhd.trackId;\n        }\n        if (tfdt) {\n          var parsedTfdt = parseTfdt(tfdt);\n          baseMediaDecodeTime = parsedTfdt.baseMediaDecodeTime;\n        }\n        if (trun) {\n          var parsedTrun = parseTrun(trun);\n          if (parsedTrun.samples && parsedTrun.samples.length) {\n            compositionTimeOffset = parsedTrun.samples[0].compositionTimeOffset || 0;\n          }\n        }\n      } // Get timescale for this specific track. Assume a 90kHz clock if no timescale was\n      // specified.\n\n      var timescale = timescales[trackId] || 90e3; // return the composition start time, in seconds\n\n      if (typeof baseMediaDecodeTime === 'bigint') {\n        compositionTimeOffset = window$1.BigInt(compositionTimeOffset);\n        timescale = window$1.BigInt(timescale);\n      }\n      var result = (baseMediaDecodeTime + compositionTimeOffset) / timescale;\n      if (typeof result === 'bigint' && result < Number.MAX_SAFE_INTEGER) {\n        result = Number(result);\n      }\n      return result;\n    };\n    /**\n      * Find the trackIds of the video tracks in this source.\n      * Found by parsing the Handler Reference and Track Header Boxes:\n      *   moov > trak > mdia > hdlr\n      *   moov > trak > tkhd\n      *\n      * @param {Uint8Array} init - The bytes of the init segment for this source\n      * @return {Number[]} A list of trackIds\n      *\n      * @see ISO-BMFF-12/2015, Section 8.4.3\n     **/\n\n    getVideoTrackIds = function (init) {\n      var traks = findBox(init, ['moov', 'trak']);\n      var videoTrackIds = [];\n      traks.forEach(function (trak) {\n        var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n        var tkhds = findBox(trak, ['tkhd']);\n        hdlrs.forEach(function (hdlr, index) {\n          var handlerType = parseType$1(hdlr.subarray(8, 12));\n          var tkhd = tkhds[index];\n          var view;\n          var version;\n          var trackId;\n          if (handlerType === 'vide') {\n            view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n            version = view.getUint8(0);\n            trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n            videoTrackIds.push(trackId);\n          }\n        });\n      });\n      return videoTrackIds;\n    };\n    getTimescaleFromMediaHeader = function (mdhd) {\n      // mdhd is a FullBox, meaning it will have its own version as the first byte\n      var version = mdhd[0];\n      var index = version === 0 ? 12 : 20;\n      return toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n    };\n    /**\n     * Get all the video, audio, and hint tracks from a non fragmented\n     * mp4 segment\n     */\n\n    getTracks = function (init) {\n      var traks = findBox(init, ['moov', 'trak']);\n      var tracks = [];\n      traks.forEach(function (trak) {\n        var track = {};\n        var tkhd = findBox(trak, ['tkhd'])[0];\n        var view, tkhdVersion; // id\n\n        if (tkhd) {\n          view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n          tkhdVersion = view.getUint8(0);\n          track.id = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n        }\n        var hdlr = findBox(trak, ['mdia', 'hdlr'])[0]; // type\n\n        if (hdlr) {\n          var type = parseType$1(hdlr.subarray(8, 12));\n          if (type === 'vide') {\n            track.type = 'video';\n          } else if (type === 'soun') {\n            track.type = 'audio';\n          } else {\n            track.type = type;\n          }\n        } // codec\n\n        var stsd = findBox(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n        if (stsd) {\n          var sampleDescriptions = stsd.subarray(8); // gives the codec type string\n\n          track.codec = parseType$1(sampleDescriptions.subarray(4, 8));\n          var codecBox = findBox(sampleDescriptions, [track.codec])[0];\n          var codecConfig, codecConfigType;\n          if (codecBox) {\n            // https://tools.ietf.org/html/rfc6381#section-3.3\n            if (/^[asm]vc[1-9]$/i.test(track.codec)) {\n              // we don't need anything but the \"config\" parameter of the\n              // avc1 codecBox\n              codecConfig = codecBox.subarray(78);\n              codecConfigType = parseType$1(codecConfig.subarray(4, 8));\n              if (codecConfigType === 'avcC' && codecConfig.length > 11) {\n                track.codec += '.'; // left padded with zeroes for single digit hex\n                // profile idc\n\n                track.codec += toHexString(codecConfig[9]); // the byte containing the constraint_set flags\n\n                track.codec += toHexString(codecConfig[10]); // level idc\n\n                track.codec += toHexString(codecConfig[11]);\n              } else {\n                // TODO: show a warning that we couldn't parse the codec\n                // and are using the default\n                track.codec = 'avc1.4d400d';\n              }\n            } else if (/^mp4[a,v]$/i.test(track.codec)) {\n              // we do not need anything but the streamDescriptor of the mp4a codecBox\n              codecConfig = codecBox.subarray(28);\n              codecConfigType = parseType$1(codecConfig.subarray(4, 8));\n              if (codecConfigType === 'esds' && codecConfig.length > 20 && codecConfig[19] !== 0) {\n                track.codec += '.' + toHexString(codecConfig[19]); // this value is only a single digit\n\n                track.codec += '.' + toHexString(codecConfig[20] >>> 2 & 0x3f).replace(/^0/, '');\n              } else {\n                // TODO: show a warning that we couldn't parse the codec\n                // and are using the default\n                track.codec = 'mp4a.40.2';\n              }\n            } else {\n              // flac, opus, etc\n              track.codec = track.codec.toLowerCase();\n            }\n          }\n        }\n        var mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n        if (mdhd) {\n          track.timescale = getTimescaleFromMediaHeader(mdhd);\n        }\n        tracks.push(track);\n      });\n      return tracks;\n    };\n    /**\n     * Returns an array of emsg ID3 data from the provided segmentData.\n     * An offset can also be provided as the Latest Arrival Time to calculate \n     * the Event Start Time of v0 EMSG boxes. \n     * See: https://dashif-documents.azurewebsites.net/Events/master/event.html#Inband-event-timing\n     * \n     * @param {Uint8Array} segmentData the segment byte array.\n     * @param {number} offset the segment start time or Latest Arrival Time, \n     * @return {Object[]} an array of ID3 parsed from EMSG boxes\n     */\n\n    getEmsgID3 = function (segmentData, offset = 0) {\n      var emsgBoxes = findBox(segmentData, ['emsg']);\n      return emsgBoxes.map(data => {\n        var parsedBox = emsg.parseEmsgBox(new Uint8Array(data));\n        var parsedId3Frames = parseId3Frames(parsedBox.message_data);\n        return {\n          cueTime: emsg.scaleTime(parsedBox.presentation_time, parsedBox.timescale, parsedBox.presentation_time_delta, offset),\n          duration: emsg.scaleTime(parsedBox.event_duration, parsedBox.timescale),\n          frames: parsedId3Frames\n        };\n      });\n    };\n    var probe$2 = {\n      // export mp4 inspector's findBox and parseType for backwards compatibility\n      findBox: findBox,\n      parseType: parseType$1,\n      timescale: timescale,\n      startTime: startTime,\n      compositionStartTime: compositionStartTime,\n      videoTrackIds: getVideoTrackIds,\n      tracks: getTracks,\n      getTimescaleFromMediaHeader: getTimescaleFromMediaHeader,\n      getEmsgID3: getEmsgID3\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Utilities to detect basic properties and metadata about TS Segments.\n     */\n\n    var StreamTypes$1 = streamTypes;\n    var parsePid = function (packet) {\n      var pid = packet[1] & 0x1f;\n      pid <<= 8;\n      pid |= packet[2];\n      return pid;\n    };\n    var parsePayloadUnitStartIndicator = function (packet) {\n      return !!(packet[1] & 0x40);\n    };\n    var parseAdaptionField = function (packet) {\n      var offset = 0; // if an adaption field is present, its length is specified by the\n      // fifth byte of the TS packet header. The adaptation field is\n      // used to add stuffing to PES packets that don't fill a complete\n      // TS packet, and to specify some forms of timing and control data\n      // that we do not currently use.\n\n      if ((packet[3] & 0x30) >>> 4 > 0x01) {\n        offset += packet[4] + 1;\n      }\n      return offset;\n    };\n    var parseType = function (packet, pmtPid) {\n      var pid = parsePid(packet);\n      if (pid === 0) {\n        return 'pat';\n      } else if (pid === pmtPid) {\n        return 'pmt';\n      } else if (pmtPid) {\n        return 'pes';\n      }\n      return null;\n    };\n    var parsePat = function (packet) {\n      var pusi = parsePayloadUnitStartIndicator(packet);\n      var offset = 4 + parseAdaptionField(packet);\n      if (pusi) {\n        offset += packet[offset] + 1;\n      }\n      return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n    };\n    var parsePmt = function (packet) {\n      var programMapTable = {};\n      var pusi = parsePayloadUnitStartIndicator(packet);\n      var payloadOffset = 4 + parseAdaptionField(packet);\n      if (pusi) {\n        payloadOffset += packet[payloadOffset] + 1;\n      } // PMTs can be sent ahead of the time when they should actually\n      // take effect. We don't believe this should ever be the case\n      // for HLS but we'll ignore \"forward\" PMT declarations if we see\n      // them. Future PMT declarations have the current_next_indicator\n      // set to zero.\n\n      if (!(packet[payloadOffset + 5] & 0x01)) {\n        return;\n      }\n      var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\n\n      sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n      tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n      // long the program info descriptors are\n\n      programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\n\n      var offset = 12 + programInfoLength;\n      while (offset < tableEnd) {\n        var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\n\n        programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\n        // skip past the elementary stream descriptors, if present\n\n        offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n      }\n      return programMapTable;\n    };\n    var parsePesType = function (packet, programMapTable) {\n      var pid = parsePid(packet);\n      var type = programMapTable[pid];\n      switch (type) {\n        case StreamTypes$1.H264_STREAM_TYPE:\n          return 'video';\n        case StreamTypes$1.ADTS_STREAM_TYPE:\n          return 'audio';\n        case StreamTypes$1.METADATA_STREAM_TYPE:\n          return 'timed-metadata';\n        default:\n          return null;\n      }\n    };\n    var parsePesTime = function (packet) {\n      var pusi = parsePayloadUnitStartIndicator(packet);\n      if (!pusi) {\n        return null;\n      }\n      var offset = 4 + parseAdaptionField(packet);\n      if (offset >= packet.byteLength) {\n        // From the H 222.0 MPEG-TS spec\n        // \"For transport stream packets carrying PES packets, stuffing is needed when there\n        //  is insufficient PES packet data to completely fill the transport stream packet\n        //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n        //  the sum of the lengths of the data elements in it, so that the payload bytes\n        //  remaining after the adaptation field exactly accommodates the available PES packet\n        //  data.\"\n        //\n        // If the offset is >= the length of the packet, then the packet contains no data\n        // and instead is just adaption field stuffing bytes\n        return null;\n      }\n      var pes = null;\n      var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\n      // and a DTS value. Determine what combination of values is\n      // available to work with.\n\n      ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n      // performs all bitwise operations on 32-bit integers but javascript\n      // supports a much greater range (52-bits) of integer using standard\n      // mathematical operations.\n      // We construct a 31-bit value using bitwise operators over the 31\n      // most significant bits and then multiply by 4 (equal to a left-shift\n      // of 2) before we add the final 2 least significant bits of the\n      // timestamp (equal to an OR.)\n\n      if (ptsDtsFlags & 0xC0) {\n        pes = {}; // the PTS and DTS are not written out directly. For information\n        // on how they are encoded, see\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\n        pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\n        pes.pts *= 4; // Left shift by 2\n\n        pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\n        pes.dts = pes.pts;\n        if (ptsDtsFlags & 0x40) {\n          pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\n          pes.dts *= 4; // Left shift by 2\n\n          pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n        }\n      }\n      return pes;\n    };\n    var parseNalUnitType = function (type) {\n      switch (type) {\n        case 0x05:\n          return 'slice_layer_without_partitioning_rbsp_idr';\n        case 0x06:\n          return 'sei_rbsp';\n        case 0x07:\n          return 'seq_parameter_set_rbsp';\n        case 0x08:\n          return 'pic_parameter_set_rbsp';\n        case 0x09:\n          return 'access_unit_delimiter_rbsp';\n        default:\n          return null;\n      }\n    };\n    var videoPacketContainsKeyFrame = function (packet) {\n      var offset = 4 + parseAdaptionField(packet);\n      var frameBuffer = packet.subarray(offset);\n      var frameI = 0;\n      var frameSyncPoint = 0;\n      var foundKeyFrame = false;\n      var nalType; // advance the sync point to a NAL start, if necessary\n\n      for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n        if (frameBuffer[frameSyncPoint + 2] === 1) {\n          // the sync point is properly aligned\n          frameI = frameSyncPoint + 5;\n          break;\n        }\n      }\n      while (frameI < frameBuffer.byteLength) {\n        // look at the current byte to determine if we've hit the end of\n        // a NAL unit boundary\n        switch (frameBuffer[frameI]) {\n          case 0:\n            // skip past non-sync sequences\n            if (frameBuffer[frameI - 1] !== 0) {\n              frameI += 2;\n              break;\n            } else if (frameBuffer[frameI - 2] !== 0) {\n              frameI++;\n              break;\n            }\n            if (frameSyncPoint + 3 !== frameI - 2) {\n              nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n              if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n                foundKeyFrame = true;\n              }\n            } // drop trailing zeroes\n\n            do {\n              frameI++;\n            } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n            frameSyncPoint = frameI - 2;\n            frameI += 3;\n            break;\n          case 1:\n            // skip past non-sync sequences\n            if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\n              frameI += 3;\n              break;\n            }\n            nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n            if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n              foundKeyFrame = true;\n            }\n            frameSyncPoint = frameI - 2;\n            frameI += 3;\n            break;\n          default:\n            // the current byte isn't a one or zero, so it cannot be part\n            // of a sync sequence\n            frameI += 3;\n            break;\n        }\n      }\n      frameBuffer = frameBuffer.subarray(frameSyncPoint);\n      frameI -= frameSyncPoint;\n      frameSyncPoint = 0; // parse the final nal\n\n      if (frameBuffer && frameBuffer.byteLength > 3) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n      return foundKeyFrame;\n    };\n    var probe$1 = {\n      parseType: parseType,\n      parsePat: parsePat,\n      parsePmt: parsePmt,\n      parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n      parsePesType: parsePesType,\n      parsePesTime: parsePesTime,\n      videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Parse mpeg2 transport stream packets to extract basic timing information\n     */\n\n    var StreamTypes = streamTypes;\n    var handleRollover = timestampRolloverStream.handleRollover;\n    var probe = {};\n    probe.ts = probe$1;\n    probe.aac = utils;\n    var ONE_SECOND_IN_TS = clock$2.ONE_SECOND_IN_TS;\n    var MP2T_PACKET_LENGTH = 188,\n      // bytes\n      SYNC_BYTE = 0x47;\n    /**\n     * walks through segment data looking for pat and pmt packets to parse out\n     * program map table information\n     */\n\n    var parsePsi_ = function (bytes, pmt) {\n      var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH,\n        packet,\n        type;\n      while (endIndex < bytes.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n          switch (type) {\n            case 'pat':\n              pmt.pid = probe.ts.parsePat(packet);\n              break;\n            case 'pmt':\n              var table = probe.ts.parsePmt(packet);\n              pmt.table = pmt.table || {};\n              Object.keys(table).forEach(function (key) {\n                pmt.table[key] = table[key];\n              });\n              break;\n          }\n          startIndex += MP2T_PACKET_LENGTH;\n          endIndex += MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n        startIndex++;\n        endIndex++;\n      }\n    };\n    /**\n     * walks through the segment data from the start and end to get timing information\n     * for the first and last audio pes packets\n     */\n\n    var parseAudioPes_ = function (bytes, pmt, result) {\n      var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH,\n        packet,\n        type,\n        pesType,\n        pusi,\n        parsed;\n      var endLoop = false; // Start walking from start of segment to get first audio packet\n\n      while (endIndex <= bytes.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n          switch (type) {\n            case 'pes':\n              pesType = probe.ts.parsePesType(packet, pmt.table);\n              pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n              if (pesType === 'audio' && pusi) {\n                parsed = probe.ts.parsePesTime(packet);\n                if (parsed) {\n                  parsed.type = 'audio';\n                  result.audio.push(parsed);\n                  endLoop = true;\n                }\n              }\n              break;\n          }\n          if (endLoop) {\n            break;\n          }\n          startIndex += MP2T_PACKET_LENGTH;\n          endIndex += MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n        startIndex++;\n        endIndex++;\n      } // Start walking from end of segment to get last audio packet\n\n      endIndex = bytes.byteLength;\n      startIndex = endIndex - MP2T_PACKET_LENGTH;\n      endLoop = false;\n      while (startIndex >= 0) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n          switch (type) {\n            case 'pes':\n              pesType = probe.ts.parsePesType(packet, pmt.table);\n              pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n              if (pesType === 'audio' && pusi) {\n                parsed = probe.ts.parsePesTime(packet);\n                if (parsed) {\n                  parsed.type = 'audio';\n                  result.audio.push(parsed);\n                  endLoop = true;\n                }\n              }\n              break;\n          }\n          if (endLoop) {\n            break;\n          }\n          startIndex -= MP2T_PACKET_LENGTH;\n          endIndex -= MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n        startIndex--;\n        endIndex--;\n      }\n    };\n    /**\n     * walks through the segment data from the start and end to get timing information\n     * for the first and last video pes packets as well as timing information for the first\n     * key frame.\n     */\n\n    var parseVideoPes_ = function (bytes, pmt, result) {\n      var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH,\n        packet,\n        type,\n        pesType,\n        pusi,\n        parsed,\n        frame,\n        i,\n        pes;\n      var endLoop = false;\n      var currentFrame = {\n        data: [],\n        size: 0\n      }; // Start walking from start of segment to get first video packet\n\n      while (endIndex < bytes.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n          switch (type) {\n            case 'pes':\n              pesType = probe.ts.parsePesType(packet, pmt.table);\n              pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n              if (pesType === 'video') {\n                if (pusi && !endLoop) {\n                  parsed = probe.ts.parsePesTime(packet);\n                  if (parsed) {\n                    parsed.type = 'video';\n                    result.video.push(parsed);\n                    endLoop = true;\n                  }\n                }\n                if (!result.firstKeyFrame) {\n                  if (pusi) {\n                    if (currentFrame.size !== 0) {\n                      frame = new Uint8Array(currentFrame.size);\n                      i = 0;\n                      while (currentFrame.data.length) {\n                        pes = currentFrame.data.shift();\n                        frame.set(pes, i);\n                        i += pes.byteLength;\n                      }\n                      if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                        var firstKeyFrame = probe.ts.parsePesTime(frame); // PTS/DTS may not be available. Simply *not* setting\n                        // the keyframe seems to work fine with HLS playback\n                        // and definitely preferable to a crash with TypeError...\n\n                        if (firstKeyFrame) {\n                          result.firstKeyFrame = firstKeyFrame;\n                          result.firstKeyFrame.type = 'video';\n                        } else {\n                          // eslint-disable-next-line\n                          console.warn('Failed to extract PTS/DTS from PES at first keyframe. ' + 'This could be an unusual TS segment, or else mux.js did not ' + 'parse your TS segment correctly. If you know your TS ' + 'segments do contain PTS/DTS on keyframes please file a bug ' + 'report! You can try ffprobe to double check for yourself.');\n                        }\n                      }\n                      currentFrame.size = 0;\n                    }\n                  }\n                  currentFrame.data.push(packet);\n                  currentFrame.size += packet.byteLength;\n                }\n              }\n              break;\n          }\n          if (endLoop && result.firstKeyFrame) {\n            break;\n          }\n          startIndex += MP2T_PACKET_LENGTH;\n          endIndex += MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n        startIndex++;\n        endIndex++;\n      } // Start walking from end of segment to get last video packet\n\n      endIndex = bytes.byteLength;\n      startIndex = endIndex - MP2T_PACKET_LENGTH;\n      endLoop = false;\n      while (startIndex >= 0) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n          switch (type) {\n            case 'pes':\n              pesType = probe.ts.parsePesType(packet, pmt.table);\n              pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n              if (pesType === 'video' && pusi) {\n                parsed = probe.ts.parsePesTime(packet);\n                if (parsed) {\n                  parsed.type = 'video';\n                  result.video.push(parsed);\n                  endLoop = true;\n                }\n              }\n              break;\n          }\n          if (endLoop) {\n            break;\n          }\n          startIndex -= MP2T_PACKET_LENGTH;\n          endIndex -= MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n        startIndex--;\n        endIndex--;\n      }\n    };\n    /**\n     * Adjusts the timestamp information for the segment to account for\n     * rollover and convert to seconds based on pes packet timescale (90khz clock)\n     */\n\n    var adjustTimestamp_ = function (segmentInfo, baseTimestamp) {\n      if (segmentInfo.audio && segmentInfo.audio.length) {\n        var audioBaseTimestamp = baseTimestamp;\n        if (typeof audioBaseTimestamp === 'undefined' || isNaN(audioBaseTimestamp)) {\n          audioBaseTimestamp = segmentInfo.audio[0].dts;\n        }\n        segmentInfo.audio.forEach(function (info) {\n          info.dts = handleRollover(info.dts, audioBaseTimestamp);\n          info.pts = handleRollover(info.pts, audioBaseTimestamp); // time in seconds\n\n          info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n          info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n        });\n      }\n      if (segmentInfo.video && segmentInfo.video.length) {\n        var videoBaseTimestamp = baseTimestamp;\n        if (typeof videoBaseTimestamp === 'undefined' || isNaN(videoBaseTimestamp)) {\n          videoBaseTimestamp = segmentInfo.video[0].dts;\n        }\n        segmentInfo.video.forEach(function (info) {\n          info.dts = handleRollover(info.dts, videoBaseTimestamp);\n          info.pts = handleRollover(info.pts, videoBaseTimestamp); // time in seconds\n\n          info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n          info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n        });\n        if (segmentInfo.firstKeyFrame) {\n          var frame = segmentInfo.firstKeyFrame;\n          frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n          frame.pts = handleRollover(frame.pts, videoBaseTimestamp); // time in seconds\n\n          frame.dtsTime = frame.dts / ONE_SECOND_IN_TS;\n          frame.ptsTime = frame.pts / ONE_SECOND_IN_TS;\n        }\n      }\n    };\n    /**\n     * inspects the aac data stream for start and end time information\n     */\n\n    var inspectAac_ = function (bytes) {\n      var endLoop = false,\n        audioCount = 0,\n        sampleRate = null,\n        timestamp = null,\n        frameSize = 0,\n        byteIndex = 0,\n        packet;\n      while (bytes.length - byteIndex >= 3) {\n        var type = probe.aac.parseType(bytes, byteIndex);\n        switch (type) {\n          case 'timed-metadata':\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (bytes.length - byteIndex < 10) {\n              endLoop = true;\n              break;\n            }\n            frameSize = probe.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (frameSize > bytes.length) {\n              endLoop = true;\n              break;\n            }\n            if (timestamp === null) {\n              packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n              timestamp = probe.aac.parseAacTimestamp(packet);\n            }\n            byteIndex += frameSize;\n            break;\n          case 'audio':\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (bytes.length - byteIndex < 7) {\n              endLoop = true;\n              break;\n            }\n            frameSize = probe.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (frameSize > bytes.length) {\n              endLoop = true;\n              break;\n            }\n            if (sampleRate === null) {\n              packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n              sampleRate = probe.aac.parseSampleRate(packet);\n            }\n            audioCount++;\n            byteIndex += frameSize;\n            break;\n          default:\n            byteIndex++;\n            break;\n        }\n        if (endLoop) {\n          return null;\n        }\n      }\n      if (sampleRate === null || timestamp === null) {\n        return null;\n      }\n      var audioTimescale = ONE_SECOND_IN_TS / sampleRate;\n      var result = {\n        audio: [{\n          type: 'audio',\n          dts: timestamp,\n          pts: timestamp\n        }, {\n          type: 'audio',\n          dts: timestamp + audioCount * 1024 * audioTimescale,\n          pts: timestamp + audioCount * 1024 * audioTimescale\n        }]\n      };\n      return result;\n    };\n    /**\n     * inspects the transport stream segment data for start and end time information\n     * of the audio and video tracks (when present) as well as the first key frame's\n     * start time.\n     */\n\n    var inspectTs_ = function (bytes) {\n      var pmt = {\n        pid: null,\n        table: null\n      };\n      var result = {};\n      parsePsi_(bytes, pmt);\n      for (var pid in pmt.table) {\n        if (pmt.table.hasOwnProperty(pid)) {\n          var type = pmt.table[pid];\n          switch (type) {\n            case StreamTypes.H264_STREAM_TYPE:\n              result.video = [];\n              parseVideoPes_(bytes, pmt, result);\n              if (result.video.length === 0) {\n                delete result.video;\n              }\n              break;\n            case StreamTypes.ADTS_STREAM_TYPE:\n              result.audio = [];\n              parseAudioPes_(bytes, pmt, result);\n              if (result.audio.length === 0) {\n                delete result.audio;\n              }\n              break;\n          }\n        }\n      }\n      return result;\n    };\n    /**\n     * Inspects segment byte data and returns an object with start and end timing information\n     *\n     * @param {Uint8Array} bytes The segment byte data\n     * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n     *  timestamps for rollover. This value must be in 90khz clock.\n     * @return {Object} Object containing start and end frame timing info of segment.\n     */\n\n    var inspect = function (bytes, baseTimestamp) {\n      var isAacData = probe.aac.isLikelyAacData(bytes);\n      var result;\n      if (isAacData) {\n        result = inspectAac_(bytes);\n      } else {\n        result = inspectTs_(bytes);\n      }\n      if (!result || !result.audio && !result.video) {\n        return null;\n      }\n      adjustTimestamp_(result, baseTimestamp);\n      return result;\n    };\n    var tsInspector = {\n      inspect: inspect,\n      parseAudioPes_: parseAudioPes_\n    };\n    /* global self */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n\n    const wireTransmuxerEvents = function (self, transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        const initArray = segment.initSegment;\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n        const typedArray = segment.data;\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n      transmuxer.on('done', function (data) {\n        self.postMessage({\n          action: 'done'\n        });\n      });\n      transmuxer.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo\n        });\n      });\n      transmuxer.on('videoSegmentTimingInfo', function (timingInfo) {\n        const videoSegmentTimingInfo = {\n          start: {\n            decode: clock$2.videoTsToSeconds(timingInfo.start.dts),\n            presentation: clock$2.videoTsToSeconds(timingInfo.start.pts)\n          },\n          end: {\n            decode: clock$2.videoTsToSeconds(timingInfo.end.dts),\n            presentation: clock$2.videoTsToSeconds(timingInfo.end.pts)\n          },\n          baseMediaDecodeTime: clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n        };\n        if (timingInfo.prependedContentDuration) {\n          videoSegmentTimingInfo.prependedContentDuration = clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);\n        }\n        self.postMessage({\n          action: 'videoSegmentTimingInfo',\n          videoSegmentTimingInfo\n        });\n      });\n      transmuxer.on('audioSegmentTimingInfo', function (timingInfo) {\n        // Note that all times for [audio/video]SegmentTimingInfo events are in video clock\n        const audioSegmentTimingInfo = {\n          start: {\n            decode: clock$2.videoTsToSeconds(timingInfo.start.dts),\n            presentation: clock$2.videoTsToSeconds(timingInfo.start.pts)\n          },\n          end: {\n            decode: clock$2.videoTsToSeconds(timingInfo.end.dts),\n            presentation: clock$2.videoTsToSeconds(timingInfo.end.pts)\n          },\n          baseMediaDecodeTime: clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n        };\n        if (timingInfo.prependedContentDuration) {\n          audioSegmentTimingInfo.prependedContentDuration = clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);\n        }\n        self.postMessage({\n          action: 'audioSegmentTimingInfo',\n          audioSegmentTimingInfo\n        });\n      });\n      transmuxer.on('id3Frame', function (id3Frame) {\n        self.postMessage({\n          action: 'id3Frame',\n          id3Frame\n        });\n      });\n      transmuxer.on('caption', function (caption) {\n        self.postMessage({\n          action: 'caption',\n          caption\n        });\n      });\n      transmuxer.on('trackinfo', function (trackInfo) {\n        self.postMessage({\n          action: 'trackinfo',\n          trackInfo\n        });\n      });\n      transmuxer.on('audioTimingInfo', function (audioTimingInfo) {\n        // convert to video TS since we prioritize video time over audio\n        self.postMessage({\n          action: 'audioTimingInfo',\n          audioTimingInfo: {\n            start: clock$2.videoTsToSeconds(audioTimingInfo.start),\n            end: clock$2.videoTsToSeconds(audioTimingInfo.end)\n          }\n        });\n      });\n      transmuxer.on('videoTimingInfo', function (videoTimingInfo) {\n        self.postMessage({\n          action: 'videoTimingInfo',\n          videoTimingInfo: {\n            start: clock$2.videoTsToSeconds(videoTimingInfo.start),\n            end: clock$2.videoTsToSeconds(videoTimingInfo.end)\n          }\n        });\n      });\n      transmuxer.on('log', function (log) {\n        self.postMessage({\n          action: 'log',\n          log\n        });\n      });\n    };\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n    class MessageHandlers {\n      constructor(self, options) {\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n      init() {\n        if (this.transmuxer) {\n          this.transmuxer.dispose();\n        }\n        this.transmuxer = new transmuxer.Transmuxer(this.options);\n        wireTransmuxerEvents(this.self, this.transmuxer);\n      }\n      pushMp4Captions(data) {\n        if (!this.captionParser) {\n          this.captionParser = new captionParser();\n          this.captionParser.init();\n        }\n        const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n        const parsed = this.captionParser.parse(segment, data.trackIds, data.timescales);\n        this.self.postMessage({\n          action: 'mp4Captions',\n          captions: parsed && parsed.captions || [],\n          logs: parsed && parsed.logs || [],\n          data: segment.buffer\n        }, [segment.buffer]);\n      }\n      probeMp4StartTime({\n        timescales,\n        data\n      }) {\n        const startTime = probe$2.startTime(timescales, data);\n        this.self.postMessage({\n          action: 'probeMp4StartTime',\n          startTime,\n          data\n        }, [data.buffer]);\n      }\n      probeMp4Tracks({\n        data\n      }) {\n        const tracks = probe$2.tracks(data);\n        this.self.postMessage({\n          action: 'probeMp4Tracks',\n          tracks,\n          data\n        }, [data.buffer]);\n      }\n      /**\n       * Probes an mp4 segment for EMSG boxes containing ID3 data.\n       * https://aomediacodec.github.io/id3-emsg/\n       *\n       * @param {Uint8Array} data segment data\n       * @param {number} offset segment start time\n       * @return {Object[]} an array of ID3 frames\n       */\n\n      probeEmsgID3({\n        data,\n        offset\n      }) {\n        const id3Frames = probe$2.getEmsgID3(data, offset);\n        this.self.postMessage({\n          action: 'probeEmsgID3',\n          id3Frames,\n          emsgData: data\n        }, [data.buffer]);\n      }\n      /**\n       * Probe an mpeg2-ts segment to determine the start time of the segment in it's\n       * internal \"media time,\" as well as whether it contains video and/or audio.\n       *\n       * @private\n       * @param {Uint8Array} bytes - segment bytes\n       * @param {number} baseStartTime\n       *        Relative reference timestamp used when adjusting frame timestamps for rollover.\n       *        This value should be in seconds, as it's converted to a 90khz clock within the\n       *        function body.\n       * @return {Object} The start time of the current segment in \"media time\" as well as\n       *                  whether it contains video and/or audio\n       */\n\n      probeTs({\n        data,\n        baseStartTime\n      }) {\n        const tsStartTime = typeof baseStartTime === 'number' && !isNaN(baseStartTime) ? baseStartTime * clock$2.ONE_SECOND_IN_TS : void 0;\n        const timeInfo = tsInspector.inspect(data, tsStartTime);\n        let result = null;\n        if (timeInfo) {\n          result = {\n            // each type's time info comes back as an array of 2 times, start and end\n            hasVideo: timeInfo.video && timeInfo.video.length === 2 || false,\n            hasAudio: timeInfo.audio && timeInfo.audio.length === 2 || false\n          };\n          if (result.hasVideo) {\n            result.videoStart = timeInfo.video[0].ptsTime;\n          }\n          if (result.hasAudio) {\n            result.audioStart = timeInfo.audio[0].ptsTime;\n          }\n        }\n        this.self.postMessage({\n          action: 'probeTs',\n          result,\n          data\n        }, [data.buffer]);\n      }\n      clearAllMp4Captions() {\n        if (this.captionParser) {\n          this.captionParser.clearAllCaptions();\n        }\n      }\n      clearParsedMp4Captions() {\n        if (this.captionParser) {\n          this.captionParser.clearParsedCaptions();\n        }\n      }\n      /**\n       * Adds data (a ts segment) to the start of the transmuxer pipeline for\n       * processing.\n       *\n       * @param {ArrayBuffer} data data to push into the muxer\n       */\n\n      push(data) {\n        // Cast array buffer to correct type for transmuxer\n        const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n        this.transmuxer.push(segment);\n      }\n      /**\n       * Recreate the transmuxer so that the next segment added via `push`\n       * start with a fresh transmuxer.\n       */\n\n      reset() {\n        this.transmuxer.reset();\n      }\n      /**\n       * Set the value that will be used as the `baseMediaDecodeTime` time for the\n       * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n       * set relative to the first based on the PTS values.\n       *\n       * @param {Object} data used to set the timestamp offset in the muxer\n       */\n\n      setTimestampOffset(data) {\n        const timestampOffset = data.timestampOffset || 0;\n        this.transmuxer.setBaseMediaDecodeTime(Math.round(clock$2.secondsToVideoTs(timestampOffset)));\n      }\n      setAudioAppendStart(data) {\n        this.transmuxer.setAudioAppendStart(Math.ceil(clock$2.secondsToVideoTs(data.appendStart)));\n      }\n      setRemux(data) {\n        this.transmuxer.setRemux(data.remux);\n      }\n      /**\n       * Forces the pipeline to finish processing the last segment and emit it's\n       * results.\n       *\n       * @param {Object} data event data, not really used\n       */\n\n      flush(data) {\n        this.transmuxer.flush(); // transmuxed done action is fired after both audio/video pipelines are flushed\n\n        self.postMessage({\n          action: 'done',\n          type: 'transmuxed'\n        });\n      }\n      endTimeline() {\n        this.transmuxer.endTimeline(); // transmuxed endedtimeline action is fired after both audio/video pipelines end their\n        // timelines\n\n        self.postMessage({\n          action: 'endedtimeline',\n          type: 'transmuxed'\n        });\n      }\n      alignGopsWith(data) {\n        this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n      }\n    }\n    /**\n     * Our web worker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n    self.onmessage = function (event) {\n      if (event.data.action === 'init' && event.data.options) {\n        this.messageHandlers = new MessageHandlers(self, event.data.options);\n        return;\n      }\n      if (!this.messageHandlers) {\n        this.messageHandlers = new MessageHandlers(self);\n      }\n      if (event.data && event.data.action && event.data.action !== 'init') {\n        if (this.messageHandlers[event.data.action]) {\n          this.messageHandlers[event.data.action](event.data);\n        }\n      }\n    };\n  }));\n  var TransmuxWorker = factory(workerCode$1);\n  /* rollup-plugin-worker-factory end for worker!/home/runner/work/http-streaming/http-streaming/src/transmuxer-worker.js */\n\n  const handleData_ = (event, transmuxedData, callback) => {\n    const {\n      type,\n      initSegment,\n      captions,\n      captionStreams,\n      metadata,\n      videoFrameDtsTime,\n      videoFramePtsTime\n    } = event.data.segment;\n    transmuxedData.buffer.push({\n      captions,\n      captionStreams,\n      metadata\n    });\n    const boxes = event.data.segment.boxes || {\n      data: event.data.segment.data\n    };\n    const result = {\n      type,\n      // cast ArrayBuffer to TypedArray\n      data: new Uint8Array(boxes.data, boxes.data.byteOffset, boxes.data.byteLength),\n      initSegment: new Uint8Array(initSegment.data, initSegment.byteOffset, initSegment.byteLength)\n    };\n    if (typeof videoFrameDtsTime !== 'undefined') {\n      result.videoFrameDtsTime = videoFrameDtsTime;\n    }\n    if (typeof videoFramePtsTime !== 'undefined') {\n      result.videoFramePtsTime = videoFramePtsTime;\n    }\n    callback(result);\n  };\n  const handleDone_ = ({\n    transmuxedData,\n    callback\n  }) => {\n    // Previously we only returned data on data events,\n    // not on done events. Clear out the buffer to keep that consistent.\n    transmuxedData.buffer = []; // all buffers should have been flushed from the muxer, so start processing anything we\n    // have received\n\n    callback(transmuxedData);\n  };\n  const handleGopInfo_ = (event, transmuxedData) => {\n    transmuxedData.gopInfo = event.data.gopInfo;\n  };\n  const processTransmux = options => {\n    const {\n      transmuxer,\n      bytes,\n      audioAppendStart,\n      gopsToAlignWith,\n      remux,\n      onData,\n      onTrackInfo,\n      onAudioTimingInfo,\n      onVideoTimingInfo,\n      onVideoSegmentTimingInfo,\n      onAudioSegmentTimingInfo,\n      onId3,\n      onCaptions,\n      onDone,\n      onEndedTimeline,\n      onTransmuxerLog,\n      isEndOfTimeline,\n      segment,\n      triggerSegmentEventFn\n    } = options;\n    const transmuxedData = {\n      buffer: []\n    };\n    let waitForEndedTimelineEvent = isEndOfTimeline;\n    const handleMessage = event => {\n      if (transmuxer.currentTransmux !== options) {\n        // disposed\n        return;\n      }\n      if (event.data.action === 'data') {\n        handleData_(event, transmuxedData, onData);\n      }\n      if (event.data.action === 'trackinfo') {\n        onTrackInfo(event.data.trackInfo);\n      }\n      if (event.data.action === 'gopInfo') {\n        handleGopInfo_(event, transmuxedData);\n      }\n      if (event.data.action === 'audioTimingInfo') {\n        onAudioTimingInfo(event.data.audioTimingInfo);\n      }\n      if (event.data.action === 'videoTimingInfo') {\n        onVideoTimingInfo(event.data.videoTimingInfo);\n      }\n      if (event.data.action === 'videoSegmentTimingInfo') {\n        onVideoSegmentTimingInfo(event.data.videoSegmentTimingInfo);\n      }\n      if (event.data.action === 'audioSegmentTimingInfo') {\n        onAudioSegmentTimingInfo(event.data.audioSegmentTimingInfo);\n      }\n      if (event.data.action === 'id3Frame') {\n        onId3([event.data.id3Frame], event.data.id3Frame.dispatchType);\n      }\n      if (event.data.action === 'caption') {\n        onCaptions(event.data.caption);\n      }\n      if (event.data.action === 'endedtimeline') {\n        waitForEndedTimelineEvent = false;\n        onEndedTimeline();\n      }\n      if (event.data.action === 'log') {\n        onTransmuxerLog(event.data.log);\n      } // wait for the transmuxed event since we may have audio and video\n\n      if (event.data.type !== 'transmuxed') {\n        return;\n      } // If the \"endedtimeline\" event has not yet fired, and this segment represents the end\n      // of a timeline, that means there may still be data events before the segment\n      // processing can be considerred complete. In that case, the final event should be\n      // an \"endedtimeline\" event with the type \"transmuxed.\"\n\n      if (waitForEndedTimelineEvent) {\n        return;\n      }\n      transmuxer.onmessage = null;\n      handleDone_({\n        transmuxedData,\n        callback: onDone\n      });\n      /* eslint-disable no-use-before-define */\n\n      dequeue(transmuxer);\n      /* eslint-enable */\n    };\n    const handleError = () => {\n      const error = {\n        message: 'Received an error message from the transmuxer worker',\n        metadata: {\n          errorType: videojs.Error.StreamingFailedToTransmuxSegment,\n          segmentInfo: segmentInfoPayload({\n            segment\n          })\n        }\n      };\n      onDone(null, error);\n    };\n    transmuxer.onmessage = handleMessage;\n    transmuxer.onerror = handleError;\n    if (audioAppendStart) {\n      transmuxer.postMessage({\n        action: 'setAudioAppendStart',\n        appendStart: audioAppendStart\n      });\n    } // allow empty arrays to be passed to clear out GOPs\n\n    if (Array.isArray(gopsToAlignWith)) {\n      transmuxer.postMessage({\n        action: 'alignGopsWith',\n        gopsToAlignWith\n      });\n    }\n    if (typeof remux !== 'undefined') {\n      transmuxer.postMessage({\n        action: 'setRemux',\n        remux\n      });\n    }\n    if (bytes.byteLength) {\n      const buffer = bytes instanceof ArrayBuffer ? bytes : bytes.buffer;\n      const byteOffset = bytes instanceof ArrayBuffer ? 0 : bytes.byteOffset;\n      triggerSegmentEventFn({\n        type: 'segmenttransmuxingstart',\n        segment\n      });\n      transmuxer.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: buffer,\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset,\n        byteLength: bytes.byteLength\n      }, [buffer]);\n    }\n    if (isEndOfTimeline) {\n      transmuxer.postMessage({\n        action: 'endTimeline'\n      });\n    } // even if we didn't push any bytes, we have to make sure we flush in case we reached\n    // the end of the segment\n\n    transmuxer.postMessage({\n      action: 'flush'\n    });\n  };\n  const dequeue = transmuxer => {\n    transmuxer.currentTransmux = null;\n    if (transmuxer.transmuxQueue.length) {\n      transmuxer.currentTransmux = transmuxer.transmuxQueue.shift();\n      if (typeof transmuxer.currentTransmux === 'function') {\n        transmuxer.currentTransmux();\n      } else {\n        processTransmux(transmuxer.currentTransmux);\n      }\n    }\n  };\n  const processAction = (transmuxer, action) => {\n    transmuxer.postMessage({\n      action\n    });\n    dequeue(transmuxer);\n  };\n  const enqueueAction = (action, transmuxer) => {\n    if (!transmuxer.currentTransmux) {\n      transmuxer.currentTransmux = action;\n      processAction(transmuxer, action);\n      return;\n    }\n    transmuxer.transmuxQueue.push(processAction.bind(null, transmuxer, action));\n  };\n  const reset = transmuxer => {\n    enqueueAction('reset', transmuxer);\n  };\n  const endTimeline = transmuxer => {\n    enqueueAction('endTimeline', transmuxer);\n  };\n  const transmux = options => {\n    if (!options.transmuxer.currentTransmux) {\n      options.transmuxer.currentTransmux = options;\n      processTransmux(options);\n      return;\n    }\n    options.transmuxer.transmuxQueue.push(options);\n  };\n  const createTransmuxer = options => {\n    const transmuxer = new TransmuxWorker();\n    transmuxer.currentTransmux = null;\n    transmuxer.transmuxQueue = [];\n    const term = transmuxer.terminate;\n    transmuxer.terminate = () => {\n      transmuxer.currentTransmux = null;\n      transmuxer.transmuxQueue.length = 0;\n      return term.call(transmuxer);\n    };\n    transmuxer.postMessage({\n      action: 'init',\n      options\n    });\n    return transmuxer;\n  };\n  var segmentTransmuxer = {\n    reset,\n    endTimeline,\n    transmux,\n    createTransmuxer\n  };\n  const workerCallback = function (options) {\n    const transmuxer = options.transmuxer;\n    const endAction = options.endAction || options.action;\n    const callback = options.callback;\n    const message = _extends$1({}, options, {\n      endAction: null,\n      transmuxer: null,\n      callback: null\n    });\n    const listenForEndEvent = event => {\n      if (event.data.action !== endAction) {\n        return;\n      }\n      transmuxer.removeEventListener('message', listenForEndEvent); // transfer ownership of bytes back to us.\n\n      if (event.data.data) {\n        event.data.data = new Uint8Array(event.data.data, options.byteOffset || 0, options.byteLength || event.data.data.byteLength);\n        if (options.data) {\n          options.data = event.data.data;\n        }\n      }\n      callback(event.data);\n    };\n    transmuxer.addEventListener('message', listenForEndEvent);\n    if (options.data) {\n      const isArrayBuffer = options.data instanceof ArrayBuffer;\n      message.byteOffset = isArrayBuffer ? 0 : options.data.byteOffset;\n      message.byteLength = options.data.byteLength;\n      const transfers = [isArrayBuffer ? options.data : options.data.buffer];\n      transmuxer.postMessage(message, transfers);\n    } else {\n      transmuxer.postMessage(message);\n    }\n  };\n  const REQUEST_ERRORS = {\n    FAILURE: 2,\n    TIMEOUT: -101,\n    ABORTED: -102\n  };\n  /**\n   * Abort all requests\n   *\n   * @param {Object} activeXhrs - an object that tracks all XHR requests\n   */\n\n  const abortAll = activeXhrs => {\n    activeXhrs.forEach(xhr => {\n      xhr.abort();\n    });\n  };\n  /**\n   * Gather important bandwidth stats once a request has completed\n   *\n   * @param {Object} request - the XHR request from which to gather stats\n   */\n\n  const getRequestStats = request => {\n    return {\n      bandwidth: request.bandwidth,\n      bytesReceived: request.bytesReceived || 0,\n      roundTripTime: request.roundTripTime || 0\n    };\n  };\n  /**\n   * If possible gather bandwidth stats as a request is in\n   * progress\n   *\n   * @param {Event} progressEvent - an event object from an XHR's progress event\n   */\n\n  const getProgressStats = progressEvent => {\n    const request = progressEvent.target;\n    const roundTripTime = Date.now() - request.requestTime;\n    const stats = {\n      bandwidth: Infinity,\n      bytesReceived: 0,\n      roundTripTime: roundTripTime || 0\n    };\n    stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n    // because we should only use bandwidth stats on progress to determine when\n    // abort a request early due to insufficient bandwidth\n\n    stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n    return stats;\n  };\n  /**\n   * Handle all error conditions in one place and return an object\n   * with all the information\n   *\n   * @param {Error|null} error - if non-null signals an error occured with the XHR\n   * @param {Object} request -  the XHR request that possibly generated the error\n   */\n\n  const handleErrors = (error, request) => {\n    const {\n      requestType\n    } = request;\n    const metadata = getStreamingNetworkErrorMetadata({\n      requestType,\n      request,\n      error\n    });\n    if (request.timedout) {\n      return {\n        status: request.status,\n        message: 'HLS request timed-out at URL: ' + request.uri,\n        code: REQUEST_ERRORS.TIMEOUT,\n        xhr: request,\n        metadata\n      };\n    }\n    if (request.aborted) {\n      return {\n        status: request.status,\n        message: 'HLS request aborted at URL: ' + request.uri,\n        code: REQUEST_ERRORS.ABORTED,\n        xhr: request,\n        metadata\n      };\n    }\n    if (error) {\n      return {\n        status: request.status,\n        message: 'HLS request errored at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request,\n        metadata\n      };\n    }\n    if (request.responseType === 'arraybuffer' && request.response.byteLength === 0) {\n      return {\n        status: request.status,\n        message: 'Empty HLS response at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request,\n        metadata\n      };\n    }\n    return null;\n  };\n  /**\n   * Handle responses for key data and convert the key data to the correct format\n   * for the decryption step later\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Array} objects - objects to add the key bytes to.\n   * @param {Function} finishProcessingFn - a callback to execute to continue processing\n   *                                        this request\n   */\n\n  const handleKeyResponse = (segment, objects, finishProcessingFn, triggerSegmentEventFn) => (error, request) => {\n    const response = request.response;\n    const errorObj = handleErrors(error, request);\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n    const view = new DataView(response);\n    const bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    for (let i = 0; i < objects.length; i++) {\n      objects[i].bytes = bytes;\n    }\n    const keyInfo = {\n      uri: request.uri\n    };\n    triggerSegmentEventFn({\n      type: 'segmentkeyloadcomplete',\n      segment,\n      keyInfo\n    });\n    return finishProcessingFn(null, segment);\n  };\n  const parseInitSegment = (segment, callback) => {\n    const type = detectContainerForBytes(segment.map.bytes); // TODO: We should also handle ts init segments here, but we\n    // only know how to parse mp4 init segments at the moment\n\n    if (type !== 'mp4') {\n      const uri = segment.map.resolvedUri || segment.map.uri;\n      const mediaType = type || 'unknown';\n      return callback({\n        internal: true,\n        message: `Found unsupported ${mediaType} container for initialization segment at URL: ${uri}`,\n        code: REQUEST_ERRORS.FAILURE,\n        metadata: {\n          mediaType\n        }\n      });\n    }\n    workerCallback({\n      action: 'probeMp4Tracks',\n      data: segment.map.bytes,\n      transmuxer: segment.transmuxer,\n      callback: ({\n        tracks,\n        data\n      }) => {\n        // transfer bytes back to us\n        segment.map.bytes = data;\n        tracks.forEach(function (track) {\n          segment.map.tracks = segment.map.tracks || {}; // only support one track of each type for now\n\n          if (segment.map.tracks[track.type]) {\n            return;\n          }\n          segment.map.tracks[track.type] = track;\n          if (typeof track.id === 'number' && track.timescale) {\n            segment.map.timescales = segment.map.timescales || {};\n            segment.map.timescales[track.id] = track.timescale;\n          }\n        });\n        return callback(null);\n      }\n    });\n  };\n  /**\n   * Handle init-segment responses\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} finishProcessingFn - a callback to execute to continue processing\n   *                                        this request\n   */\n\n  const handleInitSegmentResponse = ({\n    segment,\n    finishProcessingFn,\n    triggerSegmentEventFn\n  }) => (error, request) => {\n    const errorObj = handleErrors(error, request);\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n    const bytes = new Uint8Array(request.response);\n    triggerSegmentEventFn({\n      type: 'segmentloaded',\n      segment\n    }); // init segment is encypted, we will have to wait\n    // until the key request is done to decrypt.\n\n    if (segment.map.key) {\n      segment.map.encryptedBytes = bytes;\n      return finishProcessingFn(null, segment);\n    }\n    segment.map.bytes = bytes;\n    parseInitSegment(segment, function (parseError) {\n      if (parseError) {\n        parseError.xhr = request;\n        parseError.status = request.status;\n        return finishProcessingFn(parseError, segment);\n      }\n      finishProcessingFn(null, segment);\n    });\n  };\n  /**\n   * Response handler for segment-requests being sure to set the correct\n   * property depending on whether the segment is encryped or not\n   * Also records and keeps track of stats that are used for ABR purposes\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} finishProcessingFn - a callback to execute to continue processing\n   *                                        this request\n   */\n\n  const handleSegmentResponse = ({\n    segment,\n    finishProcessingFn,\n    responseType,\n    triggerSegmentEventFn\n  }) => (error, request) => {\n    const errorObj = handleErrors(error, request);\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n    triggerSegmentEventFn({\n      type: 'segmentloaded',\n      segment\n    });\n    const newBytes =\n    // although responseText \"should\" exist, this guard serves to prevent an error being\n    // thrown for two primary cases:\n    // 1. the mime type override stops working, or is not implemented for a specific\n    //    browser\n    // 2. when using mock XHR libraries like sinon that do not allow the override behavior\n    responseType === 'arraybuffer' || !request.responseText ? request.response : stringToArrayBuffer(request.responseText.substring(segment.lastReachedChar || 0));\n    segment.stats = getRequestStats(request);\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(newBytes);\n    } else {\n      segment.bytes = new Uint8Array(newBytes);\n    }\n    return finishProcessingFn(null, segment);\n  };\n  const transmuxAndNotify = ({\n    segment,\n    bytes,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog,\n    triggerSegmentEventFn\n  }) => {\n    const fmp4Tracks = segment.map && segment.map.tracks || {};\n    const isMuxed = Boolean(fmp4Tracks.audio && fmp4Tracks.video); // Keep references to each function so we can null them out after we're done with them.\n    // One reason for this is that in the case of full segments, we want to trust start\n    // times from the probe, rather than the transmuxer.\n\n    let audioStartFn = timingInfoFn.bind(null, segment, 'audio', 'start');\n    const audioEndFn = timingInfoFn.bind(null, segment, 'audio', 'end');\n    let videoStartFn = timingInfoFn.bind(null, segment, 'video', 'start');\n    const videoEndFn = timingInfoFn.bind(null, segment, 'video', 'end');\n    const finish = () => transmux({\n      bytes,\n      transmuxer: segment.transmuxer,\n      audioAppendStart: segment.audioAppendStart,\n      gopsToAlignWith: segment.gopsToAlignWith,\n      remux: isMuxed,\n      onData: result => {\n        result.type = result.type === 'combined' ? 'video' : result.type;\n        dataFn(segment, result);\n      },\n      onTrackInfo: trackInfo => {\n        if (trackInfoFn) {\n          if (isMuxed) {\n            trackInfo.isMuxed = true;\n          }\n          trackInfoFn(segment, trackInfo);\n        }\n      },\n      onAudioTimingInfo: audioTimingInfo => {\n        // we only want the first start value we encounter\n        if (audioStartFn && typeof audioTimingInfo.start !== 'undefined') {\n          audioStartFn(audioTimingInfo.start);\n          audioStartFn = null;\n        } // we want to continually update the end time\n\n        if (audioEndFn && typeof audioTimingInfo.end !== 'undefined') {\n          audioEndFn(audioTimingInfo.end);\n        }\n      },\n      onVideoTimingInfo: videoTimingInfo => {\n        // we only want the first start value we encounter\n        if (videoStartFn && typeof videoTimingInfo.start !== 'undefined') {\n          videoStartFn(videoTimingInfo.start);\n          videoStartFn = null;\n        } // we want to continually update the end time\n\n        if (videoEndFn && typeof videoTimingInfo.end !== 'undefined') {\n          videoEndFn(videoTimingInfo.end);\n        }\n      },\n      onVideoSegmentTimingInfo: videoSegmentTimingInfo => {\n        const timingInfo = {\n          pts: {\n            start: videoSegmentTimingInfo.start.presentation,\n            end: videoSegmentTimingInfo.end.presentation\n          },\n          dts: {\n            start: videoSegmentTimingInfo.start.decode,\n            end: videoSegmentTimingInfo.end.decode\n          }\n        };\n        triggerSegmentEventFn({\n          type: 'segmenttransmuxingtiminginfoavailable',\n          segment,\n          timingInfo\n        });\n        videoSegmentTimingInfoFn(videoSegmentTimingInfo);\n      },\n      onAudioSegmentTimingInfo: audioSegmentTimingInfo => {\n        const timingInfo = {\n          pts: {\n            start: audioSegmentTimingInfo.start.pts,\n            end: audioSegmentTimingInfo.end.pts\n          },\n          dts: {\n            start: audioSegmentTimingInfo.start.dts,\n            end: audioSegmentTimingInfo.end.dts\n          }\n        };\n        triggerSegmentEventFn({\n          type: 'segmenttransmuxingtiminginfoavailable',\n          segment,\n          timingInfo\n        });\n        audioSegmentTimingInfoFn(audioSegmentTimingInfo);\n      },\n      onId3: (id3Frames, dispatchType) => {\n        id3Fn(segment, id3Frames, dispatchType);\n      },\n      onCaptions: captions => {\n        captionsFn(segment, [captions]);\n      },\n      isEndOfTimeline,\n      onEndedTimeline: () => {\n        endedTimelineFn();\n      },\n      onTransmuxerLog,\n      onDone: (result, error) => {\n        if (!doneFn) {\n          return;\n        }\n        result.type = result.type === 'combined' ? 'video' : result.type;\n        triggerSegmentEventFn({\n          type: 'segmenttransmuxingcomplete',\n          segment\n        });\n        doneFn(error, segment, result);\n      },\n      segment,\n      triggerSegmentEventFn\n    }); // In the transmuxer, we don't yet have the ability to extract a \"proper\" start time.\n    // Meaning cached frame data may corrupt our notion of where this segment\n    // really starts. To get around this, probe for the info needed.\n\n    workerCallback({\n      action: 'probeTs',\n      transmuxer: segment.transmuxer,\n      data: bytes,\n      baseStartTime: segment.baseStartTime,\n      callback: data => {\n        segment.bytes = bytes = data.data;\n        const probeResult = data.result;\n        if (probeResult) {\n          trackInfoFn(segment, {\n            hasAudio: probeResult.hasAudio,\n            hasVideo: probeResult.hasVideo,\n            isMuxed\n          });\n          trackInfoFn = null;\n        }\n        finish();\n      }\n    });\n  };\n  const handleSegmentBytes = ({\n    segment,\n    bytes,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog,\n    triggerSegmentEventFn\n  }) => {\n    let bytesAsUint8Array = new Uint8Array(bytes); // TODO:\n    // We should have a handler that fetches the number of bytes required\n    // to check if something is fmp4. This will allow us to save bandwidth\n    // because we can only exclude a playlist and abort requests\n    // by codec after trackinfo triggers.\n\n    if (isLikelyFmp4MediaSegment(bytesAsUint8Array)) {\n      segment.isFmp4 = true;\n      const {\n        tracks\n      } = segment.map;\n      const trackInfo = {\n        isFmp4: true,\n        hasVideo: !!tracks.video,\n        hasAudio: !!tracks.audio\n      }; // if we have a audio track, with a codec that is not set to\n      // encrypted audio\n\n      if (tracks.audio && tracks.audio.codec && tracks.audio.codec !== 'enca') {\n        trackInfo.audioCodec = tracks.audio.codec;\n      } // if we have a video track, with a codec that is not set to\n      // encrypted video\n\n      if (tracks.video && tracks.video.codec && tracks.video.codec !== 'encv') {\n        trackInfo.videoCodec = tracks.video.codec;\n      }\n      if (tracks.video && tracks.audio) {\n        trackInfo.isMuxed = true;\n      } // since we don't support appending fmp4 data on progress, we know we have the full\n      // segment here\n\n      trackInfoFn(segment, trackInfo); // The probe doesn't provide the segment end time, so only callback with the start\n      // time. The end time can be roughly calculated by the receiver using the duration.\n      //\n      // Note that the start time returned by the probe reflects the baseMediaDecodeTime, as\n      // that is the true start of the segment (where the playback engine should begin\n      // decoding).\n\n      const finishLoading = (captions, id3Frames) => {\n        // if the track still has audio at this point it is only possible\n        // for it to be audio only. See `tracks.video && tracks.audio` if statement\n        // above.\n        // we make sure to use segment.bytes here as that\n        dataFn(segment, {\n          data: bytesAsUint8Array,\n          type: trackInfo.hasAudio && !trackInfo.isMuxed ? 'audio' : 'video'\n        });\n        if (id3Frames && id3Frames.length) {\n          id3Fn(segment, id3Frames);\n        }\n        if (captions && captions.length) {\n          captionsFn(segment, captions);\n        }\n        doneFn(null, segment, {});\n      };\n      workerCallback({\n        action: 'probeMp4StartTime',\n        timescales: segment.map.timescales,\n        data: bytesAsUint8Array,\n        transmuxer: segment.transmuxer,\n        callback: ({\n          data,\n          startTime\n        }) => {\n          // transfer bytes back to us\n          bytes = data.buffer;\n          segment.bytes = bytesAsUint8Array = data;\n          if (trackInfo.hasAudio && !trackInfo.isMuxed) {\n            timingInfoFn(segment, 'audio', 'start', startTime);\n          }\n          if (trackInfo.hasVideo) {\n            timingInfoFn(segment, 'video', 'start', startTime);\n          }\n          workerCallback({\n            action: 'probeEmsgID3',\n            data: bytesAsUint8Array,\n            transmuxer: segment.transmuxer,\n            offset: startTime,\n            callback: ({\n              emsgData,\n              id3Frames\n            }) => {\n              // transfer bytes back to us\n              bytes = emsgData.buffer;\n              segment.bytes = bytesAsUint8Array = emsgData; // Run through the CaptionParser in case there are captions.\n              // Initialize CaptionParser if it hasn't been yet\n\n              if (!tracks.video || !emsgData.byteLength || !segment.transmuxer) {\n                finishLoading(undefined, id3Frames);\n                return;\n              }\n              workerCallback({\n                action: 'pushMp4Captions',\n                endAction: 'mp4Captions',\n                transmuxer: segment.transmuxer,\n                data: bytesAsUint8Array,\n                timescales: segment.map.timescales,\n                trackIds: [tracks.video.id],\n                callback: message => {\n                  // transfer bytes back to us\n                  bytes = message.data.buffer;\n                  segment.bytes = bytesAsUint8Array = message.data;\n                  message.logs.forEach(function (log) {\n                    onTransmuxerLog(merge(log, {\n                      stream: 'mp4CaptionParser'\n                    }));\n                  });\n                  finishLoading(message.captions, id3Frames);\n                }\n              });\n            }\n          });\n        }\n      });\n      return;\n    } // VTT or other segments that don't need processing\n\n    if (!segment.transmuxer) {\n      doneFn(null, segment, {});\n      return;\n    }\n    if (typeof segment.container === 'undefined') {\n      segment.container = detectContainerForBytes(bytesAsUint8Array);\n    }\n    if (segment.container !== 'ts' && segment.container !== 'aac') {\n      trackInfoFn(segment, {\n        hasAudio: false,\n        hasVideo: false\n      });\n      doneFn(null, segment, {});\n      return;\n    } // ts or aac\n\n    transmuxAndNotify({\n      segment,\n      bytes,\n      trackInfoFn,\n      timingInfoFn,\n      videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn,\n      id3Fn,\n      captionsFn,\n      isEndOfTimeline,\n      endedTimelineFn,\n      dataFn,\n      doneFn,\n      onTransmuxerLog,\n      triggerSegmentEventFn\n    });\n  };\n  const decrypt = function ({\n    id,\n    key,\n    encryptedBytes,\n    decryptionWorker,\n    segment,\n    doneFn\n  }, callback) {\n    const decryptionHandler = event => {\n      if (event.data.source === id) {\n        decryptionWorker.removeEventListener('message', decryptionHandler);\n        const decrypted = event.data.decrypted;\n        callback(new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength));\n      }\n    };\n    decryptionWorker.onerror = () => {\n      const message = 'An error occurred in the decryption worker';\n      const segmentInfo = segmentInfoPayload({\n        segment\n      });\n      const decryptError = {\n        message,\n        metadata: {\n          error: new Error(message),\n          errorType: videojs.Error.StreamingFailedToDecryptSegment,\n          segmentInfo,\n          keyInfo: {\n            uri: segment.key.resolvedUri || segment.map.key.resolvedUri\n          }\n        }\n      };\n      doneFn(decryptError, segment);\n    };\n    decryptionWorker.addEventListener('message', decryptionHandler);\n    let keyBytes;\n    if (key.bytes.slice) {\n      keyBytes = key.bytes.slice();\n    } else {\n      keyBytes = new Uint32Array(Array.prototype.slice.call(key.bytes));\n    } // incrementally decrypt the bytes\n\n    decryptionWorker.postMessage(createTransferableMessage({\n      source: id,\n      encrypted: encryptedBytes,\n      key: keyBytes,\n      iv: key.iv\n    }), [encryptedBytes.buffer, keyBytes.buffer]);\n  };\n  /**\n   * Decrypt the segment via the decryption web worker\n   *\n   * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n   *                                       routines\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} trackInfoFn - a callback that receives track info\n   * @param {Function} timingInfoFn - a callback that receives timing info\n   * @param {Function} videoSegmentTimingInfoFn\n   *                   a callback that receives video timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} audioSegmentTimingInfoFn\n   *                   a callback that receives audio timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {boolean}  isEndOfTimeline\n   *                   true if this segment represents the last segment in a timeline\n   * @param {Function} endedTimelineFn\n   *                   a callback made when a timeline is ended, will only be called if\n   *                   isEndOfTimeline is true\n   * @param {Function} dataFn - a callback that is executed when segment bytes are available\n   *                            and ready to use\n   * @param {Function} doneFn - a callback that is executed after decryption has completed\n   */\n\n  const decryptSegment = ({\n    decryptionWorker,\n    segment,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog,\n    triggerSegmentEventFn\n  }) => {\n    triggerSegmentEventFn({\n      type: 'segmentdecryptionstart'\n    });\n    decrypt({\n      id: segment.requestId,\n      key: segment.key,\n      encryptedBytes: segment.encryptedBytes,\n      decryptionWorker,\n      segment,\n      doneFn\n    }, decryptedBytes => {\n      segment.bytes = decryptedBytes;\n      triggerSegmentEventFn({\n        type: 'segmentdecryptioncomplete',\n        segment\n      });\n      handleSegmentBytes({\n        segment,\n        bytes: segment.bytes,\n        trackInfoFn,\n        timingInfoFn,\n        videoSegmentTimingInfoFn,\n        audioSegmentTimingInfoFn,\n        id3Fn,\n        captionsFn,\n        isEndOfTimeline,\n        endedTimelineFn,\n        dataFn,\n        doneFn,\n        onTransmuxerLog,\n        triggerSegmentEventFn\n      });\n    });\n  };\n  /**\n   * This function waits for all XHRs to finish (with either success or failure)\n   * before continueing processing via it's callback. The function gathers errors\n   * from each request into a single errors array so that the error status for\n   * each request can be examined later.\n   *\n   * @param {Object} activeXhrs - an object that tracks all XHR requests\n   * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n   *                                       routines\n   * @param {Function} trackInfoFn - a callback that receives track info\n   * @param {Function} timingInfoFn - a callback that receives timing info\n   * @param {Function} videoSegmentTimingInfoFn\n   *                   a callback that receives video timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} audioSegmentTimingInfoFn\n   *                   a callback that receives audio timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} id3Fn - a callback that receives ID3 metadata\n   * @param {Function} captionsFn - a callback that receives captions\n   * @param {boolean}  isEndOfTimeline\n   *                   true if this segment represents the last segment in a timeline\n   * @param {Function} endedTimelineFn\n   *                   a callback made when a timeline is ended, will only be called if\n   *                   isEndOfTimeline is true\n   * @param {Function} dataFn - a callback that is executed when segment bytes are available\n   *                            and ready to use\n   * @param {Function} doneFn - a callback that is executed after all resources have been\n   *                            downloaded and any decryption completed\n   */\n\n  const waitForCompletion = ({\n    activeXhrs,\n    decryptionWorker,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog,\n    triggerSegmentEventFn\n  }) => {\n    let count = 0;\n    let didError = false;\n    return (error, segment) => {\n      if (didError) {\n        return;\n      }\n      if (error) {\n        didError = true; // If there are errors, we have to abort any outstanding requests\n\n        abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n        // handle the aborted events from those requests, there are some cases where we may\n        // never get an aborted event. For instance, if the network connection is lost and\n        // there were two requests, the first may have triggered an error immediately, while\n        // the second request remains unsent. In that case, the aborted algorithm will not\n        // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n        //\n        // We also can't rely on the ready state of the XHR, since the request that\n        // triggered the connection error may also show as a ready state of 0 (unsent).\n        // Therefore, we have to finish this group of requests immediately after the first\n        // seen error.\n\n        return doneFn(error, segment);\n      }\n      count += 1;\n      if (count === activeXhrs.length) {\n        const segmentFinish = function () {\n          if (segment.encryptedBytes) {\n            return decryptSegment({\n              decryptionWorker,\n              segment,\n              trackInfoFn,\n              timingInfoFn,\n              videoSegmentTimingInfoFn,\n              audioSegmentTimingInfoFn,\n              id3Fn,\n              captionsFn,\n              isEndOfTimeline,\n              endedTimelineFn,\n              dataFn,\n              doneFn,\n              onTransmuxerLog,\n              triggerSegmentEventFn\n            });\n          } // Otherwise, everything is ready just continue\n\n          handleSegmentBytes({\n            segment,\n            bytes: segment.bytes,\n            trackInfoFn,\n            timingInfoFn,\n            videoSegmentTimingInfoFn,\n            audioSegmentTimingInfoFn,\n            id3Fn,\n            captionsFn,\n            isEndOfTimeline,\n            endedTimelineFn,\n            dataFn,\n            doneFn,\n            onTransmuxerLog,\n            triggerSegmentEventFn\n          });\n        }; // Keep track of when *all* of the requests have completed\n\n        segment.endOfAllRequests = Date.now();\n        if (segment.map && segment.map.encryptedBytes && !segment.map.bytes) {\n          triggerSegmentEventFn({\n            type: 'segmentdecryptionstart',\n            segment\n          });\n          return decrypt({\n            decryptionWorker,\n            // add -init to the \"id\" to differentiate between segment\n            // and init segment decryption, just in case they happen\n            // at the same time at some point in the future.\n            id: segment.requestId + '-init',\n            encryptedBytes: segment.map.encryptedBytes,\n            key: segment.map.key,\n            segment,\n            doneFn\n          }, decryptedBytes => {\n            segment.map.bytes = decryptedBytes;\n            triggerSegmentEventFn({\n              type: 'segmentdecryptioncomplete',\n              segment\n            });\n            parseInitSegment(segment, parseError => {\n              if (parseError) {\n                abortAll(activeXhrs);\n                return doneFn(parseError, segment);\n              }\n              segmentFinish();\n            });\n          });\n        }\n        segmentFinish();\n      }\n    };\n  };\n  /**\n   * Calls the abort callback if any request within the batch was aborted. Will only call\n   * the callback once per batch of requests, even if multiple were aborted.\n   *\n   * @param {Object} loadendState - state to check to see if the abort function was called\n   * @param {Function} abortFn - callback to call for abort\n   */\n\n  const handleLoadEnd = ({\n    loadendState,\n    abortFn\n  }) => event => {\n    const request = event.target;\n    if (request.aborted && abortFn && !loadendState.calledAbortFn) {\n      abortFn();\n      loadendState.calledAbortFn = true;\n    }\n  };\n  /**\n   * Simple progress event callback handler that gathers some stats before\n   * executing a provided callback with the `segment` object\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} progressFn - a callback that is executed each time a progress event\n   *                                is received\n   * @param {Function} trackInfoFn - a callback that receives track info\n   * @param {Function} timingInfoFn - a callback that receives timing info\n   * @param {Function} videoSegmentTimingInfoFn\n   *                   a callback that receives video timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} audioSegmentTimingInfoFn\n   *                   a callback that receives audio timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {boolean}  isEndOfTimeline\n   *                   true if this segment represents the last segment in a timeline\n   * @param {Function} endedTimelineFn\n   *                   a callback made when a timeline is ended, will only be called if\n   *                   isEndOfTimeline is true\n   * @param {Function} dataFn - a callback that is executed when segment bytes are available\n   *                            and ready to use\n   * @param {Event} event - the progress event object from XMLHttpRequest\n   */\n\n  const handleProgress = ({\n    segment,\n    progressFn,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn\n  }) => event => {\n    const request = event.target;\n    if (request.aborted) {\n      return;\n    }\n    segment.stats = merge(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n    return progressFn(event, segment);\n  };\n  /**\n   * Load all resources and does any processing necessary for a media-segment\n   *\n   * Features:\n   *   decrypts the media-segment if it has a key uri and an iv\n   *   aborts *all* requests if *any* one request fails\n   *\n   * The segment object, at minimum, has the following format:\n   * {\n   *   resolvedUri: String,\n   *   [transmuxer]: Object,\n   *   [byterange]: {\n   *     offset: Number,\n   *     length: Number\n   *   },\n   *   [key]: {\n   *     resolvedUri: String\n   *     [byterange]: {\n   *       offset: Number,\n   *       length: Number\n   *     },\n   *     iv: {\n   *       bytes: Uint32Array\n   *     }\n   *   },\n   *   [map]: {\n   *     resolvedUri: String,\n   *     [byterange]: {\n   *       offset: Number,\n   *       length: Number\n   *     },\n   *     [bytes]: Uint8Array\n   *   }\n   * }\n   * ...where [name] denotes optional properties\n   *\n   * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n   * @param {Object} xhrOptions - the base options to provide to all xhr requests\n   * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n   *                                       decryption routines\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} abortFn - a callback called (only once) if any piece of a request was\n   *                             aborted\n   * @param {Function} progressFn - a callback that receives progress events from the main\n   *                                segment's xhr request\n   * @param {Function} trackInfoFn - a callback that receives track info\n   * @param {Function} timingInfoFn - a callback that receives timing info\n   * @param {Function} videoSegmentTimingInfoFn\n   *                   a callback that receives video timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} audioSegmentTimingInfoFn\n   *                   a callback that receives audio timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} id3Fn - a callback that receives ID3 metadata\n   * @param {Function} captionsFn - a callback that receives captions\n   * @param {boolean}  isEndOfTimeline\n   *                   true if this segment represents the last segment in a timeline\n   * @param {Function} endedTimelineFn\n   *                   a callback made when a timeline is ended, will only be called if\n   *                   isEndOfTimeline is true\n   * @param {Function} dataFn - a callback that receives data from the main segment's xhr\n   *                            request, transmuxed if needed\n   * @param {Function} doneFn - a callback that is executed only once all requests have\n   *                            succeeded or failed\n   * @return {Function} a function that, when invoked, immediately aborts all\n   *                     outstanding requests\n   */\n\n  const mediaSegmentRequest = ({\n    xhr,\n    xhrOptions,\n    decryptionWorker,\n    segment,\n    abortFn,\n    progressFn,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog,\n    triggerSegmentEventFn\n  }) => {\n    const activeXhrs = [];\n    const finishProcessingFn = waitForCompletion({\n      activeXhrs,\n      decryptionWorker,\n      trackInfoFn,\n      timingInfoFn,\n      videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn,\n      id3Fn,\n      captionsFn,\n      isEndOfTimeline,\n      endedTimelineFn,\n      dataFn,\n      doneFn,\n      onTransmuxerLog,\n      triggerSegmentEventFn\n    }); // optionally, request the decryption key\n\n    if (segment.key && !segment.key.bytes) {\n      const objects = [segment.key];\n      if (segment.map && !segment.map.bytes && segment.map.key && segment.map.key.resolvedUri === segment.key.resolvedUri) {\n        objects.push(segment.map.key);\n      }\n      const keyRequestOptions = merge(xhrOptions, {\n        uri: segment.key.resolvedUri,\n        responseType: 'arraybuffer',\n        requestType: 'segment-key'\n      });\n      const keyRequestCallback = handleKeyResponse(segment, objects, finishProcessingFn, triggerSegmentEventFn);\n      const keyInfo = {\n        uri: segment.key.resolvedUri\n      };\n      triggerSegmentEventFn({\n        type: 'segmentkeyloadstart',\n        segment,\n        keyInfo\n      });\n      const keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n      activeXhrs.push(keyXhr);\n    } // optionally, request the associated media init segment\n\n    if (segment.map && !segment.map.bytes) {\n      const differentMapKey = segment.map.key && (!segment.key || segment.key.resolvedUri !== segment.map.key.resolvedUri);\n      if (differentMapKey) {\n        const mapKeyRequestOptions = merge(xhrOptions, {\n          uri: segment.map.key.resolvedUri,\n          responseType: 'arraybuffer',\n          requestType: 'segment-key'\n        });\n        const mapKeyRequestCallback = handleKeyResponse(segment, [segment.map.key], finishProcessingFn, triggerSegmentEventFn);\n        const keyInfo = {\n          uri: segment.map.key.resolvedUri\n        };\n        triggerSegmentEventFn({\n          type: 'segmentkeyloadstart',\n          segment,\n          keyInfo\n        });\n        const mapKeyXhr = xhr(mapKeyRequestOptions, mapKeyRequestCallback);\n        activeXhrs.push(mapKeyXhr);\n      }\n      const initSegmentOptions = merge(xhrOptions, {\n        uri: segment.map.resolvedUri,\n        responseType: 'arraybuffer',\n        headers: segmentXhrHeaders(segment.map),\n        requestType: 'segment-media-initialization'\n      });\n      const initSegmentRequestCallback = handleInitSegmentResponse({\n        segment,\n        finishProcessingFn,\n        triggerSegmentEventFn\n      });\n      triggerSegmentEventFn({\n        type: 'segmentloadstart',\n        segment\n      });\n      const initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n      activeXhrs.push(initSegmentXhr);\n    }\n    const segmentRequestOptions = merge(xhrOptions, {\n      uri: segment.part && segment.part.resolvedUri || segment.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment),\n      requestType: 'segment'\n    });\n    const segmentRequestCallback = handleSegmentResponse({\n      segment,\n      finishProcessingFn,\n      responseType: segmentRequestOptions.responseType,\n      triggerSegmentEventFn\n    });\n    triggerSegmentEventFn({\n      type: 'segmentloadstart',\n      segment\n    });\n    const segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n    segmentXhr.addEventListener('progress', handleProgress({\n      segment,\n      progressFn,\n      trackInfoFn,\n      timingInfoFn,\n      videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn,\n      id3Fn,\n      captionsFn,\n      isEndOfTimeline,\n      endedTimelineFn,\n      dataFn\n    }));\n    activeXhrs.push(segmentXhr); // since all parts of the request must be considered, but should not make callbacks\n    // multiple times, provide a shared state object\n\n    const loadendState = {};\n    activeXhrs.forEach(activeXhr => {\n      activeXhr.addEventListener('loadend', handleLoadEnd({\n        loadendState,\n        abortFn\n      }));\n    });\n    return () => abortAll(activeXhrs);\n  };\n\n  /**\n   * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n   * codec strings, or translating codec strings into objects that can be examined.\n   */\n  const logFn$1 = logger('CodecUtils');\n  /**\n   * Returns a set of codec strings parsed from the playlist or the default\n   * codec strings if no codecs were specified in the playlist\n   *\n   * @param {Playlist} media the current media playlist\n   * @return {Object} an object with the video and audio codecs\n   */\n\n  const getCodecs = function (media) {\n    // if the codecs were explicitly specified, use them instead of the\n    // defaults\n    const mediaAttributes = media.attributes || {};\n    if (mediaAttributes.CODECS) {\n      return parseCodecs(mediaAttributes.CODECS);\n    }\n  };\n  const isMaat = (main, media) => {\n    const mediaAttributes = media.attributes || {};\n    return main && main.mediaGroups && main.mediaGroups.AUDIO && mediaAttributes.AUDIO && main.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n  };\n  const isMuxed = (main, media) => {\n    if (!isMaat(main, media)) {\n      return true;\n    }\n    const mediaAttributes = media.attributes || {};\n    const audioGroup = main.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n    for (const groupId in audioGroup) {\n      // If an audio group has a URI (the case for HLS, as HLS will use external playlists),\n      // or there are listed playlists (the case for DASH, as the manifest will have already\n      // provided all of the details necessary to generate the audio playlist, as opposed to\n      // HLS' externally requested playlists), then the content is demuxed.\n      if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n        return true;\n      }\n    }\n    return false;\n  };\n  const unwrapCodecList = function (codecList) {\n    const codecs = {};\n    codecList.forEach(({\n      mediaType,\n      type,\n      details\n    }) => {\n      codecs[mediaType] = codecs[mediaType] || [];\n      codecs[mediaType].push(translateLegacyCodec(`${type}${details}`));\n    });\n    Object.keys(codecs).forEach(function (mediaType) {\n      if (codecs[mediaType].length > 1) {\n        logFn$1(`multiple ${mediaType} codecs found as attributes: ${codecs[mediaType].join(', ')}. Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs.`);\n        codecs[mediaType] = null;\n        return;\n      }\n      codecs[mediaType] = codecs[mediaType][0];\n    });\n    return codecs;\n  };\n  const codecCount = function (codecObj) {\n    let count = 0;\n    if (codecObj.audio) {\n      count++;\n    }\n    if (codecObj.video) {\n      count++;\n    }\n    return count;\n  };\n  /**\n   * Calculates the codec strings for a working configuration of\n   * SourceBuffers to play variant streams in a main playlist. If\n   * there is no possible working configuration, an empty object will be\n   * returned.\n   *\n   * @param main {Object} the m3u8 object for the main playlist\n   * @param media {Object} the m3u8 object for the variant playlist\n   * @return {Object} the codec strings.\n   *\n   * @private\n   */\n\n  const codecsForPlaylist = function (main, media) {\n    const mediaAttributes = media.attributes || {};\n    const codecInfo = unwrapCodecList(getCodecs(media) || []); // HLS with multiple-audio tracks must always get an audio codec.\n    // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n    if (isMaat(main, media) && !codecInfo.audio) {\n      if (!isMuxed(main, media)) {\n        // It is possible for codecs to be specified on the audio media group playlist but\n        // not on the rendition playlist. This is mostly the case for DASH, where audio and\n        // video are always separate (and separately specified).\n        const defaultCodecs = unwrapCodecList(codecsFromDefault(main, mediaAttributes.AUDIO) || []);\n        if (defaultCodecs.audio) {\n          codecInfo.audio = defaultCodecs.audio;\n        }\n      }\n    }\n    return codecInfo;\n  };\n  const logFn = logger('PlaylistSelector');\n  const representationToString = function (representation) {\n    if (!representation || !representation.playlist) {\n      return;\n    }\n    const playlist = representation.playlist;\n    return JSON.stringify({\n      id: playlist.id,\n      bandwidth: representation.bandwidth,\n      width: representation.width,\n      height: representation.height,\n      codecs: playlist.attributes && playlist.attributes.CODECS || ''\n    });\n  }; // Utilities\n\n  /**\n   * Returns the CSS value for the specified property on an element\n   * using `getComputedStyle`. Firefox has a long-standing issue where\n   * getComputedStyle() may return null when running in an iframe with\n   * `display: none`.\n   *\n   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n   * @param {HTMLElement} el the htmlelement to work on\n   * @param {string} the proprety to get the style for\n   */\n\n  const safeGetComputedStyle = function (el, property) {\n    if (!el) {\n      return '';\n    }\n    const result = window.getComputedStyle(el);\n    if (!result) {\n      return '';\n    }\n    return result[property];\n  };\n  /**\n   * Resuable stable sort function\n   *\n   * @param {Playlists} array\n   * @param {Function} sortFn Different comparators\n   * @function stableSort\n   */\n\n  const stableSort = function (array, sortFn) {\n    const newArray = array.slice();\n    array.sort(function (left, right) {\n      const cmp = sortFn(left, right);\n      if (cmp === 0) {\n        return newArray.indexOf(left) - newArray.indexOf(right);\n      }\n      return cmp;\n    });\n  };\n  /**\n   * A comparator function to sort two playlist object by bandwidth.\n   *\n   * @param {Object} left a media playlist object\n   * @param {Object} right a media playlist object\n   * @return {number} Greater than zero if the bandwidth attribute of\n   * left is greater than the corresponding attribute of right. Less\n   * than zero if the bandwidth of right is greater than left and\n   * exactly zero if the two are equal.\n   */\n\n  const comparePlaylistBandwidth = function (left, right) {\n    let leftBandwidth;\n    let rightBandwidth;\n    if (left.attributes.BANDWIDTH) {\n      leftBandwidth = left.attributes.BANDWIDTH;\n    }\n    leftBandwidth = leftBandwidth || window.Number.MAX_VALUE;\n    if (right.attributes.BANDWIDTH) {\n      rightBandwidth = right.attributes.BANDWIDTH;\n    }\n    rightBandwidth = rightBandwidth || window.Number.MAX_VALUE;\n    return leftBandwidth - rightBandwidth;\n  };\n  /**\n   * A comparator function to sort two playlist object by resolution (width).\n   *\n   * @param {Object} left a media playlist object\n   * @param {Object} right a media playlist object\n   * @return {number} Greater than zero if the resolution.width attribute of\n   * left is greater than the corresponding attribute of right. Less\n   * than zero if the resolution.width of right is greater than left and\n   * exactly zero if the two are equal.\n   */\n\n  const comparePlaylistResolution = function (left, right) {\n    let leftWidth;\n    let rightWidth;\n    if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n      leftWidth = left.attributes.RESOLUTION.width;\n    }\n    leftWidth = leftWidth || window.Number.MAX_VALUE;\n    if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n      rightWidth = right.attributes.RESOLUTION.width;\n    }\n    rightWidth = rightWidth || window.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n    // have the same media dimensions/ resolution\n\n    if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n      return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n    }\n    return leftWidth - rightWidth;\n  };\n  /**\n   * Chooses the appropriate media playlist based on bandwidth and player size\n   *\n   * @param {Object} main\n   *        Object representation of the main manifest\n   * @param {number} playerBandwidth\n   *        Current calculated bandwidth of the player\n   * @param {number} playerWidth\n   *        Current width of the player element (should account for the device pixel ratio)\n   * @param {number} playerHeight\n   *        Current height of the player element (should account for the device pixel ratio)\n   * @param {boolean} limitRenditionByPlayerDimensions\n   *        True if the player width and height should be used during the selection, false otherwise\n   * @param {Object} playlistController\n   *        the current playlistController object\n   * @return {Playlist} the highest bitrate playlist less than the\n   * currently detected bandwidth, accounting for some amount of\n   * bandwidth variance\n   */\n\n  let simpleSelector = function (main, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions, playlistController) {\n    // If we end up getting called before `main` is available, exit early\n    if (!main) {\n      return;\n    }\n    const options = {\n      bandwidth: playerBandwidth,\n      width: playerWidth,\n      height: playerHeight,\n      limitRenditionByPlayerDimensions\n    };\n    let playlists = main.playlists; // if playlist is audio only, select between currently active audio group playlists.\n\n    if (Playlist.isAudioOnly(main)) {\n      playlists = playlistController.getAudioTrackPlaylists_(); // add audioOnly to options so that we log audioOnly: true\n      // at the buttom of this function for debugging.\n\n      options.audioOnly = true;\n    } // convert the playlists to an intermediary representation to make comparisons easier\n\n    let sortedPlaylistReps = playlists.map(playlist => {\n      let bandwidth;\n      const width = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n      const height = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n      bandwidth = playlist.attributes && playlist.attributes.BANDWIDTH;\n      bandwidth = bandwidth || window.Number.MAX_VALUE;\n      return {\n        bandwidth,\n        width,\n        height,\n        playlist\n      };\n    });\n    stableSort(sortedPlaylistReps, (left, right) => left.bandwidth - right.bandwidth); // filter out any playlists that have been excluded due to\n    // incompatible configurations\n\n    sortedPlaylistReps = sortedPlaylistReps.filter(rep => !Playlist.isIncompatible(rep.playlist)); // filter out any playlists that have been disabled manually through the representations\n    // api or excluded temporarily due to playback errors.\n\n    let enabledPlaylistReps = sortedPlaylistReps.filter(rep => Playlist.isEnabled(rep.playlist));\n    if (!enabledPlaylistReps.length) {\n      // if there are no enabled playlists, then they have all been excluded or disabled\n      // by the user through the representations api. In this case, ignore exclusion and\n      // fallback to what the user wants by using playlists the user has not disabled.\n      enabledPlaylistReps = sortedPlaylistReps.filter(rep => !Playlist.isDisabled(rep.playlist));\n    } // filter out any variant that has greater effective bitrate\n    // than the current estimated bandwidth\n\n    const bandwidthPlaylistReps = enabledPlaylistReps.filter(rep => rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth);\n    let highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n    // and then taking the very first element\n\n    const bandwidthBestRep = bandwidthPlaylistReps.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n    if (limitRenditionByPlayerDimensions === false) {\n      const chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n      if (chosenRep && chosenRep.playlist) {\n        let type = 'sortedPlaylistReps';\n        if (bandwidthBestRep) {\n          type = 'bandwidthBestRep';\n        }\n        if (enabledPlaylistReps[0]) {\n          type = 'enabledPlaylistReps';\n        }\n        logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`, options);\n        return chosenRep.playlist;\n      }\n      logFn('could not choose a playlist with options', options);\n      return null;\n    } // filter out playlists without resolution information\n\n    const haveResolution = bandwidthPlaylistReps.filter(rep => rep.width && rep.height); // sort variants by resolution\n\n    stableSort(haveResolution, (left, right) => left.width - right.width); // if we have the exact resolution as the player use it\n\n    const resolutionBestRepList = haveResolution.filter(rep => rep.width === playerWidth && rep.height === playerHeight);\n    highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n    const resolutionBestRep = resolutionBestRepList.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0];\n    let resolutionPlusOneList;\n    let resolutionPlusOneSmallest;\n    let resolutionPlusOneRep; // find the smallest variant that is larger than the player\n    // if there is no match of exact resolution\n\n    if (!resolutionBestRep) {\n      resolutionPlusOneList = haveResolution.filter(rep => rep.width > playerWidth || rep.height > playerHeight); // find all the variants have the same smallest resolution\n\n      resolutionPlusOneSmallest = resolutionPlusOneList.filter(rep => rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height); // ensure that we also pick the highest bandwidth variant that\n      // is just-larger-than the video player\n\n      highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n      resolutionPlusOneRep = resolutionPlusOneSmallest.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0];\n    }\n    let leastPixelDiffRep; // If this selector proves to be better than others,\n    // resolutionPlusOneRep and resolutionBestRep and all\n    // the code involving them should be removed.\n\n    if (playlistController.leastPixelDiffSelector) {\n      // find the variant that is closest to the player's pixel size\n      const leastPixelDiffList = haveResolution.map(rep => {\n        rep.pixelDiff = Math.abs(rep.width - playerWidth) + Math.abs(rep.height - playerHeight);\n        return rep;\n      }); // get the highest bandwidth, closest resolution playlist\n\n      stableSort(leastPixelDiffList, (left, right) => {\n        // sort by highest bandwidth if pixelDiff is the same\n        if (left.pixelDiff === right.pixelDiff) {\n          return right.bandwidth - left.bandwidth;\n        }\n        return left.pixelDiff - right.pixelDiff;\n      });\n      leastPixelDiffRep = leastPixelDiffList[0];\n    } // fallback chain of variants\n\n    const chosenRep = leastPixelDiffRep || resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n    if (chosenRep && chosenRep.playlist) {\n      let type = 'sortedPlaylistReps';\n      if (leastPixelDiffRep) {\n        type = 'leastPixelDiffRep';\n      } else if (resolutionPlusOneRep) {\n        type = 'resolutionPlusOneRep';\n      } else if (resolutionBestRep) {\n        type = 'resolutionBestRep';\n      } else if (bandwidthBestRep) {\n        type = 'bandwidthBestRep';\n      } else if (enabledPlaylistReps[0]) {\n        type = 'enabledPlaylistReps';\n      }\n      logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`, options);\n      return chosenRep.playlist;\n    }\n    logFn('could not choose a playlist with options', options);\n    return null;\n  };\n\n  /**\n   * Chooses the appropriate media playlist based on the most recent\n   * bandwidth estimate and the player size.\n   *\n   * Expects to be called within the context of an instance of VhsHandler\n   *\n   * @return {Playlist} the highest bitrate playlist less than the\n   * currently detected bandwidth, accounting for some amount of\n   * bandwidth variance\n   */\n\n  const lastBandwidthSelector = function () {\n    let pixelRatio = this.useDevicePixelRatio ? window.devicePixelRatio || 1 : 1;\n    if (!isNaN(this.customPixelRatio)) {\n      pixelRatio = this.customPixelRatio;\n    }\n    return simpleSelector(this.playlists.main, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.playlistController_);\n  };\n  /**\n   * Chooses the appropriate media playlist based on an\n   * exponential-weighted moving average of the bandwidth after\n   * filtering for player size.\n   *\n   * Expects to be called within the context of an instance of VhsHandler\n   *\n   * @param {number} decay - a number between 0 and 1. Higher values of\n   * this parameter will cause previous bandwidth estimates to lose\n   * significance more quickly.\n   * @return {Function} a function which can be invoked to create a new\n   * playlist selector function.\n   * @see https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n   */\n\n  const movingAverageBandwidthSelector = function (decay) {\n    let average = -1;\n    let lastSystemBandwidth = -1;\n    if (decay < 0 || decay > 1) {\n      throw new Error('Moving average bandwidth decay must be between 0 and 1.');\n    }\n    return function () {\n      let pixelRatio = this.useDevicePixelRatio ? window.devicePixelRatio || 1 : 1;\n      if (!isNaN(this.customPixelRatio)) {\n        pixelRatio = this.customPixelRatio;\n      }\n      if (average < 0) {\n        average = this.systemBandwidth;\n        lastSystemBandwidth = this.systemBandwidth;\n      } // stop the average value from decaying for every 250ms\n      // when the systemBandwidth is constant\n      // and\n      // stop average from setting to a very low value when the\n      // systemBandwidth becomes 0 in case of chunk cancellation\n\n      if (this.systemBandwidth > 0 && this.systemBandwidth !== lastSystemBandwidth) {\n        average = decay * this.systemBandwidth + (1 - decay) * average;\n        lastSystemBandwidth = this.systemBandwidth;\n      }\n      return simpleSelector(this.playlists.main, average, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.playlistController_);\n    };\n  };\n  /**\n   * Chooses the appropriate media playlist based on the potential to rebuffer\n   *\n   * @param {Object} settings\n   *        Object of information required to use this selector\n   * @param {Object} settings.main\n   *        Object representation of the main manifest\n   * @param {number} settings.currentTime\n   *        The current time of the player\n   * @param {number} settings.bandwidth\n   *        Current measured bandwidth\n   * @param {number} settings.duration\n   *        Duration of the media\n   * @param {number} settings.segmentDuration\n   *        Segment duration to be used in round trip time calculations\n   * @param {number} settings.timeUntilRebuffer\n   *        Time left in seconds until the player has to rebuffer\n   * @param {number} settings.currentTimeline\n   *        The current timeline segments are being loaded from\n   * @param {SyncController} settings.syncController\n   *        SyncController for determining if we have a sync point for a given playlist\n   * @return {Object|null}\n   *         {Object} return.playlist\n   *         The highest bandwidth playlist with the least amount of rebuffering\n   *         {Number} return.rebufferingImpact\n   *         The amount of time in seconds switching to this playlist will rebuffer. A\n   *         negative value means that switching will cause zero rebuffering.\n   */\n\n  const minRebufferMaxBandwidthSelector = function (settings) {\n    const {\n      main,\n      currentTime,\n      bandwidth,\n      duration,\n      segmentDuration,\n      timeUntilRebuffer,\n      currentTimeline,\n      syncController\n    } = settings; // filter out any playlists that have been excluded due to\n    // incompatible configurations\n\n    const compatiblePlaylists = main.playlists.filter(playlist => !Playlist.isIncompatible(playlist)); // filter out any playlists that have been disabled manually through the representations\n    // api or excluded temporarily due to playback errors.\n\n    let enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n    if (!enabledPlaylists.length) {\n      // if there are no enabled playlists, then they have all been excluded or disabled\n      // by the user through the representations api. In this case, ignore exclusion and\n      // fallback to what the user wants by using playlists the user has not disabled.\n      enabledPlaylists = compatiblePlaylists.filter(playlist => !Playlist.isDisabled(playlist));\n    }\n    const bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n    const rebufferingEstimates = bandwidthPlaylists.map(playlist => {\n      const syncPoint = syncController.getSyncPoint(playlist, duration, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n      // sync request first. This will double the request time\n\n      const numRequests = syncPoint ? 1 : 2;\n      const requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n      const rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n      return {\n        playlist,\n        rebufferingImpact\n      };\n    });\n    const noRebufferingPlaylists = rebufferingEstimates.filter(estimate => estimate.rebufferingImpact <= 0); // Sort by bandwidth DESC\n\n    stableSort(noRebufferingPlaylists, (a, b) => comparePlaylistBandwidth(b.playlist, a.playlist));\n    if (noRebufferingPlaylists.length) {\n      return noRebufferingPlaylists[0];\n    }\n    stableSort(rebufferingEstimates, (a, b) => a.rebufferingImpact - b.rebufferingImpact);\n    return rebufferingEstimates[0] || null;\n  };\n  /**\n   * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n   * one with video.  If no renditions with video exist, return the lowest audio rendition.\n   *\n   * Expects to be called within the context of an instance of VhsHandler\n   *\n   * @return {Object|null}\n   *         {Object} return.playlist\n   *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n   *         exists pick the lowest audio rendition.\n   */\n\n  const lowestBitrateCompatibleVariantSelector = function () {\n    // filter out any playlists that have been excluded due to\n    // incompatible configurations or playback errors\n    const playlists = this.playlists.main.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n    stableSort(playlists, (a, b) => comparePlaylistBandwidth(a, b)); // Parse and assume that playlists with no video codec have no video\n    // (this is not necessarily true, although it is generally true).\n    //\n    // If an entire manifest has no valid videos everything will get filtered\n    // out.\n\n    const playlistsWithVideo = playlists.filter(playlist => !!codecsForPlaylist(this.playlists.main, playlist).video);\n    return playlistsWithVideo[0] || null;\n  };\n\n  /**\n   * Combine all segments into a single Uint8Array\n   *\n   * @param {Object} segmentObj\n   * @return {Uint8Array} concatenated bytes\n   * @private\n   */\n  const concatSegments = segmentObj => {\n    let offset = 0;\n    let tempBuffer;\n    if (segmentObj.bytes) {\n      tempBuffer = new Uint8Array(segmentObj.bytes); // combine the individual segments into one large typed-array\n\n      segmentObj.segments.forEach(segment => {\n        tempBuffer.set(segment, offset);\n        offset += segment.byteLength;\n      });\n    }\n    return tempBuffer;\n  };\n  /**\n   * Example:\n   * https://host.com/path1/path2/path3/segment.ts?arg1=val1\n   * -->\n   * path3/segment.ts\n   *\n   * @param resolvedUri\n   * @return {string}\n   */\n\n  function compactSegmentUrlDescription(resolvedUri) {\n    try {\n      return new URL(resolvedUri).pathname.split('/').slice(-2).join('/');\n    } catch (e) {\n      return '';\n    }\n  }\n\n  /**\n   * @file text-tracks.js\n   */\n  /**\n   * Create captions text tracks on video.js if they do not exist\n   *\n   * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n   * @param {Object} tech the video.js tech\n   * @param {Object} captionStream the caption stream to create\n   * @private\n   */\n\n  const createCaptionsTrackIfNotExists = function (inbandTextTracks, tech, captionStream) {\n    if (!inbandTextTracks[captionStream]) {\n      tech.trigger({\n        type: 'usage',\n        name: 'vhs-608'\n      });\n      let instreamId = captionStream; // we need to translate SERVICEn for 708 to how mux.js currently labels them\n\n      if (/^cc708_/.test(captionStream)) {\n        instreamId = 'SERVICE' + captionStream.split('_')[1];\n      }\n      const track = tech.textTracks().getTrackById(instreamId);\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[captionStream] = track;\n      } else {\n        // This section gets called when we have caption services that aren't specified in the manifest.\n        // Manifest level caption services are handled in media-groups.js under CLOSED-CAPTIONS.\n        const captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n        let label = captionStream;\n        let language = captionStream;\n        let def = false;\n        const captionService = captionServices[instreamId];\n        if (captionService) {\n          label = captionService.label;\n          language = captionService.language;\n          def = captionService.default;\n        } // Otherwise, create a track with the default `CC#` label and\n        // without a language\n\n        inbandTextTracks[captionStream] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: instreamId,\n          // TODO: investigate why this doesn't seem to turn the caption on by default\n          default: def,\n          label,\n          language\n        }, false).track;\n      }\n    }\n  };\n  /**\n   * Add caption text track data to a source handler given an array of captions\n   *\n   * @param {Object}\n   *   @param {Object} inbandTextTracks the inband text tracks\n   *   @param {number} timestampOffset the timestamp offset of the source buffer\n   *   @param {Array} captionArray an array of caption data\n   * @private\n   */\n\n  const addCaptionData = function ({\n    inbandTextTracks,\n    captionArray,\n    timestampOffset\n  }) {\n    if (!captionArray) {\n      return;\n    }\n    const Cue = window.WebKitDataCue || window.VTTCue;\n    captionArray.forEach(caption => {\n      const track = caption.stream; // in CEA 608 captions, video.js/mux.js sends a content array\n      // with positioning data\n\n      if (caption.content) {\n        caption.content.forEach(value => {\n          const cue = new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, value.text);\n          cue.line = value.line;\n          cue.align = 'left';\n          cue.position = value.position;\n          cue.positionAlign = 'line-left';\n          inbandTextTracks[track].addCue(cue);\n        });\n      } else {\n        // otherwise, a text value with combined captions is sent\n        inbandTextTracks[track].addCue(new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, caption.text));\n      }\n    });\n  };\n  /**\n   * Define properties on a cue for backwards compatability,\n   * but warn the user that the way that they are using it\n   * is depricated and will be removed at a later date.\n   *\n   * @param {Cue} cue the cue to add the properties on\n   * @private\n   */\n\n  const deprecateOldCue = function (cue) {\n    Object.defineProperties(cue.frame, {\n      id: {\n        get() {\n          videojs.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n          return cue.value.key;\n        }\n      },\n      value: {\n        get() {\n          videojs.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n          return cue.value.data;\n        }\n      },\n      privateData: {\n        get() {\n          videojs.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n          return cue.value.data;\n        }\n      }\n    });\n  };\n  /**\n   * Add metadata text track data to a source handler given an array of metadata\n   *\n   * @param {Object}\n   *   @param {Object} inbandTextTracks the inband text tracks\n   *   @param {Array} metadataArray an array of meta data\n   *   @param {number} timestampOffset the timestamp offset of the source buffer\n   *   @param {number} videoDuration the duration of the video\n   * @private\n   */\n\n  const addMetadata = ({\n    inbandTextTracks,\n    metadataArray,\n    timestampOffset,\n    videoDuration\n  }) => {\n    if (!metadataArray) {\n      return;\n    }\n    const Cue = window.WebKitDataCue || window.VTTCue;\n    const metadataTrack = inbandTextTracks.metadataTrack_;\n    if (!metadataTrack) {\n      return;\n    }\n    metadataArray.forEach(metadata => {\n      const time = metadata.cueTime + timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n      // ignore this bit of metadata.\n      // This likely occurs when you have an non-timed ID3 tag like TIT2,\n      // which is the \"Title/Songname/Content description\" frame\n\n      if (typeof time !== 'number' || window.isNaN(time) || time < 0 || !(time < Infinity)) {\n        return;\n      } // If we have no frames, we can't create a cue.\n\n      if (!metadata.frames || !metadata.frames.length) {\n        return;\n      }\n      metadata.frames.forEach(frame => {\n        const cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n        metadataTrack.addCue(cue);\n      });\n    });\n    if (!metadataTrack.cues || !metadataTrack.cues.length) {\n      return;\n    } // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n\n    const cues = metadataTrack.cues;\n    const cuesArray = []; // Create a copy of the TextTrackCueList...\n    // ...disregarding cues with a falsey value\n\n    for (let i = 0; i < cues.length; i++) {\n      if (cues[i]) {\n        cuesArray.push(cues[i]);\n      }\n    } // Group cues by their startTime value\n\n    const cuesGroupedByStartTime = cuesArray.reduce((obj, cue) => {\n      const timeSlot = obj[cue.startTime] || [];\n      timeSlot.push(cue);\n      obj[cue.startTime] = timeSlot;\n      return obj;\n    }, {}); // Sort startTimes by ascending order\n\n    const sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort((a, b) => Number(a) - Number(b)); // Map each cue group's endTime to the next group's startTime\n\n    sortedStartTimes.forEach((startTime, idx) => {\n      const cueGroup = cuesGroupedByStartTime[startTime];\n      const finiteDuration = isFinite(videoDuration) ? videoDuration : startTime;\n      const nextTime = Number(sortedStartTimes[idx + 1]) || finiteDuration; // Map each cue's endTime the next group's startTime\n\n      cueGroup.forEach(cue => {\n        cue.endTime = nextTime;\n      });\n    });\n  }; // object for mapping daterange attributes\n\n  const dateRangeAttr = {\n    id: 'ID',\n    class: 'CLASS',\n    startDate: 'START-DATE',\n    duration: 'DURATION',\n    endDate: 'END-DATE',\n    endOnNext: 'END-ON-NEXT',\n    plannedDuration: 'PLANNED-DURATION',\n    scte35Out: 'SCTE35-OUT',\n    scte35In: 'SCTE35-IN'\n  };\n  const dateRangeKeysToOmit = new Set(['id', 'class', 'startDate', 'duration', 'endDate', 'endOnNext', 'startTime', 'endTime', 'processDateRange']);\n  /**\n   * Add DateRange metadata text track to a source handler given an array of metadata\n   *\n   * @param {Object}\n   *   @param {Object} inbandTextTracks the inband text tracks\n   *   @param {Array} dateRanges parsed media playlist\n   * @private\n   */\n\n  const addDateRangeMetadata = ({\n    inbandTextTracks,\n    dateRanges\n  }) => {\n    const metadataTrack = inbandTextTracks.metadataTrack_;\n    if (!metadataTrack) {\n      return;\n    }\n    const Cue = window.WebKitDataCue || window.VTTCue;\n    dateRanges.forEach(dateRange => {\n      // we generate multiple cues for each date range with different attributes\n      for (const key of Object.keys(dateRange)) {\n        if (dateRangeKeysToOmit.has(key)) {\n          continue;\n        }\n        const cue = new Cue(dateRange.startTime, dateRange.endTime, '');\n        cue.id = dateRange.id;\n        cue.type = 'com.apple.quicktime.HLS';\n        cue.value = {\n          key: dateRangeAttr[key],\n          data: dateRange[key]\n        };\n        if (key === 'scte35Out' || key === 'scte35In') {\n          cue.value.data = new Uint8Array(cue.value.data.match(/[\\da-f]{2}/gi)).buffer;\n        }\n        metadataTrack.addCue(cue);\n      }\n      dateRange.processDateRange();\n    });\n  };\n  /**\n   * Create metadata text track on video.js if it does not exist\n   *\n   * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n   * @param {string} dispatchType the inband metadata track dispatch type\n   * @param {Object} tech the video.js tech\n   * @private\n   */\n\n  const createMetadataTrackIfNotExists = (inbandTextTracks, dispatchType, tech) => {\n    if (inbandTextTracks.metadataTrack_) {\n      return;\n    }\n    inbandTextTracks.metadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    if (!videojs.browser.IS_ANY_SAFARI) {\n      inbandTextTracks.metadataTrack_.inBandMetadataTrackDispatchType = dispatchType;\n    }\n  };\n  /**\n   * Remove cues from a track on video.js.\n   *\n   * @param {Double} start start of where we should remove the cue\n   * @param {Double} end end of where the we should remove the cue\n   * @param {Object} track the text track to remove the cues from\n   * @private\n   */\n\n  const removeCuesFromTrack = function (start, end, track) {\n    let i;\n    let cue;\n    if (!track) {\n      return;\n    }\n    if (!track.cues) {\n      return;\n    }\n    i = track.cues.length;\n    while (i--) {\n      cue = track.cues[i]; // Remove any cue within the provided start and end time\n\n      if (cue.startTime >= start && cue.endTime <= end) {\n        track.removeCue(cue);\n      }\n    }\n  };\n  /**\n   * Remove duplicate cues from a track on video.js (a cue is considered a\n   * duplicate if it has the same time interval and text as another)\n   *\n   * @param {Object} track the text track to remove the duplicate cues from\n   * @private\n   */\n\n  const removeDuplicateCuesFromTrack = function (track) {\n    const cues = track.cues;\n    if (!cues) {\n      return;\n    }\n    const uniqueCues = {};\n    for (let i = cues.length - 1; i >= 0; i--) {\n      const cue = cues[i];\n      const cueKey = `${cue.startTime}-${cue.endTime}-${cue.text}`;\n      if (uniqueCues[cueKey]) {\n        track.removeCue(cue);\n      } else {\n        uniqueCues[cueKey] = cue;\n      }\n    }\n  };\n\n  /**\n   * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n   * front of current time.\n   *\n   * @param {Array} buffer\n   *        The current buffer of gop information\n   * @param {number} currentTime\n   *        The current time\n   * @param {Double} mapping\n   *        Offset to map display time to stream presentation time\n   * @return {Array}\n   *         List of gops considered safe to append over\n   */\n\n  const gopsSafeToAlignWith = (buffer, currentTime, mapping) => {\n    if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n      return [];\n    } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n    const currentTimePts = Math.ceil((currentTime - mapping + 3) * clock_1);\n    let i;\n    for (i = 0; i < buffer.length; i++) {\n      if (buffer[i].pts > currentTimePts) {\n        break;\n      }\n    }\n    return buffer.slice(i);\n  };\n  /**\n   * Appends gop information (timing and byteLength) received by the transmuxer for the\n   * gops appended in the last call to appendBuffer\n   *\n   * @param {Array} buffer\n   *        The current buffer of gop information\n   * @param {Array} gops\n   *        List of new gop information\n   * @param {boolean} replace\n   *        If true, replace the buffer with the new gop information. If false, append the\n   *        new gop information to the buffer in the right location of time.\n   * @return {Array}\n   *         Updated list of gop information\n   */\n\n  const updateGopBuffer = (buffer, gops, replace) => {\n    if (!gops.length) {\n      return buffer;\n    }\n    if (replace) {\n      // If we are in safe append mode, then completely overwrite the gop buffer\n      // with the most recent appeneded data. This will make sure that when appending\n      // future segments, we only try to align with gops that are both ahead of current\n      // time and in the last segment appended.\n      return gops.slice();\n    }\n    const start = gops[0].pts;\n    let i = 0;\n    for (i; i < buffer.length; i++) {\n      if (buffer[i].pts >= start) {\n        break;\n      }\n    }\n    return buffer.slice(0, i).concat(gops);\n  };\n  /**\n   * Removes gop information in buffer that overlaps with provided start and end\n   *\n   * @param {Array} buffer\n   *        The current buffer of gop information\n   * @param {Double} start\n   *        position to start the remove at\n   * @param {Double} end\n   *        position to end the remove at\n   * @param {Double} mapping\n   *        Offset to map display time to stream presentation time\n   */\n\n  const removeGopBuffer = (buffer, start, end, mapping) => {\n    const startPts = Math.ceil((start - mapping) * clock_1);\n    const endPts = Math.ceil((end - mapping) * clock_1);\n    const updatedBuffer = buffer.slice();\n    let i = buffer.length;\n    while (i--) {\n      if (buffer[i].pts <= endPts) {\n        break;\n      }\n    }\n    if (i === -1) {\n      // no removal because end of remove range is before start of buffer\n      return updatedBuffer;\n    }\n    let j = i + 1;\n    while (j--) {\n      if (buffer[j].pts <= startPts) {\n        break;\n      }\n    } // clamp remove range start to 0 index\n\n    j = Math.max(j, 0);\n    updatedBuffer.splice(j, i - j + 1);\n    return updatedBuffer;\n  };\n  const shallowEqual = function (a, b) {\n    // if both are undefined\n    // or one or the other is undefined\n    // they are not equal\n    if (!a && !b || !a && b || a && !b) {\n      return false;\n    } // they are the same object and thus, equal\n\n    if (a === b) {\n      return true;\n    } // sort keys so we can make sure they have\n    // all the same keys later.\n\n    const akeys = Object.keys(a).sort();\n    const bkeys = Object.keys(b).sort(); // different number of keys, not equal\n\n    if (akeys.length !== bkeys.length) {\n      return false;\n    }\n    for (let i = 0; i < akeys.length; i++) {\n      const key = akeys[i]; // different sorted keys, not equal\n\n      if (key !== bkeys[i]) {\n        return false;\n      } // different values, not equal\n\n      if (a[key] !== b[key]) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /**\n   * The segment loader has no recourse except to fetch a segment in the\n   * current playlist and use the internal timestamps in that segment to\n   * generate a syncPoint. This function returns a good candidate index\n   * for that process.\n   *\n   * @param {Array} segments - the segments array from a playlist.\n   * @return {number} An index of a segment from the playlist to load\n   */\n\n  const getSyncSegmentCandidate = function (currentTimeline, segments, targetTime) {\n    segments = segments || [];\n    const timelineSegments = [];\n    let time = 0;\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      if (currentTimeline === segment.timeline) {\n        timelineSegments.push(i);\n        time += segment.duration;\n        if (time > targetTime) {\n          return i;\n        }\n      }\n    }\n    if (timelineSegments.length === 0) {\n      return 0;\n    } // default to the last timeline segment\n\n    return timelineSegments[timelineSegments.length - 1];\n  }; // In the event of a quota exceeded error, keep at least one second of back buffer. This\n  // number was arbitrarily chosen and may be updated in the future, but seemed reasonable\n  // as a start to prevent any potential issues with removing content too close to the\n  // playhead.\n\n  const MIN_BACK_BUFFER = 1; // in ms\n\n  const CHECK_BUFFER_DELAY = 500;\n  const finite = num => typeof num === 'number' && isFinite(num); // With most content hovering around 30fps, if a segment has a duration less than a half\n  // frame at 30fps or one frame at 60fps, the bandwidth and throughput calculations will\n  // not accurately reflect the rest of the content.\n\n  const MIN_SEGMENT_DURATION_TO_SAVE_STATS = 1 / 60;\n  const illegalMediaSwitch = (loaderType, startingMedia, trackInfo) => {\n    // Although these checks should most likely cover non 'main' types, for now it narrows\n    // the scope of our checks.\n    if (loaderType !== 'main' || !startingMedia || !trackInfo) {\n      return null;\n    }\n    if (!trackInfo.hasAudio && !trackInfo.hasVideo) {\n      return 'Neither audio nor video found in segment.';\n    }\n    if (startingMedia.hasVideo && !trackInfo.hasVideo) {\n      return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n    }\n    if (!startingMedia.hasVideo && trackInfo.hasVideo) {\n      return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n    }\n    return null;\n  };\n  /**\n   * Calculates a time value that is safe to remove from the back buffer without interrupting\n   * playback.\n   *\n   * @param {TimeRange} seekable\n   *        The current seekable range\n   * @param {number} currentTime\n   *        The current time of the player\n   * @param {number} targetDuration\n   *        The target duration of the current playlist\n   * @return {number}\n   *         Time that is safe to remove from the back buffer without interrupting playback\n   */\n\n  const safeBackBufferTrimTime = (seekable, currentTime, targetDuration) => {\n    // 30 seconds before the playhead provides a safe default for trimming.\n    //\n    // Choosing a reasonable default is particularly important for high bitrate content and\n    // VOD videos/live streams with large windows, as the buffer may end up overfilled and\n    // throw an APPEND_BUFFER_ERR.\n    let trimTime = currentTime - Config.BACK_BUFFER_LENGTH;\n    if (seekable.length) {\n      // Some live playlists may have a shorter window of content than the full allowed back\n      // buffer. For these playlists, don't save content that's no longer within the window.\n      trimTime = Math.max(trimTime, seekable.start(0));\n    } // Don't remove within target duration of the current time to avoid the possibility of\n    // removing the GOP currently being played, as removing it can cause playback stalls.\n\n    const maxTrimTime = currentTime - targetDuration;\n    return Math.min(maxTrimTime, trimTime);\n  };\n  const segmentInfoString = segmentInfo => {\n    const {\n      startOfSegment,\n      duration,\n      segment,\n      part,\n      playlist: {\n        mediaSequence: seq,\n        id,\n        segments = []\n      },\n      mediaIndex: index,\n      partIndex,\n      timeline\n    } = segmentInfo;\n    const segmentLen = segments.length - 1;\n    let selection = 'mediaIndex/partIndex increment';\n    if (segmentInfo.getMediaInfoForTime) {\n      selection = `getMediaInfoForTime (${segmentInfo.getMediaInfoForTime})`;\n    } else if (segmentInfo.isSyncRequest) {\n      selection = 'getSyncSegmentCandidate (isSyncRequest)';\n    }\n    if (segmentInfo.independent) {\n      selection += ` with independent ${segmentInfo.independent}`;\n    }\n    const hasPartIndex = typeof partIndex === 'number';\n    const name = segmentInfo.segment.uri ? 'segment' : 'pre-segment';\n    const zeroBasedPartCount = hasPartIndex ? getKnownPartCount({\n      preloadSegment: segment\n    }) - 1 : 0;\n    return `${name} [${seq + index}/${seq + segmentLen}]` + (hasPartIndex ? ` part [${partIndex}/${zeroBasedPartCount}]` : '') + ` segment start/end [${segment.start} => ${segment.end}]` + (hasPartIndex ? ` part start/end [${part.start} => ${part.end}]` : '') + ` startOfSegment [${startOfSegment}]` + ` duration [${duration}]` + ` timeline [${timeline}]` + ` selected by [${selection}]` + ` playlist [${id}]`;\n  };\n  const timingInfoPropertyForMedia = mediaType => `${mediaType}TimingInfo`;\n  /**\n   * Returns the timestamp offset to use for the segment.\n   *\n   * @param {number} segmentTimeline\n   *        The timeline of the segment\n   * @param {number} currentTimeline\n   *        The timeline currently being followed by the loader\n   * @param {number} startOfSegment\n   *        The estimated segment start\n   * @param {TimeRange[]} buffered\n   *        The loader's buffer\n   * @param {boolean} overrideCheck\n   *        If true, no checks are made to see if the timestamp offset value should be set,\n   *        but sets it directly to a value.\n   *\n   * @return {number|null}\n   *         Either a number representing a new timestamp offset, or null if the segment is\n   *         part of the same timeline\n   */\n\n  const timestampOffsetForSegment = ({\n    segmentTimeline,\n    currentTimeline,\n    startOfSegment,\n    buffered,\n    overrideCheck\n  }) => {\n    // Check to see if we are crossing a discontinuity to see if we need to set the\n    // timestamp offset on the transmuxer and source buffer.\n    //\n    // Previously, we changed the timestampOffset if the start of this segment was less than\n    // the currently set timestampOffset, but this isn't desirable as it can produce bad\n    // behavior, especially around long running live streams.\n    if (!overrideCheck && segmentTimeline === currentTimeline) {\n      return null;\n    } // When changing renditions, it's possible to request a segment on an older timeline. For\n    // instance, given two renditions with the following:\n    //\n    // #EXTINF:10\n    // segment1\n    // #EXT-X-DISCONTINUITY\n    // #EXTINF:10\n    // segment2\n    // #EXTINF:10\n    // segment3\n    //\n    // And the current player state:\n    //\n    // current time: 8\n    // buffer: 0 => 20\n    //\n    // The next segment on the current rendition would be segment3, filling the buffer from\n    // 20s onwards. However, if a rendition switch happens after segment2 was requested,\n    // then the next segment to be requested will be segment1 from the new rendition in\n    // order to fill time 8 and onwards. Using the buffered end would result in repeated\n    // content (since it would position segment1 of the new rendition starting at 20s). This\n    // case can be identified when the new segment's timeline is a prior value. Instead of\n    // using the buffered end, the startOfSegment can be used, which, hopefully, will be\n    // more accurate to the actual start time of the segment.\n\n    if (segmentTimeline < currentTimeline) {\n      return startOfSegment;\n    } // segmentInfo.startOfSegment used to be used as the timestamp offset, however, that\n    // value uses the end of the last segment if it is available. While this value\n    // should often be correct, it's better to rely on the buffered end, as the new\n    // content post discontinuity should line up with the buffered end as if it were\n    // time 0 for the new content.\n\n    return buffered.length ? buffered.end(buffered.length - 1) : startOfSegment;\n  };\n  /**\n   * Returns whether or not the loader should wait for a timeline change from the timeline\n   * change controller before processing the segment.\n   *\n   * Primary timing in VHS goes by video. This is different from most media players, as\n   * audio is more often used as the primary timing source. For the foreseeable future, VHS\n   * will continue to use video as the primary timing source, due to the current logic and\n   * expectations built around it.\n\n   * Since the timing follows video, in order to maintain sync, the video loader is\n   * responsible for setting both audio and video source buffer timestamp offsets.\n   *\n   * Setting different values for audio and video source buffers could lead to\n   * desyncing. The following examples demonstrate some of the situations where this\n   * distinction is important. Note that all of these cases involve demuxed content. When\n   * content is muxed, the audio and video are packaged together, therefore syncing\n   * separate media playlists is not an issue.\n   *\n   * CASE 1: Audio prepares to load a new timeline before video:\n   *\n   * Timeline:       0                 1\n   * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Audio Loader:                     ^\n   * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Video Loader              ^\n   *\n   * In the above example, the audio loader is preparing to load the 6th segment, the first\n   * after a discontinuity, while the video loader is still loading the 5th segment, before\n   * the discontinuity.\n   *\n   * If the audio loader goes ahead and loads and appends the 6th segment before the video\n   * loader crosses the discontinuity, then when appended, the 6th audio segment will use\n   * the timestamp offset from timeline 0. This will likely lead to desyncing. In addition,\n   * the audio loader must provide the audioAppendStart value to trim the content in the\n   * transmuxer, and that value relies on the audio timestamp offset. Since the audio\n   * timestamp offset is set by the video (main) loader, the audio loader shouldn't load the\n   * segment until that value is provided.\n   *\n   * CASE 2: Video prepares to load a new timeline before audio:\n   *\n   * Timeline:       0                 1\n   * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Audio Loader:             ^\n   * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Video Loader                      ^\n   *\n   * In the above example, the video loader is preparing to load the 6th segment, the first\n   * after a discontinuity, while the audio loader is still loading the 5th segment, before\n   * the discontinuity.\n   *\n   * If the video loader goes ahead and loads and appends the 6th segment, then once the\n   * segment is loaded and processed, both the video and audio timestamp offsets will be\n   * set, since video is used as the primary timing source. This is to ensure content lines\n   * up appropriately, as any modifications to the video timing are reflected by audio when\n   * the video loader sets the audio and video timestamp offsets to the same value. However,\n   * setting the timestamp offset for audio before audio has had a chance to change\n   * timelines will likely lead to desyncing, as the audio loader will append segment 5 with\n   * a timestamp intended to apply to segments from timeline 1 rather than timeline 0.\n   *\n   * CASE 3: When seeking, audio prepares to load a new timeline before video\n   *\n   * Timeline:       0                 1\n   * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Audio Loader:           ^\n   * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Video Loader            ^\n   *\n   * In the above example, both audio and video loaders are loading segments from timeline\n   * 0, but imagine that the seek originated from timeline 1.\n   *\n   * When seeking to a new timeline, the timestamp offset will be set based on the expected\n   * segment start of the loaded video segment. In order to maintain sync, the audio loader\n   * must wait for the video loader to load its segment and update both the audio and video\n   * timestamp offsets before it may load and append its own segment. This is the case\n   * whether the seek results in a mismatched segment request (e.g., the audio loader\n   * chooses to load segment 3 and the video loader chooses to load segment 4) or the\n   * loaders choose to load the same segment index from each playlist, as the segments may\n   * not be aligned perfectly, even for matching segment indexes.\n   *\n   * @param {Object} timelinechangeController\n   * @param {number} currentTimeline\n   *        The timeline currently being followed by the loader\n   * @param {number} segmentTimeline\n   *        The timeline of the segment being loaded\n   * @param {('main'|'audio')} loaderType\n   *        The loader type\n   * @param {boolean} audioDisabled\n   *        Whether the audio is disabled for the loader. This should only be true when the\n   *        loader may have muxed audio in its segment, but should not append it, e.g., for\n   *        the main loader when an alternate audio playlist is active.\n   *\n   * @return {boolean}\n   *         Whether the loader should wait for a timeline change from the timeline change\n   *         controller before processing the segment\n   */\n\n  const shouldWaitForTimelineChange = ({\n    timelineChangeController,\n    currentTimeline,\n    segmentTimeline,\n    loaderType,\n    audioDisabled\n  }) => {\n    if (currentTimeline === segmentTimeline) {\n      return false;\n    }\n    if (loaderType === 'audio') {\n      const lastMainTimelineChange = timelineChangeController.lastTimelineChange({\n        type: 'main'\n      }); // Audio loader should wait if:\n      //\n      // * main hasn't had a timeline change yet (thus has not loaded its first segment)\n      // * main hasn't yet changed to the timeline audio is looking to load\n\n      return !lastMainTimelineChange || lastMainTimelineChange.to !== segmentTimeline;\n    } // The main loader only needs to wait for timeline changes if there's demuxed audio.\n    // Otherwise, there's nothing to wait for, since audio would be muxed into the main\n    // loader's segments (or the content is audio/video only and handled by the main\n    // loader).\n\n    if (loaderType === 'main' && audioDisabled) {\n      const pendingAudioTimelineChange = timelineChangeController.pendingTimelineChange({\n        type: 'audio'\n      }); // Main loader should wait for the audio loader if audio is not pending a timeline\n      // change to the current timeline.\n      //\n      // Since the main loader is responsible for setting the timestamp offset for both\n      // audio and video, the main loader must wait for audio to be about to change to its\n      // timeline before setting the offset, otherwise, if audio is behind in loading,\n      // segments from the previous timeline would be adjusted by the new timestamp offset.\n      //\n      // This requirement means that video will not cross a timeline until the audio is\n      // about to cross to it, so that way audio and video will always cross the timeline\n      // together.\n      //\n      // In addition to normal timeline changes, these rules also apply to the start of a\n      // stream (going from a non-existent timeline, -1, to timeline 0). It's important\n      // that these rules apply to the first timeline change because if they did not, it's\n      // possible that the main loader will cross two timelines before the audio loader has\n      // crossed one. Logic may be implemented to handle the startup as a special case, but\n      // it's easier to simply treat all timeline changes the same.\n\n      if (pendingAudioTimelineChange && pendingAudioTimelineChange.to === segmentTimeline) {\n        return false;\n      }\n      return true;\n    }\n    return false;\n  };\n  const shouldFixBadTimelineChanges = timelineChangeController => {\n    if (!timelineChangeController) {\n      return false;\n    }\n    const pendingAudioTimelineChange = timelineChangeController.pendingTimelineChange({\n      type: 'audio'\n    });\n    const pendingMainTimelineChange = timelineChangeController.pendingTimelineChange({\n      type: 'main'\n    });\n    const hasPendingTimelineChanges = pendingAudioTimelineChange && pendingMainTimelineChange;\n    const differentPendingChanges = hasPendingTimelineChanges && pendingAudioTimelineChange.to !== pendingMainTimelineChange.to;\n    const isNotInitialPendingTimelineChange = hasPendingTimelineChanges && pendingAudioTimelineChange.from !== -1 && pendingMainTimelineChange.from !== -1;\n    if (isNotInitialPendingTimelineChange && differentPendingChanges) {\n      return true;\n    }\n    return false;\n  };\n  const fixBadTimelineChange = segmentLoader => {\n    if (!segmentLoader) {\n      return;\n    }\n    segmentLoader.pause();\n    segmentLoader.resetEverything();\n    segmentLoader.load();\n  };\n  const mediaDuration = timingInfos => {\n    let maxDuration = 0;\n    ['video', 'audio'].forEach(function (type) {\n      const typeTimingInfo = timingInfos[`${type}TimingInfo`];\n      if (!typeTimingInfo) {\n        return;\n      }\n      const {\n        start,\n        end\n      } = typeTimingInfo;\n      let duration;\n      if (typeof start === 'bigint' || typeof end === 'bigint') {\n        duration = window.BigInt(end) - window.BigInt(start);\n      } else if (typeof start === 'number' && typeof end === 'number') {\n        duration = end - start;\n      }\n      if (typeof duration !== 'undefined' && duration > maxDuration) {\n        maxDuration = duration;\n      }\n    }); // convert back to a number if it is lower than MAX_SAFE_INTEGER\n    // as we only need BigInt when we are above that.\n\n    if (typeof maxDuration === 'bigint' && maxDuration < Number.MAX_SAFE_INTEGER) {\n      maxDuration = Number(maxDuration);\n    }\n    return maxDuration;\n  };\n  const segmentTooLong = ({\n    segmentDuration,\n    maxDuration\n  }) => {\n    // 0 duration segments are most likely due to metadata only segments or a lack of\n    // information.\n    if (!segmentDuration) {\n      return false;\n    } // For HLS:\n    //\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1\n    // The EXTINF duration of each Media Segment in the Playlist\n    // file, when rounded to the nearest integer, MUST be less than or equal\n    // to the target duration; longer segments can trigger playback stalls\n    // or other errors.\n    //\n    // For DASH, the mpd-parser uses the largest reported segment duration as the target\n    // duration. Although that reported duration is occasionally approximate (i.e., not\n    // exact), a strict check may report that a segment is too long more often in DASH.\n\n    return Math.round(segmentDuration) > maxDuration + TIME_FUDGE_FACTOR;\n  };\n  const getTroublesomeSegmentDurationMessage = (segmentInfo, sourceType) => {\n    // Right now we aren't following DASH's timing model exactly, so only perform\n    // this check for HLS content.\n    if (sourceType !== 'hls') {\n      return null;\n    }\n    const segmentDuration = mediaDuration({\n      audioTimingInfo: segmentInfo.audioTimingInfo,\n      videoTimingInfo: segmentInfo.videoTimingInfo\n    }); // Don't report if we lack information.\n    //\n    // If the segment has a duration of 0 it is either a lack of information or a\n    // metadata only segment and shouldn't be reported here.\n\n    if (!segmentDuration) {\n      return null;\n    }\n    const targetDuration = segmentInfo.playlist.targetDuration;\n    const isSegmentWayTooLong = segmentTooLong({\n      segmentDuration,\n      maxDuration: targetDuration * 2\n    });\n    const isSegmentSlightlyTooLong = segmentTooLong({\n      segmentDuration,\n      maxDuration: targetDuration\n    });\n    const segmentTooLongMessage = `Segment with index ${segmentInfo.mediaIndex} ` + `from playlist ${segmentInfo.playlist.id} ` + `has a duration of ${segmentDuration} ` + `when the reported duration is ${segmentInfo.duration} ` + `and the target duration is ${targetDuration}. ` + 'For HLS content, a duration in excess of the target duration may result in ' + 'playback issues. See the HLS specification section on EXT-X-TARGETDURATION for ' + 'more details: ' + 'https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1';\n    if (isSegmentWayTooLong || isSegmentSlightlyTooLong) {\n      return {\n        severity: isSegmentWayTooLong ? 'warn' : 'info',\n        message: segmentTooLongMessage\n      };\n    }\n    return null;\n  };\n  /**\n   *\n   * @param {Object} options type of segment loader and segment either segmentInfo or simple segment\n   * @return a segmentInfo payload for events or errors.\n   */\n\n  const segmentInfoPayload = ({\n    type,\n    segment\n  }) => {\n    if (!segment) {\n      return;\n    }\n    const isEncrypted = Boolean(segment.key || segment.map && segment.map.ke);\n    const isMediaInitialization = Boolean(segment.map && !segment.map.bytes);\n    const start = segment.startOfSegment === undefined ? segment.start : segment.startOfSegment;\n    return {\n      type: type || segment.type,\n      uri: segment.resolvedUri || segment.uri,\n      start,\n      duration: segment.duration,\n      isEncrypted,\n      isMediaInitialization\n    };\n  };\n  /**\n   * An object that manages segment loading and appending.\n   *\n   * @class SegmentLoader\n   * @param {Object} options required and optional options\n   * @extends videojs.EventTarget\n   */\n\n  class SegmentLoader extends videojs.EventTarget {\n    constructor(settings, options = {}) {\n      super(); // check pre-conditions\n\n      if (!settings) {\n        throw new TypeError('Initialization settings are required');\n      }\n      if (typeof settings.currentTime !== 'function') {\n        throw new TypeError('No currentTime getter specified');\n      }\n      if (!settings.mediaSource) {\n        throw new TypeError('No MediaSource specified');\n      } // public properties\n\n      this.bandwidth = settings.bandwidth;\n      this.throughput = {\n        rate: 0,\n        count: 0\n      };\n      this.roundTrip = NaN;\n      this.resetStats_();\n      this.mediaIndex = null;\n      this.partIndex = null; // private settings\n\n      this.hasPlayed_ = settings.hasPlayed;\n      this.currentTime_ = settings.currentTime;\n      this.seekable_ = settings.seekable;\n      this.seeking_ = settings.seeking;\n      this.duration_ = settings.duration;\n      this.mediaSource_ = settings.mediaSource;\n      this.vhs_ = settings.vhs;\n      this.loaderType_ = settings.loaderType;\n      this.currentMediaInfo_ = void 0;\n      this.startingMediaInfo_ = void 0;\n      this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n      this.goalBufferLength_ = settings.goalBufferLength;\n      this.sourceType_ = settings.sourceType;\n      this.sourceUpdater_ = settings.sourceUpdater;\n      this.inbandTextTracks_ = settings.inbandTextTracks;\n      this.state_ = 'INIT';\n      this.timelineChangeController_ = settings.timelineChangeController;\n      this.shouldSaveSegmentTimingInfo_ = true;\n      this.parse708captions_ = settings.parse708captions;\n      this.useDtsForTimestampOffset_ = settings.useDtsForTimestampOffset;\n      this.captionServices_ = settings.captionServices;\n      this.exactManifestTimings = settings.exactManifestTimings;\n      this.addMetadataToTextTrack = settings.addMetadataToTextTrack; // private instance variables\n\n      this.checkBufferTimeout_ = null;\n      this.error_ = void 0;\n      this.currentTimeline_ = -1;\n      this.shouldForceTimestampOffsetAfterResync_ = false;\n      this.pendingSegment_ = null;\n      this.xhrOptions_ = null;\n      this.pendingSegments_ = [];\n      this.audioDisabled_ = false;\n      this.isPendingTimestampOffset_ = false; // TODO possibly move gopBuffer and timeMapping info to a separate controller\n\n      this.gopBuffer_ = [];\n      this.timeMapping_ = 0;\n      this.safeAppend_ = false;\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n      this.playlistOfLastInitSegment_ = {\n        audio: null,\n        video: null\n      };\n      this.callQueue_ = []; // If the segment loader prepares to load a segment, but does not have enough\n      // information yet to start the loading process (e.g., if the audio loader wants to\n      // load a segment from the next timeline but the main loader hasn't yet crossed that\n      // timeline), then the load call will be added to the queue until it is ready to be\n      // processed.\n\n      this.loadQueue_ = [];\n      this.metadataQueue_ = {\n        id3: [],\n        caption: []\n      };\n      this.waitingOnRemove_ = false;\n      this.quotaExceededErrorRetryTimeout_ = null; // Fragmented mp4 playback\n\n      this.activeInitSegmentId_ = null;\n      this.initSegments_ = {}; // HLSe playback\n\n      this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n      this.keyCache_ = {};\n      this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n      // between a time in the display time and a segment index within\n      // a playlist\n\n      this.syncController_ = settings.syncController;\n      this.syncPoint_ = {\n        segmentIndex: 0,\n        time: 0\n      };\n      this.transmuxer_ = this.createTransmuxer_();\n      this.triggerSyncInfoUpdate_ = () => this.trigger('syncinfoupdate');\n      this.syncController_.on('syncinfoupdate', this.triggerSyncInfoUpdate_);\n      this.mediaSource_.addEventListener('sourceopen', () => {\n        if (!this.isEndOfStream_()) {\n          this.ended_ = false;\n        }\n      }); // ...for determining the fetch location\n\n      this.fetchAtBuffer_ = false;\n      this.logger_ = logger(`SegmentLoader[${this.loaderType_}]`);\n      Object.defineProperty(this, 'state', {\n        get() {\n          return this.state_;\n        },\n        set(newState) {\n          if (newState !== this.state_) {\n            this.logger_(`${this.state_} -> ${newState}`);\n            this.state_ = newState;\n            this.trigger('statechange');\n          }\n        }\n      });\n      this.sourceUpdater_.on('ready', () => {\n        if (this.hasEnoughInfoToAppend_()) {\n          this.processCallQueue_();\n        }\n      });\n      this.sourceUpdater_.on('codecschange', metadata => {\n        this.trigger(_extends$1({\n          type: 'codecschange'\n        }, metadata));\n      }); // Only the main loader needs to listen for pending timeline changes, as the main\n      // loader should wait for audio to be ready to change its timeline so that both main\n      // and audio timelines change together. For more details, see the\n      // shouldWaitForTimelineChange function.\n\n      if (this.loaderType_ === 'main') {\n        this.timelineChangeController_.on('pendingtimelinechange', () => {\n          if (this.hasEnoughInfoToAppend_()) {\n            this.processCallQueue_();\n          }\n        });\n      } // The main loader only listens on pending timeline changes, but the audio loader,\n      // since its loads follow main, needs to listen on timeline changes. For more details,\n      // see the shouldWaitForTimelineChange function.\n\n      if (this.loaderType_ === 'audio') {\n        this.timelineChangeController_.on('timelinechange', metadata => {\n          this.trigger(_extends$1({\n            type: 'timelinechange'\n          }, metadata));\n          if (this.hasEnoughInfoToLoad_()) {\n            this.processLoadQueue_();\n          }\n          if (this.hasEnoughInfoToAppend_()) {\n            this.processCallQueue_();\n          }\n        });\n      }\n    }\n    /**\n     * TODO: Current sync controller consists of many hls-specific strategies\n     * media sequence sync is also hls-specific, and we would like to be protocol-agnostic on this level\n     * this should be a part of the sync-controller and sync controller should expect different strategy list based on the protocol.\n     *\n     * @return {MediaSequenceSync|null}\n     * @private\n     */\n\n    get mediaSequenceSync_() {\n      return this.syncController_.getMediaSequenceSync(this.loaderType_);\n    }\n    createTransmuxer_() {\n      return segmentTransmuxer.createTransmuxer({\n        remux: false,\n        alignGopsAtEnd: this.safeAppend_,\n        keepOriginalTimestamps: true,\n        parse708captions: this.parse708captions_,\n        captionServices: this.captionServices_\n      });\n    }\n    /**\n     * reset all of our media stats\n     *\n     * @private\n     */\n\n    resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n      this.mediaAppends = 0;\n    }\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n    dispose() {\n      this.trigger('dispose');\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n      if (this.transmuxer_) {\n        this.transmuxer_.terminate();\n      }\n      this.resetStats_();\n      if (this.checkBufferTimeout_) {\n        window.clearTimeout(this.checkBufferTimeout_);\n      }\n      if (this.syncController_ && this.triggerSyncInfoUpdate_) {\n        this.syncController_.off('syncinfoupdate', this.triggerSyncInfoUpdate_);\n      }\n      this.off();\n    }\n    setAudio(enable) {\n      this.audioDisabled_ = !enable;\n      if (enable) {\n        this.appendInitSegment_.audio = true;\n      } else {\n        // remove current track audio if it gets disabled\n        this.sourceUpdater_.removeAudio(0, this.duration_());\n      }\n    }\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n    abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n        return;\n      }\n      this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n\n      this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n    abort_() {\n      if (this.pendingSegment_ && this.pendingSegment_.abortRequests) {\n        this.pendingSegment_.abortRequests();\n      } // clear out the segment being processed\n\n      this.pendingSegment_ = null;\n      this.callQueue_ = [];\n      this.loadQueue_ = [];\n      this.metadataQueue_.id3 = [];\n      this.metadataQueue_.caption = [];\n      this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);\n      this.waitingOnRemove_ = false;\n      window.clearTimeout(this.quotaExceededErrorRetryTimeout_);\n      this.quotaExceededErrorRetryTimeout_ = null;\n    }\n    checkForAbort_(requestId) {\n      // If the state is APPENDING, then aborts will not modify the state, meaning the first\n      // callback that happens should reset the state to READY so that loading can continue.\n      if (this.state === 'APPENDING' && !this.pendingSegment_) {\n        this.state = 'READY';\n        return true;\n      }\n      if (!this.pendingSegment_ || this.pendingSegment_.requestId !== requestId) {\n        return true;\n      }\n      return false;\n    }\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n    error(error) {\n      if (typeof error !== 'undefined') {\n        this.logger_('error occurred:', error);\n        this.error_ = error;\n      }\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n    endOfStream() {\n      this.ended_ = true;\n      if (this.transmuxer_) {\n        // need to clear out any cached data to prepare for the new segment\n        segmentTransmuxer.reset(this.transmuxer_);\n      }\n      this.gopBuffer_.length = 0;\n      this.pause();\n      this.trigger('ended');\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n    buffered_() {\n      const trackInfo = this.getMediaInfo_();\n      if (!this.sourceUpdater_ || !trackInfo) {\n        return createTimeRanges();\n      }\n      if (this.loaderType_ === 'main') {\n        const {\n          hasAudio,\n          hasVideo,\n          isMuxed\n        } = trackInfo;\n        if (hasVideo && hasAudio && !this.audioDisabled_ && !isMuxed) {\n          return this.sourceUpdater_.buffered();\n        }\n        if (hasVideo) {\n          return this.sourceUpdater_.videoBuffered();\n        }\n      } // One case that can be ignored for now is audio only with alt audio,\n      // as we don't yet have proper support for that.\n\n      return this.sourceUpdater_.audioBuffered();\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n    initSegmentForMap(map, set = false) {\n      if (!map) {\n        return null;\n      }\n      const id = initSegmentId(map);\n      let storedMap = this.initSegments_[id];\n      if (set && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          tracks: map.tracks,\n          timescales: map.timescales\n        };\n      }\n      return storedMap || map;\n    }\n    /**\n     * Gets and sets key for the provided key\n     *\n     * @param {Object} key\n     *        The key object representing the key to get or set\n     * @param {boolean=} set\n     *        If true, the key for the provided key should be saved\n     * @return {Object}\n     *         Key object for desired key\n     */\n\n    segmentKey(key, set = false) {\n      if (!key) {\n        return null;\n      }\n      const id = segmentKeyId(key);\n      let storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n      if (this.cacheEncryptionKeys_ && set && !storedKey && key.bytes) {\n        this.keyCache_[id] = storedKey = {\n          resolvedUri: key.resolvedUri,\n          bytes: key.bytes\n        };\n      }\n      const result = {\n        resolvedUri: (storedKey || key).resolvedUri\n      };\n      if (storedKey) {\n        result.bytes = storedKey.bytes;\n      }\n      return result;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n    couldBeginLoading_() {\n      return this.playlist_ && !this.paused();\n    }\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n    load() {\n      // un-pause\n      this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n\n      if (!this.playlist_) {\n        return;\n      } // if all the configuration is ready, initialize and begin loading\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      } // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n      this.state = 'READY';\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n    init_() {\n      this.state = 'READY'; // if this is the audio segment loader, and it hasn't been inited before, then any old\n      // audio data from the muxed content should be removed\n\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n    playlist(newPlaylist, options = {}) {\n      if (!newPlaylist) {\n        return;\n      }\n      const oldPlaylist = this.playlist_;\n      const segmentInfo = this.pendingSegment_;\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n      //\n      // Use the INIT state to determine if playback has started, as the playlist sync info\n      // should be fixed once requests begin (as sync points are generated based on sync\n      // info), but not before then.\n\n      if (this.state === 'INIT') {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        }; // Setting the date time mapping means mapping the program date time (if available)\n        // to time 0 on the player's timeline. The playlist's syncInfo serves a similar\n        // purpose, mapping the initial mediaSequence to time zero. Since the syncInfo can\n        // be updated as the playlist is refreshed before the loader starts loading, the\n        // program date time mapping needs to be updated as well.\n        //\n        // This mapping is only done for the main loader because a program date time should\n        // map equivalently between playlists.\n\n        if (this.loaderType_ === 'main') {\n          this.syncController_.setDateTimeMappingForStart(newPlaylist);\n        }\n      }\n      let oldId = null;\n      if (oldPlaylist) {\n        if (oldPlaylist.id) {\n          oldId = oldPlaylist.id;\n        } else if (oldPlaylist.uri) {\n          oldId = oldPlaylist.uri;\n        }\n      }\n      this.logger_(`playlist update [${oldId} => ${newPlaylist.id || newPlaylist.uri}]`);\n      if (this.mediaSequenceSync_) {\n        this.mediaSequenceSync_.update(newPlaylist, this.currentTime_());\n        this.logger_(`Playlist update:\ncurrentTime: ${this.currentTime_()}\nbufferedEnd: ${lastBufferedEnd(this.buffered_())}\n`, this.mediaSequenceSync_.diagnostics);\n      } // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n\n      this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must reset/resync the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          // We only want to reset the loader here for LLHLS playback, as resetLoader sets fetchAtBuffer_\n          // to false, resulting in fetching segments at currentTime and causing repeated\n          // same-segment requests on playlist change. This erroneously drives up the playback watcher\n          // stalled segment count, as re-requesting segments at the currentTime or browser cached segments\n          // will not change the buffer.\n          // Reference for LLHLS fixes: https://github.com/videojs/http-streaming/pull/1201\n          const isLLHLS = !newPlaylist.endList && typeof newPlaylist.partTargetDuration === 'number';\n          if (isLLHLS) {\n            this.resetLoader();\n          } else {\n            this.resyncLoader();\n          }\n        }\n        this.currentMediaInfo_ = void 0;\n        this.trigger('playlistupdate'); // the rest of this function depends on `oldPlaylist` being defined\n\n        return;\n      } // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n\n      const mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n      this.logger_(`live window shift [${mediaSequenceDiff}]`); // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff; // this can happen if we are going to load the first segment, but get a playlist\n        // update during that. mediaIndex would go from 0 to -1 if mediaSequence in the\n        // new playlist was incremented by 1.\n\n        if (this.mediaIndex < 0) {\n          this.mediaIndex = null;\n          this.partIndex = null;\n        } else {\n          const segment = this.playlist_.segments[this.mediaIndex]; // partIndex should remain the same for the same segment\n          // unless parts fell off of the playlist for this segment.\n          // In that case we need to reset partIndex and resync\n\n          if (this.partIndex && (!segment.parts || !segment.parts.length || !segment.parts[this.partIndex])) {\n            const mediaIndex = this.mediaIndex;\n            this.logger_(`currently processing part (index ${this.partIndex}) no longer exists.`);\n            this.resetLoader(); // We want to throw away the partIndex and the data associated with it,\n            // as the part was dropped from our current playlists segment.\n            // The mediaIndex will still be valid so keep that around.\n\n            this.mediaIndex = mediaIndex;\n          }\n        }\n      } // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleAppendsDone_` after the segment has been successfully appended\n\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff;\n        if (segmentInfo.mediaIndex < 0) {\n          segmentInfo.mediaIndex = null;\n          segmentInfo.partIndex = null;\n        } else {\n          // we need to update the referenced segment so that timing information is\n          // saved for the new playlist's segment, however, if the segment fell off the\n          // playlist, we can leave the old reference and just lose the timing info\n          if (segmentInfo.mediaIndex >= 0) {\n            segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n          }\n          if (segmentInfo.partIndex >= 0 && segmentInfo.segment.parts) {\n            segmentInfo.part = segmentInfo.segment.parts[segmentInfo.partIndex];\n          }\n        }\n      }\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n    pause() {\n      if (this.checkBufferTimeout_) {\n        window.clearTimeout(this.checkBufferTimeout_);\n        this.checkBufferTimeout_ = null;\n      }\n    }\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n    paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     *\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n    resetEverything(done) {\n      this.ended_ = false;\n      this.activeInitSegmentId_ = null;\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n      this.resetLoader(); // remove from 0, the earliest point, to Infinity, to signify removal of everything.\n      // VTT Segment Loader doesn't need to do anything but in the regular SegmentLoader,\n      // we then clamp the value to duration if necessary.\n\n      this.remove(0, Infinity, done); // clears fmp4 captions\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearAllMp4Captions'\n        }); // reset the cache in the transmuxer\n\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n      }\n    }\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n    resetLoader() {\n      this.fetchAtBuffer_ = false;\n      if (this.mediaSequenceSync_) {\n        this.mediaSequenceSync_.resetAppendedStatus();\n      }\n      this.resyncLoader();\n    }\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n    resyncLoader() {\n      if (this.transmuxer_) {\n        // need to clear out any cached data to prepare for the new segment\n        segmentTransmuxer.reset(this.transmuxer_);\n      }\n      this.mediaIndex = null;\n      this.partIndex = null;\n      this.syncPoint_ = null;\n      this.isPendingTimestampOffset_ = false; // this is mainly to sync timing-info when switching between renditions with and without timestamp-rollover,\n      // so we don't want it for DASH or fragmented mp4 segments.\n\n      const isFmp4 = this.currentMediaInfo_ && this.currentMediaInfo_.isFmp4;\n      const isHlsTs = this.sourceType_ === 'hls' && !isFmp4;\n      if (isHlsTs) {\n        this.shouldForceTimestampOffsetAfterResync_ = true;\n      }\n      this.callQueue_ = [];\n      this.loadQueue_ = [];\n      this.metadataQueue_.id3 = [];\n      this.metadataQueue_.caption = [];\n      this.abort();\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearParsedMp4Captions'\n        });\n      }\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     *\n     * @param {number} start - the start time of the region to remove from the buffer\n     * @param {number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * @param {boolean} force - force all remove operations to happen\n     * operation is complete\n     */\n\n    remove(start, end, done = () => {}, force = false) {\n      // clamp end to duration if we need to remove everything.\n      // This is due to a browser bug that causes issues if we remove to Infinity.\n      // videojs/videojs-contrib-hls#1225\n      if (end === Infinity) {\n        end = this.duration_();\n      } // skip removes that would throw an error\n      // commonly happens during a rendition switch at the start of a video\n      // from start 0 to end 0\n\n      if (end <= start) {\n        this.logger_('skipping remove because end ${end} is <= start ${start}');\n        return;\n      }\n      if (!this.sourceUpdater_ || !this.getMediaInfo_()) {\n        this.logger_('skipping remove because no source updater or starting media info'); // nothing to remove if we haven't processed any media\n\n        return;\n      } // set it to one to complete this function's removes\n\n      let removesRemaining = 1;\n      const removeFinished = () => {\n        removesRemaining--;\n        if (removesRemaining === 0) {\n          done();\n        }\n      };\n      if (force || !this.audioDisabled_) {\n        removesRemaining++;\n        this.sourceUpdater_.removeAudio(start, end, removeFinished);\n      } // While it would be better to only remove video if the main loader has video, this\n      // should be safe with audio only as removeVideo will call back even if there's no\n      // video buffer.\n      //\n      // In theory we can check to see if there's video before calling the remove, but in\n      // the event that we're switching between renditions and from video to audio only\n      // (when we add support for that), we may need to clear the video contents despite\n      // what the new media will contain.\n\n      if (force || this.loaderType_ === 'main') {\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n        removesRemaining++;\n        this.sourceUpdater_.removeVideo(start, end, removeFinished);\n      } // remove any captions and ID3 tags\n\n      for (const track in this.inbandTextTracks_) {\n        removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n      }\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_); // finished this function's removes\n\n      removeFinished();\n    }\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n    monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window.clearTimeout(this.checkBufferTimeout_);\n      }\n      this.checkBufferTimeout_ = window.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n    monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n      if (this.checkBufferTimeout_) {\n        window.clearTimeout(this.checkBufferTimeout_);\n      }\n      this.checkBufferTimeout_ = window.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n    fillBuffer_() {\n      // TODO since the source buffer maintains a queue, and we shouldn't call this function\n      // except when we're ready for the next segment, this check can most likely be removed\n      if (this.sourceUpdater_.updating()) {\n        return;\n      } // see if we need to begin loading immediately\n\n      const segmentInfo = this.chooseNextRequest_();\n      if (!segmentInfo) {\n        return;\n      }\n      const metadata = {\n        segmentInfo: segmentInfoPayload({\n          type: this.loaderType_,\n          segment: segmentInfo\n        })\n      };\n      this.trigger({\n        type: 'segmentselected',\n        metadata\n      });\n      if (typeof segmentInfo.timestampOffset === 'number') {\n        this.isPendingTimestampOffset_ = false;\n        this.timelineChangeController_.pendingTimelineChange({\n          type: this.loaderType_,\n          from: this.currentTimeline_,\n          to: segmentInfo.timeline\n        });\n      }\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Determines if we should call endOfStream on the media source based\n     * on the state of the buffer or if appened segment was the final\n     * segment in the playlist.\n     *\n     * @param {number} [mediaIndex] the media index of segment we last appended\n     * @param {Object} [playlist] a media playlist object\n     * @return {boolean} do we need to call endOfStream on the MediaSource\n     */\n\n    isEndOfStream_(mediaIndex = this.mediaIndex, playlist = this.playlist_, partIndex = this.partIndex) {\n      if (!playlist || !this.mediaSource_) {\n        return false;\n      }\n      const segment = typeof mediaIndex === 'number' && playlist.segments[mediaIndex]; // mediaIndex is zero based but length is 1 based\n\n      const appendedLastSegment = mediaIndex + 1 === playlist.segments.length; // true if there are no parts, or this is the last part.\n\n      const appendedLastPart = !segment || !segment.parts || partIndex + 1 === segment.parts.length; // if we've buffered to the end of the video, we need to call endOfStream\n      // so that MediaSources can trigger the `ended` event when it runs out of\n      // buffered data instead of waiting for me\n\n      return playlist.endList && this.mediaSource_.readyState === 'open' && appendedLastSegment && appendedLastPart;\n    }\n    /**\n     * Determines what request should be made given current segment loader state.\n     *\n     * @return {Object} a request object that describes the segment/part to load\n     */\n\n    chooseNextRequest_() {\n      const buffered = this.buffered_();\n      const bufferedEnd = lastBufferedEnd(buffered) || 0;\n      const bufferedTime = timeAheadOf(buffered, this.currentTime_());\n      const preloaded = !this.hasPlayed_() && bufferedTime >= 1;\n      const haveEnoughBuffer = bufferedTime >= this.goalBufferLength_();\n      const segments = this.playlist_.segments; // return no segment if:\n      // 1. we don't have segments\n      // 2. The video has not yet played and we already downloaded a segment\n      // 3. we already have enough buffered time\n\n      if (!segments.length || preloaded || haveEnoughBuffer) {\n        return null;\n      }\n      this.syncPoint_ = this.syncPoint_ || this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_(), this.loaderType_);\n      const next = {\n        partIndex: null,\n        mediaIndex: null,\n        startOfSegment: null,\n        playlist: this.playlist_,\n        isSyncRequest: Boolean(!this.syncPoint_)\n      };\n      if (next.isSyncRequest) {\n        next.mediaIndex = getSyncSegmentCandidate(this.currentTimeline_, segments, bufferedEnd);\n        this.logger_(`choose next request. Can not find sync point. Fallback to media Index: ${next.mediaIndex}`);\n      } else if (this.mediaIndex !== null) {\n        const segment = segments[this.mediaIndex];\n        const partIndex = typeof this.partIndex === 'number' ? this.partIndex : -1;\n        next.startOfSegment = segment.end ? segment.end : bufferedEnd;\n        if (segment.parts && segment.parts[partIndex + 1]) {\n          next.mediaIndex = this.mediaIndex;\n          next.partIndex = partIndex + 1;\n        } else {\n          next.mediaIndex = this.mediaIndex + 1;\n        }\n      } else {\n        let segmentIndex;\n        let partIndex;\n        let startTime;\n        const targetTime = this.fetchAtBuffer_ ? bufferedEnd : this.currentTime_();\n        if (this.mediaSequenceSync_) {\n          this.logger_(`chooseNextRequest_ request after Quality Switch:\nFor TargetTime: ${targetTime}.\nCurrentTime: ${this.currentTime_()}\nBufferedEnd: ${bufferedEnd}\nFetch At Buffer: ${this.fetchAtBuffer_}\n`, this.mediaSequenceSync_.diagnostics);\n        }\n        if (this.mediaSequenceSync_ && this.mediaSequenceSync_.isReliable) {\n          const syncInfo = this.getSyncInfoFromMediaSequenceSync_(targetTime);\n          if (!syncInfo) {\n            const message = 'No sync info found while using media sequence sync';\n            this.error({\n              message,\n              metadata: {\n                errorType: videojs.Error.StreamingFailedToSelectNextSegment,\n                error: new Error(message)\n              }\n            });\n            this.logger_('chooseNextRequest_ - no sync info found using media sequence sync'); // no match\n\n            return null;\n          }\n          this.logger_(`chooseNextRequest_ mediaSequence syncInfo (${syncInfo.start} --> ${syncInfo.end})`);\n          segmentIndex = syncInfo.segmentIndex;\n          partIndex = syncInfo.partIndex;\n          startTime = syncInfo.start;\n        } else {\n          this.logger_('chooseNextRequest_ - fallback to a regular segment selection algorithm, based on a syncPoint.'); // fallback\n\n          const mediaInfoForTime = Playlist.getMediaInfoForTime({\n            exactManifestTimings: this.exactManifestTimings,\n            playlist: this.playlist_,\n            currentTime: targetTime,\n            startingPartIndex: this.syncPoint_.partIndex,\n            startingSegmentIndex: this.syncPoint_.segmentIndex,\n            startTime: this.syncPoint_.time\n          });\n          segmentIndex = mediaInfoForTime.segmentIndex;\n          partIndex = mediaInfoForTime.partIndex;\n          startTime = mediaInfoForTime.startTime;\n        }\n        next.getMediaInfoForTime = this.fetchAtBuffer_ ? `bufferedEnd ${targetTime}` : `currentTime ${targetTime}`;\n        next.mediaIndex = segmentIndex;\n        next.startOfSegment = startTime;\n        next.partIndex = partIndex;\n        this.logger_(`choose next request. Playlist switched and we have a sync point. Media Index: ${next.mediaIndex} `);\n      }\n      const nextSegment = segments[next.mediaIndex];\n      let nextPart = nextSegment && typeof next.partIndex === 'number' && nextSegment.parts && nextSegment.parts[next.partIndex]; // if the next segment index is invalid or\n      // the next partIndex is invalid do not choose a next segment.\n\n      if (!nextSegment || typeof next.partIndex === 'number' && !nextPart) {\n        return null;\n      } // if the next segment has parts, and we don't have a partIndex.\n      // Set partIndex to 0\n\n      if (typeof next.partIndex !== 'number' && nextSegment.parts) {\n        next.partIndex = 0;\n        nextPart = nextSegment.parts[0];\n      } // independentSegments applies to every segment in a playlist. If independentSegments appears in a main playlist,\n      // it applies to each segment in each media playlist.\n      // https://datatracker.ietf.org/doc/html/draft-pantos-http-live-streaming-23#section-4.3.5.1\n\n      const hasIndependentSegments = this.vhs_.playlists && this.vhs_.playlists.main && this.vhs_.playlists.main.independentSegments || this.playlist_.independentSegments; // if we have no buffered data then we need to make sure\n      // that the next part we append is \"independent\" if possible.\n      // So we check if the previous part is independent, and request\n      // it if it is.\n\n      if (!bufferedTime && nextPart && !hasIndependentSegments && !nextPart.independent) {\n        if (next.partIndex === 0) {\n          const lastSegment = segments[next.mediaIndex - 1];\n          const lastSegmentLastPart = lastSegment.parts && lastSegment.parts.length && lastSegment.parts[lastSegment.parts.length - 1];\n          if (lastSegmentLastPart && lastSegmentLastPart.independent) {\n            next.mediaIndex -= 1;\n            next.partIndex = lastSegment.parts.length - 1;\n            next.independent = 'previous segment';\n          }\n        } else if (nextSegment.parts[next.partIndex - 1].independent) {\n          next.partIndex -= 1;\n          next.independent = 'previous part';\n        }\n      }\n      const ended = this.mediaSource_ && this.mediaSource_.readyState === 'ended'; // do not choose a next segment if all of the following:\n      // 1. this is the last segment in the playlist\n      // 2. end of stream has been called on the media source already\n      // 3. the player is not seeking\n\n      if (next.mediaIndex >= segments.length - 1 && ended && !this.seeking_()) {\n        return null;\n      }\n      if (this.shouldForceTimestampOffsetAfterResync_) {\n        this.shouldForceTimestampOffsetAfterResync_ = false;\n        next.forceTimestampOffset = true;\n        this.logger_('choose next request. Force timestamp offset after loader resync');\n      }\n      return this.generateSegmentInfo_(next);\n    }\n    getSyncInfoFromMediaSequenceSync_(targetTime) {\n      if (!this.mediaSequenceSync_) {\n        return null;\n      } // we should pull the target time to the least available time if we drop out of sync for any reason\n\n      const finalTargetTime = Math.max(targetTime, this.mediaSequenceSync_.start);\n      if (targetTime !== finalTargetTime) {\n        this.logger_(`getSyncInfoFromMediaSequenceSync_. Pulled target time from ${targetTime} to ${finalTargetTime}`);\n      }\n      const mediaSequenceSyncInfo = this.mediaSequenceSync_.getSyncInfoForTime(finalTargetTime);\n      if (!mediaSequenceSyncInfo) {\n        // no match at all\n        return null;\n      }\n      if (!mediaSequenceSyncInfo.isAppended) {\n        // has a perfect match\n        return mediaSequenceSyncInfo;\n      } // has match, but segment was already appended.\n      // attempt to auto-advance to the nearest next segment:\n\n      const nextMediaSequenceSyncInfo = this.mediaSequenceSync_.getSyncInfoForTime(mediaSequenceSyncInfo.end);\n      if (!nextMediaSequenceSyncInfo) {\n        // no match at all\n        return null;\n      }\n      if (nextMediaSequenceSyncInfo.isAppended) {\n        this.logger_('getSyncInfoFromMediaSequenceSync_: We encounter unexpected scenario where next media sequence sync info is also appended!');\n      } // got match with the nearest next segment\n\n      return nextMediaSequenceSyncInfo;\n    }\n    generateSegmentInfo_(options) {\n      const {\n        independent,\n        playlist,\n        mediaIndex,\n        startOfSegment,\n        isSyncRequest,\n        partIndex,\n        forceTimestampOffset,\n        getMediaInfoForTime\n      } = options;\n      const segment = playlist.segments[mediaIndex];\n      const part = typeof partIndex === 'number' && segment.parts[partIndex];\n      const segmentInfo = {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: part && part.resolvedUri || segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex,\n        partIndex: part ? partIndex : null,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest,\n        startOfSegment,\n        // the segment's playlist\n        playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: part && part.duration || segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment,\n        part,\n        byteLength: 0,\n        transmuxer: this.transmuxer_,\n        // type of getMediaInfoForTime that was used to get this segment\n        getMediaInfoForTime,\n        independent\n      };\n      const overrideCheck = typeof forceTimestampOffset !== 'undefined' ? forceTimestampOffset : this.isPendingTimestampOffset_;\n      segmentInfo.timestampOffset = this.timestampOffsetForSegment_({\n        segmentTimeline: segment.timeline,\n        currentTimeline: this.currentTimeline_,\n        startOfSegment,\n        buffered: this.buffered_(),\n        overrideCheck\n      });\n      const audioBufferedEnd = lastBufferedEnd(this.sourceUpdater_.audioBuffered());\n      if (typeof audioBufferedEnd === 'number') {\n        // since the transmuxer is using the actual timing values, but the buffer is\n        // adjusted by the timestamp offset, we must adjust the value here\n        segmentInfo.audioAppendStart = audioBufferedEnd - this.sourceUpdater_.audioTimestampOffset();\n      }\n      if (this.sourceUpdater_.videoBuffered().length) {\n        segmentInfo.gopsToAlignWith = gopsSafeToAlignWith(this.gopBuffer_,\n        // since the transmuxer is using the actual timing values, but the time is\n        // adjusted by the timestmap offset, we must adjust the value here\n        this.currentTime_() - this.sourceUpdater_.videoTimestampOffset(), this.timeMapping_);\n      }\n      return segmentInfo;\n    } // get the timestampoffset for a segment,\n    // added so that vtt segment loader can override and prevent\n    // adding timestamp offsets.\n\n    timestampOffsetForSegment_(options) {\n      return timestampOffsetForSegment(options);\n    }\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @private\n     */\n\n    earlyAbortWhenNeeded_(stats) {\n      if (this.vhs_.tech_.paused() ||\n      // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout ||\n      // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return;\n      } // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return;\n      }\n      const currentTime = this.currentTime_();\n      const measuredBandwidth = stats.bandwidth;\n      const segmentDuration = this.pendingSegment_.duration;\n      const requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n\n      const timeUntilRebuffer$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.vhs_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n\n      if (requestTimeRemaining <= timeUntilRebuffer$1) {\n        return;\n      }\n      const switchCandidate = minRebufferMaxBandwidthSelector({\n        main: this.vhs_.playlists.main,\n        currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n      if (!switchCandidate) {\n        return;\n      }\n      const rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$1;\n      const timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n      let minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n\n      if (timeUntilRebuffer$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return;\n      } // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.trigger('earlyabort');\n    }\n    handleAbort_(segmentInfo) {\n      this.logger_(`Aborting ${segmentInfoString(segmentInfo)}`);\n      this.mediaRequestsAborted += 1;\n    }\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n    handleProgress_(event, simpleSegment) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      }\n      this.trigger('progress');\n    }\n    handleTrackInfo_(simpleSegment, trackInfo) {\n      const {\n        hasAudio,\n        hasVideo\n      } = trackInfo;\n      const metadata = {\n        segmentInfo: segmentInfoPayload({\n          type: this.loaderType_,\n          segment: simpleSegment\n        }),\n        trackInfo: {\n          hasAudio,\n          hasVideo\n        }\n      };\n      this.trigger({\n        type: 'segmenttransmuxingtrackinfoavailable',\n        metadata\n      });\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      }\n      if (this.checkForIllegalMediaSwitch(trackInfo)) {\n        return;\n      }\n      trackInfo = trackInfo || {}; // When we have track info, determine what media types this loader is dealing with.\n      // Guard against cases where we're not getting track info at all until we are\n      // certain that all streams will provide it.\n\n      if (!shallowEqual(this.currentMediaInfo_, trackInfo)) {\n        this.appendInitSegment_ = {\n          audio: true,\n          video: true\n        };\n        this.startingMediaInfo_ = trackInfo;\n        this.currentMediaInfo_ = trackInfo;\n        this.logger_('trackinfo update', trackInfo);\n        this.trigger('trackinfo');\n      } // trackinfo may cause an abort if the trackinfo\n      // causes a codec change to an unsupported codec.\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      } // set trackinfo on the pending segment so that\n      // it can append.\n\n      this.pendingSegment_.trackInfo = trackInfo; // check if any calls were waiting on the track info\n\n      if (this.hasEnoughInfoToAppend_()) {\n        this.processCallQueue_();\n      }\n    }\n    handleTimingInfo_(simpleSegment, mediaType, timeType, time) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      }\n      const segmentInfo = this.pendingSegment_;\n      const timingInfoProperty = timingInfoPropertyForMedia(mediaType);\n      segmentInfo[timingInfoProperty] = segmentInfo[timingInfoProperty] || {};\n      segmentInfo[timingInfoProperty][timeType] = time;\n      this.logger_(`timinginfo: ${mediaType} - ${timeType} - ${time}`); // check if any calls were waiting on the timing info\n\n      if (this.hasEnoughInfoToAppend_()) {\n        this.processCallQueue_();\n      }\n    }\n    handleCaptions_(simpleSegment, captionData) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      } // This could only happen with fmp4 segments, but\n      // should still not happen in general\n\n      if (captionData.length === 0) {\n        this.logger_('SegmentLoader received no captions from a caption event');\n        return;\n      }\n      const segmentInfo = this.pendingSegment_; // Wait until we have some video data so that caption timing\n      // can be adjusted by the timestamp offset\n\n      if (!segmentInfo.hasAppendedData_) {\n        this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, simpleSegment, captionData));\n        return;\n      }\n      const timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();\n      const captionTracks = {}; // get total start/end and captions for each track/stream\n\n      captionData.forEach(caption => {\n        // caption.stream is actually a track name...\n        // set to the existing values in tracks or default values\n        captionTracks[caption.stream] = captionTracks[caption.stream] || {\n          // Infinity, as any other value will be less than this\n          startTime: Infinity,\n          captions: [],\n          // 0 as an other value will be more than this\n          endTime: 0\n        };\n        const captionTrack = captionTracks[caption.stream];\n        captionTrack.startTime = Math.min(captionTrack.startTime, caption.startTime + timestampOffset);\n        captionTrack.endTime = Math.max(captionTrack.endTime, caption.endTime + timestampOffset);\n        captionTrack.captions.push(caption);\n      });\n      Object.keys(captionTracks).forEach(trackName => {\n        const {\n          startTime,\n          endTime,\n          captions\n        } = captionTracks[trackName];\n        const inbandTextTracks = this.inbandTextTracks_;\n        this.logger_(`adding cues from ${startTime} -> ${endTime} for ${trackName}`);\n        createCaptionsTrackIfNotExists(inbandTextTracks, this.vhs_.tech_, trackName); // clear out any cues that start and end at the same time period for the same track.\n        // We do this because a rendition change that also changes the timescale for captions\n        // will result in captions being re-parsed for certain segments. If we add them again\n        // without clearing we will have two of the same captions visible.\n\n        removeCuesFromTrack(startTime, endTime, inbandTextTracks[trackName]);\n        addCaptionData({\n          captionArray: captions,\n          inbandTextTracks,\n          timestampOffset\n        });\n      }); // Reset stored captions since we added parsed\n      // captions to a text track at this point\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearParsedMp4Captions'\n        });\n      }\n    }\n    handleId3_(simpleSegment, id3Frames, dispatchType) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      }\n      const segmentInfo = this.pendingSegment_; // we need to have appended data in order for the timestamp offset to be set\n\n      if (!segmentInfo.hasAppendedData_) {\n        this.metadataQueue_.id3.push(this.handleId3_.bind(this, simpleSegment, id3Frames, dispatchType));\n        return;\n      }\n      this.addMetadataToTextTrack(dispatchType, id3Frames, this.duration_());\n    }\n    processMetadataQueue_() {\n      this.metadataQueue_.id3.forEach(fn => fn());\n      this.metadataQueue_.caption.forEach(fn => fn());\n      this.metadataQueue_.id3 = [];\n      this.metadataQueue_.caption = [];\n    }\n    processCallQueue_() {\n      const callQueue = this.callQueue_; // Clear out the queue before the queued functions are run, since some of the\n      // functions may check the length of the load queue and default to pushing themselves\n      // back onto the queue.\n\n      this.callQueue_ = [];\n      callQueue.forEach(fun => fun());\n    }\n    processLoadQueue_() {\n      const loadQueue = this.loadQueue_; // Clear out the queue before the queued functions are run, since some of the\n      // functions may check the length of the load queue and default to pushing themselves\n      // back onto the queue.\n\n      this.loadQueue_ = [];\n      loadQueue.forEach(fun => fun());\n    }\n    /**\n     * Determines whether the loader has enough info to load the next segment.\n     *\n     * @return {boolean}\n     *         Whether or not the loader has enough info to load the next segment\n     */\n\n    hasEnoughInfoToLoad_() {\n      // Since primary timing goes by video, only the audio loader potentially needs to wait\n      // to load.\n      if (this.loaderType_ !== 'audio') {\n        return true;\n      }\n      const segmentInfo = this.pendingSegment_; // A fill buffer must have already run to establish a pending segment before there's\n      // enough info to load.\n\n      if (!segmentInfo) {\n        return false;\n      } // The first segment can and should be loaded immediately so that source buffers are\n      // created together (before appending). Source buffer creation uses the presence of\n      // audio and video data to determine whether to create audio/video source buffers, and\n      // uses processed (transmuxed or parsed) media to determine the types required.\n\n      if (!this.getCurrentMediaInfo_()) {\n        return true;\n      }\n      if (\n      // Technically, instead of waiting to load a segment on timeline changes, a segment\n      // can be requested and downloaded and only wait before it is transmuxed or parsed.\n      // But in practice, there are a few reasons why it is better to wait until a loader\n      // is ready to append that segment before requesting and downloading:\n      //\n      // 1. Because audio and main loaders cross discontinuities together, if this loader\n      //    is waiting for the other to catch up, then instead of requesting another\n      //    segment and using up more bandwidth, by not yet loading, more bandwidth is\n      //    allotted to the loader currently behind.\n      // 2. media-segment-request doesn't have to have logic to consider whether a segment\n      // is ready to be processed or not, isolating the queueing behavior to the loader.\n      // 3. The audio loader bases some of its segment properties on timing information\n      //    provided by the main loader, meaning that, if the logic for waiting on\n      //    processing was in media-segment-request, then it would also need to know how\n      //    to re-generate the segment information after the main loader caught up.\n      shouldWaitForTimelineChange({\n        timelineChangeController: this.timelineChangeController_,\n        currentTimeline: this.currentTimeline_,\n        segmentTimeline: segmentInfo.timeline,\n        loaderType: this.loaderType_,\n        audioDisabled: this.audioDisabled_\n      })) {\n        if (shouldFixBadTimelineChanges(this.timelineChangeController_)) {\n          fixBadTimelineChange(this);\n        }\n        return false;\n      }\n      return true;\n    }\n    getCurrentMediaInfo_(segmentInfo = this.pendingSegment_) {\n      return segmentInfo && segmentInfo.trackInfo || this.currentMediaInfo_;\n    }\n    getMediaInfo_(segmentInfo = this.pendingSegment_) {\n      return this.getCurrentMediaInfo_(segmentInfo) || this.startingMediaInfo_;\n    }\n    getPendingSegmentPlaylist() {\n      return this.pendingSegment_ ? this.pendingSegment_.playlist : null;\n    }\n    hasEnoughInfoToAppend_() {\n      if (!this.sourceUpdater_.ready()) {\n        return false;\n      } // If content needs to be removed or the loader is waiting on an append reattempt,\n      // then no additional content should be appended until the prior append is resolved.\n\n      if (this.waitingOnRemove_ || this.quotaExceededErrorRetryTimeout_) {\n        return false;\n      }\n      const segmentInfo = this.pendingSegment_;\n      const trackInfo = this.getCurrentMediaInfo_(); // no segment to append any data for or\n      // we do not have information on this specific\n      // segment yet\n\n      if (!segmentInfo || !trackInfo) {\n        return false;\n      }\n      const {\n        hasAudio,\n        hasVideo,\n        isMuxed\n      } = trackInfo;\n      if (hasVideo && !segmentInfo.videoTimingInfo) {\n        return false;\n      } // muxed content only relies on video timing information for now.\n\n      if (hasAudio && !this.audioDisabled_ && !isMuxed && !segmentInfo.audioTimingInfo) {\n        return false;\n      } // we need to allow an append here even if we're moving to different timelines.\n\n      if (shouldWaitForTimelineChange({\n        timelineChangeController: this.timelineChangeController_,\n        currentTimeline: this.currentTimeline_,\n        segmentTimeline: segmentInfo.timeline,\n        loaderType: this.loaderType_,\n        audioDisabled: this.audioDisabled_\n      })) {\n        if (shouldFixBadTimelineChanges(this.timelineChangeController_)) {\n          fixBadTimelineChange(this);\n        }\n        return false;\n      }\n      return true;\n    }\n    handleData_(simpleSegment, result) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      } // If there's anything in the call queue, then this data came later and should be\n      // executed after the calls currently queued.\n\n      if (this.callQueue_.length || !this.hasEnoughInfoToAppend_()) {\n        this.callQueue_.push(this.handleData_.bind(this, simpleSegment, result));\n        return;\n      }\n      const segmentInfo = this.pendingSegment_; // update the time mapping so we can translate from display time to media time\n\n      this.setTimeMapping_(segmentInfo.timeline); // for tracking overall stats\n\n      this.updateMediaSecondsLoaded_(segmentInfo.part || segmentInfo.segment); // Note that the state isn't changed from loading to appending. This is because abort\n      // logic may change behavior depending on the state, and changing state too early may\n      // inflate our estimates of bandwidth. In the future this should be re-examined to\n      // note more granular states.\n      // don't process and append data if the mediaSource is closed\n\n      if (this.mediaSource_.readyState === 'closed') {\n        return;\n      } // if this request included an initialization segment, save that data\n      // to the initSegment cache\n\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegmentForMap(simpleSegment.map, true); // move over init segment properties to media request\n\n        segmentInfo.segment.map = simpleSegment.map;\n      } // if this request included a segment key, save that data in the cache\n\n      if (simpleSegment.key) {\n        this.segmentKey(simpleSegment.key, true);\n      }\n      segmentInfo.isFmp4 = simpleSegment.isFmp4;\n      segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n      if (segmentInfo.isFmp4) {\n        this.trigger('fmp4');\n        segmentInfo.timingInfo.start = segmentInfo[timingInfoPropertyForMedia(result.type)].start;\n      } else {\n        const trackInfo = this.getCurrentMediaInfo_();\n        const useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n        let firstVideoFrameTimeForData;\n        if (useVideoTimingInfo) {\n          firstVideoFrameTimeForData = segmentInfo.videoTimingInfo.start;\n        } // Segment loader knows more about segment timing than the transmuxer (in certain\n        // aspects), so make any changes required for a more accurate start time.\n        // Don't set the end time yet, as the segment may not be finished processing.\n\n        segmentInfo.timingInfo.start = this.trueSegmentStart_({\n          currentStart: segmentInfo.timingInfo.start,\n          playlist: segmentInfo.playlist,\n          mediaIndex: segmentInfo.mediaIndex,\n          currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(),\n          useVideoTimingInfo,\n          firstVideoFrameTimeForData,\n          videoTimingInfo: segmentInfo.videoTimingInfo,\n          audioTimingInfo: segmentInfo.audioTimingInfo\n        });\n      } // Init segments for audio and video only need to be appended in certain cases. Now\n      // that data is about to be appended, we can check the final cases to determine\n      // whether we should append an init segment.\n\n      this.updateAppendInitSegmentStatus(segmentInfo, result.type); // Timestamp offset should be updated once we get new data and have its timing info,\n      // as we use the start of the segment to offset the best guess (playlist provided)\n      // timestamp offset.\n\n      this.updateSourceBufferTimestampOffset_(segmentInfo); // if this is a sync request we need to determine whether it should\n      // be appended or not.\n\n      if (segmentInfo.isSyncRequest) {\n        // first save/update our timing info for this segment.\n        // this is what allows us to choose an accurate segment\n        // and the main reason we make a sync request.\n        this.updateTimingInfoEnd_(segmentInfo);\n        this.syncController_.saveSegmentTimingInfo({\n          segmentInfo,\n          shouldSaveTimelineMapping: this.loaderType_ === 'main'\n        });\n        const next = this.chooseNextRequest_(); // If the sync request isn't the segment that would be requested next\n        // after taking into account its timing info, do not append it.\n\n        if (next.mediaIndex !== segmentInfo.mediaIndex || next.partIndex !== segmentInfo.partIndex) {\n          this.logger_('sync segment was incorrect, not appending');\n          return;\n        } // otherwise append it like any other segment as our guess was correct.\n\n        this.logger_('sync segment was correct, appending');\n      } // Save some state so that in the future anything waiting on first append (and/or\n      // timestamp offset(s)) can process immediately. While the extra state isn't optimal,\n      // we need some notion of whether the timestamp offset or other relevant information\n      // has had a chance to be set.\n\n      segmentInfo.hasAppendedData_ = true; // Now that the timestamp offset should be set, we can append any waiting ID3 tags.\n\n      this.processMetadataQueue_();\n      this.appendData_(segmentInfo, result);\n    }\n    updateAppendInitSegmentStatus(segmentInfo, type) {\n      // alt audio doesn't manage timestamp offset\n      if (this.loaderType_ === 'main' && typeof segmentInfo.timestampOffset === 'number' &&\n      // in the case that we're handling partial data, we don't want to append an init\n      // segment for each chunk\n      !segmentInfo.changedTimestampOffset) {\n        // if the timestamp offset changed, the timeline may have changed, so we have to re-\n        // append init segments\n        this.appendInitSegment_ = {\n          audio: true,\n          video: true\n        };\n      }\n      if (this.playlistOfLastInitSegment_[type] !== segmentInfo.playlist) {\n        // make sure we append init segment on playlist changes, in case the media config\n        // changed\n        this.appendInitSegment_[type] = true;\n      }\n    }\n    getInitSegmentAndUpdateState_({\n      type,\n      initSegment,\n      map,\n      playlist\n    }) {\n      // \"The EXT-X-MAP tag specifies how to obtain the Media Initialization Section\n      // (Section 3) required to parse the applicable Media Segments.  It applies to every\n      // Media Segment that appears after it in the Playlist until the next EXT-X-MAP tag\n      // or until the end of the playlist.\"\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.5\n      if (map) {\n        const id = initSegmentId(map);\n        if (this.activeInitSegmentId_ === id) {\n          // don't need to re-append the init segment if the ID matches\n          return null;\n        } // a map-specified init segment takes priority over any transmuxed (or otherwise\n        // obtained) init segment\n        //\n        // this also caches the init segment for later use\n\n        initSegment = this.initSegmentForMap(map, true).bytes;\n        this.activeInitSegmentId_ = id;\n      } // We used to always prepend init segments for video, however, that shouldn't be\n      // necessary. Instead, we should only append on changes, similar to what we've always\n      // done for audio. This is more important (though may not be that important) for\n      // frame-by-frame appending for LHLS, simply because of the increased quantity of\n      // appends.\n\n      if (initSegment && this.appendInitSegment_[type]) {\n        // Make sure we track the playlist that we last used for the init segment, so that\n        // we can re-append the init segment in the event that we get data from a new\n        // playlist. Discontinuities and track changes are handled in other sections.\n        this.playlistOfLastInitSegment_[type] = playlist; // Disable future init segment appends for this type. Until a change is necessary.\n\n        this.appendInitSegment_[type] = false; // we need to clear out the fmp4 active init segment id, since\n        // we are appending the muxer init segment\n\n        this.activeInitSegmentId_ = null;\n        return initSegment;\n      }\n      return null;\n    }\n    handleQuotaExceededError_({\n      segmentInfo,\n      type,\n      bytes\n    }, error) {\n      const audioBuffered = this.sourceUpdater_.audioBuffered();\n      const videoBuffered = this.sourceUpdater_.videoBuffered(); // For now we're ignoring any notion of gaps in the buffer, but they, in theory,\n      // should be cleared out during the buffer removals. However, log in case it helps\n      // debug.\n\n      if (audioBuffered.length > 1) {\n        this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: ' + timeRangesToArray(audioBuffered).join(', '));\n      }\n      if (videoBuffered.length > 1) {\n        this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: ' + timeRangesToArray(videoBuffered).join(', '));\n      }\n      const audioBufferStart = audioBuffered.length ? audioBuffered.start(0) : 0;\n      const audioBufferEnd = audioBuffered.length ? audioBuffered.end(audioBuffered.length - 1) : 0;\n      const videoBufferStart = videoBuffered.length ? videoBuffered.start(0) : 0;\n      const videoBufferEnd = videoBuffered.length ? videoBuffered.end(videoBuffered.length - 1) : 0;\n      if (audioBufferEnd - audioBufferStart <= MIN_BACK_BUFFER && videoBufferEnd - videoBufferStart <= MIN_BACK_BUFFER) {\n        // Can't remove enough buffer to make room for new segment (or the browser doesn't\n        // allow for appends of segments this size). In the future, it may be possible to\n        // split up the segment and append in pieces, but for now, error out this playlist\n        // in an attempt to switch to a more manageable rendition.\n        this.logger_('On QUOTA_EXCEEDED_ERR, single segment too large to append to ' + 'buffer, triggering an error. ' + `Appended byte length: ${bytes.byteLength}, ` + `audio buffer: ${timeRangesToArray(audioBuffered).join(', ')}, ` + `video buffer: ${timeRangesToArray(videoBuffered).join(', ')}, `);\n        this.error({\n          message: 'Quota exceeded error with append of a single segment of content',\n          excludeUntil: Infinity\n        });\n        this.trigger('error');\n        return;\n      } // To try to resolve the quota exceeded error, clear back buffer and retry. This means\n      // that the segment-loader should block on future events until this one is handled, so\n      // that it doesn't keep moving onto further segments. Adding the call to the call\n      // queue will prevent further appends until waitingOnRemove_ and\n      // quotaExceededErrorRetryTimeout_ are cleared.\n      //\n      // Note that this will only block the current loader. In the case of demuxed content,\n      // the other load may keep filling as fast as possible. In practice, this should be\n      // OK, as it is a rare case when either audio has a high enough bitrate to fill up a\n      // source buffer, or video fills without enough room for audio to append (and without\n      // the availability of clearing out seconds of back buffer to make room for audio).\n      // But it might still be good to handle this case in the future as a TODO.\n\n      this.waitingOnRemove_ = true;\n      this.callQueue_.push(this.appendToSourceBuffer_.bind(this, {\n        segmentInfo,\n        type,\n        bytes\n      }));\n      const currentTime = this.currentTime_(); // Try to remove as much audio and video as possible to make room for new content\n      // before retrying.\n\n      const timeToRemoveUntil = currentTime - MIN_BACK_BUFFER;\n      this.logger_(`On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to ${timeToRemoveUntil}`);\n      this.remove(0, timeToRemoveUntil, () => {\n        this.logger_(`On QUOTA_EXCEEDED_ERR, retrying append in ${MIN_BACK_BUFFER}s`);\n        this.waitingOnRemove_ = false; // wait the length of time alotted in the back buffer to prevent wasted\n        // attempts (since we can't clear less than the minimum)\n\n        this.quotaExceededErrorRetryTimeout_ = window.setTimeout(() => {\n          this.logger_('On QUOTA_EXCEEDED_ERR, re-processing call queue');\n          this.quotaExceededErrorRetryTimeout_ = null;\n          this.processCallQueue_();\n        }, MIN_BACK_BUFFER * 1000);\n      }, true);\n    }\n    handleAppendError_({\n      segmentInfo,\n      type,\n      bytes\n    }, error) {\n      // if there's no error, nothing to do\n      if (!error) {\n        return;\n      }\n      if (error.code === QUOTA_EXCEEDED_ERR) {\n        this.handleQuotaExceededError_({\n          segmentInfo,\n          type,\n          bytes\n        }); // A quota exceeded error should be recoverable with a future re-append, so no need\n        // to trigger an append error.\n\n        return;\n      }\n      this.logger_('Received non QUOTA_EXCEEDED_ERR on append', error); // If an append errors, we often can't recover.\n      // (see https://w3c.github.io/media-source/#sourcebuffer-append-error).\n      //\n      // Trigger a special error so that it can be handled separately from normal,\n      // recoverable errors.\n\n      this.error({\n        message: `${type} append of ${bytes.length}b failed for segment ` + `#${segmentInfo.mediaIndex} in playlist ${segmentInfo.playlist.id}`,\n        metadata: {\n          errorType: videojs.Error.StreamingFailedToAppendSegment\n        }\n      });\n      this.trigger('appenderror');\n    }\n    appendToSourceBuffer_({\n      segmentInfo,\n      type,\n      initSegment,\n      data,\n      bytes\n    }) {\n      // If this is a re-append, bytes were already created and don't need to be recreated\n      if (!bytes) {\n        const segments = [data];\n        let byteLength = data.byteLength;\n        if (initSegment) {\n          // if the media initialization segment is changing, append it before the content\n          // segment\n          segments.unshift(initSegment);\n          byteLength += initSegment.byteLength;\n        } // Technically we should be OK appending the init segment separately, however, we\n        // haven't yet tested that, and prepending is how we have always done things.\n\n        bytes = concatSegments({\n          bytes: byteLength,\n          segments\n        });\n      }\n      const metadata = {\n        segmentInfo: segmentInfoPayload({\n          type: this.loaderType_,\n          segment: segmentInfo\n        })\n      };\n      this.trigger({\n        type: 'segmentappendstart',\n        metadata\n      });\n      this.sourceUpdater_.appendBuffer({\n        segmentInfo,\n        type,\n        bytes\n      }, this.handleAppendError_.bind(this, {\n        segmentInfo,\n        type,\n        bytes\n      }));\n    }\n    handleSegmentTimingInfo_(type, requestId, segmentTimingInfo) {\n      if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n      const segment = this.pendingSegment_.segment;\n      const timingInfoProperty = `${type}TimingInfo`;\n      if (!segment[timingInfoProperty]) {\n        segment[timingInfoProperty] = {};\n      }\n      segment[timingInfoProperty].transmuxerPrependedSeconds = segmentTimingInfo.prependedContentDuration || 0;\n      segment[timingInfoProperty].transmuxedPresentationStart = segmentTimingInfo.start.presentation;\n      segment[timingInfoProperty].transmuxedDecodeStart = segmentTimingInfo.start.decode;\n      segment[timingInfoProperty].transmuxedPresentationEnd = segmentTimingInfo.end.presentation;\n      segment[timingInfoProperty].transmuxedDecodeEnd = segmentTimingInfo.end.decode; // mainly used as a reference for debugging\n\n      segment[timingInfoProperty].baseMediaDecodeTime = segmentTimingInfo.baseMediaDecodeTime;\n    }\n    appendData_(segmentInfo, result) {\n      const {\n        type,\n        data\n      } = result;\n      if (!data || !data.byteLength) {\n        return;\n      }\n      if (type === 'audio' && this.audioDisabled_) {\n        return;\n      }\n      const initSegment = this.getInitSegmentAndUpdateState_({\n        type,\n        initSegment: result.initSegment,\n        playlist: segmentInfo.playlist,\n        map: segmentInfo.isFmp4 ? segmentInfo.segment.map : null\n      });\n      this.appendToSourceBuffer_({\n        segmentInfo,\n        type,\n        initSegment,\n        data\n      });\n    }\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n    loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n      if (typeof segmentInfo.timestampOffset === 'number') {\n        if (this.transmuxer_) {\n          this.transmuxer_.postMessage({\n            action: 'clearAllMp4Captions'\n          });\n        }\n      }\n      if (!this.hasEnoughInfoToLoad_()) {\n        this.loadQueue_.push(() => {\n          // regenerate the audioAppendStart, timestampOffset, etc as they\n          // may have changed since this function was added to the queue.\n          const options = _extends$1({}, segmentInfo, {\n            forceTimestampOffset: true\n          });\n          _extends$1(segmentInfo, this.generateSegmentInfo_(options));\n          this.isPendingTimestampOffset_ = false;\n          this.updateTransmuxerAndRequestSegment_(segmentInfo);\n        });\n        return;\n      }\n      this.updateTransmuxerAndRequestSegment_(segmentInfo);\n    }\n    updateTransmuxerAndRequestSegment_(segmentInfo) {\n      // We'll update the source buffer's timestamp offset once we have transmuxed data, but\n      // the transmuxer still needs to be updated before then.\n      //\n      // Even though keepOriginalTimestamps is set to true for the transmuxer, timestamp\n      // offset must be passed to the transmuxer for stream correcting adjustments.\n      if (this.shouldUpdateTransmuxerTimestampOffset_(segmentInfo.timestampOffset)) {\n        this.gopBuffer_.length = 0; // gopsToAlignWith was set before the GOP buffer was cleared\n\n        segmentInfo.gopsToAlignWith = [];\n        this.timeMapping_ = 0; // reset values in the transmuxer since a discontinuity should start fresh\n\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n        this.transmuxer_.postMessage({\n          action: 'setTimestampOffset',\n          timestampOffset: segmentInfo.timestampOffset\n        });\n      }\n      const simpleSegment = this.createSimplifiedSegmentObj_(segmentInfo);\n      const isEndOfStream = this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex);\n      const isWalkingForward = this.mediaIndex !== null;\n      const isDiscontinuity = segmentInfo.timeline !== this.currentTimeline_ &&\n      // currentTimeline starts at -1, so we shouldn't end the timeline switching to 0,\n      // the first timeline\n      segmentInfo.timeline > 0;\n      const isEndOfTimeline = isEndOfStream || isWalkingForward && isDiscontinuity;\n      this.logger_(`Requesting\n${compactSegmentUrlDescription(segmentInfo.uri)}\n${segmentInfoString(segmentInfo)}`); // If there's an init segment associated with this segment, but it is not cached (identified by a lack of bytes),\n      // then this init segment has never been seen before and should be appended.\n      //\n      // At this point the content type (audio/video or both) is not yet known, but it should be safe to set\n      // both to true and leave the decision of whether to append the init segment to append time.\n\n      if (simpleSegment.map && !simpleSegment.map.bytes) {\n        this.logger_('going to request init segment.');\n        this.appendInitSegment_ = {\n          video: true,\n          audio: true\n        };\n      }\n      segmentInfo.abortRequests = mediaSegmentRequest({\n        xhr: this.vhs_.xhr,\n        xhrOptions: this.xhrOptions_,\n        decryptionWorker: this.decrypter_,\n        segment: simpleSegment,\n        abortFn: this.handleAbort_.bind(this, segmentInfo),\n        progressFn: this.handleProgress_.bind(this),\n        trackInfoFn: this.handleTrackInfo_.bind(this),\n        timingInfoFn: this.handleTimingInfo_.bind(this),\n        videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'video', segmentInfo.requestId),\n        audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'audio', segmentInfo.requestId),\n        captionsFn: this.handleCaptions_.bind(this),\n        isEndOfTimeline,\n        endedTimelineFn: () => {\n          this.logger_('received endedtimeline callback');\n        },\n        id3Fn: this.handleId3_.bind(this),\n        dataFn: this.handleData_.bind(this),\n        doneFn: this.segmentRequestFinished_.bind(this),\n        onTransmuxerLog: ({\n          message,\n          level,\n          stream\n        }) => {\n          this.logger_(`${segmentInfoString(segmentInfo)} logged from transmuxer stream ${stream} as a ${level}: ${message}`);\n        },\n        triggerSegmentEventFn: ({\n          type,\n          segment,\n          keyInfo,\n          trackInfo,\n          timingInfo\n        }) => {\n          const segInfo = segmentInfoPayload({\n            segment\n          });\n          const metadata = {\n            segmentInfo: segInfo\n          }; // add other properties if necessary.\n\n          if (keyInfo) {\n            metadata.keyInfo = keyInfo;\n          }\n          if (trackInfo) {\n            metadata.trackInfo = trackInfo;\n          }\n          if (timingInfo) {\n            metadata.timingInfo = timingInfo;\n          }\n          this.trigger({\n            type,\n            metadata\n          });\n        }\n      });\n    }\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n    trimBackBuffer_(segmentInfo) {\n      const removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @return {Object} a simplified segment object copy\n     */\n\n    createSimplifiedSegmentObj_(segmentInfo) {\n      const segment = segmentInfo.segment;\n      const part = segmentInfo.part;\n      const isEncrypted = segmentInfo.segment.key || segmentInfo.segment.map && segmentInfo.segment.map.key;\n      const isMediaInitialization = segmentInfo.segment.map && !segmentInfo.segment.map.bytes;\n      const simpleSegment = {\n        resolvedUri: part ? part.resolvedUri : segment.resolvedUri,\n        byterange: part ? part.byterange : segment.byterange,\n        requestId: segmentInfo.requestId,\n        transmuxer: segmentInfo.transmuxer,\n        audioAppendStart: segmentInfo.audioAppendStart,\n        gopsToAlignWith: segmentInfo.gopsToAlignWith,\n        part: segmentInfo.part,\n        type: this.loaderType_,\n        start: segmentInfo.startOfSegment,\n        duration: segmentInfo.duration,\n        isEncrypted,\n        isMediaInitialization\n      };\n      const previousSegment = segmentInfo.playlist.segments[segmentInfo.mediaIndex - 1];\n      if (previousSegment && previousSegment.timeline === segment.timeline) {\n        // The baseStartTime of a segment is used to handle rollover when probing the TS\n        // segment to retrieve timing information. Since the probe only looks at the media's\n        // times (e.g., PTS and DTS values of the segment), and doesn't consider the\n        // player's time (e.g., player.currentTime()), baseStartTime should reflect the\n        // media time as well. transmuxedDecodeEnd represents the end time of a segment, in\n        // seconds of media time, so should be used here. The previous segment is used since\n        // the end of the previous segment should represent the beginning of the current\n        // segment, so long as they are on the same timeline.\n        if (previousSegment.videoTimingInfo) {\n          simpleSegment.baseStartTime = previousSegment.videoTimingInfo.transmuxedDecodeEnd;\n        } else if (previousSegment.audioTimingInfo) {\n          simpleSegment.baseStartTime = previousSegment.audioTimingInfo.transmuxedDecodeEnd;\n        }\n      }\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        const iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n        simpleSegment.key = this.segmentKey(segment.key);\n        simpleSegment.key.iv = iv;\n      }\n      if (segment.map) {\n        simpleSegment.map = this.initSegmentForMap(segment.map);\n      }\n      return simpleSegment;\n    }\n    saveTransferStats_(stats) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n      if (stats) {\n        this.mediaBytesTransferred += stats.bytesReceived;\n        this.mediaTransferDuration += stats.roundTripTime;\n      }\n    }\n    saveBandwidthRelatedStats_(duration, stats) {\n      // byteLength will be used for throughput, and should be based on bytes receieved,\n      // which we only know at the end of the request and should reflect total bytes\n      // downloaded rather than just bytes processed from components of the segment\n      this.pendingSegment_.byteLength = stats.bytesReceived;\n      if (duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n        this.logger_(`Ignoring segment's bandwidth because its duration of ${duration}` + ` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);\n        return;\n      }\n      const metadata = {\n        bandwidthInfo: {\n          from: this.bandwidth,\n          to: stats.bandwidth\n        }\n      }; // player event with payload\n\n      this.trigger({\n        type: 'bandwidthupdated',\n        metadata\n      });\n      this.bandwidth = stats.bandwidth;\n      this.roundTrip = stats.roundTripTime;\n    }\n    handleTimeout_() {\n      // although the VTT segment loader bandwidth isn't really used, it's good to\n      // maintain functinality between segment loaders\n      this.mediaRequestsTimedout += 1;\n      this.bandwidth = 1;\n      this.roundTrip = NaN;\n      this.trigger('bandwidthupdate');\n      this.trigger('timeout');\n    }\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n    segmentRequestFinished_(error, simpleSegment, result) {\n      // TODO handle special cases, e.g., muxed audio/video but only audio in the segment\n      // check the call queue directly since this function doesn't need to deal with any\n      // data, and can continue even if the source buffers are not set up and we didn't get\n      // any data from the segment\n      if (this.callQueue_.length) {\n        this.callQueue_.push(this.segmentRequestFinished_.bind(this, error, simpleSegment, result));\n        return;\n      }\n      this.saveTransferStats_(simpleSegment.stats); // The request was aborted and the SegmentLoader has already been reset\n\n      if (!this.pendingSegment_) {\n        return;\n      } // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      } // an error occurred from the active pendingSegment_ so reset everything\n\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY'; // aborts are not a true error condition and nothing corrective needs to be done\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          return;\n        }\n        this.pause(); // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.handleTimeout_();\n          return;\n        } // if control-flow has arrived here, then the error is real\n        // emit an error event to exclude the current playlist\n\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      }\n      const segmentInfo = this.pendingSegment_; // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n\n      this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats);\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n      if (result.gopInfo) {\n        this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, result.gopInfo, this.safeAppend_);\n      } // Although we may have already started appending on progress, we shouldn't switch the\n      // state away from loading until we are officially done loading the segment data.\n\n      this.state = 'APPENDING'; // used for testing\n\n      this.trigger('appending');\n      this.waitForAppendsToComplete_(segmentInfo);\n    }\n    setTimeMapping_(timeline) {\n      const timelineMapping = this.syncController_.mappingForTimeline(timeline);\n      if (timelineMapping !== null) {\n        this.timeMapping_ = timelineMapping;\n      }\n    }\n    updateMediaSecondsLoaded_(segment) {\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n    }\n    shouldUpdateTransmuxerTimestampOffset_(timestampOffset) {\n      if (timestampOffset === null) {\n        return false;\n      } // note that we're potentially using the same timestamp offset for both video and\n      // audio\n\n      if (this.loaderType_ === 'main' && timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n        return true;\n      }\n      if (!this.audioDisabled_ && timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n        return true;\n      }\n      return false;\n    }\n    trueSegmentStart_({\n      currentStart,\n      playlist,\n      mediaIndex,\n      firstVideoFrameTimeForData,\n      currentVideoTimestampOffset,\n      useVideoTimingInfo,\n      videoTimingInfo,\n      audioTimingInfo\n    }) {\n      if (typeof currentStart !== 'undefined') {\n        // if start was set once, keep using it\n        return currentStart;\n      }\n      if (!useVideoTimingInfo) {\n        return audioTimingInfo.start;\n      }\n      const previousSegment = playlist.segments[mediaIndex - 1]; // The start of a segment should be the start of the first full frame contained\n      // within that segment. Since the transmuxer maintains a cache of incomplete data\n      // from and/or the last frame seen, the start time may reflect a frame that starts\n      // in the previous segment. Check for that case and ensure the start time is\n      // accurate for the segment.\n\n      if (mediaIndex === 0 || !previousSegment || typeof previousSegment.start === 'undefined' || previousSegment.end !== firstVideoFrameTimeForData + currentVideoTimestampOffset) {\n        return firstVideoFrameTimeForData;\n      }\n      return videoTimingInfo.start;\n    }\n    waitForAppendsToComplete_(segmentInfo) {\n      const trackInfo = this.getCurrentMediaInfo_(segmentInfo);\n      if (!trackInfo) {\n        this.error({\n          message: 'No starting media returned, likely due to an unsupported media format.',\n          playlistExclusionDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      } // Although transmuxing is done, appends may not yet be finished. Throw a marker\n      // on each queue this loader is responsible for to ensure that the appends are\n      // complete.\n\n      const {\n        hasAudio,\n        hasVideo,\n        isMuxed\n      } = trackInfo;\n      const waitForVideo = this.loaderType_ === 'main' && hasVideo;\n      const waitForAudio = !this.audioDisabled_ && hasAudio && !isMuxed;\n      segmentInfo.waitingOnAppends = 0; // segments with no data\n\n      if (!segmentInfo.hasAppendedData_) {\n        if (!segmentInfo.timingInfo && typeof segmentInfo.timestampOffset === 'number') {\n          // When there's no audio or video data in the segment, there's no audio or video\n          // timing information.\n          //\n          // If there's no audio or video timing information, then the timestamp offset\n          // can't be adjusted to the appropriate value for the transmuxer and source\n          // buffers.\n          //\n          // Therefore, the next segment should be used to set the timestamp offset.\n          this.isPendingTimestampOffset_ = true;\n        } // override settings for metadata only segments\n\n        segmentInfo.timingInfo = {\n          start: 0\n        };\n        segmentInfo.waitingOnAppends++;\n        if (!this.isPendingTimestampOffset_) {\n          // update the timestampoffset\n          this.updateSourceBufferTimestampOffset_(segmentInfo); // make sure the metadata queue is processed even though we have\n          // no video/audio data.\n\n          this.processMetadataQueue_();\n        } // append is \"done\" instantly with no data.\n\n        this.checkAppendsDone_(segmentInfo);\n        return;\n      } // Since source updater could call back synchronously, do the increments first.\n\n      if (waitForVideo) {\n        segmentInfo.waitingOnAppends++;\n      }\n      if (waitForAudio) {\n        segmentInfo.waitingOnAppends++;\n      }\n      if (waitForVideo) {\n        this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n      }\n      if (waitForAudio) {\n        this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n      }\n    }\n    checkAppendsDone_(segmentInfo) {\n      if (this.checkForAbort_(segmentInfo.requestId)) {\n        return;\n      }\n      segmentInfo.waitingOnAppends--;\n      if (segmentInfo.waitingOnAppends === 0) {\n        this.handleAppendsDone_();\n      }\n    }\n    checkForIllegalMediaSwitch(trackInfo) {\n      const illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.getCurrentMediaInfo_(), trackInfo);\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          playlistExclusionDuration: Infinity\n        });\n        this.trigger('error');\n        return true;\n      }\n      return false;\n    }\n    updateSourceBufferTimestampOffset_(segmentInfo) {\n      if (segmentInfo.timestampOffset === null ||\n      // we don't yet have the start for whatever media type (video or audio) has\n      // priority, timing-wise, so we must wait\n      typeof segmentInfo.timingInfo.start !== 'number' ||\n      // already updated the timestamp offset for this segment\n      segmentInfo.changedTimestampOffset ||\n      // the alt audio loader should not be responsible for setting the timestamp offset\n      this.loaderType_ !== 'main') {\n        return;\n      }\n      let didChange = false; // Primary timing goes by video, and audio is trimmed in the transmuxer, meaning that\n      // the timing info here comes from video. In the event that the audio is longer than\n      // the video, this will trim the start of the audio.\n      // This also trims any offset from 0 at the beginning of the media\n\n      segmentInfo.timestampOffset -= this.getSegmentStartTimeForTimestampOffsetCalculation_({\n        videoTimingInfo: segmentInfo.segment.videoTimingInfo,\n        audioTimingInfo: segmentInfo.segment.audioTimingInfo,\n        timingInfo: segmentInfo.timingInfo\n      }); // In the event that there are part segment downloads, each will try to update the\n      // timestamp offset. Retaining this bit of state prevents us from updating in the\n      // future (within the same segment), however, there may be a better way to handle it.\n\n      segmentInfo.changedTimestampOffset = true;\n      if (segmentInfo.timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n        this.sourceUpdater_.videoTimestampOffset(segmentInfo.timestampOffset);\n        didChange = true;\n      }\n      if (segmentInfo.timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n        this.sourceUpdater_.audioTimestampOffset(segmentInfo.timestampOffset);\n        didChange = true;\n      }\n      if (didChange) {\n        this.trigger('timestampoffset');\n      }\n    }\n    getSegmentStartTimeForTimestampOffsetCalculation_({\n      videoTimingInfo,\n      audioTimingInfo,\n      timingInfo\n    }) {\n      if (!this.useDtsForTimestampOffset_) {\n        return timingInfo.start;\n      }\n      if (videoTimingInfo && typeof videoTimingInfo.transmuxedDecodeStart === 'number') {\n        return videoTimingInfo.transmuxedDecodeStart;\n      } // handle audio only\n\n      if (audioTimingInfo && typeof audioTimingInfo.transmuxedDecodeStart === 'number') {\n        return audioTimingInfo.transmuxedDecodeStart;\n      } // handle content not transmuxed (e.g., MP4)\n\n      return timingInfo.start;\n    }\n    updateTimingInfoEnd_(segmentInfo) {\n      segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n      const trackInfo = this.getMediaInfo_();\n      const useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n      const prioritizedTimingInfo = useVideoTimingInfo && segmentInfo.videoTimingInfo ? segmentInfo.videoTimingInfo : segmentInfo.audioTimingInfo;\n      if (!prioritizedTimingInfo) {\n        return;\n      }\n      segmentInfo.timingInfo.end = typeof prioritizedTimingInfo.end === 'number' ?\n      // End time may not exist in a case where we aren't parsing the full segment (one\n      // current example is the case of fmp4), so use the rough duration to calculate an\n      // end time.\n      prioritizedTimingInfo.end : prioritizedTimingInfo.start + segmentInfo.duration;\n    }\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n    handleAppendsDone_() {\n      // appendsdone can cause an abort\n      if (this.pendingSegment_) {\n        const metadata = {\n          segmentInfo: segmentInfoPayload({\n            type: this.loaderType_,\n            segment: this.pendingSegment_\n          })\n        };\n        this.trigger({\n          type: 'appendsdone',\n          metadata\n        });\n      }\n      if (!this.pendingSegment_) {\n        this.state = 'READY'; // TODO should this move into this.checkForAbort to speed up requests post abort in\n        // all appending cases?\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n        return;\n      }\n      const segmentInfo = this.pendingSegment_;\n      if (segmentInfo.part && segmentInfo.part.syncInfo) {\n        // low-latency flow\n        segmentInfo.part.syncInfo.markAppended();\n      } else if (segmentInfo.segment.syncInfo) {\n        // normal flow\n        segmentInfo.segment.syncInfo.markAppended();\n      } // Now that the end of the segment has been reached, we can set the end time. It's\n      // best to wait until all appends are done so we're sure that the primary media is\n      // finished (and we have its end time).\n\n      this.updateTimingInfoEnd_(segmentInfo);\n      if (this.shouldSaveSegmentTimingInfo_) {\n        // Timeline mappings should only be saved for the main loader. This is for multiple\n        // reasons:\n        //\n        // 1) Only one mapping is saved per timeline, meaning that if both the audio loader\n        //    and the main loader try to save the timeline mapping, whichever comes later\n        //    will overwrite the first. In theory this is OK, as the mappings should be the\n        //    same, however, it breaks for (2)\n        // 2) In the event of a live stream, the initial live point will make for a somewhat\n        //    arbitrary mapping. If audio and video streams are not perfectly in-sync, then\n        //    the mapping will be off for one of the streams, dependent on which one was\n        //    first saved (see (1)).\n        // 3) Primary timing goes by video in VHS, so the mapping should be video.\n        //\n        // Since the audio loader will wait for the main loader to load the first segment,\n        // the main loader will save the first timeline mapping, and ensure that there won't\n        // be a case where audio loads two segments without saving a mapping (thus leading\n        // to missing segment timing info).\n        this.syncController_.saveSegmentTimingInfo({\n          segmentInfo,\n          shouldSaveTimelineMapping: this.loaderType_ === 'main'\n        });\n      }\n      const segmentDurationMessage = getTroublesomeSegmentDurationMessage(segmentInfo, this.sourceType_);\n      if (segmentDurationMessage) {\n        if (segmentDurationMessage.severity === 'warn') {\n          videojs.log.warn(segmentDurationMessage.message);\n        } else {\n          this.logger_(segmentDurationMessage.message);\n        }\n      }\n      this.recordThroughput_(segmentInfo);\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate'); // if the sync request was not appended\n        // then it was not the correct segment.\n        // throw it away and use the data it gave us\n        // to get the correct one.\n\n        if (!segmentInfo.hasAppendedData_) {\n          this.logger_(`Throwing away un-appended sync request ${segmentInfoString(segmentInfo)}`);\n          return;\n        }\n      }\n      this.logger_(`Appended ${segmentInfoString(segmentInfo)}`);\n      this.addSegmentMetadataCue_(segmentInfo);\n      this.fetchAtBuffer_ = true;\n      if (this.currentTimeline_ !== segmentInfo.timeline) {\n        this.timelineChangeController_.lastTimelineChange({\n          type: this.loaderType_,\n          from: this.currentTimeline_,\n          to: segmentInfo.timeline\n        }); // If audio is not disabled, the main segment loader is responsible for updating\n        // the audio timeline as well. If the content is video only, this won't have any\n        // impact.\n\n        if (this.loaderType_ === 'main' && !this.audioDisabled_) {\n          this.timelineChangeController_.lastTimelineChange({\n            type: 'audio',\n            from: this.currentTimeline_,\n            to: segmentInfo.timeline\n          });\n        }\n      }\n      this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n\n      this.trigger('syncinfoupdate');\n      const segment = segmentInfo.segment;\n      const part = segmentInfo.part;\n      const badSegmentGuess = segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3;\n      const badPartGuess = part && part.end && this.currentTime_() - part.end > segmentInfo.playlist.partTargetDuration * 3; // If we previously appended a segment/part that ends more than 3 part/targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n\n      if (badSegmentGuess || badPartGuess) {\n        this.logger_(`bad ${badSegmentGuess ? 'segment' : 'part'} ${segmentInfoString(segmentInfo)}`);\n        this.resetEverything();\n        return;\n      }\n      const isWalkingForward = this.mediaIndex !== null; // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n      this.trigger('progress');\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.partIndex = segmentInfo.partIndex; // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex)) {\n        this.endOfStream();\n      } // used for testing\n\n      this.trigger('appended');\n      if (segmentInfo.hasAppendedData_) {\n        this.mediaAppends++;\n      }\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n    recordThroughput_(segmentInfo) {\n      if (segmentInfo.duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n        this.logger_(`Ignoring segment's throughput because its duration of ${segmentInfo.duration}` + ` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);\n        return;\n      }\n      const rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n\n      const segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n      const segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n    addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n      const segment = segmentInfo.segment;\n      const start = segment.start;\n      const end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n      const Cue = window.WebKitDataCue || window.VTTCue;\n      const value = {\n        custom: segment.custom,\n        dateTimeObject: segment.dateTimeObject,\n        dateTimeString: segment.dateTimeString,\n        programDateTime: segment.programDateTime,\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.id,\n        start,\n        end\n      };\n      const data = JSON.stringify(value);\n      const cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n      cue.value = value;\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }\n  function noop() {}\n  const toTitleCase = function (string) {\n    if (typeof string !== 'string') {\n      return string;\n    }\n    return string.replace(/./, w => w.toUpperCase());\n  };\n\n  /**\n   * @file source-updater.js\n   */\n  const bufferTypes = ['video', 'audio'];\n  const updating = (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`];\n    return sourceBuffer && sourceBuffer.updating || sourceUpdater.queuePending[type];\n  };\n  const nextQueueIndexOfType = (type, queue) => {\n    for (let i = 0; i < queue.length; i++) {\n      const queueEntry = queue[i];\n      if (queueEntry.type === 'mediaSource') {\n        // If the next entry is a media source entry (uses multiple source buffers), block\n        // processing to allow it to go through first.\n        return null;\n      }\n      if (queueEntry.type === type) {\n        return i;\n      }\n    }\n    return null;\n  };\n  const shiftQueue = (type, sourceUpdater) => {\n    if (sourceUpdater.queue.length === 0) {\n      return;\n    }\n    let queueIndex = 0;\n    let queueEntry = sourceUpdater.queue[queueIndex];\n    if (queueEntry.type === 'mediaSource') {\n      if (!sourceUpdater.updating() && sourceUpdater.mediaSource.readyState !== 'closed') {\n        sourceUpdater.queue.shift();\n        queueEntry.action(sourceUpdater);\n        if (queueEntry.doneFn) {\n          queueEntry.doneFn();\n        } // Only specific source buffer actions must wait for async updateend events. Media\n        // Source actions process synchronously. Therefore, both audio and video source\n        // buffers are now clear to process the next queue entries.\n\n        shiftQueue('audio', sourceUpdater);\n        shiftQueue('video', sourceUpdater);\n      } // Media Source actions require both source buffers, so if the media source action\n      // couldn't process yet (because one or both source buffers are busy), block other\n      // queue actions until both are available and the media source action can process.\n\n      return;\n    }\n    if (type === 'mediaSource') {\n      // If the queue was shifted by a media source action (this happens when pushing a\n      // media source action onto the queue), then it wasn't from an updateend event from an\n      // audio or video source buffer, so there's no change from previous state, and no\n      // processing should be done.\n      return;\n    } // Media source queue entries don't need to consider whether the source updater is\n    // started (i.e., source buffers are created) as they don't need the source buffers, but\n    // source buffer queue entries do.\n\n    if (!sourceUpdater.ready() || sourceUpdater.mediaSource.readyState === 'closed' || updating(type, sourceUpdater)) {\n      return;\n    }\n    if (queueEntry.type !== type) {\n      queueIndex = nextQueueIndexOfType(type, sourceUpdater.queue);\n      if (queueIndex === null) {\n        // Either there's no queue entry that uses this source buffer type in the queue, or\n        // there's a media source queue entry before the next entry of this type, in which\n        // case wait for that action to process first.\n        return;\n      }\n      queueEntry = sourceUpdater.queue[queueIndex];\n    }\n    sourceUpdater.queue.splice(queueIndex, 1); // Keep a record that this source buffer type is in use.\n    //\n    // The queue pending operation must be set before the action is performed in the event\n    // that the action results in a synchronous event that is acted upon. For instance, if\n    // an exception is thrown that can be handled, it's possible that new actions will be\n    // appended to an empty queue and immediately executed, but would not have the correct\n    // pending information if this property was set after the action was performed.\n\n    sourceUpdater.queuePending[type] = queueEntry;\n    queueEntry.action(type, sourceUpdater);\n    if (!queueEntry.doneFn) {\n      // synchronous operation, process next entry\n      sourceUpdater.queuePending[type] = null;\n      shiftQueue(type, sourceUpdater);\n      return;\n    }\n  };\n  const cleanupBuffer = (type, sourceUpdater) => {\n    const buffer = sourceUpdater[`${type}Buffer`];\n    const titleType = toTitleCase(type);\n    if (!buffer) {\n      return;\n    }\n    buffer.removeEventListener('updateend', sourceUpdater[`on${titleType}UpdateEnd_`]);\n    buffer.removeEventListener('error', sourceUpdater[`on${titleType}Error_`]);\n    sourceUpdater.codecs[type] = null;\n    sourceUpdater[`${type}Buffer`] = null;\n  };\n  const inSourceBuffers = (mediaSource, sourceBuffer) => mediaSource && sourceBuffer && Array.prototype.indexOf.call(mediaSource.sourceBuffers, sourceBuffer) !== -1;\n  const actions = {\n    appendBuffer: (bytes, segmentInfo, onError) => (type, sourceUpdater) => {\n      const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n      sourceUpdater.logger_(`Appending segment ${segmentInfo.mediaIndex}'s ${bytes.length} bytes to ${type}Buffer`);\n      try {\n        sourceBuffer.appendBuffer(bytes);\n      } catch (e) {\n        sourceUpdater.logger_(`Error with code ${e.code} ` + (e.code === QUOTA_EXCEEDED_ERR ? '(QUOTA_EXCEEDED_ERR) ' : '') + `when appending segment ${segmentInfo.mediaIndex} to ${type}Buffer`);\n        sourceUpdater.queuePending[type] = null;\n        onError(e);\n      }\n    },\n    remove: (start, end) => (type, sourceUpdater) => {\n      const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n      sourceUpdater.logger_(`Removing ${start} to ${end} from ${type}Buffer`);\n      try {\n        sourceBuffer.remove(start, end);\n      } catch (e) {\n        sourceUpdater.logger_(`Remove ${start} to ${end} from ${type}Buffer failed`);\n      }\n    },\n    timestampOffset: offset => (type, sourceUpdater) => {\n      const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n      sourceUpdater.logger_(`Setting ${type}timestampOffset to ${offset}`);\n      sourceBuffer.timestampOffset = offset;\n    },\n    callback: callback => (type, sourceUpdater) => {\n      callback();\n    },\n    endOfStream: error => sourceUpdater => {\n      if (sourceUpdater.mediaSource.readyState !== 'open') {\n        return;\n      }\n      sourceUpdater.logger_(`Calling mediaSource endOfStream(${error || ''})`);\n      try {\n        sourceUpdater.mediaSource.endOfStream(error);\n      } catch (e) {\n        videojs.log.warn('Failed to call media source endOfStream', e);\n      }\n    },\n    duration: duration => sourceUpdater => {\n      sourceUpdater.logger_(`Setting mediaSource duration to ${duration}`);\n      try {\n        sourceUpdater.mediaSource.duration = duration;\n      } catch (e) {\n        videojs.log.warn('Failed to set media source duration', e);\n      }\n    },\n    abort: () => (type, sourceUpdater) => {\n      if (sourceUpdater.mediaSource.readyState !== 'open') {\n        return;\n      }\n      const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n      sourceUpdater.logger_(`calling abort on ${type}Buffer`);\n      try {\n        sourceBuffer.abort();\n      } catch (e) {\n        videojs.log.warn(`Failed to abort on ${type}Buffer`, e);\n      }\n    },\n    addSourceBuffer: (type, codec) => sourceUpdater => {\n      const titleType = toTitleCase(type);\n      const mime = getMimeForCodec(codec);\n      sourceUpdater.logger_(`Adding ${type}Buffer with codec ${codec} to mediaSource`);\n      const sourceBuffer = sourceUpdater.mediaSource.addSourceBuffer(mime);\n      sourceBuffer.addEventListener('updateend', sourceUpdater[`on${titleType}UpdateEnd_`]);\n      sourceBuffer.addEventListener('error', sourceUpdater[`on${titleType}Error_`]);\n      sourceUpdater.codecs[type] = codec;\n      sourceUpdater[`${type}Buffer`] = sourceBuffer;\n    },\n    removeSourceBuffer: type => sourceUpdater => {\n      const sourceBuffer = sourceUpdater[`${type}Buffer`];\n      cleanupBuffer(type, sourceUpdater); // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n      sourceUpdater.logger_(`Removing ${type}Buffer with codec ${sourceUpdater.codecs[type]} from mediaSource`);\n      try {\n        sourceUpdater.mediaSource.removeSourceBuffer(sourceBuffer);\n      } catch (e) {\n        videojs.log.warn(`Failed to removeSourceBuffer ${type}Buffer`, e);\n      }\n    },\n    changeType: codec => (type, sourceUpdater) => {\n      const sourceBuffer = sourceUpdater[`${type}Buffer`];\n      const mime = getMimeForCodec(codec); // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      } // do not update codec if we don't need to.\n      // Only update if we change the codec base.\n      // For example, going from avc1.640028 to avc1.64001f does not require a changeType call.\n\n      const newCodecBase = codec.substring(0, codec.indexOf('.'));\n      const oldCodec = sourceUpdater.codecs[type];\n      const oldCodecBase = oldCodec.substring(0, oldCodec.indexOf('.'));\n      if (oldCodecBase === newCodecBase) {\n        return;\n      }\n      const metadata = {\n        codecsChangeInfo: {\n          from: oldCodec,\n          to: codec\n        }\n      };\n      sourceUpdater.trigger({\n        type: 'codecschange',\n        metadata\n      });\n      sourceUpdater.logger_(`changing ${type}Buffer codec from ${oldCodec} to ${codec}`); // check if change to the provided type is supported\n\n      try {\n        sourceBuffer.changeType(mime);\n        sourceUpdater.codecs[type] = codec;\n      } catch (e) {\n        metadata.errorType = videojs.Error.StreamingCodecsChangeError;\n        metadata.error = e;\n        e.metadata = metadata;\n        sourceUpdater.error_ = e;\n        sourceUpdater.trigger('error');\n        videojs.log.warn(`Failed to changeType on ${type}Buffer`, e);\n      }\n    }\n  };\n  const pushQueue = ({\n    type,\n    sourceUpdater,\n    action,\n    doneFn,\n    name\n  }) => {\n    sourceUpdater.queue.push({\n      type,\n      action,\n      doneFn,\n      name\n    });\n    shiftQueue(type, sourceUpdater);\n  };\n  const onUpdateend = (type, sourceUpdater) => e => {\n    // Although there should, in theory, be a pending action for any updateend receieved,\n    // there are some actions that may trigger updateend events without set definitions in\n    // the w3c spec. For instance, setting the duration on the media source may trigger\n    // updateend events on source buffers. This does not appear to be in the spec. As such,\n    // if we encounter an updateend without a corresponding pending action from our queue\n    // for that source buffer type, process the next action.\n    const bufferedRangesForType = sourceUpdater[`${type}Buffered`]();\n    const descriptiveString = bufferedRangesToString(bufferedRangesForType);\n    sourceUpdater.logger_(`received \"updateend\" event for ${type} Source Buffer: `, descriptiveString);\n    if (sourceUpdater.queuePending[type]) {\n      const doneFn = sourceUpdater.queuePending[type].doneFn;\n      sourceUpdater.queuePending[type] = null;\n      if (doneFn) {\n        // if there's an error, report it\n        doneFn(sourceUpdater[`${type}Error_`]);\n      }\n    }\n    shiftQueue(type, sourceUpdater);\n  };\n  /**\n   * A queue of callbacks to be serialized and applied when a\n   * MediaSource and its associated SourceBuffers are not in the\n   * updating state. It is used by the segment loader to update the\n   * underlying SourceBuffers when new data is loaded, for instance.\n   *\n   * @class SourceUpdater\n   * @param {MediaSource} mediaSource the MediaSource to create the SourceBuffer from\n   * @param {string} mimeType the desired MIME type of the underlying SourceBuffer\n   */\n\n  class SourceUpdater extends videojs.EventTarget {\n    constructor(mediaSource) {\n      super();\n      this.mediaSource = mediaSource;\n      this.sourceopenListener_ = () => shiftQueue('mediaSource', this);\n      this.mediaSource.addEventListener('sourceopen', this.sourceopenListener_);\n      this.logger_ = logger('SourceUpdater'); // initial timestamp offset is 0\n\n      this.audioTimestampOffset_ = 0;\n      this.videoTimestampOffset_ = 0;\n      this.queue = [];\n      this.queuePending = {\n        audio: null,\n        video: null\n      };\n      this.delayedAudioAppendQueue_ = [];\n      this.videoAppendQueued_ = false;\n      this.codecs = {};\n      this.onVideoUpdateEnd_ = onUpdateend('video', this);\n      this.onAudioUpdateEnd_ = onUpdateend('audio', this);\n      this.onVideoError_ = e => {\n        // used for debugging\n        this.videoError_ = e;\n      };\n      this.onAudioError_ = e => {\n        // used for debugging\n        this.audioError_ = e;\n      };\n      this.createdSourceBuffers_ = false;\n      this.initializedEme_ = false;\n      this.triggeredReady_ = false;\n    }\n    initializedEme() {\n      this.initializedEme_ = true;\n      this.triggerReady();\n    }\n    hasCreatedSourceBuffers() {\n      // if false, likely waiting on one of the segment loaders to get enough data to create\n      // source buffers\n      return this.createdSourceBuffers_;\n    }\n    hasInitializedAnyEme() {\n      return this.initializedEme_;\n    }\n    ready() {\n      return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme();\n    }\n    createSourceBuffers(codecs) {\n      if (this.hasCreatedSourceBuffers()) {\n        // already created them before\n        return;\n      } // the intial addOrChangeSourceBuffers will always be\n      // two add buffers.\n\n      this.addOrChangeSourceBuffers(codecs);\n      this.createdSourceBuffers_ = true;\n      this.trigger('createdsourcebuffers');\n      this.triggerReady();\n    }\n    triggerReady() {\n      // only allow ready to be triggered once, this prevents the case\n      // where:\n      // 1. we trigger createdsourcebuffers\n      // 2. ie 11 synchronously initializates eme\n      // 3. the synchronous initialization causes us to trigger ready\n      // 4. We go back to the ready check in createSourceBuffers and ready is triggered again.\n      if (this.ready() && !this.triggeredReady_) {\n        this.triggeredReady_ = true;\n        this.trigger('ready');\n      }\n    }\n    /**\n     * Add a type of source buffer to the media source.\n     *\n     * @param {string} type\n     *        The type of source buffer to add.\n     *\n     * @param {string} codec\n     *        The codec to add the source buffer with.\n     */\n\n    addSourceBuffer(type, codec) {\n      pushQueue({\n        type: 'mediaSource',\n        sourceUpdater: this,\n        action: actions.addSourceBuffer(type, codec),\n        name: 'addSourceBuffer'\n      });\n    }\n    /**\n     * call abort on a source buffer.\n     *\n     * @param {string} type\n     *        The type of source buffer to call abort on.\n     */\n\n    abort(type) {\n      pushQueue({\n        type,\n        sourceUpdater: this,\n        action: actions.abort(type),\n        name: 'abort'\n      });\n    }\n    /**\n     * Call removeSourceBuffer and remove a specific type\n     * of source buffer on the mediaSource.\n     *\n     * @param {string} type\n     *        The type of source buffer to remove.\n     */\n\n    removeSourceBuffer(type) {\n      if (!this.canRemoveSourceBuffer()) {\n        videojs.log.error('removeSourceBuffer is not supported!');\n        return;\n      }\n      pushQueue({\n        type: 'mediaSource',\n        sourceUpdater: this,\n        action: actions.removeSourceBuffer(type),\n        name: 'removeSourceBuffer'\n      });\n    }\n    /**\n     * Whether or not the removeSourceBuffer function is supported\n     * on the mediaSource.\n     *\n     * @return {boolean}\n     *          if removeSourceBuffer can be called.\n     */\n\n    canRemoveSourceBuffer() {\n      // As of Firefox 83 removeSourceBuffer\n      // throws errors, so we report that it does not support this.\n      return !videojs.browser.IS_FIREFOX && window.MediaSource && window.MediaSource.prototype && typeof window.MediaSource.prototype.removeSourceBuffer === 'function';\n    }\n    /**\n     * Whether or not the changeType function is supported\n     * on our SourceBuffers.\n     *\n     * @return {boolean}\n     *         if changeType can be called.\n     */\n\n    static canChangeType() {\n      return window.SourceBuffer && window.SourceBuffer.prototype && typeof window.SourceBuffer.prototype.changeType === 'function';\n    }\n    /**\n     * Whether or not the changeType function is supported\n     * on our SourceBuffers.\n     *\n     * @return {boolean}\n     *         if changeType can be called.\n     */\n\n    canChangeType() {\n      return this.constructor.canChangeType();\n    }\n    /**\n     * Call the changeType function on a source buffer, given the code and type.\n     *\n     * @param {string} type\n     *        The type of source buffer to call changeType on.\n     *\n     * @param {string} codec\n     *        The codec string to change type with on the source buffer.\n     */\n\n    changeType(type, codec) {\n      if (!this.canChangeType()) {\n        videojs.log.error('changeType is not supported!');\n        return;\n      }\n      pushQueue({\n        type,\n        sourceUpdater: this,\n        action: actions.changeType(codec),\n        name: 'changeType'\n      });\n    }\n    /**\n     * Add source buffers with a codec or, if they are already created,\n     * call changeType on source buffers using changeType.\n     *\n     * @param {Object} codecs\n     *        Codecs to switch to\n     */\n\n    addOrChangeSourceBuffers(codecs) {\n      if (!codecs || typeof codecs !== 'object' || Object.keys(codecs).length === 0) {\n        throw new Error('Cannot addOrChangeSourceBuffers to undefined codecs');\n      }\n      Object.keys(codecs).forEach(type => {\n        const codec = codecs[type];\n        if (!this.hasCreatedSourceBuffers()) {\n          return this.addSourceBuffer(type, codec);\n        }\n        if (this.canChangeType()) {\n          this.changeType(type, codec);\n        }\n      });\n    }\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {MediaObject} object containing audioBytes and/or videoBytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n    appendBuffer(options, doneFn) {\n      const {\n        segmentInfo,\n        type,\n        bytes\n      } = options;\n      this.processedAppend_ = true;\n      if (type === 'audio' && this.videoBuffer && !this.videoAppendQueued_) {\n        this.delayedAudioAppendQueue_.push([options, doneFn]);\n        this.logger_(`delayed audio append of ${bytes.length} until video append`);\n        return;\n      } // In the case of certain errors, for instance, QUOTA_EXCEEDED_ERR, updateend will\n      // not be fired. This means that the queue will be blocked until the next action\n      // taken by the segment-loader. Provide a mechanism for segment-loader to handle\n      // these errors by calling the doneFn with the specific error.\n\n      const onError = doneFn;\n      pushQueue({\n        type,\n        sourceUpdater: this,\n        action: actions.appendBuffer(bytes, segmentInfo || {\n          mediaIndex: -1\n        }, onError),\n        doneFn,\n        name: 'appendBuffer'\n      });\n      if (type === 'video') {\n        this.videoAppendQueued_ = true;\n        if (!this.delayedAudioAppendQueue_.length) {\n          return;\n        }\n        const queue = this.delayedAudioAppendQueue_.slice();\n        this.logger_(`queuing delayed audio ${queue.length} appendBuffers`);\n        this.delayedAudioAppendQueue_.length = 0;\n        queue.forEach(que => {\n          this.appendBuffer.apply(this, que);\n        });\n      }\n    }\n    /**\n     * Get the audio buffer's buffered timerange.\n     *\n     * @return {TimeRange}\n     *         The audio buffer's buffered time range\n     */\n\n    audioBuffered() {\n      // no media source/source buffer or it isn't in the media sources\n      // source buffer list\n      if (!inSourceBuffers(this.mediaSource, this.audioBuffer)) {\n        return createTimeRanges();\n      }\n      return this.audioBuffer.buffered ? this.audioBuffer.buffered : createTimeRanges();\n    }\n    /**\n     * Get the video buffer's buffered timerange.\n     *\n     * @return {TimeRange}\n     *         The video buffer's buffered time range\n     */\n\n    videoBuffered() {\n      // no media source/source buffer or it isn't in the media sources\n      // source buffer list\n      if (!inSourceBuffers(this.mediaSource, this.videoBuffer)) {\n        return createTimeRanges();\n      }\n      return this.videoBuffer.buffered ? this.videoBuffer.buffered : createTimeRanges();\n    }\n    /**\n     * Get a combined video/audio buffer's buffered timerange.\n     *\n     * @return {TimeRange}\n     *         the combined time range\n     */\n\n    buffered() {\n      const video = inSourceBuffers(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null;\n      const audio = inSourceBuffers(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null;\n      if (audio && !video) {\n        return this.audioBuffered();\n      }\n      if (video && !audio) {\n        return this.videoBuffered();\n      }\n      return bufferIntersection(this.audioBuffered(), this.videoBuffered());\n    }\n    /**\n     * Add a callback to the queue that will set duration on the mediaSource.\n     *\n     * @param {number} duration\n     *        The duration to set\n     *\n     * @param {Function} [doneFn]\n     *        function to run after duration has been set.\n     */\n\n    setDuration(duration, doneFn = noop) {\n      // In order to set the duration on the media source, it's necessary to wait for all\n      // source buffers to no longer be updating. \"If the updating attribute equals true on\n      // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n      // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n      pushQueue({\n        type: 'mediaSource',\n        sourceUpdater: this,\n        action: actions.duration(duration),\n        name: 'duration',\n        doneFn\n      });\n    }\n    /**\n     * Add a mediaSource endOfStream call to the queue\n     *\n     * @param {Error} [error]\n     *        Call endOfStream with an error\n     *\n     * @param {Function} [doneFn]\n     *        A function that should be called when the\n     *        endOfStream call has finished.\n     */\n\n    endOfStream(error = null, doneFn = noop) {\n      if (typeof error !== 'string') {\n        error = undefined;\n      } // In order to set the duration on the media source, it's necessary to wait for all\n      // source buffers to no longer be updating. \"If the updating attribute equals true on\n      // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n      // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n      pushQueue({\n        type: 'mediaSource',\n        sourceUpdater: this,\n        action: actions.endOfStream(error),\n        name: 'endOfStream',\n        doneFn\n      });\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {number} start where to start the removal\n     * @param {number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n    removeAudio(start, end, done = noop) {\n      if (!this.audioBuffered().length || this.audioBuffered().end(0) === 0) {\n        done();\n        return;\n      }\n      pushQueue({\n        type: 'audio',\n        sourceUpdater: this,\n        action: actions.remove(start, end),\n        doneFn: done,\n        name: 'remove'\n      });\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {number} start where to start the removal\n     * @param {number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n    removeVideo(start, end, done = noop) {\n      if (!this.videoBuffered().length || this.videoBuffered().end(0) === 0) {\n        done();\n        return;\n      }\n      pushQueue({\n        type: 'video',\n        sourceUpdater: this,\n        action: actions.remove(start, end),\n        doneFn: done,\n        name: 'remove'\n      });\n    }\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {boolean} the updating status of the SourceBuffer\n     */\n\n    updating() {\n      // the audio/video source buffer is updating\n      if (updating('audio', this) || updating('video', this)) {\n        return true;\n      }\n      return false;\n    }\n    /**\n     * Set/get the timestampoffset on the audio SourceBuffer\n     *\n     * @return {number} the timestamp offset\n     */\n\n    audioTimestampOffset(offset) {\n      if (typeof offset !== 'undefined' && this.audioBuffer &&\n      // no point in updating if it's the same\n      this.audioTimestampOffset_ !== offset) {\n        pushQueue({\n          type: 'audio',\n          sourceUpdater: this,\n          action: actions.timestampOffset(offset),\n          name: 'timestampOffset'\n        });\n        this.audioTimestampOffset_ = offset;\n      }\n      return this.audioTimestampOffset_;\n    }\n    /**\n     * Set/get the timestampoffset on the video SourceBuffer\n     *\n     * @return {number} the timestamp offset\n     */\n\n    videoTimestampOffset(offset) {\n      if (typeof offset !== 'undefined' && this.videoBuffer &&\n      // no point in updating if it's the same\n      this.videoTimestampOffset_ !== offset) {\n        pushQueue({\n          type: 'video',\n          sourceUpdater: this,\n          action: actions.timestampOffset(offset),\n          name: 'timestampOffset'\n        });\n        this.videoTimestampOffset_ = offset;\n      }\n      return this.videoTimestampOffset_;\n    }\n    /**\n     * Add a function to the queue that will be called\n     * when it is its turn to run in the audio queue.\n     *\n     * @param {Function} callback\n     *        The callback to queue.\n     */\n\n    audioQueueCallback(callback) {\n      if (!this.audioBuffer) {\n        return;\n      }\n      pushQueue({\n        type: 'audio',\n        sourceUpdater: this,\n        action: actions.callback(callback),\n        name: 'callback'\n      });\n    }\n    /**\n     * Add a function to the queue that will be called\n     * when it is its turn to run in the video queue.\n     *\n     * @param {Function} callback\n     *        The callback to queue.\n     */\n\n    videoQueueCallback(callback) {\n      if (!this.videoBuffer) {\n        return;\n      }\n      pushQueue({\n        type: 'video',\n        sourceUpdater: this,\n        action: actions.callback(callback),\n        name: 'callback'\n      });\n    }\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n    dispose() {\n      this.trigger('dispose');\n      bufferTypes.forEach(type => {\n        this.abort(type);\n        if (this.canRemoveSourceBuffer()) {\n          this.removeSourceBuffer(type);\n        } else {\n          this[`${type}QueueCallback`](() => cleanupBuffer(type, this));\n        }\n      });\n      this.videoAppendQueued_ = false;\n      this.delayedAudioAppendQueue_.length = 0;\n      if (this.sourceopenListener_) {\n        this.mediaSource.removeEventListener('sourceopen', this.sourceopenListener_);\n      }\n      this.off();\n    }\n  }\n  const uint8ToUtf8 = uintArray => decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n  const bufferToHexString = buffer => {\n    const uInt8Buffer = new Uint8Array(buffer);\n    return Array.from(uInt8Buffer).map(byte => byte.toString(16).padStart(2, '0')).join('');\n  };\n\n  /**\n   * @file vtt-segment-loader.js\n   */\n  const VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(char => char.charCodeAt(0)));\n  class NoVttJsError extends Error {\n    constructor() {\n      super('Trying to parse received VTT cues, but there is no WebVTT. Make sure vtt.js is loaded.');\n    }\n  }\n  /**\n   * An object that manages segment loading and appending.\n   *\n   * @class VTTSegmentLoader\n   * @param {Object} options required and optional options\n   * @extends videojs.EventTarget\n   */\n\n  class VTTSegmentLoader extends SegmentLoader {\n    constructor(settings, options = {}) {\n      super(settings, options); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n      // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n      this.mediaSource_ = null;\n      this.subtitlesTrack_ = null;\n      this.featuresNativeTextTracks_ = settings.featuresNativeTextTracks;\n      this.loadVttJs = settings.loadVttJs; // The VTT segment will have its own time mappings. Saving VTT segment timing info in\n      // the sync controller leads to improper behavior.\n\n      this.shouldSaveSegmentTimingInfo_ = false;\n    }\n    createTransmuxer_() {\n      // don't need to transmux any subtitles\n      return null;\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n    buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues || !this.subtitlesTrack_.cues.length) {\n        return createTimeRanges();\n      }\n      const cues = this.subtitlesTrack_.cues;\n      const start = cues[0].startTime;\n      const end = cues[cues.length - 1].startTime;\n      return createTimeRanges([[start, end]]);\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n    initSegmentForMap(map, set = false) {\n      if (!map) {\n        return null;\n      }\n      const id = initSegmentId(map);\n      let storedMap = this.initSegments_[id];\n      if (set && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        const combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        const combinedSegment = new Uint8Array(combinedByteLength);\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n    couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n    init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n    track(track) {\n      if (typeof track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n      this.subtitlesTrack_ = track; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n      return this.subtitlesTrack_;\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     *\n     * @param {number} start - the start time of the region to remove from the buffer\n     * @param {number} end - the end time of the region to remove from the buffer\n     */\n\n    remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n    fillBuffer_() {\n      // see if we need to begin loading immediately\n      const segmentInfo = this.chooseNextRequest_();\n      if (!segmentInfo) {\n        return;\n      }\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        const checkTimestampOffset = () => {\n          this.state = 'READY';\n          if (!this.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            this.monitorBuffer_();\n          }\n        };\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n      this.loadSegment_(segmentInfo);\n    } // never set a timestamp offset for vtt segments.\n\n    timestampOffsetForSegment_() {\n      return null;\n    }\n    chooseNextRequest_() {\n      return this.skipEmptySegments_(super.chooseNextRequest_());\n    }\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n    skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        // stop at the last possible segmentInfo\n        if (segmentInfo.mediaIndex + 1 >= segmentInfo.playlist.segments.length) {\n          segmentInfo = null;\n          break;\n        }\n        segmentInfo = this.generateSegmentInfo_({\n          playlist: segmentInfo.playlist,\n          mediaIndex: segmentInfo.mediaIndex + 1,\n          startOfSegment: segmentInfo.startOfSegment + segmentInfo.duration,\n          isSyncRequest: segmentInfo.isSyncRequest\n        });\n      }\n      return segmentInfo;\n    }\n    stopForError(error) {\n      this.error(error);\n      this.state = 'READY';\n      this.pause();\n      this.trigger('error');\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n    segmentRequestFinished_(error, simpleSegment, result) {\n      if (!this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n      this.saveTransferStats_(simpleSegment.stats); // the request was aborted\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        this.mediaRequestsAborted += 1;\n        return;\n      }\n      if (error) {\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.handleTimeout_();\n        }\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n        } else {\n          this.mediaRequestsErrored += 1;\n        }\n        this.stopForError(error);\n        return;\n      }\n      const segmentInfo = this.pendingSegment_; // although the VTT segment loader bandwidth isn't really used, it's good to\n      // maintain functionality between segment loaders\n\n      this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats); // if this request included a segment key, save that data in the cache\n\n      if (simpleSegment.key) {\n        this.segmentKey(simpleSegment.key, true);\n      }\n      this.state = 'APPENDING'; // used for tests\n\n      this.trigger('appending');\n      const segment = segmentInfo.segment;\n      if (segment.map) {\n        segment.map.bytes = simpleSegment.map.bytes;\n      }\n      segmentInfo.bytes = simpleSegment.bytes; // Make sure that vttjs has loaded, otherwise, load it and wait till it finished loading\n\n      if (typeof window.WebVTT !== 'function' && typeof this.loadVttJs === 'function') {\n        this.state = 'WAITING_ON_VTTJS'; // should be fine to call multiple times\n        // script will be loaded once but multiple listeners will be added to the queue, which is expected.\n\n        this.loadVttJs().then(() => this.segmentRequestFinished_(error, simpleSegment, result), () => this.stopForError({\n          message: 'Error loading vtt.js'\n        }));\n        return;\n      }\n      segment.requested = true;\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.stopForError({\n          message: e.message,\n          metadata: {\n            errorType: videojs.Error.StreamingVttParserError,\n            error: e\n          }\n        });\n        return;\n      }\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n      if (segmentInfo.cues.length) {\n        segmentInfo.timingInfo = {\n          start: segmentInfo.cues[0].startTime,\n          end: segmentInfo.cues[segmentInfo.cues.length - 1].endTime\n        };\n      } else {\n        segmentInfo.timingInfo = {\n          start: segmentInfo.startOfSegment,\n          end: segmentInfo.startOfSegment + segmentInfo.duration\n        };\n      }\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      this.mediaSecondsLoaded += segment.duration; // Create VTTCue instances for each cue in the new segment and add them to\n      // the subtitle track\n\n      segmentInfo.cues.forEach(cue => {\n        this.subtitlesTrack_.addCue(this.featuresNativeTextTracks_ ? new window.VTTCue(cue.startTime, cue.endTime, cue.text) : cue);\n      }); // Remove any duplicate cues from the subtitle track. The WebVTT spec allows\n      // cues to have identical time-intervals, but if the text is also identical\n      // we can safely assume it is a duplicate that can be removed (ex. when a cue\n      // \"overlaps\" VTT segments)\n\n      removeDuplicateCuesFromTrack(this.subtitlesTrack_);\n      this.handleAppendsDone_();\n    }\n    handleData_() {// noop as we shouldn't be getting video/audio data captions\n      // that we do not support here.\n    }\n    updateTimingInfoEnd_() {// noop\n    }\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @throws NoVttJsError\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n    parseVTTCues_(segmentInfo) {\n      let decoder;\n      let decodeBytesToString = false;\n      if (typeof window.WebVTT !== 'function') {\n        // caller is responsible for exception handling.\n        throw new NoVttJsError();\n      }\n      if (typeof window.TextDecoder === 'function') {\n        decoder = new window.TextDecoder('utf8');\n      } else {\n        decoder = window.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n      const parser = new window.WebVTT.Parser(window, window.vttjs, decoder);\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = {\n        MPEGTS: 0,\n        LOCAL: 0\n      };\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n      parser.ontimestampmap = map => {\n        segmentInfo.timestampmap = map;\n      };\n      parser.onparsingerror = error => {\n        videojs.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n      if (segmentInfo.segment.map) {\n        let mapData = segmentInfo.segment.map.bytes;\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n        parser.parse(mapData);\n      }\n      let segmentData = segmentInfo.bytes;\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n      parser.parse(segmentData);\n      parser.flush();\n    }\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n    updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      const segment = segmentInfo.segment;\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n      const {\n        MPEGTS,\n        LOCAL\n      } = segmentInfo.timestampmap;\n      /**\n       * From the spec:\n       * The MPEGTS media timestamp MUST use a 90KHz timescale,\n       * even when non-WebVTT Media Segments use a different timescale.\n       */\n\n      const mpegTsInSeconds = MPEGTS / clock_1;\n      const diff = mpegTsInSeconds - LOCAL + mappingObj.mapping;\n      segmentInfo.cues.forEach(cue => {\n        const duration = cue.endTime - cue.startTime;\n        const startTime = MPEGTS === 0 ? cue.startTime + diff : this.handleRollover_(cue.startTime + diff, mappingObj.time);\n        cue.startTime = Math.max(startTime, 0);\n        cue.endTime = Math.max(startTime + duration, 0);\n      });\n      if (!playlist.syncInfo) {\n        const firstStart = segmentInfo.cues[0].startTime;\n        const lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n    /**\n     * MPEG-TS PES timestamps are limited to 2^33.\n     * Once they reach 2^33, they roll over to 0.\n     * mux.js handles PES timestamp rollover for the following scenarios:\n     * [forward rollover(right)] ->\n     *    PES timestamps monotonically increase, and once they reach 2^33, they roll over to 0\n     * [backward rollover(left)] -->\n     *    we seek back to position before rollover.\n     *\n     * According to the HLS SPEC:\n     * When synchronizing WebVTT with PES timestamps, clients SHOULD account\n     * for cases where the 33-bit PES timestamps have wrapped and the WebVTT\n     * cue times have not.  When the PES timestamp wraps, the WebVTT Segment\n     * SHOULD have a X-TIMESTAMP-MAP header that maps the current WebVTT\n     * time to the new (low valued) PES timestamp.\n     *\n     * So we want to handle rollover here and align VTT Cue start/end time to the player's time.\n     */\n\n    handleRollover_(value, reference) {\n      if (reference === null) {\n        return value;\n      }\n      let valueIn90khz = value * clock_1;\n      const referenceIn90khz = reference * clock_1;\n      let offset;\n      if (referenceIn90khz < valueIn90khz) {\n        // - 2^33\n        offset = -8589934592;\n      } else {\n        // + 2^33\n        offset = 8589934592;\n      } // distance(value - reference) > 2^32\n\n      while (Math.abs(valueIn90khz - referenceIn90khz) > 4294967296) {\n        valueIn90khz += offset;\n      }\n      return valueIn90khz / clock_1;\n    }\n  }\n\n  /**\n   * @file ad-cue-tags.js\n   */\n  /**\n   * Searches for an ad cue that overlaps with the given mediaTime\n   *\n   * @param {Object} track\n   *        the track to find the cue for\n   *\n   * @param {number} mediaTime\n   *        the time to find the cue at\n   *\n   * @return {Object|null}\n   *         the found cue or null\n   */\n\n  const findAdCue = function (track, mediaTime) {\n    const cues = track.cues;\n    for (let i = 0; i < cues.length; i++) {\n      const cue = cues[i];\n      if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n        return cue;\n      }\n    }\n    return null;\n  };\n  const updateAdCues = function (media, track, offset = 0) {\n    if (!media.segments) {\n      return;\n    }\n    let mediaTime = offset;\n    let cue;\n    for (let i = 0; i < media.segments.length; i++) {\n      const segment = media.segments[i];\n      if (!cue) {\n        // Since the cues will span for at least the segment duration, adding a fudge\n        // factor of half segment duration will prevent duplicate cues from being\n        // created when timing info is not exact (e.g. cue start time initialized\n        // at 10.006677, but next call mediaTime is 10.003332 )\n        cue = findAdCue(track, mediaTime + segment.duration / 2);\n      }\n      if (cue) {\n        if ('cueIn' in segment) {\n          // Found a CUE-IN so end the cue\n          cue.endTime = mediaTime;\n          cue.adEndTime = mediaTime;\n          mediaTime += segment.duration;\n          cue = null;\n          continue;\n        }\n        if (mediaTime < cue.endTime) {\n          // Already processed this mediaTime for this cue\n          mediaTime += segment.duration;\n          continue;\n        } // otherwise extend cue until a CUE-IN is found\n\n        cue.endTime += segment.duration;\n      } else {\n        if ('cueOut' in segment) {\n          cue = new window.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n          cue.adStartTime = mediaTime; // Assumes tag format to be\n          // #EXT-X-CUE-OUT:30\n\n          cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n          track.addCue(cue);\n        }\n        if ('cueOutCont' in segment) {\n          // Entered into the middle of an ad cue\n          // Assumes tag formate to be\n          // #EXT-X-CUE-OUT-CONT:10/30\n          const [adOffset, adTotal] = segment.cueOutCont.split('/').map(parseFloat);\n          cue = new window.VTTCue(mediaTime, mediaTime + segment.duration, '');\n          cue.adStartTime = mediaTime - adOffset;\n          cue.adEndTime = cue.adStartTime + adTotal;\n          track.addCue(cue);\n        }\n      }\n      mediaTime += segment.duration;\n    }\n  };\n  class SyncInfo {\n    /**\n     * @param {number} start - media sequence start\n     * @param {number} end - media sequence end\n     * @param {number} segmentIndex - index for associated segment\n     * @param {number|null} [partIndex] - index for associated part\n     * @param {boolean} [appended] - appended indicator\n     *\n     */\n    constructor({\n      start,\n      end,\n      segmentIndex,\n      partIndex = null,\n      appended = false\n    }) {\n      this.start_ = start;\n      this.end_ = end;\n      this.segmentIndex_ = segmentIndex;\n      this.partIndex_ = partIndex;\n      this.appended_ = appended;\n    }\n    isInRange(targetTime) {\n      return targetTime >= this.start && targetTime < this.end;\n    }\n    markAppended() {\n      this.appended_ = true;\n    }\n    resetAppendedStatus() {\n      this.appended_ = false;\n    }\n    get isAppended() {\n      return this.appended_;\n    }\n    get start() {\n      return this.start_;\n    }\n    get end() {\n      return this.end_;\n    }\n    get segmentIndex() {\n      return this.segmentIndex_;\n    }\n    get partIndex() {\n      return this.partIndex_;\n    }\n  }\n  class SyncInfoData {\n    /**\n     *\n     * @param {SyncInfo} segmentSyncInfo - sync info for a given segment\n     * @param {Array<SyncInfo>} [partsSyncInfo] - sync infos for a list of parts for a given segment\n     */\n    constructor(segmentSyncInfo, partsSyncInfo = []) {\n      this.segmentSyncInfo_ = segmentSyncInfo;\n      this.partsSyncInfo_ = partsSyncInfo;\n    }\n    get segmentSyncInfo() {\n      return this.segmentSyncInfo_;\n    }\n    get partsSyncInfo() {\n      return this.partsSyncInfo_;\n    }\n    get hasPartsSyncInfo() {\n      return this.partsSyncInfo_.length > 0;\n    }\n    resetAppendStatus() {\n      this.segmentSyncInfo_.resetAppendedStatus();\n      this.partsSyncInfo_.forEach(partSyncInfo => partSyncInfo.resetAppendedStatus());\n    }\n  }\n  class MediaSequenceSync {\n    constructor() {\n      /**\n       * @type {Map<number, SyncInfoData>}\n       * @protected\n       */\n      this.storage_ = new Map();\n      this.diagnostics_ = '';\n      this.isReliable_ = false;\n      this.start_ = -Infinity;\n      this.end_ = Infinity;\n    }\n    get start() {\n      return this.start_;\n    }\n    get end() {\n      return this.end_;\n    }\n    get diagnostics() {\n      return this.diagnostics_;\n    }\n    get isReliable() {\n      return this.isReliable_;\n    }\n    resetAppendedStatus() {\n      this.storage_.forEach(syncInfoData => syncInfoData.resetAppendStatus());\n    }\n    /**\n     * update sync storage\n     *\n     * @param {Object} playlist\n     * @param {number} currentTime\n     *\n     * @return {void}\n     */\n\n    update(playlist, currentTime) {\n      const {\n        mediaSequence,\n        segments\n      } = playlist;\n      this.isReliable_ = this.isReliablePlaylist_(mediaSequence, segments);\n      if (!this.isReliable_) {\n        return;\n      }\n      return this.updateStorage_(segments, mediaSequence, this.calculateBaseTime_(mediaSequence, currentTime));\n    }\n    /**\n     * @param {number} targetTime\n     * @return {SyncInfo|null}\n     */\n\n    getSyncInfoForTime(targetTime) {\n      for (const {\n        segmentSyncInfo,\n        partsSyncInfo\n      } of this.storage_.values()) {\n        // Normal segment flow:\n        if (!partsSyncInfo.length) {\n          if (segmentSyncInfo.isInRange(targetTime)) {\n            return segmentSyncInfo;\n          }\n        } else {\n          // Low latency flow:\n          for (const partSyncInfo of partsSyncInfo) {\n            if (partSyncInfo.isInRange(targetTime)) {\n              return partSyncInfo;\n            }\n          }\n        }\n      }\n      return null;\n    }\n    getSyncInfoForMediaSequence(mediaSequence) {\n      return this.storage_.get(mediaSequence);\n    }\n    updateStorage_(segments, startingMediaSequence, startingTime) {\n      const newStorage = new Map();\n      let newDiagnostics = '\\n';\n      let currentStart = startingTime;\n      let currentMediaSequence = startingMediaSequence;\n      this.start_ = currentStart;\n      segments.forEach((segment, segmentIndex) => {\n        const prevSyncInfoData = this.storage_.get(currentMediaSequence);\n        const segmentStart = currentStart;\n        const segmentEnd = segmentStart + segment.duration;\n        const segmentIsAppended = Boolean(prevSyncInfoData && prevSyncInfoData.segmentSyncInfo && prevSyncInfoData.segmentSyncInfo.isAppended);\n        const segmentSyncInfo = new SyncInfo({\n          start: segmentStart,\n          end: segmentEnd,\n          appended: segmentIsAppended,\n          segmentIndex\n        });\n        segment.syncInfo = segmentSyncInfo;\n        let currentPartStart = currentStart;\n        const partsSyncInfo = (segment.parts || []).map((part, partIndex) => {\n          const partStart = currentPartStart;\n          const partEnd = currentPartStart + part.duration;\n          const partIsAppended = Boolean(prevSyncInfoData && prevSyncInfoData.partsSyncInfo && prevSyncInfoData.partsSyncInfo[partIndex] && prevSyncInfoData.partsSyncInfo[partIndex].isAppended);\n          const partSyncInfo = new SyncInfo({\n            start: partStart,\n            end: partEnd,\n            appended: partIsAppended,\n            segmentIndex,\n            partIndex\n          });\n          currentPartStart = partEnd;\n          newDiagnostics += `Media Sequence: ${currentMediaSequence}.${partIndex} | Range: ${partStart} --> ${partEnd} | Appended: ${partIsAppended}\\n`;\n          part.syncInfo = partSyncInfo;\n          return partSyncInfo;\n        });\n        newStorage.set(currentMediaSequence, new SyncInfoData(segmentSyncInfo, partsSyncInfo));\n        newDiagnostics += `${compactSegmentUrlDescription(segment.resolvedUri)} | Media Sequence: ${currentMediaSequence} | Range: ${segmentStart} --> ${segmentEnd} | Appended: ${segmentIsAppended}\\n`;\n        currentMediaSequence++;\n        currentStart = segmentEnd;\n      });\n      this.end_ = currentStart;\n      this.storage_ = newStorage;\n      this.diagnostics_ = newDiagnostics;\n    }\n    calculateBaseTime_(mediaSequence, fallback) {\n      if (!this.storage_.size) {\n        // Initial setup flow.\n        return 0;\n      }\n      if (this.storage_.has(mediaSequence)) {\n        // Normal flow.\n        return this.storage_.get(mediaSequence).segmentSyncInfo.start;\n      } // Fallback flow.\n      // There is a gap between last recorded playlist and a new one received.\n\n      return fallback;\n    }\n    isReliablePlaylist_(mediaSequence, segments) {\n      return mediaSequence !== undefined && mediaSequence !== null && Array.isArray(segments) && segments.length;\n    }\n  }\n  class DependantMediaSequenceSync extends MediaSequenceSync {\n    constructor(parent) {\n      super();\n      this.parent_ = parent;\n    }\n    calculateBaseTime_(mediaSequence, fallback) {\n      if (!this.storage_.size) {\n        const info = this.parent_.getSyncInfoForMediaSequence(mediaSequence);\n        if (info) {\n          return info.segmentSyncInfo.start;\n        }\n        return 0;\n      }\n      return super.calculateBaseTime_(mediaSequence, fallback);\n    }\n  }\n\n  /**\n   * @file sync-controller.js\n   */\n  // synchronize expired playlist segments.\n  // the max media sequence diff is 48 hours of live stream\n  // content with two second segments. Anything larger than that\n  // will likely be invalid.\n\n  const MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC = 86400;\n  const syncPointStrategies = [\n  // Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n  //                the equivalence display-time 0 === segment-index 0\n  {\n    name: 'VOD',\n    run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n      if (duration !== Infinity) {\n        const syncPoint = {\n          time: 0,\n          segmentIndex: 0,\n          partIndex: null\n        };\n        return syncPoint;\n      }\n      return null;\n    }\n  }, {\n    name: 'MediaSequence',\n    /**\n     * run media sequence strategy\n     *\n     * @param {SyncController} syncController\n     * @param {Object} playlist\n     * @param {number} duration\n     * @param {number} currentTimeline\n     * @param {number} currentTime\n     * @param {string} type\n     */\n    run: (syncController, playlist, duration, currentTimeline, currentTime, type) => {\n      const mediaSequenceSync = syncController.getMediaSequenceSync(type);\n      if (!mediaSequenceSync) {\n        return null;\n      }\n      if (!mediaSequenceSync.isReliable) {\n        return null;\n      }\n      const syncInfo = mediaSequenceSync.getSyncInfoForTime(currentTime);\n      if (!syncInfo) {\n        return null;\n      }\n      return {\n        time: syncInfo.start,\n        partIndex: syncInfo.partIndex,\n        segmentIndex: syncInfo.segmentIndex\n      };\n    }\n  },\n  // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n  {\n    name: 'ProgramDateTime',\n    run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n      if (!Object.keys(syncController.timelineToDatetimeMappings).length) {\n        return null;\n      }\n      let syncPoint = null;\n      let lastDistance = null;\n      const partsAndSegments = getPartsAndSegments(playlist);\n      currentTime = currentTime || 0;\n      for (let i = 0; i < partsAndSegments.length; i++) {\n        // start from the end and loop backwards for live\n        // or start from the front and loop forwards for non-live\n        const index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n        const partAndSegment = partsAndSegments[index];\n        const segment = partAndSegment.segment;\n        const datetimeMapping = syncController.timelineToDatetimeMappings[segment.timeline];\n        if (!datetimeMapping || !segment.dateTimeObject) {\n          continue;\n        }\n        const segmentTime = segment.dateTimeObject.getTime() / 1000;\n        let start = segmentTime + datetimeMapping; // take part duration into account.\n\n        if (segment.parts && typeof partAndSegment.partIndex === 'number') {\n          for (let z = 0; z < partAndSegment.partIndex; z++) {\n            start += segment.parts[z].duration;\n          }\n        }\n        const distance = Math.abs(currentTime - start); // Once the distance begins to increase, or if distance is 0, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n          break;\n        }\n        lastDistance = distance;\n        syncPoint = {\n          time: start,\n          segmentIndex: partAndSegment.segmentIndex,\n          partIndex: partAndSegment.partIndex\n        };\n      }\n      return syncPoint;\n    }\n  },\n  // Stategy \"Segment\": We have a known time mapping for a timeline and a\n  //                    segment in the current timeline with timing data\n  {\n    name: 'Segment',\n    run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n      let syncPoint = null;\n      let lastDistance = null;\n      currentTime = currentTime || 0;\n      const partsAndSegments = getPartsAndSegments(playlist);\n      for (let i = 0; i < partsAndSegments.length; i++) {\n        // start from the end and loop backwards for live\n        // or start from the front and loop forwards for non-live\n        const index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n        const partAndSegment = partsAndSegments[index];\n        const segment = partAndSegment.segment;\n        const start = partAndSegment.part && partAndSegment.part.start || segment && segment.start;\n        if (segment.timeline === currentTimeline && typeof start !== 'undefined') {\n          const distance = Math.abs(currentTime - start); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: start,\n              segmentIndex: partAndSegment.segmentIndex,\n              partIndex: partAndSegment.partIndex\n            };\n          }\n        }\n      }\n      return syncPoint;\n    }\n  },\n  // Stategy \"Discontinuity\": We have a discontinuity with a known\n  //                          display-time\n  {\n    name: 'Discontinuity',\n    run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n      let syncPoint = null;\n      currentTime = currentTime || 0;\n      if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        let lastDistance = null;\n        for (let i = 0; i < playlist.discontinuityStarts.length; i++) {\n          const segmentIndex = playlist.discontinuityStarts[i];\n          const discontinuity = playlist.discontinuitySequence + i + 1;\n          const discontinuitySync = syncController.discontinuities[discontinuity];\n          if (discontinuitySync) {\n            const distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n            // currentTime and can stop looking for better candidates\n\n            if (lastDistance !== null && lastDistance < distance) {\n              break;\n            }\n            if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n              lastDistance = distance;\n              syncPoint = {\n                time: discontinuitySync.time,\n                segmentIndex,\n                partIndex: null\n              };\n            }\n          }\n        }\n      }\n      return syncPoint;\n    }\n  },\n  // Stategy \"Playlist\": We have a playlist with a known mapping of\n  //                     segment index to display time\n  {\n    name: 'Playlist',\n    run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n      if (playlist.syncInfo) {\n        const syncPoint = {\n          time: playlist.syncInfo.time,\n          segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence,\n          partIndex: null\n        };\n        return syncPoint;\n      }\n      return null;\n    }\n  }];\n  class SyncController extends videojs.EventTarget {\n    constructor(options = {}) {\n      super(); // ...for synching across variants\n\n      this.timelines = [];\n      this.discontinuities = [];\n      this.timelineToDatetimeMappings = {}; // TODO: this map should be only available for HLS. Since only HLS has MediaSequence.\n      //  For some reason this map helps with syncing between quality switch for MPEG-DASH as well.\n      //  Moreover if we disable this map for MPEG-DASH - quality switch will be broken.\n      //  MPEG-DASH should have its own separate sync strategy\n\n      const main = new MediaSequenceSync();\n      const audio = new DependantMediaSequenceSync(main);\n      const vtt = new DependantMediaSequenceSync(main);\n      this.mediaSequenceStorage_ = {\n        main,\n        audio,\n        vtt\n      };\n      this.logger_ = logger('SyncController');\n    }\n    /**\n     *\n     * @param {string} loaderType\n     * @return {MediaSequenceSync|null}\n     */\n\n    getMediaSequenceSync(loaderType) {\n      return this.mediaSequenceStorage_[loaderType] || null;\n    }\n    /**\n     * Find a sync-point for the playlist specified\n     *\n     * A sync-point is defined as a known mapping from display-time to\n     * a segment-index in the current playlist.\n     *\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {number} duration\n     *        Duration of the MediaSource (Infinite if playing a live source)\n     * @param {number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @param {number} currentTime\n     *        Current player's time\n     * @param {string} type\n     *        Segment loader type\n     * @return {Object}\n     *          A sync-point object\n     */\n\n    getSyncPoint(playlist, duration, currentTimeline, currentTime, type) {\n      // Always use VOD sync point for VOD\n      if (duration !== Infinity) {\n        const vodSyncPointStrategy = syncPointStrategies.find(({\n          name\n        }) => name === 'VOD');\n        return vodSyncPointStrategy.run(this, playlist, duration);\n      }\n      const syncPoints = this.runStrategies_(playlist, duration, currentTimeline, currentTime, type);\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      } // If we have exact match just return it instead of finding the nearest distance\n\n      for (const syncPointInfo of syncPoints) {\n        const {\n          syncPoint,\n          strategy\n        } = syncPointInfo;\n        const {\n          segmentIndex,\n          time\n        } = syncPoint;\n        if (segmentIndex < 0) {\n          continue;\n        }\n        const selectedSegment = playlist.segments[segmentIndex];\n        const start = time;\n        const end = start + selectedSegment.duration;\n        this.logger_(`Strategy: ${strategy}. Current time: ${currentTime}. selected segment: ${segmentIndex}. Time: [${start} -> ${end}]}`);\n        if (currentTime >= start && currentTime < end) {\n          this.logger_('Found sync point with exact match: ', syncPoint);\n          return syncPoint;\n        }\n      } // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n\n      return this.selectSyncPoint_(syncPoints, {\n        key: 'time',\n        value: currentTime\n      });\n    }\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @return {number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n    getExpiredTime(playlist, duration) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n      const syncPoints = this.runStrategies_(playlist, duration, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n      if (!syncPoints.length) {\n        return null;\n      }\n      const syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n      return Math.abs(syncPoint.time + sumDurations({\n        defaultDuration: playlist.targetDuration,\n        durationList: playlist.segments,\n        startIndex: syncPoint.segmentIndex,\n        endIndex: 0\n      }));\n    }\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @param {number} currentTime\n     *        Current player's time\n     * @param {string} type\n     *        Segment loader type\n     * @return {Array}\n     *          A list of sync-point objects\n     */\n\n    runStrategies_(playlist, duration, currentTimeline, currentTime, type) {\n      const syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n      for (let i = 0; i < syncPointStrategies.length; i++) {\n        const strategy = syncPointStrategies[i];\n        const syncPoint = strategy.run(this, playlist, duration, currentTimeline, currentTime, type);\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint\n          });\n        }\n      }\n      return syncPoints;\n    }\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {string} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {number} target.value\n     *        The value to target for the specified key.\n     * @return {Object}\n     *          The sync-point nearest the target\n     */\n\n    selectSyncPoint_(syncPoints, target) {\n      let bestSyncPoint = syncPoints[0].syncPoint;\n      let bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      let bestStrategy = syncPoints[0].strategy;\n      for (let i = 1; i < syncPoints.length; i++) {\n        const newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n      this.logger_(`syncPoint for [${target.key}: ${target.value}] chosen with strategy` + ` [${bestStrategy}]: [time:${bestSyncPoint.time},` + ` segmentIndex:${bestSyncPoint.segmentIndex}` + (typeof bestSyncPoint.partIndex === 'number' ? `,partIndex:${bestSyncPoint.partIndex}` : '') + ']');\n      return bestSyncPoint;\n    }\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n    saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      const mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // Ignore large media sequence gaps\n\n      if (mediaSequenceDiff > MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC) {\n        videojs.log.warn(`Not saving expired segment info. Media sequence gap ${mediaSequenceDiff} is too large.`);\n        return;\n      } // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n\n      for (let i = mediaSequenceDiff - 1; i >= 0; i--) {\n        const lastRemovedSegment = oldPlaylist.segments[i];\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_(`playlist refresh sync: [time:${newPlaylist.syncInfo.time},` + ` mediaSequence: ${newPlaylist.syncInfo.mediaSequence}]`);\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should only happen\n     * before segments start to load.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n    setDateTimeMappingForStart(playlist) {\n      // It's possible for the playlist to be updated before playback starts, meaning time\n      // zero is not yet set. If, during these playlist refreshes, a discontinuity is\n      // crossed, then the old time zero mapping (for the prior timeline) would be retained\n      // unless the mappings are cleared.\n      this.timelineToDatetimeMappings = {};\n      if (playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        const firstSegment = playlist.segments[0];\n        const playlistTimestamp = firstSegment.dateTimeObject.getTime() / 1000;\n        this.timelineToDatetimeMappings[firstSegment.timeline] = -playlistTimestamp;\n      }\n    }\n    /**\n     * Calculates and saves timeline mappings, playlist sync info, and segment timing values\n     * based on the latest timing information.\n     *\n     * @param {Object} options\n     *        Options object\n     * @param {SegmentInfo} options.segmentInfo\n     *        The current active request information\n     * @param {boolean} options.shouldSaveTimelineMapping\n     *        If there's a timeline change, determines if the timeline mapping should be\n     *        saved for timeline mapping and program date time mappings.\n     */\n\n    saveSegmentTimingInfo({\n      segmentInfo,\n      shouldSaveTimelineMapping\n    }) {\n      const didCalculateSegmentTimeMapping = this.calculateSegmentTimeMapping_(segmentInfo, segmentInfo.timingInfo, shouldSaveTimelineMapping);\n      const segment = segmentInfo.segment;\n      if (didCalculateSegmentTimeMapping) {\n        this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n        // now with segment timing information\n\n        if (!segmentInfo.playlist.syncInfo) {\n          segmentInfo.playlist.syncInfo = {\n            mediaSequence: segmentInfo.playlist.mediaSequence + segmentInfo.mediaIndex,\n            time: segment.start\n          };\n        }\n      }\n      const dateTime = segment.dateTimeObject;\n      if (segment.discontinuity && shouldSaveTimelineMapping && dateTime) {\n        this.timelineToDatetimeMappings[segment.timeline] = -(dateTime.getTime() / 1000);\n      }\n    }\n    timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n      return this.timelines[timeline].time;\n    }\n    mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n      return this.timelines[timeline].mapping;\n    }\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {Object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @param {boolean} shouldSaveTimelineMapping\n     *        If there's a timeline change, determines if the timeline mapping should be\n     *        saved in timelines.\n     * @return {boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n    calculateSegmentTimeMapping_(segmentInfo, timingInfo, shouldSaveTimelineMapping) {\n      // TODO: remove side effects\n      const segment = segmentInfo.segment;\n      const part = segmentInfo.part;\n      let mappingObj = this.timelines[segmentInfo.timeline];\n      let start;\n      let end;\n      if (typeof segmentInfo.timestampOffset === 'number') {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        if (shouldSaveTimelineMapping) {\n          this.timelines[segmentInfo.timeline] = mappingObj;\n          this.trigger('timestampoffset');\n          this.logger_(`time mapping for timeline ${segmentInfo.timeline}: ` + `[time: ${mappingObj.time}] [mapping: ${mappingObj.mapping}]`);\n        }\n        start = segmentInfo.startOfSegment;\n        end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        start = timingInfo.start + mappingObj.mapping;\n        end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n      if (part) {\n        part.start = start;\n        part.end = end;\n      } // If we don't have a segment start yet or the start value we got\n      // is less than our current segment.start value, save a new start value.\n      // We have to do this because parts will have segment timing info saved\n      // multiple times and we want segment start to be the earliest part start\n      // value for that segment.\n\n      if (!segment.start || start < segment.start) {\n        segment.start = start;\n      }\n      segment.end = end;\n      return true;\n    }\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n    saveDiscontinuitySyncInfo_(segmentInfo) {\n      const playlist = segmentInfo.playlist;\n      const segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (let i = 0; i < playlist.discontinuityStarts.length; i++) {\n          const segmentIndex = playlist.discontinuityStarts[i];\n          const discontinuity = playlist.discontinuitySequence + i + 1;\n          const mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          const accuracy = Math.abs(mediaIndexDiff);\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            let time;\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations({\n                defaultDuration: playlist.targetDuration,\n                durationList: playlist.segments,\n                startIndex: segmentInfo.mediaIndex,\n                endIndex: segmentIndex\n              });\n            } else {\n              time = segment.end + sumDurations({\n                defaultDuration: playlist.targetDuration,\n                durationList: playlist.segments,\n                startIndex: segmentInfo.mediaIndex + 1,\n                endIndex: segmentIndex\n              });\n            }\n            this.discontinuities[discontinuity] = {\n              time,\n              accuracy\n            };\n          }\n        }\n      }\n    }\n    dispose() {\n      this.trigger('dispose');\n      this.off();\n    }\n  }\n\n  /**\n   * The TimelineChangeController acts as a source for segment loaders to listen for and\n   * keep track of latest and pending timeline changes. This is useful to ensure proper\n   * sync, as each loader may need to make a consideration for what timeline the other\n   * loader is on before making changes which could impact the other loader's media.\n   *\n   * @class TimelineChangeController\n   * @extends videojs.EventTarget\n   */\n\n  class TimelineChangeController extends videojs.EventTarget {\n    constructor() {\n      super();\n      this.pendingTimelineChanges_ = {};\n      this.lastTimelineChanges_ = {};\n    }\n    clearPendingTimelineChange(type) {\n      this.pendingTimelineChanges_[type] = null;\n      this.trigger('pendingtimelinechange');\n    }\n    pendingTimelineChange({\n      type,\n      from,\n      to\n    }) {\n      if (typeof from === 'number' && typeof to === 'number') {\n        this.pendingTimelineChanges_[type] = {\n          type,\n          from,\n          to\n        };\n        this.trigger('pendingtimelinechange');\n      }\n      return this.pendingTimelineChanges_[type];\n    }\n    lastTimelineChange({\n      type,\n      from,\n      to\n    }) {\n      if (typeof from === 'number' && typeof to === 'number') {\n        this.lastTimelineChanges_[type] = {\n          type,\n          from,\n          to\n        };\n        delete this.pendingTimelineChanges_[type];\n        const metadata = {\n          timelineChangeInfo: {\n            from,\n            to\n          }\n        };\n        this.trigger({\n          type: 'timelinechange',\n          metadata\n        });\n      }\n      return this.lastTimelineChanges_[type];\n    }\n    dispose() {\n      this.trigger('dispose');\n      this.pendingTimelineChanges_ = {};\n      this.lastTimelineChanges_ = {};\n      this.off();\n    }\n  }\n\n  /* rollup-plugin-worker-factory start for worker!/home/runner/work/http-streaming/http-streaming/src/decrypter-worker.js */\n  const workerCode = transform(getWorkerString(function () {\n    /**\n     * @file stream.js\n     */\n\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n\n    var Stream = /*#__PURE__*/function () {\n      function Stream() {\n        this.listeners = {};\n      }\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {string} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      var _proto = Stream.prototype;\n      _proto.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n        this.listeners[type].push(listener);\n      }\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {string} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {boolean} if we could turn it off or not\n       */;\n      _proto.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n        var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n        // In Video.js we slice listener functions\n        // on trigger so that it does not mess up the order\n        // while we loop through.\n        //\n        // Here we slice on off so that the loop in trigger\n        // can continue using it's old reference to loop without\n        // messing up the order.\n\n        this.listeners[type] = this.listeners[type].slice(0);\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      }\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {string} type the event name\n       */;\n      _proto.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      }\n      /**\n       * Destroys the stream and cleans up.\n       */;\n      _proto.dispose = function dispose() {\n        this.listeners = {};\n      }\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */;\n      _proto.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n      return Stream;\n    }();\n    /*! @name pkcs7 @version 1.0.4 @license Apache-2.0 */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     *\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n    /*! @name aes-decrypter @version 4.0.1 @license Apache-2.0 */\n\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n\n    const precompute = function () {\n      const tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      const encTable = tables[0];\n      const decTable = tables[1];\n      const sbox = encTable[4];\n      const sboxInv = decTable[4];\n      let i;\n      let x;\n      let xInv;\n      const d = [];\n      const th = [];\n      let x2;\n      let x4;\n      let x8;\n      let s;\n      let tEnc;\n      let tDec; // Compute double and third tables\n\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x; // Compute MixColumns\n\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      } // Compactify. Considerable speedup on Firefox.\n\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n      return tables;\n    };\n    let aesTables = null;\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    class AES {\n      constructor(key) {\n        /**\n        * The expanded S-box and inverse S-box tables. These will be computed\n        * on the client so that we don't have to send them down the wire.\n        *\n        * There are two tables, _tables[0] is for encryption and\n        * _tables[1] is for decryption.\n        *\n        * The first 4 sub-tables are the expanded S-box with MixColumns. The\n        * last (_tables[01][4]) is the S-box itself.\n        *\n        * @private\n        */\n        // if we have yet to precompute the S-box tables\n        // do so now\n        if (!aesTables) {\n          aesTables = precompute();\n        } // then make a copy of that object for use\n\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        let i;\n        let j;\n        let tmp;\n        const sbox = this._tables[0][4];\n        const decTable = this._tables[1];\n        const keyLen = key.length;\n        let rcon = 1;\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n        const encKey = key.slice(0);\n        const decKey = [];\n        this._key = [encKey, decKey]; // schedule encryption keys\n\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1]; // apply sbox\n\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        } // schedule decryption keys\n\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {number} encrypted0 the first word to decrypt\n       * @param {number} encrypted1 the second word to decrypt\n       * @param {number} encrypted2 the third word to decrypt\n       * @param {number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n      decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        const key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n        let a = encrypted0 ^ key[0];\n        let b = encrypted3 ^ key[1];\n        let c = encrypted2 ^ key[2];\n        let d = encrypted1 ^ key[3];\n        let a2;\n        let b2;\n        let c2; // key.length === 2 ?\n\n        const nInnerRounds = key.length / 4 - 2;\n        let i;\n        let kIndex = 4;\n        const table = this._tables[1]; // load up the tables\n\n        const table0 = table[0];\n        const table1 = table[1];\n        const table2 = table[2];\n        const table3 = table[3];\n        const sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;\n          b = b2;\n          c = c2;\n        } // Last round.\n\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;\n          a = b;\n          b = c;\n          c = d;\n          d = a2;\n        }\n      }\n    }\n    /**\n     * @file async-stream.js\n     */\n\n    /**\n     * A wrapper around the Stream class to use setTimeout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n    class AsyncStream extends Stream {\n      constructor() {\n        super(Stream);\n        this.jobs = [];\n        this.delay = 1;\n        this.timeout_ = null;\n      }\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n      processJob_() {\n        this.jobs.shift()();\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      }\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n      push(job) {\n        this.jobs.push(job);\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      }\n    }\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n\n    const ntoh = function (word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n\n    const decrypt = function (encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      const encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n      const decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n      const decrypted = new Uint8Array(encrypted.byteLength);\n      const decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n\n      let init0;\n      let init1;\n      let init2;\n      let init3;\n      let encrypted0;\n      let encrypted1;\n      let encrypted2;\n      let encrypted3; // iteration variable\n\n      let wordIx; // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n      return decrypted;\n    };\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n    class Decrypter {\n      constructor(encrypted, key, initVector, done) {\n        const step = Decrypter.STEP;\n        const encrypted32 = new Int32Array(encrypted.buffer);\n        const decrypted = new Uint8Array(encrypted.byteLength);\n        let i = 0;\n        this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        } // invoke the done() callback when everything is finished\n\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {number} the value of step 32000\n       */\n\n      static get STEP() {\n        // 4 * 8000;\n        return 32000;\n      }\n      /**\n       * @private\n       */\n\n      decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          const bytes = decrypt(encrypted, key, initVector);\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      }\n    }\n    var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n    var win;\n    if (typeof window !== \"undefined\") {\n      win = window;\n    } else if (typeof commonjsGlobal !== \"undefined\") {\n      win = commonjsGlobal;\n    } else if (typeof self !== \"undefined\") {\n      win = self;\n    } else {\n      win = {};\n    }\n    var window_1 = win;\n    var isArrayBufferView = function isArrayBufferView(obj) {\n      if (ArrayBuffer.isView === 'function') {\n        return ArrayBuffer.isView(obj);\n      }\n      return obj && obj.buffer instanceof ArrayBuffer;\n    };\n    var BigInt = window_1.BigInt || Number;\n    [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\n    (function () {\n      var a = new Uint16Array([0xFFCC]);\n      var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n      if (b[0] === 0xFF) {\n        return 'big';\n      }\n      if (b[0] === 0xCC) {\n        return 'little';\n      }\n      return 'unknown';\n    })();\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n\n    const createTransferableMessage = function (message) {\n      const transferable = {};\n      Object.keys(message).forEach(key => {\n        const value = message[key];\n        if (isArrayBufferView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n      return transferable;\n    };\n    /* global self */\n\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     */\n\n    self.onmessage = function (event) {\n      const data = event.data;\n      const encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n      const key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n      const iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n      /* eslint-disable no-new, handle-callback-err */\n\n      new Decrypter(encrypted, key, iv, function (err, bytes) {\n        self.postMessage(createTransferableMessage({\n          source: data.source,\n          decrypted: bytes\n        }), [bytes.buffer]);\n      });\n      /* eslint-enable */\n    };\n  }));\n  var Decrypter = factory(workerCode);\n  /* rollup-plugin-worker-factory end for worker!/home/runner/work/http-streaming/http-streaming/src/decrypter-worker.js */\n\n  /**\n   * Convert the properties of an HLS track into an audioTrackKind.\n   *\n   * @private\n   */\n\n  const audioTrackKind_ = properties => {\n    let kind = properties.default ? 'main' : 'alternative';\n    if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n      kind = 'main-desc';\n    }\n    return kind;\n  };\n  /**\n   * Pause provided segment loader and playlist loader if active\n   *\n   * @param {SegmentLoader} segmentLoader\n   *        SegmentLoader to pause\n   * @param {Object} mediaType\n   *        Active media type\n   * @function stopLoaders\n   */\n\n  const stopLoaders = (segmentLoader, mediaType) => {\n    segmentLoader.abort();\n    segmentLoader.pause();\n    if (mediaType && mediaType.activePlaylistLoader) {\n      mediaType.activePlaylistLoader.pause();\n      mediaType.activePlaylistLoader = null;\n    }\n  };\n  /**\n   * Start loading provided segment loader and playlist loader\n   *\n   * @param {PlaylistLoader} playlistLoader\n   *        PlaylistLoader to start loading\n   * @param {Object} mediaType\n   *        Active media type\n   * @function startLoaders\n   */\n\n  const startLoaders = (playlistLoader, mediaType) => {\n    // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n    // playlist loader\n    mediaType.activePlaylistLoader = playlistLoader;\n    playlistLoader.load();\n  };\n  /**\n   * Returns a function to be called when the media group changes. It performs a\n   * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n   * change of group is merely a rendition switch of the same content at another encoding,\n   * rather than a change of content, such as switching audio from English to Spanish.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Handler for a non-destructive resync of SegmentLoader when the active media\n   *         group changes.\n   * @function onGroupChanged\n   */\n\n  const onGroupChanged = (type, settings) => () => {\n    const {\n      segmentLoaders: {\n        [type]: segmentLoader,\n        main: mainSegmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    const activeTrack = mediaType.activeTrack();\n    const activeGroup = mediaType.getActiveGroup();\n    const previousActiveLoader = mediaType.activePlaylistLoader;\n    const lastGroup = mediaType.lastGroup_; // the group did not change do nothing\n\n    if (activeGroup && lastGroup && activeGroup.id === lastGroup.id) {\n      return;\n    }\n    mediaType.lastGroup_ = activeGroup;\n    mediaType.lastTrack_ = activeTrack;\n    stopLoaders(segmentLoader, mediaType);\n    if (!activeGroup || activeGroup.isMainPlaylist) {\n      // there is no group active or active group is a main playlist and won't change\n      return;\n    }\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n      return;\n    } // Non-destructive resync\n\n    segmentLoader.resyncLoader();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n  const onGroupChanging = (type, settings) => () => {\n    const {\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    mediaType.lastGroup_ = null;\n    segmentLoader.abort();\n    segmentLoader.pause();\n  };\n  /**\n   * Returns a function to be called when the media track changes. It performs a\n   * destructive reset of the SegmentLoader to ensure we start loading as close to\n   * currentTime as possible.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Handler for a destructive reset of SegmentLoader when the active media\n   *         track changes.\n   * @function onTrackChanged\n   */\n\n  const onTrackChanged = (type, settings) => () => {\n    const {\n      mainPlaylistLoader,\n      segmentLoaders: {\n        [type]: segmentLoader,\n        main: mainSegmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    const activeTrack = mediaType.activeTrack();\n    const activeGroup = mediaType.getActiveGroup();\n    const previousActiveLoader = mediaType.activePlaylistLoader;\n    const lastTrack = mediaType.lastTrack_; // track did not change, do nothing\n\n    if (lastTrack && activeTrack && lastTrack.id === activeTrack.id) {\n      return;\n    }\n    mediaType.lastGroup_ = activeGroup;\n    mediaType.lastTrack_ = activeTrack;\n    stopLoaders(segmentLoader, mediaType);\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n    if (activeGroup.isMainPlaylist) {\n      // track did not change, do nothing\n      if (!activeTrack || !lastTrack || activeTrack.id === lastTrack.id) {\n        return;\n      }\n      const pc = settings.vhs.playlistController_;\n      const newPlaylist = pc.selectPlaylist(); // media will not change do nothing\n\n      if (pc.media() === newPlaylist) {\n        return;\n      }\n      mediaType.logger_(`track change. Switching main audio from ${lastTrack.id} to ${activeTrack.id}`);\n      mainPlaylistLoader.pause();\n      mainSegmentLoader.resetEverything();\n      pc.fastQualityChange_(newPlaylist);\n      return;\n    }\n    if (type === 'AUDIO') {\n      if (!activeGroup.playlistLoader) {\n        // when switching from demuxed audio/video to muxed audio/video (noted by no\n        // playlist loader for the audio group), we want to do a destructive reset of the\n        // main segment loader and not restart the audio loaders\n        mainSegmentLoader.setAudio(true); // don't have to worry about disabling the audio of the audio segment loader since\n        // it should be stopped\n\n        mainSegmentLoader.resetEverything();\n        return;\n      } // although the segment loader is an audio segment loader, call the setAudio\n      // function to ensure it is prepared to re-append the init segment (or handle other\n      // config changes)\n\n      segmentLoader.setAudio(true);\n      mainSegmentLoader.setAudio(false);\n    }\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    } // destructive reset\n\n    segmentLoader.resetEverything();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n  const onError = {\n    /**\n     * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n     * an error.\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @return {Function}\n     *         Error handler. Logs warning (or error if the playlist is excluded) to\n     *         console and switches back to default audio track.\n     * @function onError.AUDIO\n     */\n    AUDIO: (type, settings) => () => {\n      const {\n        mediaTypes: {\n          [type]: mediaType\n        },\n        excludePlaylist\n      } = settings; // switch back to default audio track\n\n      const activeTrack = mediaType.activeTrack();\n      const activeGroup = mediaType.activeGroup();\n      const id = (activeGroup.filter(group => group.default)[0] || activeGroup[0]).id;\n      const defaultTrack = mediaType.tracks[id];\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is exclude the current\n        // rendition and hope another will switch audio groups\n        excludePlaylist({\n          error: {\n            message: 'Problem encountered loading the default audio track.'\n          }\n        });\n        return;\n      }\n      videojs.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n      for (const trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n      mediaType.onTrackChanged();\n    },\n    /**\n     * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n     * an error.\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @return {Function}\n     *         Error handler. Logs warning to console and disables the active subtitle track\n     * @function onError.SUBTITLES\n     */\n    SUBTITLES: (type, settings) => () => {\n      const {\n        mediaTypes: {\n          [type]: mediaType\n        }\n      } = settings;\n      videojs.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n      const track = mediaType.activeTrack();\n      if (track) {\n        track.mode = 'disabled';\n      }\n      mediaType.onTrackChanged();\n    }\n  };\n  const setupListeners = {\n    /**\n     * Setup event listeners for audio playlist loader\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {PlaylistLoader|null} playlistLoader\n     *        PlaylistLoader to register listeners on\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function setupListeners.AUDIO\n     */\n    AUDIO: (type, playlistLoader, settings) => {\n      if (!playlistLoader) {\n        // no playlist loader means audio will be muxed with the video\n        return;\n      }\n      const {\n        tech,\n        requestOptions,\n        segmentLoaders: {\n          [type]: segmentLoader\n        }\n      } = settings;\n      playlistLoader.on('loadedmetadata', () => {\n        const media = playlistLoader.media();\n        segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n        // permits, start downloading segments\n\n        if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n          segmentLoader.load();\n        }\n      });\n      playlistLoader.on('loadedplaylist', () => {\n        segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n        if (!tech.paused()) {\n          segmentLoader.load();\n        }\n      });\n      playlistLoader.on('error', onError[type](type, settings));\n    },\n    /**\n     * Setup event listeners for subtitle playlist loader\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {PlaylistLoader|null} playlistLoader\n     *        PlaylistLoader to register listeners on\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function setupListeners.SUBTITLES\n     */\n    SUBTITLES: (type, playlistLoader, settings) => {\n      const {\n        tech,\n        requestOptions,\n        segmentLoaders: {\n          [type]: segmentLoader\n        },\n        mediaTypes: {\n          [type]: mediaType\n        }\n      } = settings;\n      playlistLoader.on('loadedmetadata', () => {\n        const media = playlistLoader.media();\n        segmentLoader.playlist(media, requestOptions);\n        segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n        // permits, start downloading segments\n\n        if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n          segmentLoader.load();\n        }\n      });\n      playlistLoader.on('loadedplaylist', () => {\n        segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n        if (!tech.paused()) {\n          segmentLoader.load();\n        }\n      });\n      playlistLoader.on('error', onError[type](type, settings));\n    }\n  };\n  const initialize = {\n    /**\n     * Setup PlaylistLoaders and AudioTracks for the audio groups\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function initialize.AUDIO\n     */\n    'AUDIO': (type, settings) => {\n      const {\n        vhs,\n        sourceType,\n        segmentLoaders: {\n          [type]: segmentLoader\n        },\n        requestOptions,\n        main: {\n          mediaGroups\n        },\n        mediaTypes: {\n          [type]: {\n            groups,\n            tracks,\n            logger_\n          }\n        },\n        mainPlaylistLoader\n      } = settings;\n      const audioOnlyMain = isAudioOnly(mainPlaylistLoader.main); // force a default if we have none\n\n      if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n        mediaGroups[type] = {\n          main: {\n            default: {\n              default: true\n            }\n          }\n        };\n        if (audioOnlyMain) {\n          mediaGroups[type].main.default.playlists = mainPlaylistLoader.main.playlists;\n        }\n      }\n      for (const groupId in mediaGroups[type]) {\n        if (!groups[groupId]) {\n          groups[groupId] = [];\n        }\n        for (const variantLabel in mediaGroups[type][groupId]) {\n          let properties = mediaGroups[type][groupId][variantLabel];\n          let playlistLoader;\n          if (audioOnlyMain) {\n            logger_(`AUDIO group '${groupId}' label '${variantLabel}' is a main playlist`);\n            properties.isMainPlaylist = true;\n            playlistLoader = null; // if vhs-json was provided as the source, and the media playlist was resolved,\n            // use the resolved media playlist object\n          } else if (sourceType === 'vhs-json' && properties.playlists) {\n            playlistLoader = new PlaylistLoader(properties.playlists[0], vhs, requestOptions);\n          } else if (properties.resolvedUri) {\n            playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions); // TODO: dash isn't the only type with properties.playlists\n            // should we even have properties.playlists in this check.\n          } else if (properties.playlists && sourceType === 'dash') {\n            playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, mainPlaylistLoader);\n          } else {\n            // no resolvedUri means the audio is muxed with the video when using this\n            // audio track\n            playlistLoader = null;\n          }\n          properties = merge({\n            id: variantLabel,\n            playlistLoader\n          }, properties);\n          setupListeners[type](type, properties.playlistLoader, settings);\n          groups[groupId].push(properties);\n          if (typeof tracks[variantLabel] === 'undefined') {\n            const track = new videojs.AudioTrack({\n              id: variantLabel,\n              kind: audioTrackKind_(properties),\n              enabled: false,\n              language: properties.language,\n              default: properties.default,\n              label: variantLabel\n            });\n            tracks[variantLabel] = track;\n          }\n        }\n      } // setup single error event handler for the segment loader\n\n      segmentLoader.on('error', onError[type](type, settings));\n    },\n    /**\n     * Setup PlaylistLoaders and TextTracks for the subtitle groups\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function initialize.SUBTITLES\n     */\n    'SUBTITLES': (type, settings) => {\n      const {\n        tech,\n        vhs,\n        sourceType,\n        segmentLoaders: {\n          [type]: segmentLoader\n        },\n        requestOptions,\n        main: {\n          mediaGroups\n        },\n        mediaTypes: {\n          [type]: {\n            groups,\n            tracks\n          }\n        },\n        mainPlaylistLoader\n      } = settings;\n      for (const groupId in mediaGroups[type]) {\n        if (!groups[groupId]) {\n          groups[groupId] = [];\n        }\n        for (const variantLabel in mediaGroups[type][groupId]) {\n          if (!vhs.options_.useForcedSubtitles && mediaGroups[type][groupId][variantLabel].forced) {\n            // Subtitle playlists with the forced attribute are not selectable in Safari.\n            // According to Apple's HLS Authoring Specification:\n            //   If content has forced subtitles and regular subtitles in a given language,\n            //   the regular subtitles track in that language MUST contain both the forced\n            //   subtitles and the regular subtitles for that language.\n            // Because of this requirement and that Safari does not add forced subtitles,\n            // forced subtitles are skipped here to maintain consistent experience across\n            // all platforms\n            continue;\n          }\n          let properties = mediaGroups[type][groupId][variantLabel];\n          let playlistLoader;\n          if (sourceType === 'hls') {\n            playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions);\n          } else if (sourceType === 'dash') {\n            const playlists = properties.playlists.filter(p => p.excludeUntil !== Infinity);\n            if (!playlists.length) {\n              return;\n            }\n            playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, mainPlaylistLoader);\n          } else if (sourceType === 'vhs-json') {\n            playlistLoader = new PlaylistLoader(\n            // if the vhs-json object included the media playlist, use the media playlist\n            // as provided, otherwise use the resolved URI to load the playlist\n            properties.playlists ? properties.playlists[0] : properties.resolvedUri, vhs, requestOptions);\n          }\n          properties = merge({\n            id: variantLabel,\n            playlistLoader\n          }, properties);\n          setupListeners[type](type, properties.playlistLoader, settings);\n          groups[groupId].push(properties);\n          if (typeof tracks[variantLabel] === 'undefined') {\n            const track = tech.addRemoteTextTrack({\n              id: variantLabel,\n              kind: 'subtitles',\n              default: properties.default && properties.autoselect,\n              language: properties.language,\n              label: variantLabel\n            }, false).track;\n            tracks[variantLabel] = track;\n          }\n        }\n      } // setup single error event handler for the segment loader\n\n      segmentLoader.on('error', onError[type](type, settings));\n    },\n    /**\n     * Setup TextTracks for the closed-caption groups\n     *\n     * @param {String} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function initialize['CLOSED-CAPTIONS']\n     */\n    'CLOSED-CAPTIONS': (type, settings) => {\n      const {\n        tech,\n        main: {\n          mediaGroups\n        },\n        mediaTypes: {\n          [type]: {\n            groups,\n            tracks\n          }\n        }\n      } = settings;\n      for (const groupId in mediaGroups[type]) {\n        if (!groups[groupId]) {\n          groups[groupId] = [];\n        }\n        for (const variantLabel in mediaGroups[type][groupId]) {\n          const properties = mediaGroups[type][groupId][variantLabel]; // Look for either 608 (CCn) or 708 (SERVICEn) caption services\n\n          if (!/^(?:CC|SERVICE)/.test(properties.instreamId)) {\n            continue;\n          }\n          const captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n          let newProps = {\n            label: variantLabel,\n            language: properties.language,\n            instreamId: properties.instreamId,\n            default: properties.default && properties.autoselect\n          };\n          if (captionServices[newProps.instreamId]) {\n            newProps = merge(newProps, captionServices[newProps.instreamId]);\n          }\n          if (newProps.default === undefined) {\n            delete newProps.default;\n          } // No PlaylistLoader is required for Closed-Captions because the captions are\n          // embedded within the video stream\n\n          groups[groupId].push(merge({\n            id: variantLabel\n          }, properties));\n          if (typeof tracks[variantLabel] === 'undefined') {\n            const track = tech.addRemoteTextTrack({\n              id: newProps.instreamId,\n              kind: 'captions',\n              default: newProps.default,\n              language: newProps.language,\n              label: newProps.label\n            }, false).track;\n            tracks[variantLabel] = track;\n          }\n        }\n      }\n    }\n  };\n  const groupMatch = (list, media) => {\n    for (let i = 0; i < list.length; i++) {\n      if (playlistMatch(media, list[i])) {\n        return true;\n      }\n      if (list[i].playlists && groupMatch(list[i].playlists, media)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  /**\n   * Returns a function used to get the active group of the provided type\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media group for the provided type. Takes an\n   *         optional parameter {TextTrack} track. If no track is provided, a list of all\n   *         variants in the group, otherwise the variant corresponding to the provided\n   *         track is returned.\n   * @function activeGroup\n   */\n\n  const activeGroup = (type, settings) => track => {\n    const {\n      mainPlaylistLoader,\n      mediaTypes: {\n        [type]: {\n          groups\n        }\n      }\n    } = settings;\n    const media = mainPlaylistLoader.media();\n    if (!media) {\n      return null;\n    }\n    let variants = null; // set to variants to main media active group\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n    const groupKeys = Object.keys(groups);\n    if (!variants) {\n      // find the mainPlaylistLoader media\n      // that is in a media group if we are dealing\n      // with audio only\n      if (type === 'AUDIO' && groupKeys.length > 1 && isAudioOnly(settings.main)) {\n        for (let i = 0; i < groupKeys.length; i++) {\n          const groupPropertyList = groups[groupKeys[i]];\n          if (groupMatch(groupPropertyList, media)) {\n            variants = groupPropertyList;\n            break;\n          }\n        } // use the main group if it exists\n      } else if (groups.main) {\n        variants = groups.main; // only one group, use that one\n      } else if (groupKeys.length === 1) {\n        variants = groups[groupKeys[0]];\n      }\n    }\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n    if (track === null || !variants) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n    return variants.filter(props => props.id === track.id)[0] || null;\n  };\n  const activeTrack = {\n    /**\n     * Returns a function used to get the active track of type provided\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @return {Function}\n     *         Function that returns the active media track for the provided type. Returns\n     *         null if no track is active\n     * @function activeTrack.AUDIO\n     */\n    AUDIO: (type, settings) => () => {\n      const {\n        mediaTypes: {\n          [type]: {\n            tracks\n          }\n        }\n      } = settings;\n      for (const id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n      return null;\n    },\n    /**\n     * Returns a function used to get the active track of type provided\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @return {Function}\n     *         Function that returns the active media track for the provided type. Returns\n     *         null if no track is active\n     * @function activeTrack.SUBTITLES\n     */\n    SUBTITLES: (type, settings) => () => {\n      const {\n        mediaTypes: {\n          [type]: {\n            tracks\n          }\n        }\n      } = settings;\n      for (const id in tracks) {\n        if (tracks[id].mode === 'showing' || tracks[id].mode === 'hidden') {\n          return tracks[id];\n        }\n      }\n      return null;\n    }\n  };\n  const getActiveGroup = (type, {\n    mediaTypes\n  }) => () => {\n    const activeTrack_ = mediaTypes[type].activeTrack();\n    if (!activeTrack_) {\n      return null;\n    }\n    return mediaTypes[type].activeGroup(activeTrack_);\n  };\n  /**\n   * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n   * Closed-Captions) specified in the main manifest.\n   *\n   * @param {Object} settings\n   *        Object containing required information for setting up the media groups\n   * @param {Tech} settings.tech\n   *        The tech of the player\n   * @param {Object} settings.requestOptions\n   *        XHR request options used by the segment loaders\n   * @param {PlaylistLoader} settings.mainPlaylistLoader\n   *        PlaylistLoader for the main source\n   * @param {VhsHandler} settings.vhs\n   *        VHS SourceHandler\n   * @param {Object} settings.main\n   *        The parsed main manifest\n   * @param {Object} settings.mediaTypes\n   *        Object to store the loaders, tracks, and utility methods for each media type\n   * @param {Function} settings.excludePlaylist\n   *        Excludes the current rendition and forces a rendition switch.\n   * @function setupMediaGroups\n   */\n\n  const setupMediaGroups = settings => {\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n      initialize[type](type, settings);\n    });\n    const {\n      mediaTypes,\n      mainPlaylistLoader,\n      tech,\n      vhs,\n      segmentLoaders: {\n        ['AUDIO']: audioSegmentLoader,\n        main: mainSegmentLoader\n      }\n    } = settings; // setup active group and track getters and change event handlers\n\n    ['AUDIO', 'SUBTITLES'].forEach(type => {\n      mediaTypes[type].activeGroup = activeGroup(type, settings);\n      mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n      mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n      mediaTypes[type].onGroupChanging = onGroupChanging(type, settings);\n      mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n      mediaTypes[type].getActiveGroup = getActiveGroup(type, settings);\n    }); // DO NOT enable the default subtitle or caption track.\n    // DO enable the default audio track\n\n    const audioGroup = mediaTypes.AUDIO.activeGroup();\n    if (audioGroup) {\n      const groupId = (audioGroup.filter(group => group.default)[0] || audioGroup[0]).id;\n      mediaTypes.AUDIO.tracks[groupId].enabled = true;\n      mediaTypes.AUDIO.onGroupChanged();\n      mediaTypes.AUDIO.onTrackChanged();\n      const activeAudioGroup = mediaTypes.AUDIO.getActiveGroup(); // a similar check for handling setAudio on each loader is run again each time the\n      // track is changed, but needs to be handled here since the track may not be considered\n      // changed on the first call to onTrackChanged\n\n      if (!activeAudioGroup.playlistLoader) {\n        // either audio is muxed with video or the stream is audio only\n        mainSegmentLoader.setAudio(true);\n      } else {\n        // audio is demuxed\n        mainSegmentLoader.setAudio(false);\n        audioSegmentLoader.setAudio(true);\n      }\n    }\n    mainPlaylistLoader.on('mediachange', () => {\n      ['AUDIO', 'SUBTITLES'].forEach(type => mediaTypes[type].onGroupChanged());\n    });\n    mainPlaylistLoader.on('mediachanging', () => {\n      ['AUDIO', 'SUBTITLES'].forEach(type => mediaTypes[type].onGroupChanging());\n    }); // custom audio track change event handler for usage event\n\n    const onAudioTrackChanged = () => {\n      mediaTypes.AUDIO.onTrackChanged();\n      tech.trigger({\n        type: 'usage',\n        name: 'vhs-audio-change'\n      });\n    };\n    tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n    vhs.on('dispose', () => {\n      tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n      tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n    }); // clear existing audio tracks and add the ones we just created\n\n    tech.clearTracks('audio');\n    for (const id in mediaTypes.AUDIO.tracks) {\n      tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n    }\n  };\n  /**\n   * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n   * media type\n   *\n   * @return {Object}\n   *         Object to store the loaders, tracks, and utility methods for each media type\n   * @function createMediaTypes\n   */\n\n  const createMediaTypes = () => {\n    const mediaTypes = {};\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n      mediaTypes[type] = {\n        groups: {},\n        tracks: {},\n        activePlaylistLoader: null,\n        activeGroup: noop,\n        activeTrack: noop,\n        getActiveGroup: noop,\n        onGroupChanged: noop,\n        onTrackChanged: noop,\n        lastTrack_: null,\n        logger_: logger(`MediaGroups[${type}]`)\n      };\n    });\n    return mediaTypes;\n  };\n\n  /**\n   * A utility class for setting properties and maintaining the state of the content steering manifest.\n   *\n   * Content Steering manifest format:\n   * VERSION: number (required) currently only version 1 is supported.\n   * TTL: number in seconds (optional) until the next content steering manifest reload.\n   * RELOAD-URI: string (optional) uri to fetch the next content steering manifest.\n   * SERVICE-LOCATION-PRIORITY or PATHWAY-PRIORITY a non empty array of unique string values.\n   * PATHWAY-CLONES: array (optional) (HLS only) pathway clone objects to copy from other playlists.\n   */\n\n  class SteeringManifest {\n    constructor() {\n      this.priority_ = [];\n      this.pathwayClones_ = new Map();\n    }\n    set version(number) {\n      // Only version 1 is currently supported for both DASH and HLS.\n      if (number === 1) {\n        this.version_ = number;\n      }\n    }\n    set ttl(seconds) {\n      // TTL = time-to-live, default = 300 seconds.\n      this.ttl_ = seconds || 300;\n    }\n    set reloadUri(uri) {\n      if (uri) {\n        // reload URI can be relative to the previous reloadUri.\n        this.reloadUri_ = resolveUrl(this.reloadUri_, uri);\n      }\n    }\n    set priority(array) {\n      // priority must be non-empty and unique values.\n      if (array && array.length) {\n        this.priority_ = array;\n      }\n    }\n    set pathwayClones(array) {\n      // pathwayClones must be non-empty.\n      if (array && array.length) {\n        this.pathwayClones_ = new Map(array.map(clone => [clone.ID, clone]));\n      }\n    }\n    get version() {\n      return this.version_;\n    }\n    get ttl() {\n      return this.ttl_;\n    }\n    get reloadUri() {\n      return this.reloadUri_;\n    }\n    get priority() {\n      return this.priority_;\n    }\n    get pathwayClones() {\n      return this.pathwayClones_;\n    }\n  }\n  /**\n   * This class represents a content steering manifest and associated state. See both HLS and DASH specifications.\n   * HLS: https://developer.apple.com/streaming/HLSContentSteeringSpecification.pdf and\n   * https://datatracker.ietf.org/doc/draft-pantos-hls-rfc8216bis/ section 4.4.6.6.\n   * DASH: https://dashif.org/docs/DASH-IF-CTS-00XX-Content-Steering-Community-Review.pdf\n   *\n   * @param {function} xhr for making a network request from the browser.\n   * @param {function} bandwidth for fetching the current bandwidth from the main segment loader.\n   */\n\n  class ContentSteeringController extends videojs.EventTarget {\n    constructor(xhr, bandwidth) {\n      super();\n      this.currentPathway = null;\n      this.defaultPathway = null;\n      this.queryBeforeStart = false;\n      this.availablePathways_ = new Set();\n      this.steeringManifest = new SteeringManifest();\n      this.proxyServerUrl_ = null;\n      this.manifestType_ = null;\n      this.ttlTimeout_ = null;\n      this.request_ = null;\n      this.currentPathwayClones = new Map();\n      this.nextPathwayClones = new Map();\n      this.excludedSteeringManifestURLs = new Set();\n      this.logger_ = logger('Content Steering');\n      this.xhr_ = xhr;\n      this.getBandwidth_ = bandwidth;\n    }\n    /**\n     * Assigns the content steering tag properties to the steering controller\n     *\n     * @param {string} baseUrl the baseURL from the main manifest for resolving the steering manifest url\n     * @param {Object} steeringTag the content steering tag from the main manifest\n     */\n\n    assignTagProperties(baseUrl, steeringTag) {\n      this.manifestType_ = steeringTag.serverUri ? 'HLS' : 'DASH'; // serverUri is HLS serverURL is DASH\n\n      const steeringUri = steeringTag.serverUri || steeringTag.serverURL;\n      if (!steeringUri) {\n        this.logger_(`steering manifest URL is ${steeringUri}, cannot request steering manifest.`);\n        this.trigger('error');\n        return;\n      } // Content steering manifests can be encoded as a data URI. We can decode, parse and return early if that's the case.\n\n      if (steeringUri.startsWith('data:')) {\n        this.decodeDataUriManifest_(steeringUri.substring(steeringUri.indexOf(',') + 1));\n        return;\n      } // reloadUri is the resolution of the main manifest URL and steering URL.\n\n      this.steeringManifest.reloadUri = resolveUrl(baseUrl, steeringUri); // pathwayId is HLS defaultServiceLocation is DASH\n\n      this.defaultPathway = steeringTag.pathwayId || steeringTag.defaultServiceLocation; // currently only DASH supports the following properties on <ContentSteering> tags.\n\n      this.queryBeforeStart = steeringTag.queryBeforeStart;\n      this.proxyServerUrl_ = steeringTag.proxyServerURL; // trigger a steering event if we have a pathway from the content steering tag.\n      // this tells VHS which segment pathway to start with.\n      // If queryBeforeStart is true we need to wait for the steering manifest response.\n\n      if (this.defaultPathway && !this.queryBeforeStart) {\n        this.trigger('content-steering');\n      }\n    }\n    /**\n     * Requests the content steering manifest and parse the response. This should only be called after\n     * assignTagProperties was called with a content steering tag.\n     *\n     * @param {string} initialUri The optional uri to make the request with.\n     *    If set, the request should be made with exactly what is passed in this variable.\n     *    This scenario should only happen once on initalization.\n     */\n\n    requestSteeringManifest(initial) {\n      const reloadUri = this.steeringManifest.reloadUri;\n      if (!reloadUri) {\n        return;\n      } // We currently don't support passing MPD query parameters directly to the content steering URL as this requires\n      // ExtUrlQueryInfo tag support. See the DASH content steering spec section 8.1.\n      // This request URI accounts for manifest URIs that have been excluded.\n\n      const uri = initial ? reloadUri : this.getRequestURI(reloadUri); // If there are no valid manifest URIs, we should stop content steering.\n\n      if (!uri) {\n        this.logger_('No valid content steering manifest URIs. Stopping content steering.');\n        this.trigger('error');\n        this.dispose();\n        return;\n      }\n      const metadata = {\n        contentSteeringInfo: {\n          uri\n        }\n      };\n      this.trigger({\n        type: 'contentsteeringloadstart',\n        metadata\n      });\n      this.request_ = this.xhr_({\n        uri,\n        requestType: 'content-steering-manifest'\n      }, (error, errorInfo) => {\n        if (error) {\n          // If the client receives HTTP 410 Gone in response to a manifest request,\n          // it MUST NOT issue another request for that URI for the remainder of the\n          // playback session. It MAY continue to use the most-recently obtained set\n          // of Pathways.\n          if (errorInfo.status === 410) {\n            this.logger_(`manifest request 410 ${error}.`);\n            this.logger_(`There will be no more content steering requests to ${uri} this session.`);\n            this.excludedSteeringManifestURLs.add(uri);\n            return;\n          } // If the client receives HTTP 429 Too Many Requests with a Retry-After\n          // header in response to a manifest request, it SHOULD wait until the time\n          // specified by the Retry-After header to reissue the request.\n\n          if (errorInfo.status === 429) {\n            const retrySeconds = errorInfo.responseHeaders['retry-after'];\n            this.logger_(`manifest request 429 ${error}.`);\n            this.logger_(`content steering will retry in ${retrySeconds} seconds.`);\n            this.startTTLTimeout_(parseInt(retrySeconds, 10));\n            return;\n          } // If the Steering Manifest cannot be loaded and parsed correctly, the\n          // client SHOULD continue to use the previous values and attempt to reload\n          // it after waiting for the previously-specified TTL (or 5 minutes if\n          // none).\n\n          this.logger_(`manifest failed to load ${error}.`);\n          this.startTTLTimeout_();\n          return;\n        }\n        this.trigger({\n          type: 'contentsteeringloadcomplete',\n          metadata\n        });\n        let steeringManifestJson;\n        try {\n          steeringManifestJson = JSON.parse(this.request_.responseText);\n        } catch (parseError) {\n          const errorMetadata = {\n            errorType: videojs.Error.StreamingContentSteeringParserError,\n            error: parseError\n          };\n          this.trigger({\n            type: 'error',\n            metadata: errorMetadata\n          });\n        }\n        this.assignSteeringProperties_(steeringManifestJson);\n        const parsedMetadata = {\n          contentSteeringInfo: metadata.contentSteeringInfo,\n          contentSteeringManifest: {\n            version: this.steeringManifest.version,\n            reloadUri: this.steeringManifest.reloadUri,\n            priority: this.steeringManifest.priority\n          }\n        };\n        this.trigger({\n          type: 'contentsteeringparsed',\n          metadata: parsedMetadata\n        });\n        this.startTTLTimeout_();\n      });\n    }\n    /**\n     * Set the proxy server URL and add the steering manifest url as a URI encoded parameter.\n     *\n     * @param {string} steeringUrl the steering manifest url\n     * @return the steering manifest url to a proxy server with all parameters set\n     */\n\n    setProxyServerUrl_(steeringUrl) {\n      const steeringUrlObject = new window.URL(steeringUrl);\n      const proxyServerUrlObject = new window.URL(this.proxyServerUrl_);\n      proxyServerUrlObject.searchParams.set('url', encodeURI(steeringUrlObject.toString()));\n      return this.setSteeringParams_(proxyServerUrlObject.toString());\n    }\n    /**\n     * Decodes and parses the data uri encoded steering manifest\n     *\n     * @param {string} dataUri the data uri to be decoded and parsed.\n     */\n\n    decodeDataUriManifest_(dataUri) {\n      const steeringManifestJson = JSON.parse(window.atob(dataUri));\n      this.assignSteeringProperties_(steeringManifestJson);\n    }\n    /**\n     * Set the HLS or DASH content steering manifest request query parameters. For example:\n     * _HLS_pathway=\"<CURRENT-PATHWAY-ID>\" and _HLS_throughput=<THROUGHPUT>\n     * _DASH_pathway and _DASH_throughput\n     *\n     * @param {string} uri to add content steering server parameters to.\n     * @return a new uri as a string with the added steering query parameters.\n     */\n\n    setSteeringParams_(url) {\n      const urlObject = new window.URL(url);\n      const path = this.getPathway();\n      const networkThroughput = this.getBandwidth_();\n      if (path) {\n        const pathwayKey = `_${this.manifestType_}_pathway`;\n        urlObject.searchParams.set(pathwayKey, path);\n      }\n      if (networkThroughput) {\n        const throughputKey = `_${this.manifestType_}_throughput`;\n        urlObject.searchParams.set(throughputKey, networkThroughput);\n      }\n      return urlObject.toString();\n    }\n    /**\n     * Assigns the current steering manifest properties and to the SteeringManifest object\n     *\n     * @param {Object} steeringJson the raw JSON steering manifest\n     */\n\n    assignSteeringProperties_(steeringJson) {\n      this.steeringManifest.version = steeringJson.VERSION;\n      if (!this.steeringManifest.version) {\n        this.logger_(`manifest version is ${steeringJson.VERSION}, which is not supported.`);\n        this.trigger('error');\n        return;\n      }\n      this.steeringManifest.ttl = steeringJson.TTL;\n      this.steeringManifest.reloadUri = steeringJson['RELOAD-URI']; // HLS = PATHWAY-PRIORITY required. DASH = SERVICE-LOCATION-PRIORITY optional\n\n      this.steeringManifest.priority = steeringJson['PATHWAY-PRIORITY'] || steeringJson['SERVICE-LOCATION-PRIORITY']; // Pathway clones to be created/updated in HLS.\n      // See section 7.2 https://datatracker.ietf.org/doc/draft-pantos-hls-rfc8216bis/\n\n      this.steeringManifest.pathwayClones = steeringJson['PATHWAY-CLONES'];\n      this.nextPathwayClones = this.steeringManifest.pathwayClones; // 1. apply first pathway from the array.\n      // 2. if first pathway doesn't exist in manifest, try next pathway.\n      //    a. if all pathways are exhausted, ignore the steering manifest priority.\n      // 3. if segments fail from an established pathway, try all variants/renditions, then exclude the failed pathway.\n      //    a. exclude a pathway for a minimum of the last TTL duration. Meaning, from the next steering response,\n      //       the excluded pathway will be ignored.\n      //       See excludePathway usage in excludePlaylist().\n      // If there are no available pathways, we need to stop content steering.\n\n      if (!this.availablePathways_.size) {\n        this.logger_('There are no available pathways for content steering. Ending content steering.');\n        this.trigger('error');\n        this.dispose();\n      }\n      const chooseNextPathway = pathwaysByPriority => {\n        for (const path of pathwaysByPriority) {\n          if (this.availablePathways_.has(path)) {\n            return path;\n          }\n        } // If no pathway matches, ignore the manifest and choose the first available.\n\n        return [...this.availablePathways_][0];\n      };\n      const nextPathway = chooseNextPathway(this.steeringManifest.priority);\n      if (this.currentPathway !== nextPathway) {\n        this.currentPathway = nextPathway;\n        this.trigger('content-steering');\n      }\n    }\n    /**\n     * Returns the pathway to use for steering decisions\n     *\n     * @return {string} returns the current pathway or the default\n     */\n\n    getPathway() {\n      return this.currentPathway || this.defaultPathway;\n    }\n    /**\n     * Chooses the manifest request URI based on proxy URIs and server URLs.\n     * Also accounts for exclusion on certain manifest URIs.\n     *\n     * @param {string} reloadUri the base uri before parameters\n     *\n     * @return {string} the final URI for the request to the manifest server.\n     */\n\n    getRequestURI(reloadUri) {\n      if (!reloadUri) {\n        return null;\n      }\n      const isExcluded = uri => this.excludedSteeringManifestURLs.has(uri);\n      if (this.proxyServerUrl_) {\n        const proxyURI = this.setProxyServerUrl_(reloadUri);\n        if (!isExcluded(proxyURI)) {\n          return proxyURI;\n        }\n      }\n      const steeringURI = this.setSteeringParams_(reloadUri);\n      if (!isExcluded(steeringURI)) {\n        return steeringURI;\n      } // Return nothing if all valid manifest URIs are excluded.\n\n      return null;\n    }\n    /**\n     * Start the timeout for re-requesting the steering manifest at the TTL interval.\n     *\n     * @param {number} ttl time in seconds of the timeout. Defaults to the\n     *        ttl interval in the steering manifest\n     */\n\n    startTTLTimeout_(ttl = this.steeringManifest.ttl) {\n      // 300 (5 minutes) is the default value.\n      const ttlMS = ttl * 1000;\n      this.ttlTimeout_ = window.setTimeout(() => {\n        this.requestSteeringManifest();\n      }, ttlMS);\n    }\n    /**\n     * Clear the TTL timeout if necessary.\n     */\n\n    clearTTLTimeout_() {\n      window.clearTimeout(this.ttlTimeout_);\n      this.ttlTimeout_ = null;\n    }\n    /**\n     * aborts any current steering xhr and sets the current request object to null\n     */\n\n    abort() {\n      if (this.request_) {\n        this.request_.abort();\n      }\n      this.request_ = null;\n    }\n    /**\n     * aborts steering requests clears the ttl timeout and resets all properties.\n     */\n\n    dispose() {\n      this.off('content-steering');\n      this.off('error');\n      this.abort();\n      this.clearTTLTimeout_();\n      this.currentPathway = null;\n      this.defaultPathway = null;\n      this.queryBeforeStart = null;\n      this.proxyServerUrl_ = null;\n      this.manifestType_ = null;\n      this.ttlTimeout_ = null;\n      this.request_ = null;\n      this.excludedSteeringManifestURLs = new Set();\n      this.availablePathways_ = new Set();\n      this.steeringManifest = new SteeringManifest();\n    }\n    /**\n     * adds a pathway to the available pathways set\n     *\n     * @param {string} pathway the pathway string to add\n     */\n\n    addAvailablePathway(pathway) {\n      if (pathway) {\n        this.availablePathways_.add(pathway);\n      }\n    }\n    /**\n     * Clears all pathways from the available pathways set\n     */\n\n    clearAvailablePathways() {\n      this.availablePathways_.clear();\n    }\n    /**\n     * Removes a pathway from the available pathways set.\n     */\n\n    excludePathway(pathway) {\n      return this.availablePathways_.delete(pathway);\n    }\n    /**\n     * Checks the refreshed DASH manifest content steering tag for changes.\n     *\n     * @param {string} baseURL new steering tag on DASH manifest refresh\n     * @param {Object} newTag the new tag to check for changes\n     * @return a true or false whether the new tag has different values\n     */\n\n    didDASHTagChange(baseURL, newTag) {\n      return !newTag && this.steeringManifest.reloadUri || newTag && (resolveUrl(baseURL, newTag.serverURL) !== this.steeringManifest.reloadUri || newTag.defaultServiceLocation !== this.defaultPathway || newTag.queryBeforeStart !== this.queryBeforeStart || newTag.proxyServerURL !== this.proxyServerUrl_);\n    }\n    getAvailablePathways() {\n      return this.availablePathways_;\n    }\n  }\n  const ABORT_EARLY_EXCLUSION_SECONDS = 10;\n  let Vhs$1; // SegmentLoader stats that need to have each loader's\n  // values summed to calculate the final value\n\n  const loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred', 'mediaAppends'];\n  const sumLoaderStat = function (stat) {\n    return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n  };\n  const shouldSwitchToMedia = function ({\n    currentPlaylist,\n    buffered,\n    currentTime,\n    nextPlaylist,\n    bufferLowWaterLine,\n    bufferHighWaterLine,\n    duration,\n    bufferBasedABR,\n    log\n  }) {\n    // we have no other playlist to switch to\n    if (!nextPlaylist) {\n      videojs.log.warn('We received no playlist to switch to. Please check your stream.');\n      return false;\n    }\n    const sharedLogLine = `allowing switch ${currentPlaylist && currentPlaylist.id || 'null'} -> ${nextPlaylist.id}`;\n    if (!currentPlaylist) {\n      log(`${sharedLogLine} as current playlist is not set`);\n      return true;\n    } // no need to switch if playlist is the same\n\n    if (nextPlaylist.id === currentPlaylist.id) {\n      return false;\n    } // determine if current time is in a buffered range.\n\n    const isBuffered = Boolean(findRange(buffered, currentTime).length); // If the playlist is live, then we want to not take low water line into account.\n    // This is because in LIVE, the player plays 3 segments from the end of the\n    // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n    // in those segments, a viewer will never experience a rendition upswitch.\n\n    if (!currentPlaylist.endList) {\n      // For LLHLS live streams, don't switch renditions before playback has started, as it almost\n      // doubles the time to first playback.\n      if (!isBuffered && typeof currentPlaylist.partTargetDuration === 'number') {\n        log(`not ${sharedLogLine} as current playlist is live llhls, but currentTime isn't in buffered.`);\n        return false;\n      }\n      log(`${sharedLogLine} as current playlist is live`);\n      return true;\n    }\n    const forwardBuffer = timeAheadOf(buffered, currentTime);\n    const maxBufferLowWaterLine = bufferBasedABR ? Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : Config.MAX_BUFFER_LOW_WATER_LINE; // For the same reason as LIVE, we ignore the low water line when the VOD\n    // duration is below the max potential low water line\n\n    if (duration < maxBufferLowWaterLine) {\n      log(`${sharedLogLine} as duration < max low water line (${duration} < ${maxBufferLowWaterLine})`);\n      return true;\n    }\n    const nextBandwidth = nextPlaylist.attributes.BANDWIDTH;\n    const currBandwidth = currentPlaylist.attributes.BANDWIDTH; // when switching down, if our buffer is lower than the high water line,\n    // we can switch down\n\n    if (nextBandwidth < currBandwidth && (!bufferBasedABR || forwardBuffer < bufferHighWaterLine)) {\n      let logLine = `${sharedLogLine} as next bandwidth < current bandwidth (${nextBandwidth} < ${currBandwidth})`;\n      if (bufferBasedABR) {\n        logLine += ` and forwardBuffer < bufferHighWaterLine (${forwardBuffer} < ${bufferHighWaterLine})`;\n      }\n      log(logLine);\n      return true;\n    } // and if our buffer is higher than the low water line,\n    // we can switch up\n\n    if ((!bufferBasedABR || nextBandwidth > currBandwidth) && forwardBuffer >= bufferLowWaterLine) {\n      let logLine = `${sharedLogLine} as forwardBuffer >= bufferLowWaterLine (${forwardBuffer} >= ${bufferLowWaterLine})`;\n      if (bufferBasedABR) {\n        logLine += ` and next bandwidth > current bandwidth (${nextBandwidth} > ${currBandwidth})`;\n      }\n      log(logLine);\n      return true;\n    }\n    log(`not ${sharedLogLine} as no switching criteria met`);\n    return false;\n  };\n  /**\n   * the main playlist controller controller all interactons\n   * between playlists and segmentloaders. At this time this mainly\n   * involves a main playlist and a series of audio playlists\n   * if they are available\n   *\n   * @class PlaylistController\n   * @extends videojs.EventTarget\n   */\n\n  class PlaylistController extends videojs.EventTarget {\n    constructor(options) {\n      super();\n      const {\n        src,\n        withCredentials,\n        tech,\n        bandwidth,\n        externVhs,\n        useCueTags,\n        playlistExclusionDuration,\n        enableLowInitialPlaylist,\n        sourceType,\n        cacheEncryptionKeys,\n        bufferBasedABR,\n        leastPixelDiffSelector,\n        captionServices\n      } = options;\n      if (!src) {\n        throw new Error('A non-empty playlist URL or JSON manifest string is required');\n      }\n      let {\n        maxPlaylistRetries\n      } = options;\n      if (maxPlaylistRetries === null || typeof maxPlaylistRetries === 'undefined') {\n        maxPlaylistRetries = Infinity;\n      }\n      Vhs$1 = externVhs;\n      this.bufferBasedABR = Boolean(bufferBasedABR);\n      this.leastPixelDiffSelector = Boolean(leastPixelDiffSelector);\n      this.withCredentials = withCredentials;\n      this.tech_ = tech;\n      this.vhs_ = tech.vhs;\n      this.player_ = options.player_;\n      this.sourceType_ = sourceType;\n      this.useCueTags_ = useCueTags;\n      this.playlistExclusionDuration = playlistExclusionDuration;\n      this.maxPlaylistRetries = maxPlaylistRetries;\n      this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n      if (this.useCueTags_) {\n        this.cueTagsTrack_ = this.tech_.addTextTrack('metadata', 'ad-cues');\n        this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n      }\n      this.requestOptions_ = {\n        withCredentials,\n        maxPlaylistRetries,\n        timeout: null\n      };\n      this.on('error', this.pauseLoading);\n      this.mediaTypes_ = createMediaTypes();\n      this.mediaSource = new window.MediaSource();\n      this.handleDurationChange_ = this.handleDurationChange_.bind(this);\n      this.handleSourceOpen_ = this.handleSourceOpen_.bind(this);\n      this.handleSourceEnded_ = this.handleSourceEnded_.bind(this);\n      this.mediaSource.addEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n      this.mediaSource.addEventListener('sourceopen', this.handleSourceOpen_);\n      this.mediaSource.addEventListener('sourceended', this.handleSourceEnded_); // we don't have to handle sourceclose since dispose will handle termination of\n      // everything, and the MediaSource should not be detached without a proper disposal\n\n      this.seekable_ = createTimeRanges();\n      this.hasPlayed_ = false;\n      this.syncController_ = new SyncController(options);\n      this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n        kind: 'metadata',\n        label: 'segment-metadata'\n      }, false).track;\n      this.decrypter_ = new Decrypter();\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource);\n      this.inbandTextTracks_ = {};\n      this.timelineChangeController_ = new TimelineChangeController();\n      this.keyStatusMap_ = new Map();\n      const segmentLoaderSettings = {\n        vhs: this.vhs_,\n        parse708captions: options.parse708captions,\n        useDtsForTimestampOffset: options.useDtsForTimestampOffset,\n        captionServices,\n        mediaSource: this.mediaSource,\n        currentTime: this.tech_.currentTime.bind(this.tech_),\n        seekable: () => this.seekable(),\n        seeking: () => this.tech_.seeking(),\n        duration: () => this.duration(),\n        hasPlayed: () => this.hasPlayed_,\n        goalBufferLength: () => this.goalBufferLength(),\n        bandwidth,\n        syncController: this.syncController_,\n        decrypter: this.decrypter_,\n        sourceType: this.sourceType_,\n        inbandTextTracks: this.inbandTextTracks_,\n        cacheEncryptionKeys,\n        sourceUpdater: this.sourceUpdater_,\n        timelineChangeController: this.timelineChangeController_,\n        exactManifestTimings: options.exactManifestTimings,\n        addMetadataToTextTrack: this.addMetadataToTextTrack.bind(this)\n      }; // The source type check not only determines whether a special DASH playlist loader\n      // should be used, but also covers the case where the provided src is a vhs-json\n      // manifest object (instead of a URL). In the case of vhs-json, the default\n      // PlaylistLoader should be used.\n\n      this.mainPlaylistLoader_ = this.sourceType_ === 'dash' ? new DashPlaylistLoader(src, this.vhs_, merge(this.requestOptions_, {\n        addMetadataToTextTrack: this.addMetadataToTextTrack.bind(this)\n      })) : new PlaylistLoader(src, this.vhs_, merge(this.requestOptions_, {\n        addDateRangesToTextTrack: this.addDateRangesToTextTrack_.bind(this)\n      }));\n      this.setupMainPlaylistLoaderListeners_(); // setup segment loaders\n      // combined audio/video or just video when alternate audio track is selected\n\n      this.mainSegmentLoader_ = new SegmentLoader(merge(segmentLoaderSettings, {\n        segmentMetadataTrack: this.segmentMetadataTrack_,\n        loaderType: 'main'\n      }), options); // alternate audio track\n\n      this.audioSegmentLoader_ = new SegmentLoader(merge(segmentLoaderSettings, {\n        loaderType: 'audio'\n      }), options);\n      this.subtitleSegmentLoader_ = new VTTSegmentLoader(merge(segmentLoaderSettings, {\n        loaderType: 'vtt',\n        featuresNativeTextTracks: this.tech_.featuresNativeTextTracks,\n        loadVttJs: () => new Promise((resolve, reject) => {\n          function onLoad() {\n            tech.off('vttjserror', onError);\n            resolve();\n          }\n          function onError() {\n            tech.off('vttjsloaded', onLoad);\n            reject();\n          }\n          tech.one('vttjsloaded', onLoad);\n          tech.one('vttjserror', onError); // safe to call multiple times, script will be loaded only once:\n\n          tech.addWebVttScript_();\n        })\n      }), options);\n      const getBandwidth = () => {\n        return this.mainSegmentLoader_.bandwidth;\n      };\n      this.contentSteeringController_ = new ContentSteeringController(this.vhs_.xhr, getBandwidth);\n      this.setupSegmentLoaderListeners_();\n      if (this.bufferBasedABR) {\n        this.mainPlaylistLoader_.one('loadedplaylist', () => this.startABRTimer_());\n        this.tech_.on('pause', () => this.stopABRTimer_());\n        this.tech_.on('play', () => this.startABRTimer_());\n      } // Create SegmentLoader stat-getters\n      // mediaRequests_\n      // mediaRequestsAborted_\n      // mediaRequestsTimedout_\n      // mediaRequestsErrored_\n      // mediaTransferDuration_\n      // mediaBytesTransferred_\n      // mediaAppends_\n\n      loaderStats.forEach(stat => {\n        this[stat + '_'] = sumLoaderStat.bind(this, stat);\n      });\n      this.logger_ = logger('pc');\n      this.triggeredFmp4Usage = false;\n      if (this.tech_.preload() === 'none') {\n        this.loadOnPlay_ = () => {\n          this.loadOnPlay_ = null;\n          this.mainPlaylistLoader_.load();\n        };\n        this.tech_.one('play', this.loadOnPlay_);\n      } else {\n        this.mainPlaylistLoader_.load();\n      }\n      this.timeToLoadedData__ = -1;\n      this.mainAppendsToLoadedData__ = -1;\n      this.audioAppendsToLoadedData__ = -1;\n      const event = this.tech_.preload() === 'none' ? 'play' : 'loadstart'; // start the first frame timer on loadstart or play (for preload none)\n\n      this.tech_.one(event, () => {\n        const timeToLoadedDataStart = Date.now();\n        this.tech_.one('loadeddata', () => {\n          this.timeToLoadedData__ = Date.now() - timeToLoadedDataStart;\n          this.mainAppendsToLoadedData__ = this.mainSegmentLoader_.mediaAppends;\n          this.audioAppendsToLoadedData__ = this.audioSegmentLoader_.mediaAppends;\n        });\n      });\n    }\n    mainAppendsToLoadedData_() {\n      return this.mainAppendsToLoadedData__;\n    }\n    audioAppendsToLoadedData_() {\n      return this.audioAppendsToLoadedData__;\n    }\n    appendsToLoadedData_() {\n      const main = this.mainAppendsToLoadedData_();\n      const audio = this.audioAppendsToLoadedData_();\n      if (main === -1 || audio === -1) {\n        return -1;\n      }\n      return main + audio;\n    }\n    timeToLoadedData_() {\n      return this.timeToLoadedData__;\n    }\n    /**\n     * Run selectPlaylist and switch to the new playlist if we should\n     *\n     * @param {string} [reason=abr] a reason for why the ABR check is made\n     * @private\n     */\n\n    checkABR_(reason = 'abr') {\n      const nextPlaylist = this.selectPlaylist();\n      if (nextPlaylist && this.shouldSwitchToMedia_(nextPlaylist)) {\n        this.switchMedia_(nextPlaylist, reason);\n      }\n    }\n    switchMedia_(playlist, cause, delay) {\n      const oldMedia = this.media();\n      const oldId = oldMedia && (oldMedia.id || oldMedia.uri);\n      const newId = playlist && (playlist.id || playlist.uri);\n      if (oldId && oldId !== newId) {\n        this.logger_(`switch media ${oldId} -> ${newId} from ${cause}`);\n        const metadata = {\n          renditionInfo: {\n            id: newId,\n            bandwidth: playlist.attributes.BANDWIDTH,\n            resolution: playlist.attributes.RESOLUTION,\n            codecs: playlist.attributes.CODECS\n          },\n          cause\n        };\n        this.trigger({\n          type: 'renditionselected',\n          metadata\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: `vhs-rendition-change-${cause}`\n        });\n      }\n      this.mainPlaylistLoader_.media(playlist, delay);\n    }\n    /**\n     * A function that ensures we switch our playlists inside of `mediaTypes`\n     * to match the current `serviceLocation` provided by the contentSteering controller.\n     * We want to check media types of `AUDIO`, `SUBTITLES`, and `CLOSED-CAPTIONS`.\n     *\n     * This should only be called on a DASH playback scenario while using content steering.\n     * This is necessary due to differences in how media in HLS manifests are generally tied to\n     * a video playlist, where in DASH that is not always the case.\n     */\n\n    switchMediaForDASHContentSteering_() {\n      ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n        const mediaType = this.mediaTypes_[type];\n        const activeGroup = mediaType ? mediaType.activeGroup() : null;\n        const pathway = this.contentSteeringController_.getPathway();\n        if (activeGroup && pathway) {\n          // activeGroup can be an array or a single group\n          const mediaPlaylists = activeGroup.length ? activeGroup[0].playlists : activeGroup.playlists;\n          const dashMediaPlaylists = mediaPlaylists.filter(p => p.attributes.serviceLocation === pathway); // Switch the current active playlist to the correct CDN\n\n          if (dashMediaPlaylists.length) {\n            this.mediaTypes_[type].activePlaylistLoader.media(dashMediaPlaylists[0]);\n          }\n        }\n      });\n    }\n    /**\n     * Start a timer that periodically calls checkABR_\n     *\n     * @private\n     */\n\n    startABRTimer_() {\n      this.stopABRTimer_();\n      this.abrTimer_ = window.setInterval(() => this.checkABR_(), 250);\n    }\n    /**\n     * Stop the timer that periodically calls checkABR_\n     *\n     * @private\n     */\n\n    stopABRTimer_() {\n      // if we're scrubbing, we don't need to pause.\n      // This getter will be added to Video.js in version 7.11.\n      if (this.tech_.scrubbing && this.tech_.scrubbing()) {\n        return;\n      }\n      window.clearInterval(this.abrTimer_);\n      this.abrTimer_ = null;\n    }\n    /**\n     * Get a list of playlists for the currently selected audio playlist\n     *\n     * @return {Array} the array of audio playlists\n     */\n\n    getAudioTrackPlaylists_() {\n      const main = this.main();\n      const defaultPlaylists = main && main.playlists || []; // if we don't have any audio groups then we can only\n      // assume that the audio tracks are contained in main\n      // playlist array, use that or an empty array.\n\n      if (!main || !main.mediaGroups || !main.mediaGroups.AUDIO) {\n        return defaultPlaylists;\n      }\n      const AUDIO = main.mediaGroups.AUDIO;\n      const groupKeys = Object.keys(AUDIO);\n      let track; // get the current active track\n\n      if (Object.keys(this.mediaTypes_.AUDIO.groups).length) {\n        track = this.mediaTypes_.AUDIO.activeTrack(); // or get the default track from main if mediaTypes_ isn't setup yet\n      } else {\n        // default group is `main` or just the first group.\n        const defaultGroup = AUDIO.main || groupKeys.length && AUDIO[groupKeys[0]];\n        for (const label in defaultGroup) {\n          if (defaultGroup[label].default) {\n            track = {\n              label\n            };\n            break;\n          }\n        }\n      } // no active track no playlists.\n\n      if (!track) {\n        return defaultPlaylists;\n      }\n      const playlists = []; // get all of the playlists that are possible for the\n      // active track.\n\n      for (const group in AUDIO) {\n        if (AUDIO[group][track.label]) {\n          const properties = AUDIO[group][track.label];\n          if (properties.playlists && properties.playlists.length) {\n            playlists.push.apply(playlists, properties.playlists);\n          } else if (properties.uri) {\n            playlists.push(properties);\n          } else if (main.playlists.length) {\n            // if an audio group does not have a uri\n            // see if we have main playlists that use it as a group.\n            // if we do then add those to the playlists list.\n            for (let i = 0; i < main.playlists.length; i++) {\n              const playlist = main.playlists[i];\n              if (playlist.attributes && playlist.attributes.AUDIO && playlist.attributes.AUDIO === group) {\n                playlists.push(playlist);\n              }\n            }\n          }\n        }\n      }\n      if (!playlists.length) {\n        return defaultPlaylists;\n      }\n      return playlists;\n    }\n    /**\n     * Register event handlers on the main playlist loader. A helper\n     * function for construction time.\n     *\n     * @private\n     */\n\n    setupMainPlaylistLoaderListeners_() {\n      this.mainPlaylistLoader_.on('loadedmetadata', () => {\n        const media = this.mainPlaylistLoader_.media();\n        const requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media())) {\n          this.requestOptions_.timeout = 0;\n        } else {\n          this.requestOptions_.timeout = requestTimeout;\n        } // if this isn't a live video and preload permits, start\n        // downloading segments\n\n        if (media.endList && this.tech_.preload() !== 'none') {\n          this.mainSegmentLoader_.playlist(media, this.requestOptions_);\n          this.mainSegmentLoader_.load();\n        }\n        setupMediaGroups({\n          sourceType: this.sourceType_,\n          segmentLoaders: {\n            AUDIO: this.audioSegmentLoader_,\n            SUBTITLES: this.subtitleSegmentLoader_,\n            main: this.mainSegmentLoader_\n          },\n          tech: this.tech_,\n          requestOptions: this.requestOptions_,\n          mainPlaylistLoader: this.mainPlaylistLoader_,\n          vhs: this.vhs_,\n          main: this.main(),\n          mediaTypes: this.mediaTypes_,\n          excludePlaylist: this.excludePlaylist.bind(this)\n        });\n        this.triggerPresenceUsage_(this.main(), media);\n        this.setupFirstPlay();\n        if (!this.mediaTypes_.AUDIO.activePlaylistLoader || this.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n          this.trigger('selectedinitialmedia');\n        } else {\n          // We must wait for the active audio playlist loader to\n          // finish setting up before triggering this event so the\n          // representations API and EME setup is correct\n          this.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', () => {\n            this.trigger('selectedinitialmedia');\n          });\n        }\n      });\n      this.mainPlaylistLoader_.on('loadedplaylist', () => {\n        if (this.loadOnPlay_) {\n          this.tech_.off('play', this.loadOnPlay_);\n        }\n        let updatedPlaylist = this.mainPlaylistLoader_.media();\n        if (!updatedPlaylist) {\n          // Add content steering listeners on first load and init.\n          this.attachContentSteeringListeners_();\n          this.initContentSteeringController_(); // exclude any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n\n          this.excludeUnsupportedVariants_();\n          let selectedMedia;\n          if (this.enableLowInitialPlaylist) {\n            selectedMedia = this.selectInitialPlaylist();\n          }\n          if (!selectedMedia) {\n            selectedMedia = this.selectPlaylist();\n          }\n          if (!selectedMedia || !this.shouldSwitchToMedia_(selectedMedia)) {\n            return;\n          }\n          this.initialMedia_ = selectedMedia;\n          this.switchMedia_(this.initialMedia_, 'initial'); // Under the standard case where a source URL is provided, loadedplaylist will\n          // fire again since the playlist will be requested. In the case of vhs-json\n          // (where the manifest object is provided as the source), when the media\n          // playlist's `segments` list is already available, a media playlist won't be\n          // requested, and loadedplaylist won't fire again, so the playlist handler must be\n          // called on its own here.\n\n          const haveJsonSource = this.sourceType_ === 'vhs-json' && this.initialMedia_.segments;\n          if (!haveJsonSource) {\n            return;\n          }\n          updatedPlaylist = this.initialMedia_;\n        }\n        this.handleUpdatedMediaPlaylist(updatedPlaylist);\n      });\n      this.mainPlaylistLoader_.on('error', () => {\n        const error = this.mainPlaylistLoader_.error;\n        this.excludePlaylist({\n          playlistToExclude: error.playlist,\n          error\n        });\n      });\n      this.mainPlaylistLoader_.on('mediachanging', () => {\n        this.mainSegmentLoader_.abort();\n        this.mainSegmentLoader_.pause();\n      });\n      this.mainPlaylistLoader_.on('mediachange', () => {\n        const media = this.mainPlaylistLoader_.media();\n        const requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media())) {\n          this.requestOptions_.timeout = 0;\n        } else {\n          this.requestOptions_.timeout = requestTimeout;\n        }\n        if (this.sourceType_ === 'dash') {\n          // we don't want to re-request the same hls playlist right after it was changed\n          this.mainPlaylistLoader_.load();\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n\n        this.mainSegmentLoader_.pause();\n        this.mainSegmentLoader_.playlist(media, this.requestOptions_);\n        if (this.waitingForFastQualityPlaylistReceived_) {\n          this.runFastQualitySwitch_();\n        } else {\n          this.mainSegmentLoader_.load();\n        }\n        this.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n      this.mainPlaylistLoader_.on('playlistunchanged', () => {\n        const updatedPlaylist = this.mainPlaylistLoader_.media(); // ignore unchanged playlists that have already been\n        // excluded for not-changing. We likely just have a really slowly updating\n        // playlist.\n\n        if (updatedPlaylist.lastExcludeReason_ === 'playlist-unchanged') {\n          return;\n        }\n        const playlistOutdated = this.stuckAtPlaylistEnd_(updatedPlaylist);\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // exclude it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          this.excludePlaylist({\n            error: {\n              message: 'Playlist no longer updating.',\n              reason: 'playlist-unchanged'\n            }\n          }); // useful for monitoring QoS\n\n          this.tech_.trigger('playliststuck');\n        }\n      });\n      this.mainPlaylistLoader_.on('renditiondisabled', () => {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-rendition-disabled'\n        });\n      });\n      this.mainPlaylistLoader_.on('renditionenabled', () => {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-rendition-enabled'\n        });\n      });\n      const playlistLoaderEvents = ['manifestrequeststart', 'manifestrequestcomplete', 'manifestparsestart', 'manifestparsecomplete', 'playlistrequeststart', 'playlistrequestcomplete', 'playlistparsestart', 'playlistparsecomplete', 'renditiondisabled', 'renditionenabled'];\n      playlistLoaderEvents.forEach(eventName => {\n        this.mainPlaylistLoader_.on(eventName, metadata => {\n          // trigger directly on the player to ensure early events are fired.\n          this.player_.trigger(_extends$1({}, metadata));\n        });\n      });\n    }\n    /**\n     * Given an updated media playlist (whether it was loaded for the first time, or\n     * refreshed for live playlists), update any relevant properties and state to reflect\n     * changes in the media that should be accounted for (e.g., cues and duration).\n     *\n     * @param {Object} updatedPlaylist the updated media playlist object\n     *\n     * @private\n     */\n\n    handleUpdatedMediaPlaylist(updatedPlaylist) {\n      if (this.useCueTags_) {\n        this.updateAdCues_(updatedPlaylist);\n      } // TODO: Create a new event on the PlaylistLoader that signals\n      // that the segments have changed in some way and use that to\n      // update the SegmentLoader instead of doing it twice here and\n      // on `mediachange`\n\n      this.mainSegmentLoader_.pause();\n      this.mainSegmentLoader_.playlist(updatedPlaylist, this.requestOptions_);\n      if (this.waitingForFastQualityPlaylistReceived_) {\n        this.runFastQualitySwitch_();\n      }\n      this.updateDuration(!updatedPlaylist.endList); // If the player isn't paused, ensure that the segment loader is running,\n      // as it is possible that it was temporarily stopped while waiting for\n      // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n      if (!this.tech_.paused()) {\n        this.mainSegmentLoader_.load();\n        if (this.audioSegmentLoader_) {\n          this.audioSegmentLoader_.load();\n        }\n      }\n    }\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n    triggerPresenceUsage_(main, media) {\n      const mediaGroups = main.mediaGroups || {};\n      let defaultDemuxed = true;\n      const audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n      for (const mediaGroup in mediaGroups.AUDIO) {\n        for (const label in mediaGroups.AUDIO[mediaGroup]) {\n          const properties = mediaGroups.AUDIO[mediaGroup][label];\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n      if (defaultDemuxed) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-demuxed'\n        });\n      }\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-webvtt'\n        });\n      }\n      if (Vhs$1.Playlist.isAes(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-aes'\n        });\n      }\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-alternate-audio'\n        });\n      }\n      if (this.useCueTags_) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-playlist-cue-tags'\n        });\n      }\n    }\n    shouldSwitchToMedia_(nextPlaylist) {\n      const currentPlaylist = this.mainPlaylistLoader_.media() || this.mainPlaylistLoader_.pendingMedia_;\n      const currentTime = this.tech_.currentTime();\n      const bufferLowWaterLine = this.bufferLowWaterLine();\n      const bufferHighWaterLine = this.bufferHighWaterLine();\n      const buffered = this.tech_.buffered();\n      return shouldSwitchToMedia({\n        buffered,\n        currentTime,\n        currentPlaylist,\n        nextPlaylist,\n        bufferLowWaterLine,\n        bufferHighWaterLine,\n        duration: this.duration(),\n        bufferBasedABR: this.bufferBasedABR,\n        log: this.logger_\n      });\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n    setupSegmentLoaderListeners_() {\n      this.mainSegmentLoader_.on('bandwidthupdate', () => {\n        // Whether or not buffer based ABR or another ABR is used, on a bandwidth change it's\n        // useful to check to see if a rendition switch should be made.\n        this.checkABR_('bandwidthupdate');\n        this.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('timeout', () => {\n        if (this.bufferBasedABR) {\n          // If a rendition change is needed, then it would've be done on `bandwidthupdate`.\n          // Here the only consideration is that for buffer based ABR there's no guarantee\n          // of an immediate switch (since the bandwidth is averaged with a timeout\n          // bandwidth value of 1), so force a load on the segment loader to keep it going.\n          this.mainSegmentLoader_.load();\n        }\n      }); // `progress` events are not reliable enough of a bandwidth measure to trigger buffer\n      // based ABR.\n\n      if (!this.bufferBasedABR) {\n        this.mainSegmentLoader_.on('progress', () => {\n          this.trigger('progress');\n        });\n      }\n      this.mainSegmentLoader_.on('error', () => {\n        const error = this.mainSegmentLoader_.error();\n        this.excludePlaylist({\n          playlistToExclude: error.playlist,\n          error\n        });\n      });\n      this.mainSegmentLoader_.on('appenderror', () => {\n        this.error = this.mainSegmentLoader_.error_;\n        this.trigger('error');\n      });\n      this.mainSegmentLoader_.on('syncinfoupdate', () => {\n        this.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('timestampoffset', () => {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-timestamp-offset'\n        });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', () => {\n        this.onSyncInfoUpdate_();\n      });\n      this.audioSegmentLoader_.on('appenderror', () => {\n        this.error = this.audioSegmentLoader_.error_;\n        this.trigger('error');\n      });\n      this.mainSegmentLoader_.on('ended', () => {\n        this.logger_('main segment loader ended');\n        this.onEndOfStream();\n      });\n      this.mainSegmentLoader_.on('earlyabort', event => {\n        // never try to early abort with the new ABR algorithm\n        if (this.bufferBasedABR) {\n          return;\n        }\n        this.delegateLoaders_('all', ['abort']);\n        this.excludePlaylist({\n          error: {\n            message: 'Aborted early because there isn\\'t enough bandwidth to complete ' + 'the request without rebuffering.'\n          },\n          playlistExclusionDuration: ABORT_EARLY_EXCLUSION_SECONDS\n        });\n      });\n      const updateCodecs = () => {\n        if (!this.sourceUpdater_.hasCreatedSourceBuffers()) {\n          return this.tryToCreateSourceBuffers_();\n        }\n        const codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n        if (!codecs) {\n          return;\n        }\n        this.sourceUpdater_.addOrChangeSourceBuffers(codecs);\n      };\n      this.mainSegmentLoader_.on('trackinfo', updateCodecs);\n      this.audioSegmentLoader_.on('trackinfo', updateCodecs);\n      this.mainSegmentLoader_.on('fmp4', () => {\n        if (!this.triggeredFmp4Usage) {\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-fmp4'\n          });\n          this.triggeredFmp4Usage = true;\n        }\n      });\n      this.audioSegmentLoader_.on('fmp4', () => {\n        if (!this.triggeredFmp4Usage) {\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-fmp4'\n          });\n          this.triggeredFmp4Usage = true;\n        }\n      });\n      this.audioSegmentLoader_.on('ended', () => {\n        this.logger_('audioSegmentLoader ended');\n        this.onEndOfStream();\n      });\n      const segmentLoaderEvents = ['segmentselected', 'segmentloadstart', 'segmentloaded', 'segmentkeyloadstart', 'segmentkeyloadcomplete', 'segmentdecryptionstart', 'segmentdecryptioncomplete', 'segmenttransmuxingstart', 'segmenttransmuxingcomplete', 'segmenttransmuxingtrackinfoavailable', 'segmenttransmuxingtiminginfoavailable', 'segmentappendstart', 'appendsdone', 'bandwidthupdated', 'timelinechange', 'codecschange'];\n      segmentLoaderEvents.forEach(eventName => {\n        this.mainSegmentLoader_.on(eventName, metadata => {\n          this.player_.trigger(_extends$1({}, metadata));\n        });\n        this.audioSegmentLoader_.on(eventName, metadata => {\n          this.player_.trigger(_extends$1({}, metadata));\n        });\n        this.subtitleSegmentLoader_.on(eventName, metadata => {\n          this.player_.trigger(_extends$1({}, metadata));\n        });\n      });\n    }\n    mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n    load() {\n      this.mainSegmentLoader_.load();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n\n    fastQualityChange_(media = this.selectPlaylist()) {\n      if (media && media === this.mainPlaylistLoader_.media()) {\n        this.logger_('skipping fastQualityChange because new media is same as old');\n        return;\n      }\n      this.switchMedia_(media, 'fast-quality'); // we would like to avoid race condition when we call fastQuality,\n      // reset everything and start loading segments from prev segments instead of new because new playlist is not received yet\n\n      this.waitingForFastQualityPlaylistReceived_ = true;\n    }\n    runFastQualitySwitch_() {\n      this.waitingForFastQualityPlaylistReceived_ = false; // Delete all buffered data to allow an immediate quality switch.\n\n      this.mainSegmentLoader_.pause();\n      this.mainSegmentLoader_.resetEverything(() => {\n        this.mainSegmentLoader_.load();\n      }); // don't need to reset audio as it is reset when media changes\n    }\n    /**\n     * Begin playback.\n     */\n\n    play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n      if (this.tech_.ended()) {\n        this.tech_.setCurrentTime(0);\n      }\n      if (this.hasPlayed_) {\n        this.load();\n      }\n      const seekable = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable.start(0)) {\n          return this.tech_.setCurrentTime(seekable.end(seekable.length - 1));\n        }\n      }\n    }\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n    setupFirstPlay() {\n      const media = this.mainPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n\n      if (!media || this.tech_.paused() || this.hasPlayed_) {\n        return false;\n      } // when the video is a live stream and/or has a start time\n\n      if (!media.endList || media.start) {\n        const seekable = this.seekable();\n        if (!seekable.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the\n          // live or start point\n          return false;\n        }\n        const seekableEnd = seekable.end(0);\n        let startPoint = seekableEnd;\n        if (media.start) {\n          const offset = media.start.timeOffset;\n          if (offset < 0) {\n            startPoint = Math.max(seekableEnd + offset, seekable.start(0));\n          } else {\n            startPoint = Math.min(seekableEnd, offset);\n          }\n        } // trigger firstplay to inform the source handler to ignore the next seek event\n\n        this.trigger('firstplay'); // seek to the live point\n\n        this.tech_.setCurrentTime(startPoint);\n      }\n      this.hasPlayed_ = true; // we can begin loading now that everything is ready\n\n      this.load();\n      return true;\n    }\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n    handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      this.tryToCreateSourceBuffers_(); // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n\n      if (this.tech_.autoplay()) {\n        const playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, e => {});\n        }\n      }\n      this.trigger('sourceopen');\n    }\n    /**\n     * handle the sourceended event on the MediaSource\n     *\n     * @private\n     */\n\n    handleSourceEnded_() {\n      if (!this.inbandTextTracks_.metadataTrack_) {\n        return;\n      }\n      const cues = this.inbandTextTracks_.metadataTrack_.cues;\n      if (!cues || !cues.length) {\n        return;\n      }\n      const duration = this.duration();\n      cues[cues.length - 1].endTime = isNaN(duration) || Math.abs(duration) === Infinity ? Number.MAX_VALUE : duration;\n    }\n    /**\n     * handle the durationchange event on the MediaSource\n     *\n     * @private\n     */\n\n    handleDurationChange_() {\n      this.tech_.trigger('durationchange');\n    }\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n    onEndOfStream() {\n      let isEndOfStream = this.mainSegmentLoader_.ended_;\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        const mainMediaInfo = this.mainSegmentLoader_.getCurrentMediaInfo_(); // if the audio playlist loader exists, then alternate audio is active\n\n        if (!mainMediaInfo || mainMediaInfo.hasVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n      if (!isEndOfStream) {\n        return;\n      }\n      this.stopABRTimer_();\n      this.sourceUpdater_.endOfStream();\n    }\n    /**\n     * Check if a playlist has stopped being updated\n     *\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n    stuckAtPlaylistEnd_(playlist) {\n      const seekable = this.seekable();\n      if (!seekable.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n      const expired = this.syncController_.getExpiredTime(playlist, this.duration());\n      if (expired === null) {\n        return false;\n      } // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n\n      const absolutePlaylistEnd = Vhs$1.Playlist.playlistEnd(playlist, expired);\n      const currentTime = this.tech_.currentTime();\n      const buffered = this.tech_.buffered();\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n      const bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n    /**\n     * Exclude a playlist for a set amount of time, making it unavailable for selection by\n     * the rendition selection algorithm, then force a new playlist (rendition) selection.\n     *\n     * @param {Object=} playlistToExclude\n     *                  the playlist to exclude, defaults to the currently selected playlist\n     * @param {Object=} error\n     *                  an optional error\n     * @param {number=} playlistExclusionDuration\n     *                  an optional number of seconds to exclude the playlist\n     */\n\n    excludePlaylist({\n      playlistToExclude = this.mainPlaylistLoader_.media(),\n      error = {},\n      playlistExclusionDuration\n    }) {\n      // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // excluded instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n      playlistToExclude = playlistToExclude || this.mainPlaylistLoader_.media();\n      playlistExclusionDuration = playlistExclusionDuration || error.playlistExclusionDuration || this.playlistExclusionDuration; // If there is no current playlist, then an error occurred while we were\n      // trying to load the main OR while we were disposing of the tech\n\n      if (!playlistToExclude) {\n        this.error = error;\n        if (this.mediaSource.readyState !== 'open') {\n          this.trigger('error');\n        } else {\n          this.sourceUpdater_.endOfStream('network');\n        }\n        return;\n      }\n      playlistToExclude.playlistErrors_++;\n      const playlists = this.mainPlaylistLoader_.main.playlists;\n      const enabledPlaylists = playlists.filter(isEnabled);\n      const isFinalRendition = enabledPlaylists.length === 1 && enabledPlaylists[0] === playlistToExclude; // Don't exclude the only playlist unless it was excluded\n      // forever\n\n      if (playlists.length === 1 && playlistExclusionDuration !== Infinity) {\n        videojs.log.warn(`Problem encountered with playlist ${playlistToExclude.id}. ` + 'Trying again since it is the only playlist.');\n        this.tech_.trigger('retryplaylist'); // if this is a final rendition, we should delay\n\n        return this.mainPlaylistLoader_.load(isFinalRendition);\n      }\n      if (isFinalRendition) {\n        // If we're content steering, try other pathways.\n        if (this.main().contentSteering) {\n          const pathway = this.pathwayAttribute_(playlistToExclude); // Ignore at least 1 steering manifest refresh.\n\n          const reIncludeDelay = this.contentSteeringController_.steeringManifest.ttl * 1000;\n          this.contentSteeringController_.excludePathway(pathway);\n          this.excludeThenChangePathway_();\n          setTimeout(() => {\n            this.contentSteeringController_.addAvailablePathway(pathway);\n          }, reIncludeDelay);\n          return;\n        } // Since we're on the final non-excluded playlist, and we're about to exclude\n        // it, instead of erring the player or retrying this playlist, clear out the current\n        // exclusion list. This allows other playlists to be attempted in case any have been\n        // fixed.\n\n        let reincluded = false;\n        playlists.forEach(playlist => {\n          // skip current playlist which is about to be excluded\n          if (playlist === playlistToExclude) {\n            return;\n          }\n          const excludeUntil = playlist.excludeUntil; // a playlist cannot be reincluded if it wasn't excluded to begin with.\n\n          if (typeof excludeUntil !== 'undefined' && excludeUntil !== Infinity) {\n            reincluded = true;\n            delete playlist.excludeUntil;\n          }\n        });\n        if (reincluded) {\n          videojs.log.warn('Removing other playlists from the exclusion list because the last ' + 'rendition is about to be excluded.'); // Technically we are retrying a playlist, in that we are simply retrying a previous\n          // playlist. This is needed for users relying on the retryplaylist event to catch a\n          // case where the player might be stuck and looping through \"dead\" playlists.\n\n          this.tech_.trigger('retryplaylist');\n        }\n      } // Exclude this playlist\n\n      let excludeUntil;\n      if (playlistToExclude.playlistErrors_ > this.maxPlaylistRetries) {\n        excludeUntil = Infinity;\n      } else {\n        excludeUntil = Date.now() + playlistExclusionDuration * 1000;\n      }\n      playlistToExclude.excludeUntil = excludeUntil;\n      if (error.reason) {\n        playlistToExclude.lastExcludeReason_ = error.reason;\n      }\n      this.tech_.trigger('excludeplaylist');\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-excluded'\n      }); // TODO: only load a new playlist if we're excluding the current playlist\n      // If this function was called with a playlist that's not the current active playlist\n      // (e.g., media().id !== playlistToExclude.id),\n      // then a new playlist should not be selected and loaded, as there's nothing wrong with the current playlist.\n\n      const nextPlaylist = this.selectPlaylist();\n      if (!nextPlaylist) {\n        this.error = 'Playback cannot continue. No available working or supported playlists.';\n        this.trigger('error');\n        return;\n      }\n      const logFn = error.internal ? this.logger_ : videojs.log.warn;\n      const errorMessage = error.message ? ' ' + error.message : '';\n      logFn(`${error.internal ? 'Internal problem' : 'Problem'} encountered with playlist ${playlistToExclude.id}.` + `${errorMessage} Switching to playlist ${nextPlaylist.id}.`); // if audio group changed reset audio loaders\n\n      if (nextPlaylist.attributes.AUDIO !== playlistToExclude.attributes.AUDIO) {\n        this.delegateLoaders_('audio', ['abort', 'pause']);\n      } // if subtitle group changed reset subtitle loaders\n\n      if (nextPlaylist.attributes.SUBTITLES !== playlistToExclude.attributes.SUBTITLES) {\n        this.delegateLoaders_('subtitle', ['abort', 'pause']);\n      }\n      this.delegateLoaders_('main', ['abort', 'pause']);\n      const delayDuration = nextPlaylist.targetDuration / 2 * 1000 || 5 * 1000;\n      const shouldDelay = typeof nextPlaylist.lastRequest === 'number' && Date.now() - nextPlaylist.lastRequest <= delayDuration; // delay if it's a final rendition or if the last refresh is sooner than half targetDuration\n\n      return this.switchMedia_(nextPlaylist, 'exclude', isFinalRendition || shouldDelay);\n    }\n    /**\n     * Pause all segment/playlist loaders\n     */\n\n    pauseLoading() {\n      this.delegateLoaders_('all', ['abort', 'pause']);\n      this.stopABRTimer_();\n    }\n    /**\n     * Call a set of functions in order on playlist loaders, segment loaders,\n     * or both types of loaders.\n     *\n     * @param {string} filter\n     *        Filter loaders that should call fnNames using a string. Can be:\n     *        * all - run on all loaders\n     *        * audio - run on all audio loaders\n     *        * subtitle - run on all subtitle loaders\n     *        * main - run on the main loaders\n     *\n     * @param {Array|string} fnNames\n     *        A string or array of function names to call.\n     */\n\n    delegateLoaders_(filter, fnNames) {\n      const loaders = [];\n      const dontFilterPlaylist = filter === 'all';\n      if (dontFilterPlaylist || filter === 'main') {\n        loaders.push(this.mainPlaylistLoader_);\n      }\n      const mediaTypes = [];\n      if (dontFilterPlaylist || filter === 'audio') {\n        mediaTypes.push('AUDIO');\n      }\n      if (dontFilterPlaylist || filter === 'subtitle') {\n        mediaTypes.push('CLOSED-CAPTIONS');\n        mediaTypes.push('SUBTITLES');\n      }\n      mediaTypes.forEach(mediaType => {\n        const loader = this.mediaTypes_[mediaType] && this.mediaTypes_[mediaType].activePlaylistLoader;\n        if (loader) {\n          loaders.push(loader);\n        }\n      });\n      ['main', 'audio', 'subtitle'].forEach(name => {\n        const loader = this[`${name}SegmentLoader_`];\n        if (loader && (filter === name || filter === 'all')) {\n          loaders.push(loader);\n        }\n      });\n      loaders.forEach(loader => fnNames.forEach(fnName => {\n        if (typeof loader[fnName] === 'function') {\n          loader[fnName]();\n        }\n      }));\n    }\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n    setCurrentTime(currentTime) {\n      const buffered = findRange(this.tech_.buffered(), currentTime);\n      if (!(this.mainPlaylistLoader_ && this.mainPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      } // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n\n      if (!this.mainPlaylistLoader_.media().segments) {\n        return 0;\n      } // if the seek location is already buffered, continue buffering as usual\n\n      if (buffered && buffered.length) {\n        return currentTime;\n      } // cancel outstanding requests so we begin buffering at the new\n      // location\n\n      this.mainSegmentLoader_.pause();\n      this.mainSegmentLoader_.resetEverything();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n        this.audioSegmentLoader_.resetEverything();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n        this.subtitleSegmentLoader_.resetEverything();\n      } // start segment loader loading in case they are paused\n\n      this.load();\n    }\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n    duration() {\n      if (!this.mainPlaylistLoader_) {\n        return 0;\n      }\n      const media = this.mainPlaylistLoader_.media();\n      if (!media) {\n        // no playlists loaded yet, so can't determine a duration\n        return 0;\n      } // Don't rely on the media source for duration in the case of a live playlist since\n      // setting the native MediaSource's duration to infinity ends up with consequences to\n      // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n      //\n      // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n      // however, few browsers have support for setLiveSeekableRange()\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n      //\n      // Until a time when the duration of the media source can be set to infinity, and a\n      // seekable range specified across browsers, just return Infinity.\n\n      if (!media.endList) {\n        return Infinity;\n      } // Since this is a VOD video, it is safe to rely on the media source's duration (if\n      // available). If it's not available, fall back to a playlist-calculated estimate.\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n      return Vhs$1.Playlist.duration(media);\n    }\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n    seekable() {\n      return this.seekable_;\n    }\n    onSyncInfoUpdate_() {\n      let audioSeekable; // TODO check for creation of both source buffers before updating seekable\n      //\n      // A fix was made to this function where a check for\n      // this.sourceUpdater_.hasCreatedSourceBuffers\n      // was added to ensure that both source buffers were created before seekable was\n      // updated. However, it originally had a bug where it was checking for a true and\n      // returning early instead of checking for false. Setting it to check for false to\n      // return early though created other issues. A call to play() would check for seekable\n      // end without verifying that a seekable range was present. In addition, even checking\n      // for that didn't solve some issues, as handleFirstPlay is sometimes worked around\n      // due to a media update calling load on the segment loaders, skipping a seek to live,\n      // thereby starting live streams at the beginning of the stream rather than at the end.\n      //\n      // This conditional should be fixed to wait for the creation of two source buffers at\n      // the same time as the other sections of code are fixed to properly seek to live and\n      // not throw an error due to checking for a seekable end when no seekable range exists.\n      //\n      // For now, fall back to the older behavior, with the understanding that the seekable\n      // range may not be completely correct, leading to a suboptimal initial live point.\n\n      if (!this.mainPlaylistLoader_) {\n        return;\n      }\n      let media = this.mainPlaylistLoader_.media();\n      if (!media) {\n        return;\n      }\n      let expired = this.syncController_.getExpiredTime(media, this.duration());\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n      const main = this.mainPlaylistLoader_.main;\n      const mainSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(main, media));\n      if (mainSeekable.length === 0) {\n        return;\n      }\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.duration());\n        if (expired === null) {\n          return;\n        }\n        audioSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(main, media));\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n      let oldEnd;\n      let oldStart;\n      if (this.seekable_ && this.seekable_.length) {\n        oldEnd = this.seekable_.end(0);\n        oldStart = this.seekable_.start(0);\n      }\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      } // seekable is the same as last time\n\n      if (this.seekable_ && this.seekable_.length) {\n        if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n          return;\n        }\n      }\n      this.logger_(`seekable updated [${printableRange(this.seekable_)}]`);\n      const metadata = {\n        seekableRanges: this.seekable_\n      };\n      this.trigger({\n        type: 'seekablerangeschanged',\n        metadata\n      });\n      this.tech_.trigger('seekablechanged');\n    }\n    /**\n     * Update the player duration\n     */\n\n    updateDuration(isLive) {\n      if (this.updateDuration_) {\n        this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n        this.updateDuration_ = null;\n      }\n      if (this.mediaSource.readyState !== 'open') {\n        this.updateDuration_ = this.updateDuration.bind(this, isLive);\n        this.mediaSource.addEventListener('sourceopen', this.updateDuration_);\n        return;\n      }\n      if (isLive) {\n        const seekable = this.seekable();\n        if (!seekable.length) {\n          return;\n        } // Even in the case of a live playlist, the native MediaSource's duration should not\n        // be set to Infinity (even though this would be expected for a live playlist), since\n        // setting the native MediaSource's duration to infinity ends up with consequences to\n        // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n        //\n        // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n        // however, few browsers have support for setLiveSeekableRange()\n        // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n        //\n        // Until a time when the duration of the media source can be set to infinity, and a\n        // seekable range specified across browsers, the duration should be greater than or\n        // equal to the last possible seekable value.\n        // MediaSource duration starts as NaN\n        // It is possible (and probable) that this case will never be reached for many\n        // sources, since the MediaSource reports duration as the highest value without\n        // accounting for timestamp offset. For example, if the timestamp offset is -100 and\n        // we buffered times 0 to 100 with real times of 100 to 200, even though current\n        // time will be between 0 and 100, the native media source may report the duration\n        // as 200. However, since we report duration separate from the media source (as\n        // Infinity), and as long as the native media source duration value is greater than\n        // our reported seekable range, seeks will work as expected. The large number as\n        // duration for live is actually a strategy used by some players to work around the\n        // issue of live seekable ranges cited above.\n\n        if (isNaN(this.mediaSource.duration) || this.mediaSource.duration < seekable.end(seekable.length - 1)) {\n          this.sourceUpdater_.setDuration(seekable.end(seekable.length - 1));\n        }\n        return;\n      }\n      const buffered = this.tech_.buffered();\n      let duration = Vhs$1.Playlist.duration(this.mainPlaylistLoader_.media());\n      if (buffered.length > 0) {\n        duration = Math.max(duration, buffered.end(buffered.length - 1));\n      }\n      if (this.mediaSource.duration !== duration) {\n        this.sourceUpdater_.setDuration(duration);\n      }\n    }\n    /**\n     * dispose of the PlaylistController and everything\n     * that it controls\n     */\n\n    dispose() {\n      this.trigger('dispose');\n      this.decrypter_.terminate();\n      this.mainPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n      this.contentSteeringController_.dispose();\n      this.keyStatusMap_.clear();\n      if (this.loadOnPlay_) {\n        this.tech_.off('play', this.loadOnPlay_);\n      }\n      ['AUDIO', 'SUBTITLES'].forEach(type => {\n        const groups = this.mediaTypes_[type].groups;\n        for (const id in groups) {\n          groups[id].forEach(group => {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n      this.sourceUpdater_.dispose();\n      this.timelineChangeController_.dispose();\n      this.stopABRTimer_();\n      if (this.updateDuration_) {\n        this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n      }\n      this.mediaSource.removeEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n      this.mediaSource.removeEventListener('sourceopen', this.handleSourceOpen_);\n      this.mediaSource.removeEventListener('sourceended', this.handleSourceEnded_);\n      this.off();\n    }\n    /**\n     * return the main playlist object if we have one\n     *\n     * @return {Object} the main playlist object that we parsed\n     */\n\n    main() {\n      return this.mainPlaylistLoader_.main;\n    }\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n    media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.mainPlaylistLoader_.media() || this.initialMedia_;\n    }\n    areMediaTypesKnown_() {\n      const usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n      const hasMainMediaInfo = !!this.mainSegmentLoader_.getCurrentMediaInfo_(); // if we are not using an audio loader, then we have audio media info\n      // otherwise check on the segment loader.\n\n      const hasAudioMediaInfo = !usingAudioLoader ? true : !!this.audioSegmentLoader_.getCurrentMediaInfo_(); // one or both loaders has not loaded sufficently to get codecs\n\n      if (!hasMainMediaInfo || !hasAudioMediaInfo) {\n        return false;\n      }\n      return true;\n    } // find from and to for codec switch event\n\n    getCodecsOrExclude_() {\n      const media = {\n        main: this.mainSegmentLoader_.getCurrentMediaInfo_() || {},\n        audio: this.audioSegmentLoader_.getCurrentMediaInfo_() || {}\n      };\n      const playlist = this.mainSegmentLoader_.getPendingSegmentPlaylist() || this.media(); // set \"main\" media equal to video\n\n      media.video = media.main;\n      const playlistCodecs = codecsForPlaylist(this.main(), playlist);\n      const codecs = {};\n      const usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n      if (media.main.hasVideo) {\n        codecs.video = playlistCodecs.video || media.main.videoCodec || DEFAULT_VIDEO_CODEC;\n      }\n      if (media.main.isMuxed) {\n        codecs.video += `,${playlistCodecs.audio || media.main.audioCodec || DEFAULT_AUDIO_CODEC}`;\n      }\n      if (media.main.hasAudio && !media.main.isMuxed || media.audio.hasAudio || usingAudioLoader) {\n        codecs.audio = playlistCodecs.audio || media.main.audioCodec || media.audio.audioCodec || DEFAULT_AUDIO_CODEC; // set audio isFmp4 so we use the correct \"supports\" function below\n\n        media.audio.isFmp4 = media.main.hasAudio && !media.main.isMuxed ? media.main.isFmp4 : media.audio.isFmp4;\n      } // no codecs, no playback.\n\n      if (!codecs.audio && !codecs.video) {\n        this.excludePlaylist({\n          playlistToExclude: playlist,\n          error: {\n            message: 'Could not determine codecs for playlist.'\n          },\n          playlistExclusionDuration: Infinity\n        });\n        return;\n      } // fmp4 relies on browser support, while ts relies on muxer support\n\n      const supportFunction = (isFmp4, codec) => isFmp4 ? browserSupportsCodec(codec) : muxerSupportsCodec(codec);\n      const unsupportedCodecs = {};\n      let unsupportedAudio;\n      ['video', 'audio'].forEach(function (type) {\n        if (codecs.hasOwnProperty(type) && !supportFunction(media[type].isFmp4, codecs[type])) {\n          const supporter = media[type].isFmp4 ? 'browser' : 'muxer';\n          unsupportedCodecs[supporter] = unsupportedCodecs[supporter] || [];\n          unsupportedCodecs[supporter].push(codecs[type]);\n          if (type === 'audio') {\n            unsupportedAudio = supporter;\n          }\n        }\n      });\n      if (usingAudioLoader && unsupportedAudio && playlist.attributes.AUDIO) {\n        const audioGroup = playlist.attributes.AUDIO;\n        this.main().playlists.forEach(variant => {\n          const variantAudioGroup = variant.attributes && variant.attributes.AUDIO;\n          if (variantAudioGroup === audioGroup && variant !== playlist) {\n            variant.excludeUntil = Infinity;\n          }\n        });\n        this.logger_(`excluding audio group ${audioGroup} as ${unsupportedAudio} does not support codec(s): \"${codecs.audio}\"`);\n      } // if we have any unsupported codecs exclude this playlist.\n\n      if (Object.keys(unsupportedCodecs).length) {\n        const message = Object.keys(unsupportedCodecs).reduce((acc, supporter) => {\n          if (acc) {\n            acc += ', ';\n          }\n          acc += `${supporter} does not support codec(s): \"${unsupportedCodecs[supporter].join(',')}\"`;\n          return acc;\n        }, '') + '.';\n        this.excludePlaylist({\n          playlistToExclude: playlist,\n          error: {\n            internal: true,\n            message\n          },\n          playlistExclusionDuration: Infinity\n        });\n        return;\n      } // check if codec switching is happening\n\n      if (this.sourceUpdater_.hasCreatedSourceBuffers() && !this.sourceUpdater_.canChangeType()) {\n        const switchMessages = [];\n        ['video', 'audio'].forEach(type => {\n          const newCodec = (parseCodecs(this.sourceUpdater_.codecs[type] || '')[0] || {}).type;\n          const oldCodec = (parseCodecs(codecs[type] || '')[0] || {}).type;\n          if (newCodec && oldCodec && newCodec.toLowerCase() !== oldCodec.toLowerCase()) {\n            switchMessages.push(`\"${this.sourceUpdater_.codecs[type]}\" -> \"${codecs[type]}\"`);\n          }\n        });\n        if (switchMessages.length) {\n          this.excludePlaylist({\n            playlistToExclude: playlist,\n            error: {\n              message: `Codec switching not supported: ${switchMessages.join(', ')}.`,\n              internal: true\n            },\n            playlistExclusionDuration: Infinity\n          });\n          return;\n        }\n      } // TODO: when using the muxer shouldn't we just return\n      // the codecs that the muxer outputs?\n\n      return codecs;\n    }\n    /**\n     * Create source buffers and exlude any incompatible renditions.\n     *\n     * @private\n     */\n\n    tryToCreateSourceBuffers_() {\n      // media source is not ready yet or sourceBuffers are already\n      // created.\n      if (this.mediaSource.readyState !== 'open' || this.sourceUpdater_.hasCreatedSourceBuffers()) {\n        return;\n      }\n      if (!this.areMediaTypesKnown_()) {\n        return;\n      }\n      const codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n      if (!codecs) {\n        return;\n      }\n      this.sourceUpdater_.createSourceBuffers(codecs);\n      const codecString = [codecs.video, codecs.audio].filter(Boolean).join(',');\n      this.excludeIncompatibleVariants_(codecString);\n    }\n    /**\n     * Excludes playlists with codecs that are unsupported by the muxer and browser.\n     */\n\n    excludeUnsupportedVariants_() {\n      const playlists = this.main().playlists;\n      const ids = []; // TODO: why don't we have a property to loop through all\n      // playlist? Why did we ever mix indexes and keys?\n\n      Object.keys(playlists).forEach(key => {\n        const variant = playlists[key]; // check if we already processed this playlist.\n\n        if (ids.indexOf(variant.id) !== -1) {\n          return;\n        }\n        ids.push(variant.id);\n        const codecs = codecsForPlaylist(this.main, variant);\n        const unsupported = [];\n        if (codecs.audio && !muxerSupportsCodec(codecs.audio) && !browserSupportsCodec(codecs.audio)) {\n          unsupported.push(`audio codec ${codecs.audio}`);\n        }\n        if (codecs.video && !muxerSupportsCodec(codecs.video) && !browserSupportsCodec(codecs.video)) {\n          unsupported.push(`video codec ${codecs.video}`);\n        }\n        if (codecs.text && codecs.text === 'stpp.ttml.im1t') {\n          unsupported.push(`text codec ${codecs.text}`);\n        }\n        if (unsupported.length) {\n          variant.excludeUntil = Infinity;\n          this.logger_(`excluding ${variant.id} for unsupported: ${unsupported.join(', ')}`);\n        }\n      });\n    }\n    /**\n     * Exclude playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current main playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n    excludeIncompatibleVariants_(codecString) {\n      const ids = [];\n      const playlists = this.main().playlists;\n      const codecs = unwrapCodecList(parseCodecs(codecString));\n      const codecCount_ = codecCount(codecs);\n      const videoDetails = codecs.video && parseCodecs(codecs.video)[0] || null;\n      const audioDetails = codecs.audio && parseCodecs(codecs.audio)[0] || null;\n      Object.keys(playlists).forEach(key => {\n        const variant = playlists[key]; // check if we already processed this playlist.\n        // or it if it is already excluded forever.\n\n        if (ids.indexOf(variant.id) !== -1 || variant.excludeUntil === Infinity) {\n          return;\n        }\n        ids.push(variant.id);\n        const exclusionReasons = []; // get codecs from the playlist for this variant\n\n        const variantCodecs = codecsForPlaylist(this.mainPlaylistLoader_.main, variant);\n        const variantCodecCount = codecCount(variantCodecs); // if no codecs are listed, we cannot determine that this\n        // variant is incompatible. Wait for mux.js to probe\n\n        if (!variantCodecs.audio && !variantCodecs.video) {\n          return;\n        } // TODO: we can support this by removing the\n        // old media source and creating a new one, but it will take some work.\n        // The number of streams cannot change\n\n        if (variantCodecCount !== codecCount_) {\n          exclusionReasons.push(`codec count \"${variantCodecCount}\" !== \"${codecCount_}\"`);\n        } // only exclude playlists by codec change, if codecs cannot switch\n        // during playback.\n\n        if (!this.sourceUpdater_.canChangeType()) {\n          const variantVideoDetails = variantCodecs.video && parseCodecs(variantCodecs.video)[0] || null;\n          const variantAudioDetails = variantCodecs.audio && parseCodecs(variantCodecs.audio)[0] || null; // the video codec cannot change\n\n          if (variantVideoDetails && videoDetails && variantVideoDetails.type.toLowerCase() !== videoDetails.type.toLowerCase()) {\n            exclusionReasons.push(`video codec \"${variantVideoDetails.type}\" !== \"${videoDetails.type}\"`);\n          } // the audio codec cannot change\n\n          if (variantAudioDetails && audioDetails && variantAudioDetails.type.toLowerCase() !== audioDetails.type.toLowerCase()) {\n            exclusionReasons.push(`audio codec \"${variantAudioDetails.type}\" !== \"${audioDetails.type}\"`);\n          }\n        }\n        if (exclusionReasons.length) {\n          variant.excludeUntil = Infinity;\n          this.logger_(`excluding ${variant.id}: ${exclusionReasons.join(' && ')}`);\n        }\n      });\n    }\n    updateAdCues_(media) {\n      let offset = 0;\n      const seekable = this.seekable();\n      if (seekable.length) {\n        offset = seekable.start(0);\n      }\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {number} Desired forward buffer length in seconds\n     */\n\n    goalBufferLength() {\n      const currentTime = this.tech_.currentTime();\n      const initial = Config.GOAL_BUFFER_LENGTH;\n      const rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      const max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n      return Math.min(initial + currentTime * rate, max);\n    }\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {number} Desired buffer low water line in seconds\n     */\n\n    bufferLowWaterLine() {\n      const currentTime = this.tech_.currentTime();\n      const initial = Config.BUFFER_LOW_WATER_LINE;\n      const rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      const max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n      const newMax = Math.max(initial, Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);\n      return Math.min(initial + currentTime * rate, this.bufferBasedABR ? newMax : max);\n    }\n    bufferHighWaterLine() {\n      return Config.BUFFER_HIGH_WATER_LINE;\n    }\n    addDateRangesToTextTrack_(dateRanges) {\n      createMetadataTrackIfNotExists(this.inbandTextTracks_, 'com.apple.streaming', this.tech_);\n      addDateRangeMetadata({\n        inbandTextTracks: this.inbandTextTracks_,\n        dateRanges\n      });\n    }\n    addMetadataToTextTrack(dispatchType, metadataArray, videoDuration) {\n      const timestampOffset = this.sourceUpdater_.videoBuffer ? this.sourceUpdater_.videoTimestampOffset() : this.sourceUpdater_.audioTimestampOffset(); // There's potentially an issue where we could double add metadata if there's a muxed\n      // audio/video source with a metadata track, and an alt audio with a metadata track.\n      // However, this probably won't happen, and if it does it can be handled then.\n\n      createMetadataTrackIfNotExists(this.inbandTextTracks_, dispatchType, this.tech_);\n      addMetadata({\n        inbandTextTracks: this.inbandTextTracks_,\n        metadataArray,\n        timestampOffset,\n        videoDuration\n      });\n    }\n    /**\n     * Utility for getting the pathway or service location from an HLS or DASH playlist.\n     *\n     * @param {Object} playlist for getting pathway from.\n     * @return the pathway attribute of a playlist\n     */\n\n    pathwayAttribute_(playlist) {\n      return playlist.attributes['PATHWAY-ID'] || playlist.attributes.serviceLocation;\n    }\n    /**\n     * Initialize available pathways and apply the tag properties.\n     */\n\n    initContentSteeringController_() {\n      const main = this.main();\n      if (!main.contentSteering) {\n        return;\n      }\n      for (const playlist of main.playlists) {\n        this.contentSteeringController_.addAvailablePathway(this.pathwayAttribute_(playlist));\n      }\n      this.contentSteeringController_.assignTagProperties(main.uri, main.contentSteering); // request the steering manifest immediately if queryBeforeStart is set.\n\n      if (this.contentSteeringController_.queryBeforeStart) {\n        // When queryBeforeStart is true, initial request should omit steering parameters.\n        this.contentSteeringController_.requestSteeringManifest(true);\n        return;\n      } // otherwise start content steering after playback starts\n\n      this.tech_.one('canplay', () => {\n        this.contentSteeringController_.requestSteeringManifest();\n      });\n    }\n    /**\n     * Reset the content steering controller and re-init.\n     */\n\n    resetContentSteeringController_() {\n      this.contentSteeringController_.clearAvailablePathways();\n      this.contentSteeringController_.dispose();\n      this.initContentSteeringController_();\n    }\n    /**\n     * Attaches the listeners for content steering.\n     */\n\n    attachContentSteeringListeners_() {\n      this.contentSteeringController_.on('content-steering', this.excludeThenChangePathway_.bind(this));\n      const contentSteeringEvents = ['contentsteeringloadstart', 'contentsteeringloadcomplete', 'contentsteeringparsed'];\n      contentSteeringEvents.forEach(eventName => {\n        this.contentSteeringController_.on(eventName, metadata => {\n          this.trigger(_extends$1({}, metadata));\n        });\n      });\n      if (this.sourceType_ === 'dash') {\n        this.mainPlaylistLoader_.on('loadedplaylist', () => {\n          const main = this.main(); // check if steering tag or pathways changed.\n\n          const didDashTagChange = this.contentSteeringController_.didDASHTagChange(main.uri, main.contentSteering);\n          const didPathwaysChange = () => {\n            const availablePathways = this.contentSteeringController_.getAvailablePathways();\n            const newPathways = [];\n            for (const playlist of main.playlists) {\n              const serviceLocation = playlist.attributes.serviceLocation;\n              if (serviceLocation) {\n                newPathways.push(serviceLocation);\n                if (!availablePathways.has(serviceLocation)) {\n                  return true;\n                }\n              }\n            } // If we have no new serviceLocations and previously had availablePathways\n\n            if (!newPathways.length && availablePathways.size) {\n              return true;\n            }\n            return false;\n          };\n          if (didDashTagChange || didPathwaysChange()) {\n            this.resetContentSteeringController_();\n          }\n        });\n      }\n    }\n    /**\n     * Simple exclude and change playlist logic for content steering.\n     */\n\n    excludeThenChangePathway_() {\n      const currentPathway = this.contentSteeringController_.getPathway();\n      if (!currentPathway) {\n        return;\n      }\n      this.handlePathwayClones_();\n      const main = this.main();\n      const playlists = main.playlists;\n      const ids = new Set();\n      let didEnablePlaylists = false;\n      Object.keys(playlists).forEach(key => {\n        const variant = playlists[key];\n        const pathwayId = this.pathwayAttribute_(variant);\n        const differentPathwayId = pathwayId && currentPathway !== pathwayId;\n        const steeringExclusion = variant.excludeUntil === Infinity && variant.lastExcludeReason_ === 'content-steering';\n        if (steeringExclusion && !differentPathwayId) {\n          delete variant.excludeUntil;\n          delete variant.lastExcludeReason_;\n          didEnablePlaylists = true;\n        }\n        const noExcludeUntil = !variant.excludeUntil && variant.excludeUntil !== Infinity;\n        const shouldExclude = !ids.has(variant.id) && differentPathwayId && noExcludeUntil;\n        if (!shouldExclude) {\n          return;\n        }\n        ids.add(variant.id);\n        variant.excludeUntil = Infinity;\n        variant.lastExcludeReason_ = 'content-steering'; // TODO: kind of spammy, maybe move this.\n\n        this.logger_(`excluding ${variant.id} for ${variant.lastExcludeReason_}`);\n      });\n      if (this.contentSteeringController_.manifestType_ === 'DASH') {\n        Object.keys(this.mediaTypes_).forEach(key => {\n          const type = this.mediaTypes_[key];\n          if (type.activePlaylistLoader) {\n            const currentPlaylist = type.activePlaylistLoader.media_; // Check if the current media playlist matches the current CDN\n\n            if (currentPlaylist && currentPlaylist.attributes.serviceLocation !== currentPathway) {\n              didEnablePlaylists = true;\n            }\n          }\n        });\n      }\n      if (didEnablePlaylists) {\n        this.changeSegmentPathway_();\n      }\n    }\n    /**\n     * Add, update, or delete playlists and media groups for\n     * the pathway clones for HLS Content Steering.\n     *\n     * See https://datatracker.ietf.org/doc/draft-pantos-hls-rfc8216bis/\n     *\n     * NOTE: Pathway cloning does not currently support the `PER_VARIANT_URIS` and\n     * `PER_RENDITION_URIS` as we do not handle `STABLE-VARIANT-ID` or\n     * `STABLE-RENDITION-ID` values.\n     */\n\n    handlePathwayClones_() {\n      const main = this.main();\n      const playlists = main.playlists;\n      const currentPathwayClones = this.contentSteeringController_.currentPathwayClones;\n      const nextPathwayClones = this.contentSteeringController_.nextPathwayClones;\n      const hasClones = currentPathwayClones && currentPathwayClones.size || nextPathwayClones && nextPathwayClones.size;\n      if (!hasClones) {\n        return;\n      }\n      for (const [id, clone] of currentPathwayClones.entries()) {\n        const newClone = nextPathwayClones.get(id); // Delete the old pathway clone.\n\n        if (!newClone) {\n          this.mainPlaylistLoader_.updateOrDeleteClone(clone);\n          this.contentSteeringController_.excludePathway(id);\n        }\n      }\n      for (const [id, clone] of nextPathwayClones.entries()) {\n        const oldClone = currentPathwayClones.get(id); // Create a new pathway if it is a new pathway clone object.\n\n        if (!oldClone) {\n          const playlistsToClone = playlists.filter(p => {\n            return p.attributes['PATHWAY-ID'] === clone['BASE-ID'];\n          });\n          playlistsToClone.forEach(p => {\n            this.mainPlaylistLoader_.addClonePathway(clone, p);\n          });\n          this.contentSteeringController_.addAvailablePathway(id);\n          continue;\n        } // There have not been changes to the pathway clone object, so skip.\n\n        if (this.equalPathwayClones_(oldClone, clone)) {\n          continue;\n        } // Update a preexisting cloned pathway.\n        // True is set for the update flag.\n\n        this.mainPlaylistLoader_.updateOrDeleteClone(clone, true);\n        this.contentSteeringController_.addAvailablePathway(id);\n      } // Deep copy contents of next to current pathways.\n\n      this.contentSteeringController_.currentPathwayClones = new Map(JSON.parse(JSON.stringify([...nextPathwayClones])));\n    }\n    /**\n     * Determines whether two pathway clone objects are equivalent.\n     *\n     * @param {Object} a The first pathway clone object.\n     * @param {Object} b The second pathway clone object.\n     * @return {boolean} True if the pathway clone objects are equal, false otherwise.\n     */\n\n    equalPathwayClones_(a, b) {\n      if (a['BASE-ID'] !== b['BASE-ID'] || a.ID !== b.ID || a['URI-REPLACEMENT'].HOST !== b['URI-REPLACEMENT'].HOST) {\n        return false;\n      }\n      const aParams = a['URI-REPLACEMENT'].PARAMS;\n      const bParams = b['URI-REPLACEMENT'].PARAMS; // We need to iterate through both lists of params because one could be\n      // missing a parameter that the other has.\n\n      for (const p in aParams) {\n        if (aParams[p] !== bParams[p]) {\n          return false;\n        }\n      }\n      for (const p in bParams) {\n        if (aParams[p] !== bParams[p]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    /**\n     * Changes the current playlists for audio, video and subtitles after a new pathway\n     * is chosen from content steering.\n     */\n\n    changeSegmentPathway_() {\n      const nextPlaylist = this.selectPlaylist();\n      this.pauseLoading(); // Switch audio and text track playlists if necessary in DASH\n\n      if (this.contentSteeringController_.manifestType_ === 'DASH') {\n        this.switchMediaForDASHContentSteering_();\n      }\n      this.switchMedia_(nextPlaylist, 'content-steering');\n    }\n    /**\n     * Iterates through playlists and check their keyId set and compare with the\n     * keyStatusMap, only enable playlists that have a usable key. If the playlist\n     * has no keyId leave it enabled by default.\n     */\n\n    excludeNonUsablePlaylistsByKeyId_() {\n      if (!this.mainPlaylistLoader_ || !this.mainPlaylistLoader_.main) {\n        return;\n      }\n      let nonUsableKeyStatusCount = 0;\n      const NON_USABLE = 'non-usable';\n      this.mainPlaylistLoader_.main.playlists.forEach(playlist => {\n        const keyIdSet = this.mainPlaylistLoader_.getKeyIdSet(playlist); // If the playlist doesn't have keyIDs lets not exclude it.\n\n        if (!keyIdSet || !keyIdSet.size) {\n          return;\n        }\n        keyIdSet.forEach(key => {\n          const USABLE = 'usable';\n          const hasUsableKeyStatus = this.keyStatusMap_.has(key) && this.keyStatusMap_.get(key) === USABLE;\n          const nonUsableExclusion = playlist.lastExcludeReason_ === NON_USABLE && playlist.excludeUntil === Infinity;\n          if (!hasUsableKeyStatus) {\n            // Only exclude playlists that haven't already been excluded as non-usable.\n            if (playlist.excludeUntil !== Infinity && playlist.lastExcludeReason_ !== NON_USABLE) {\n              playlist.excludeUntil = Infinity;\n              playlist.lastExcludeReason_ = NON_USABLE;\n              this.logger_(`excluding playlist ${playlist.id} because the key ID ${key} doesn't exist in the keyStatusMap or is not ${USABLE}`);\n            } // count all nonUsableKeyStatus\n\n            nonUsableKeyStatusCount++;\n          } else if (hasUsableKeyStatus && nonUsableExclusion) {\n            delete playlist.excludeUntil;\n            delete playlist.lastExcludeReason_;\n            this.logger_(`enabling playlist ${playlist.id} because key ID ${key} is ${USABLE}`);\n          }\n        });\n      }); // If for whatever reason every playlist has a non usable key status. Lets try re-including the SD renditions as a failsafe.\n\n      if (nonUsableKeyStatusCount >= this.mainPlaylistLoader_.main.playlists.length) {\n        this.mainPlaylistLoader_.main.playlists.forEach(playlist => {\n          const isNonHD = playlist && playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height < 720;\n          const excludedForNonUsableKey = playlist.excludeUntil === Infinity && playlist.lastExcludeReason_ === NON_USABLE;\n          if (isNonHD && excludedForNonUsableKey) {\n            // Only delete the excludeUntil so we don't try and re-exclude these playlists.\n            delete playlist.excludeUntil;\n            videojs.log.warn(`enabling non-HD playlist ${playlist.id} because all playlists were excluded due to ${NON_USABLE} key IDs`);\n          }\n        });\n      }\n    }\n    /**\n     * Adds a keystatus to the keystatus map, tries to convert to string if necessary.\n     *\n     * @param {any} keyId the keyId to add a status for\n     * @param {string} status the status of the keyId\n     */\n\n    addKeyStatus_(keyId, status) {\n      const isString = typeof keyId === 'string';\n      const keyIdHexString = isString ? keyId : bufferToHexString(keyId);\n      const formattedKeyIdString = keyIdHexString.slice(0, 32).toLowerCase();\n      this.logger_(`KeyStatus '${status}' with key ID ${formattedKeyIdString} added to the keyStatusMap`);\n      this.keyStatusMap_.set(formattedKeyIdString, status);\n    }\n    /**\n     * Utility function for adding key status to the keyStatusMap and filtering usable encrypted playlists.\n     *\n     * @param {any} keyId the keyId from the keystatuschange event\n     * @param {string} status the key status string\n     */\n\n    updatePlaylistByKeyStatus(keyId, status) {\n      this.addKeyStatus_(keyId, status);\n      if (!this.waitingForFastQualityPlaylistReceived_) {\n        this.excludeNonUsableThenChangePlaylist_();\n      } // Listen to loadedplaylist with a single listener and check for new contentProtection elements when a playlist is updated.\n\n      this.mainPlaylistLoader_.off('loadedplaylist', this.excludeNonUsableThenChangePlaylist_.bind(this));\n      this.mainPlaylistLoader_.on('loadedplaylist', this.excludeNonUsableThenChangePlaylist_.bind(this));\n    }\n    excludeNonUsableThenChangePlaylist_() {\n      this.excludeNonUsablePlaylistsByKeyId_();\n      this.fastQualityChange_();\n    }\n  }\n\n  /**\n   * Returns a function that acts as the Enable/disable playlist function.\n   *\n   * @param {PlaylistLoader} loader - The main playlist loader\n   * @param {string} playlistID - id of the playlist\n   * @param {Function} changePlaylistFn - A function to be called after a\n   * playlist's enabled-state has been changed. Will NOT be called if a\n   * playlist's enabled-state is unchanged\n   * @param {boolean=} enable - Value to set the playlist enabled-state to\n   * or if undefined returns the current enabled-state for the playlist\n   * @return {Function} Function for setting/getting enabled\n   */\n\n  const enableFunction = (loader, playlistID, changePlaylistFn) => enable => {\n    const playlist = loader.main.playlists[playlistID];\n    const incompatible = isIncompatible(playlist);\n    const currentlyEnabled = isEnabled(playlist);\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n    const metadata = {\n      renditionInfo: {\n        id: playlistID,\n        bandwidth: playlist.attributes.BANDWIDTH,\n        resolution: playlist.attributes.RESOLUTION,\n        codecs: playlist.attributes.CODECS\n      },\n      cause: 'fast-quality'\n    };\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn(playlist);\n      if (enable) {\n        loader.trigger({\n          type: 'renditionenabled',\n          metadata\n        });\n      } else {\n        loader.trigger({\n          type: 'renditiondisabled',\n          metadata\n        });\n      }\n    }\n    return enable;\n  };\n  /**\n   * The representation object encapsulates the publicly visible information\n   * in a media playlist along with a setter/getter-type function (enabled)\n   * for changing the enabled-state of a particular playlist entry\n   *\n   * @class Representation\n   */\n\n  class Representation {\n    constructor(vhsHandler, playlist, id) {\n      const {\n        playlistController_: pc\n      } = vhsHandler;\n      const qualityChangeFunction = pc.fastQualityChange_.bind(pc); // some playlist attributes are optional\n\n      if (playlist.attributes) {\n        const resolution = playlist.attributes.RESOLUTION;\n        this.width = resolution && resolution.width;\n        this.height = resolution && resolution.height;\n        this.bandwidth = playlist.attributes.BANDWIDTH;\n        this.frameRate = playlist.attributes['FRAME-RATE'];\n      }\n      this.codecs = codecsForPlaylist(pc.main(), playlist);\n      this.playlist = playlist; // The id is simply the ordinality of the media playlist\n      // within the main playlist\n\n      this.id = id; // Partially-apply the enableFunction to create a playlist-\n      // specific variant\n\n      this.enabled = enableFunction(vhsHandler.playlists, playlist.id, qualityChangeFunction);\n    }\n  }\n  /**\n   * A mixin function that adds the `representations` api to an instance\n   * of the VhsHandler class\n   *\n   * @param {VhsHandler} vhsHandler - An instance of VhsHandler to add the\n   * representation API into\n   */\n\n  const renditionSelectionMixin = function (vhsHandler) {\n    // Add a single API-specific function to the VhsHandler instance\n    vhsHandler.representations = () => {\n      const main = vhsHandler.playlistController_.main();\n      const playlists = isAudioOnly(main) ? vhsHandler.playlistController_.getAudioTrackPlaylists_() : main.playlists;\n      if (!playlists) {\n        return [];\n      }\n      return playlists.filter(media => !isIncompatible(media)).map((e, i) => new Representation(vhsHandler, e, e.id));\n    };\n  };\n\n  /**\n   * @file playback-watcher.js\n   *\n   * Playback starts, and now my watch begins. It shall not end until my death. I shall\n   * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n   * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n   * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n   * my life and honor to the Playback Watch, for this Player and all the Players to come.\n   */\n\n  const timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n  /**\n   * @class PlaybackWatcher\n   */\n\n  class PlaybackWatcher extends videojs.EventTarget {\n    /**\n     * Represents an PlaybackWatcher object.\n     *\n     * @class\n     * @param {Object} options an object that includes the tech and settings\n     */\n    constructor(options) {\n      super();\n      this.playlistController_ = options.playlistController;\n      this.tech_ = options.tech;\n      this.seekable = options.seekable;\n      this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n      this.liveRangeSafeTimeDelta = options.liveRangeSafeTimeDelta;\n      this.media = options.media;\n      this.playedRanges_ = [];\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = null;\n      this.checkCurrentTimeTimeout_ = null;\n      this.logger_ = logger('PlaybackWatcher');\n      this.logger_('initialize');\n      const playHandler = () => this.monitorCurrentTime_();\n      const canPlayHandler = () => this.monitorCurrentTime_();\n      const waitingHandler = () => this.techWaiting_();\n      const cancelTimerHandler = () => this.resetTimeUpdate_();\n      const pc = this.playlistController_;\n      const loaderTypes = ['main', 'subtitle', 'audio'];\n      const loaderChecks = {};\n      loaderTypes.forEach(type => {\n        loaderChecks[type] = {\n          reset: () => this.resetSegmentDownloads_(type),\n          updateend: () => this.checkSegmentDownloads_(type)\n        };\n        pc[`${type}SegmentLoader_`].on('appendsdone', loaderChecks[type].updateend); // If a rendition switch happens during a playback stall where the buffer\n        // isn't changing we want to reset. We cannot assume that the new rendition\n        // will also be stalled, until after new appends.\n\n        pc[`${type}SegmentLoader_`].on('playlistupdate', loaderChecks[type].reset); // Playback stalls should not be detected right after seeking.\n        // This prevents one segment playlists (single vtt or single segment content)\n        // from being detected as stalling. As the buffer will not change in those cases, since\n        // the buffer is the entire video duration.\n\n        this.tech_.on(['seeked', 'seeking'], loaderChecks[type].reset);\n      });\n      /**\n       * We check if a seek was into a gap through the following steps:\n       * 1. We get a seeking event and we do not get a seeked event. This means that\n       *    a seek was attempted but not completed.\n       * 2. We run `fixesBadSeeks_` on segment loader appends. This means that we already\n       *    removed everything from our buffer and appended a segment, and should be ready\n       *    to check for gaps.\n       */\n\n      const setSeekingHandlers = fn => {\n        ['main', 'audio'].forEach(type => {\n          pc[`${type}SegmentLoader_`][fn]('appended', this.seekingAppendCheck_);\n        });\n      };\n      this.seekingAppendCheck_ = () => {\n        if (this.fixesBadSeeks_()) {\n          this.consecutiveUpdates = 0;\n          this.lastRecordedTime = this.tech_.currentTime();\n          setSeekingHandlers('off');\n        }\n      };\n      this.clearSeekingAppendCheck_ = () => setSeekingHandlers('off');\n      this.watchForBadSeeking_ = () => {\n        this.clearSeekingAppendCheck_();\n        setSeekingHandlers('on');\n      };\n      this.tech_.on('seeked', this.clearSeekingAppendCheck_);\n      this.tech_.on('seeking', this.watchForBadSeeking_);\n      this.tech_.on('waiting', waitingHandler);\n      this.tech_.on(timerCancelEvents, cancelTimerHandler);\n      this.tech_.on('canplay', canPlayHandler);\n      /*\n        An edge case exists that results in gaps not being skipped when they exist at the beginning of a stream. This case\n        is surfaced in one of two ways:\n         1)  The `waiting` event is fired before the player has buffered content, making it impossible\n            to find or skip the gap. The `waiting` event is followed by a `play` event. On first play\n            we can check if playback is stalled due to a gap, and skip the gap if necessary.\n        2)  A source with a gap at the beginning of the stream is loaded programatically while the player\n            is in a playing state. To catch this case, it's important that our one-time play listener is setup\n            even if the player is in a playing state\n      */\n\n      this.tech_.one('play', playHandler); // Define the dispose function to clean up our events\n\n      this.dispose = () => {\n        this.clearSeekingAppendCheck_();\n        this.logger_('dispose');\n        this.tech_.off('waiting', waitingHandler);\n        this.tech_.off(timerCancelEvents, cancelTimerHandler);\n        this.tech_.off('canplay', canPlayHandler);\n        this.tech_.off('play', playHandler);\n        this.tech_.off('seeking', this.watchForBadSeeking_);\n        this.tech_.off('seeked', this.clearSeekingAppendCheck_);\n        loaderTypes.forEach(type => {\n          pc[`${type}SegmentLoader_`].off('appendsdone', loaderChecks[type].updateend);\n          pc[`${type}SegmentLoader_`].off('playlistupdate', loaderChecks[type].reset);\n          this.tech_.off(['seeked', 'seeking'], loaderChecks[type].reset);\n        });\n        if (this.checkCurrentTimeTimeout_) {\n          window.clearTimeout(this.checkCurrentTimeTimeout_);\n        }\n        this.resetTimeUpdate_();\n      };\n    }\n    /**\n     * Periodically check current time to see if playback stopped\n     *\n     * @private\n     */\n\n    monitorCurrentTime_() {\n      this.checkCurrentTime_();\n      if (this.checkCurrentTimeTimeout_) {\n        window.clearTimeout(this.checkCurrentTimeTimeout_);\n      } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n      this.checkCurrentTimeTimeout_ = window.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n    /**\n     * Reset stalled download stats for a specific type of loader\n     *\n     * @param {string} type\n     *        The segment loader type to check.\n     *\n     * @listens SegmentLoader#playlistupdate\n     * @listens Tech#seeking\n     * @listens Tech#seeked\n     */\n\n    resetSegmentDownloads_(type) {\n      const loader = this.playlistController_[`${type}SegmentLoader_`];\n      if (this[`${type}StalledDownloads_`] > 0) {\n        this.logger_(`resetting possible stalled download count for ${type} loader`);\n      }\n      this[`${type}StalledDownloads_`] = 0;\n      this[`${type}Buffered_`] = loader.buffered_();\n    }\n    /**\n     * Checks on every segment `appendsdone` to see\n     * if segment appends are making progress. If they are not\n     * and we are still downloading bytes. We exclude the playlist.\n     *\n     * @param {string} type\n     *        The segment loader type to check.\n     *\n     * @listens SegmentLoader#appendsdone\n     */\n\n    checkSegmentDownloads_(type) {\n      const pc = this.playlistController_;\n      const loader = pc[`${type}SegmentLoader_`];\n      const buffered = loader.buffered_();\n      const isBufferedDifferent = isRangeDifferent(this[`${type}Buffered_`], buffered);\n      this[`${type}Buffered_`] = buffered; // if another watcher is going to fix the issue or\n      // the buffered value for this loader changed\n      // appends are working\n\n      if (isBufferedDifferent) {\n        const metadata = {\n          bufferedRanges: buffered\n        };\n        pc.trigger({\n          type: 'bufferedrangeschanged',\n          metadata\n        });\n        this.resetSegmentDownloads_(type);\n        return;\n      }\n      this[`${type}StalledDownloads_`]++;\n      this.logger_(`found #${this[`${type}StalledDownloads_`]} ${type} appends that did not increase buffer (possible stalled download)`, {\n        playlistId: loader.playlist_ && loader.playlist_.id,\n        buffered: timeRangesToArray(buffered)\n      }); // after 10 possibly stalled appends with no reset, exclude\n\n      if (this[`${type}StalledDownloads_`] < 10) {\n        return;\n      }\n      this.logger_(`${type} loader stalled download exclusion`);\n      this.resetSegmentDownloads_(type);\n      this.tech_.trigger({\n        type: 'usage',\n        name: `vhs-${type}-download-exclusion`\n      });\n      if (type === 'subtitle') {\n        return;\n      } // TODO: should we exclude audio tracks rather than main tracks\n      // when type is audio?\n\n      pc.excludePlaylist({\n        error: {\n          message: `Excessive ${type} segment downloading detected.`\n        },\n        playlistExclusionDuration: Infinity\n      });\n    }\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n    checkCurrentTime_() {\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n      const currentTime = this.tech_.currentTime();\n      const buffered = this.tech_.buffered();\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.playedRanges_.push(createTimeRanges([this.lastRecordedTime, currentTime]));\n        const metadata = {\n          playedRanges: this.playedRanges_\n        };\n        this.playlistController_.trigger({\n          type: 'playedrangeschanged',\n          metadata\n        });\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n    /**\n     * Resets the 'timeupdate' mechanism designed to detect that we are stalled\n     *\n     * @private\n     */\n\n    resetTimeUpdate_() {\n      this.consecutiveUpdates = 0;\n    }\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n    fixesBadSeeks_() {\n      const seeking = this.tech_.seeking();\n      if (!seeking) {\n        return false;\n      } // TODO: It's possible that these seekable checks should be moved out of this function\n      // and into a function that runs on seekablechange. It's also possible that we only need\n      // afterSeekableWindow as the buffered check at the bottom is good enough to handle before\n      // seekable range.\n\n      const seekable = this.seekable();\n      const currentTime = this.tech_.currentTime();\n      const isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n      let seekTo;\n      if (isAfterSeekableRange) {\n        const seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n        seekTo = seekableEnd;\n      }\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        const seekableStart = seekable.start(0); // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n        seekTo = seekableStart + (\n        // if the playlist is too short and the seekable range is an exact time (can\n        // happen in live with a 3 segment playlist), then don't use a time delta\n        seekableStart === seekable.end(0) ? 0 : SAFE_TIME_DELTA);\n      }\n      if (typeof seekTo !== 'undefined') {\n        this.logger_(`Trying to seek outside of seekable at time ${currentTime} with ` + `seekable range ${printableRange(seekable)}. Seeking to ` + `${seekTo}.`);\n        this.tech_.setCurrentTime(seekTo);\n        return true;\n      }\n      const sourceUpdater = this.playlistController_.sourceUpdater_;\n      const buffered = this.tech_.buffered();\n      const audioBuffered = sourceUpdater.audioBuffer ? sourceUpdater.audioBuffered() : null;\n      const videoBuffered = sourceUpdater.videoBuffer ? sourceUpdater.videoBuffered() : null;\n      const media = this.media(); // verify that at least two segment durations or one part duration have been\n      // appended before checking for a gap.\n\n      const minAppendedDuration = media.partTargetDuration ? media.partTargetDuration : (media.targetDuration - TIME_FUDGE_FACTOR) * 2; // verify that at least two segment durations have been\n      // appended before checking for a gap.\n\n      const bufferedToCheck = [audioBuffered, videoBuffered];\n      for (let i = 0; i < bufferedToCheck.length; i++) {\n        // skip null buffered\n        if (!bufferedToCheck[i]) {\n          continue;\n        }\n        const timeAhead = timeAheadOf(bufferedToCheck[i], currentTime); // if we are less than two video/audio segment durations or one part\n        // duration behind we haven't appended enough to call this a bad seek.\n\n        if (timeAhead < minAppendedDuration) {\n          return false;\n        }\n      }\n      const nextRange = findNextRange(buffered, currentTime); // we have appended enough content, but we don't have anything buffered\n      // to seek over the gap\n\n      if (nextRange.length === 0) {\n        return false;\n      }\n      seekTo = nextRange.start(0) + SAFE_TIME_DELTA;\n      this.logger_(`Buffered region starts (${nextRange.start(0)}) ` + ` just beyond seek point (${currentTime}). Seeking to ${seekTo}.`);\n      this.tech_.setCurrentTime(seekTo);\n      return true;\n    }\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n    waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      } // All tech waiting checks failed. Use last resort correction\n\n      const currentTime = this.tech_.currentTime();\n      const buffered = this.tech_.buffered();\n      const currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.resetTimeUpdate_();\n        this.tech_.setCurrentTime(currentTime);\n        this.logger_(`Stopped at ${currentTime} while inside a buffered region ` + `[${currentRange.start(0)} -> ${currentRange.end(0)}]. Attempting to resume ` + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-unknown-waiting'\n        });\n        return;\n      }\n    }\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n    techWaiting_() {\n      const seekable = this.seekable();\n      const currentTime = this.tech_.currentTime();\n      if (this.tech_.seeking()) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        const livePoint = seekable.end(seekable.length - 1);\n        this.logger_(`Fell out of live window at time ${currentTime}. Seeking to ` + `live point (seekable end) ${livePoint}`);\n        this.resetTimeUpdate_();\n        this.tech_.setCurrentTime(livePoint); // live window resyncs may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-live-resync'\n        });\n        return true;\n      }\n      const sourceUpdater = this.tech_.vhs.playlistController_.sourceUpdater_;\n      const buffered = this.tech_.buffered();\n      const videoUnderflow = this.videoUnderflow_({\n        audioBuffered: sourceUpdater.audioBuffered(),\n        videoBuffered: sourceUpdater.videoBuffered(),\n        currentTime\n      });\n      if (videoUnderflow) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.resetTimeUpdate_();\n        this.tech_.setCurrentTime(currentTime); // video underflow may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-video-underflow'\n        });\n        return true;\n      }\n      const nextRange = findNextRange(buffered, currentTime); // check for gap\n\n      if (nextRange.length > 0) {\n        this.logger_(`Stopped at ${currentTime} and seeking to ${nextRange.start(0)}`);\n        this.resetTimeUpdate_();\n        this.skipTheGap_(currentTime);\n        return true;\n      } // All checks failed. Returning false to indicate failure to correct waiting\n\n      return false;\n    }\n    afterSeekableWindow_(seekable, currentTime, playlist, allowSeeksWithinUnsafeLiveWindow = false) {\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n      let allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n      const isLive = !playlist.endList;\n      const isLLHLS = typeof playlist.partTargetDuration === 'number';\n      if (isLive && (isLLHLS || allowSeeksWithinUnsafeLiveWindow)) {\n        allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n      }\n      if (currentTime > allowedEnd) {\n        return true;\n      }\n      return false;\n    }\n    beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length &&\n      // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - this.liveRangeSafeTimeDelta) {\n        return true;\n      }\n      return false;\n    }\n    videoUnderflow_({\n      videoBuffered,\n      audioBuffered,\n      currentTime\n    }) {\n      // audio only content will not have video underflow :)\n      if (!videoBuffered) {\n        return;\n      }\n      let gap; // find a gap in demuxed content.\n\n      if (videoBuffered.length && audioBuffered.length) {\n        // in Chrome audio will continue to play for ~3s when we run out of video\n        // so we have to check that the video buffer did have some buffer in the\n        // past.\n        const lastVideoRange = findRange(videoBuffered, currentTime - 3);\n        const videoRange = findRange(videoBuffered, currentTime);\n        const audioRange = findRange(audioBuffered, currentTime);\n        if (audioRange.length && !videoRange.length && lastVideoRange.length) {\n          gap = {\n            start: lastVideoRange.end(0),\n            end: audioRange.end(0)\n          };\n        } // find a gap in muxed content.\n      } else {\n        const nextRange = findNextRange(videoBuffered, currentTime); // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n\n        if (!nextRange.length) {\n          gap = this.gapFromVideoUnderflow_(videoBuffered, currentTime);\n        }\n      }\n      if (gap) {\n        this.logger_(`Encountered a gap in video from ${gap.start} to ${gap.end}. ` + `Seeking to current time ${currentTime}`);\n        return true;\n      }\n      return false;\n    }\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n    skipTheGap_(scheduledCurrentTime) {\n      const buffered = this.tech_.buffered();\n      const currentTime = this.tech_.currentTime();\n      const nextRange = findNextRange(buffered, currentTime);\n      this.resetTimeUpdate_();\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n      this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n      const metadata = {\n        gapInfo: {\n          from: currentTime,\n          to: nextRange.start(0)\n        }\n      };\n      this.playlistController_.trigger({\n        type: 'gapjumped',\n        metadata\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-gap-skip'\n      });\n    }\n    gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      const gaps = findGaps(buffered);\n      for (let i = 0; i < gaps.length; i++) {\n        const start = gaps.start(i);\n        const end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start,\n            end\n          };\n        }\n      }\n      return null;\n    }\n  }\n  const defaultOptions = {\n    errorInterval: 30,\n    getSource(next) {\n      const tech = this.tech({\n        IWillNotUseThisInPlugins: true\n      });\n      const sourceObj = tech.currentSource_ || this.currentSource();\n      return next(sourceObj);\n    }\n  };\n  /**\n   * Main entry point for the plugin\n   *\n   * @param {Player} player a reference to a videojs Player instance\n   * @param {Object} [options] an object with plugin options\n   * @private\n   */\n\n  const initPlugin = function (player, options) {\n    let lastCalled = 0;\n    let seekTo = 0;\n    const localOptions = merge(defaultOptions, options);\n    player.ready(() => {\n      player.trigger({\n        type: 'usage',\n        name: 'vhs-error-reload-initialized'\n      });\n    });\n    /**\n     * Player modifications to perform that must wait until `loadedmetadata`\n     * has been triggered\n     *\n     * @private\n     */\n\n    const loadedMetadataHandler = function () {\n      if (seekTo) {\n        player.currentTime(seekTo);\n      }\n    };\n    /**\n     * Set the source on the player element, play, and seek if necessary\n     *\n     * @param {Object} sourceObj An object specifying the source url and mime-type to play\n     * @private\n     */\n\n    const setSource = function (sourceObj) {\n      if (sourceObj === null || sourceObj === undefined) {\n        return;\n      }\n      seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n      player.one('loadedmetadata', loadedMetadataHandler);\n      player.src(sourceObj);\n      player.trigger({\n        type: 'usage',\n        name: 'vhs-error-reload'\n      });\n      player.play();\n    };\n    /**\n     * Attempt to get a source from either the built-in getSource function\n     * or a custom function provided via the options\n     *\n     * @private\n     */\n\n    const errorHandler = function () {\n      // Do not attempt to reload the source if a source-reload occurred before\n      // 'errorInterval' time has elapsed since the last source-reload\n      if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n        player.trigger({\n          type: 'usage',\n          name: 'vhs-error-reload-canceled'\n        });\n        return;\n      }\n      if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n        videojs.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n        return;\n      }\n      lastCalled = Date.now();\n      return localOptions.getSource.call(player, setSource);\n    };\n    /**\n     * Unbind any event handlers that were bound by the plugin\n     *\n     * @private\n     */\n\n    const cleanupEvents = function () {\n      player.off('loadedmetadata', loadedMetadataHandler);\n      player.off('error', errorHandler);\n      player.off('dispose', cleanupEvents);\n    };\n    /**\n     * Cleanup before re-initializing the plugin\n     *\n     * @param {Object} [newOptions] an object with plugin options\n     * @private\n     */\n\n    const reinitPlugin = function (newOptions) {\n      cleanupEvents();\n      initPlugin(player, newOptions);\n    };\n    player.on('error', errorHandler);\n    player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n    // initializing the plugin\n\n    player.reloadSourceOnError = reinitPlugin;\n  };\n  /**\n   * Reload the source when an error is detected as long as there\n   * wasn't an error previously within the last 30 seconds\n   *\n   * @param {Object} [options] an object with plugin options\n   */\n\n  const reloadSourceOnError = function (options) {\n    initPlugin(this, options);\n  };\n  var version$4 = \"3.13.2\";\n  var version$3 = \"7.0.3\";\n  var version$2 = \"1.3.0\";\n  var version$1 = \"7.1.0\";\n  var version = \"4.0.1\";\n  const Vhs = {\n    PlaylistLoader,\n    Playlist,\n    utils,\n    STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n    INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n    lastBandwidthSelector,\n    movingAverageBandwidthSelector,\n    comparePlaylistBandwidth,\n    comparePlaylistResolution,\n    xhr: xhrFactory()\n  }; // Define getter/setters for config properties\n\n  Object.keys(Config).forEach(prop => {\n    Object.defineProperty(Vhs, prop, {\n      get() {\n        videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);\n        return Config[prop];\n      },\n      set(value) {\n        videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);\n        if (typeof value !== 'number' || value < 0) {\n          videojs.log.warn(`value of Vhs.${prop} must be greater than or equal to 0`);\n          return;\n        }\n        Config[prop] = value;\n      }\n    });\n  });\n  const LOCAL_STORAGE_KEY = 'videojs-vhs';\n  /**\n   * Updates the selectedIndex of the QualityLevelList when a mediachange happens in vhs.\n   *\n   * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n   * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n   * @function handleVhsMediaChange\n   */\n\n  const handleVhsMediaChange = function (qualityLevels, playlistLoader) {\n    const newPlaylist = playlistLoader.media();\n    let selectedIndex = -1;\n    for (let i = 0; i < qualityLevels.length; i++) {\n      if (qualityLevels[i].id === newPlaylist.id) {\n        selectedIndex = i;\n        break;\n      }\n    }\n    qualityLevels.selectedIndex_ = selectedIndex;\n    qualityLevels.trigger({\n      selectedIndex,\n      type: 'change'\n    });\n  };\n  /**\n   * Adds quality levels to list once playlist metadata is available\n   *\n   * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n   * @param {Object} vhs Vhs object to listen to for media events.\n   * @function handleVhsLoadedMetadata\n   */\n\n  const handleVhsLoadedMetadata = function (qualityLevels, vhs) {\n    vhs.representations().forEach(rep => {\n      qualityLevels.addQualityLevel(rep);\n    });\n    handleVhsMediaChange(qualityLevels, vhs.playlists);\n  }; // VHS is a source handler, not a tech. Make sure attempts to use it\n  // as one do not cause exceptions.\n\n  Vhs.canPlaySource = function () {\n    return videojs.log.warn('VHS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n  };\n  const emeKeySystems = (keySystemOptions, mainPlaylist, audioPlaylist) => {\n    if (!keySystemOptions) {\n      return keySystemOptions;\n    }\n    let codecs = {};\n    if (mainPlaylist && mainPlaylist.attributes && mainPlaylist.attributes.CODECS) {\n      codecs = unwrapCodecList(parseCodecs(mainPlaylist.attributes.CODECS));\n    }\n    if (audioPlaylist && audioPlaylist.attributes && audioPlaylist.attributes.CODECS) {\n      codecs.audio = audioPlaylist.attributes.CODECS;\n    }\n    const videoContentType = getMimeForCodec(codecs.video);\n    const audioContentType = getMimeForCodec(codecs.audio); // upsert the content types based on the selected playlist\n\n    const keySystemContentTypes = {};\n    for (const keySystem in keySystemOptions) {\n      keySystemContentTypes[keySystem] = {};\n      if (audioContentType) {\n        keySystemContentTypes[keySystem].audioContentType = audioContentType;\n      }\n      if (videoContentType) {\n        keySystemContentTypes[keySystem].videoContentType = videoContentType;\n      } // Default to using the video playlist's PSSH even though they may be different, as\n      // videojs-contrib-eme will only accept one in the options.\n      //\n      // This shouldn't be an issue for most cases as early intialization will handle all\n      // unique PSSH values, and if they aren't, then encrypted events should have the\n      // specific information needed for the unique license.\n\n      if (mainPlaylist.contentProtection && mainPlaylist.contentProtection[keySystem] && mainPlaylist.contentProtection[keySystem].pssh) {\n        keySystemContentTypes[keySystem].pssh = mainPlaylist.contentProtection[keySystem].pssh;\n      } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n      // so we need to prevent overwriting the URL entirely\n\n      if (typeof keySystemOptions[keySystem] === 'string') {\n        keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n      }\n    }\n    return merge(keySystemOptions, keySystemContentTypes);\n  };\n  /**\n   * @typedef {Object} KeySystems\n   *\n   * keySystems configuration for https://github.com/videojs/videojs-contrib-eme\n   * Note: not all options are listed here.\n   *\n   * @property {Uint8Array} [pssh]\n   *           Protection System Specific Header\n   */\n\n  /**\n   * Goes through all the playlists and collects an array of KeySystems options objects\n   * containing each playlist's keySystems and their pssh values, if available.\n   *\n   * @param {Object[]} playlists\n   *        The playlists to look through\n   * @param {string[]} keySystems\n   *        The keySystems to collect pssh values for\n   *\n   * @return {KeySystems[]}\n   *         An array of KeySystems objects containing available key systems and their\n   *         pssh values\n   */\n\n  const getAllPsshKeySystemsOptions = (playlists, keySystems) => {\n    return playlists.reduce((keySystemsArr, playlist) => {\n      if (!playlist.contentProtection) {\n        return keySystemsArr;\n      }\n      const keySystemsOptions = keySystems.reduce((keySystemsObj, keySystem) => {\n        const keySystemOptions = playlist.contentProtection[keySystem];\n        if (keySystemOptions && keySystemOptions.pssh) {\n          keySystemsObj[keySystem] = {\n            pssh: keySystemOptions.pssh\n          };\n        }\n        return keySystemsObj;\n      }, {});\n      if (Object.keys(keySystemsOptions).length) {\n        keySystemsArr.push(keySystemsOptions);\n      }\n      return keySystemsArr;\n    }, []);\n  };\n  /**\n   * Returns a promise that waits for the\n   * [eme plugin](https://github.com/videojs/videojs-contrib-eme) to create a key session.\n   *\n   * Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449 in non-IE11\n   * browsers.\n   *\n   * As per the above ticket, this is particularly important for Chrome, where, if\n   * unencrypted content is appended before encrypted content and the key session has not\n   * been created, a MEDIA_ERR_DECODE will be thrown once the encrypted content is reached\n   * during playback.\n   *\n   * @param {Object} player\n   *        The player instance\n   * @param {Object[]} sourceKeySystems\n   *        The key systems options from the player source\n   * @param {Object} [audioMedia]\n   *        The active audio media playlist (optional)\n   * @param {Object[]} mainPlaylists\n   *        The playlists found on the main playlist object\n   *\n   * @return {Object}\n   *         Promise that resolves when the key session has been created\n   */\n\n  const waitForKeySessionCreation = ({\n    player,\n    sourceKeySystems,\n    audioMedia,\n    mainPlaylists\n  }) => {\n    if (!player.eme.initializeMediaKeys) {\n      return Promise.resolve();\n    } // TODO should all audio PSSH values be initialized for DRM?\n    //\n    // All unique video rendition pssh values are initialized for DRM, but here only\n    // the initial audio playlist license is initialized. In theory, an encrypted\n    // event should be fired if the user switches to an alternative audio playlist\n    // where a license is required, but this case hasn't yet been tested. In addition, there\n    // may be many alternate audio playlists unlikely to be used (e.g., multiple different\n    // languages).\n\n    const playlists = audioMedia ? mainPlaylists.concat([audioMedia]) : mainPlaylists;\n    const keySystemsOptionsArr = getAllPsshKeySystemsOptions(playlists, Object.keys(sourceKeySystems));\n    const initializationFinishedPromises = [];\n    const keySessionCreatedPromises = []; // Since PSSH values are interpreted as initData, EME will dedupe any duplicates. The\n    // only place where it should not be deduped is for ms-prefixed APIs, but\n    // the existence of modern EME APIs in addition to\n    // ms-prefixed APIs on Edge should prevent this from being a concern.\n    // initializeMediaKeys also won't use the webkit-prefixed APIs.\n\n    keySystemsOptionsArr.forEach(keySystemsOptions => {\n      keySessionCreatedPromises.push(new Promise((resolve, reject) => {\n        player.tech_.one('keysessioncreated', resolve);\n      }));\n      initializationFinishedPromises.push(new Promise((resolve, reject) => {\n        player.eme.initializeMediaKeys({\n          keySystems: keySystemsOptions\n        }, err => {\n          if (err) {\n            reject(err);\n            return;\n          }\n          resolve();\n        });\n      }));\n    }); // The reasons Promise.race is chosen over Promise.any:\n    //\n    // * Promise.any is only available in Safari 14+.\n    // * None of these promises are expected to reject. If they do reject, it might be\n    //   better here for the race to surface the rejection, rather than mask it by using\n    //   Promise.any.\n\n    return Promise.race([\n    // If a session was previously created, these will all finish resolving without\n    // creating a new session, otherwise it will take until the end of all license\n    // requests, which is why the key session check is used (to make setup much faster).\n    Promise.all(initializationFinishedPromises),\n    // Once a single session is created, the browser knows DRM will be used.\n    Promise.race(keySessionCreatedPromises)]);\n  };\n  /**\n   * If the [eme](https://github.com/videojs/videojs-contrib-eme) plugin is available, and\n   * there are keySystems on the source, sets up source options to prepare the source for\n   * eme.\n   *\n   * @param {Object} player\n   *        The player instance\n   * @param {Object[]} sourceKeySystems\n   *        The key systems options from the player source\n   * @param {Object} media\n   *        The active media playlist\n   * @param {Object} [audioMedia]\n   *        The active audio media playlist (optional)\n   *\n   * @return {boolean}\n   *         Whether or not options were configured and EME is available\n   */\n\n  const setupEmeOptions = ({\n    player,\n    sourceKeySystems,\n    media,\n    audioMedia\n  }) => {\n    const sourceOptions = emeKeySystems(sourceKeySystems, media, audioMedia);\n    if (!sourceOptions) {\n      return false;\n    }\n    player.currentSource().keySystems = sourceOptions; // eme handles the rest of the setup, so if it is missing\n    // do nothing.\n\n    if (sourceOptions && !player.eme) {\n      videojs.log.warn('DRM encrypted source cannot be decrypted without a DRM plugin');\n      return false;\n    }\n    return true;\n  };\n  const getVhsLocalStorage = () => {\n    if (!window.localStorage) {\n      return null;\n    }\n    const storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (!storedObject) {\n      return null;\n    }\n    try {\n      return JSON.parse(storedObject);\n    } catch (e) {\n      // someone may have tampered with the value\n      return null;\n    }\n  };\n  const updateVhsLocalStorage = options => {\n    if (!window.localStorage) {\n      return false;\n    }\n    let objectToStore = getVhsLocalStorage();\n    objectToStore = objectToStore ? merge(objectToStore, options) : options;\n    try {\n      window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(objectToStore));\n    } catch (e) {\n      // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n      // storage is set to 0).\n      // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n      // No need to perform any operation.\n      return false;\n    }\n    return objectToStore;\n  };\n  /**\n   * Parses VHS-supported media types from data URIs. See\n   * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n   * for information on data URIs.\n   *\n   * @param {string} dataUri\n   *        The data URI\n   *\n   * @return {string|Object}\n   *         The parsed object/string, or the original string if no supported media type\n   *         was found\n   */\n\n  const expandDataUri = dataUri => {\n    if (dataUri.toLowerCase().indexOf('data:application/vnd.videojs.vhs+json,') === 0) {\n      return JSON.parse(dataUri.substring(dataUri.indexOf(',') + 1));\n    } // no known case for this data URI, return the string as-is\n\n    return dataUri;\n  };\n  /**\n   * Adds a request hook to an xhr object\n   *\n   * @param {Object} xhr object to add the onRequest hook to\n   * @param {function} callback hook function for an xhr request\n   */\n\n  const addOnRequestHook = (xhr, callback) => {\n    if (!xhr._requestCallbackSet) {\n      xhr._requestCallbackSet = new Set();\n    }\n    xhr._requestCallbackSet.add(callback);\n  };\n  /**\n   * Adds a response hook to an xhr object\n   *\n   * @param {Object} xhr object to add the onResponse hook to\n   * @param {function} callback hook function for an xhr response\n   */\n\n  const addOnResponseHook = (xhr, callback) => {\n    if (!xhr._responseCallbackSet) {\n      xhr._responseCallbackSet = new Set();\n    }\n    xhr._responseCallbackSet.add(callback);\n  };\n  /**\n   * Removes a request hook on an xhr object, deletes the onRequest set if empty.\n   *\n   * @param {Object} xhr object to remove the onRequest hook from\n   * @param {function} callback hook function to remove\n   */\n\n  const removeOnRequestHook = (xhr, callback) => {\n    if (!xhr._requestCallbackSet) {\n      return;\n    }\n    xhr._requestCallbackSet.delete(callback);\n    if (!xhr._requestCallbackSet.size) {\n      delete xhr._requestCallbackSet;\n    }\n  };\n  /**\n   * Removes a response hook on an xhr object, deletes the onResponse set if empty.\n   *\n   * @param {Object} xhr object to remove the onResponse hook from\n   * @param {function} callback hook function to remove\n   */\n\n  const removeOnResponseHook = (xhr, callback) => {\n    if (!xhr._responseCallbackSet) {\n      return;\n    }\n    xhr._responseCallbackSet.delete(callback);\n    if (!xhr._responseCallbackSet.size) {\n      delete xhr._responseCallbackSet;\n    }\n  };\n  /**\n   * Whether the browser has built-in HLS support.\n   */\n\n  Vhs.supportsNativeHls = function () {\n    if (!document || !document.createElement) {\n      return false;\n    }\n    const video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n    if (!videojs.getTech('Html5').isSupported()) {\n      return false;\n    } // HLS manifests can go by many mime-types\n\n    const canPlay = [\n    // Apple santioned\n    'application/vnd.apple.mpegurl',\n    // Apple sanctioned for backwards compatibility\n    'audio/mpegurl',\n    // Very common\n    'audio/x-mpegurl',\n    // Very common\n    'application/x-mpegurl',\n    // Included for completeness\n    'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n    return canPlay.some(function (canItPlay) {\n      return /maybe|probably/i.test(video.canPlayType(canItPlay));\n    });\n  }();\n  Vhs.supportsNativeDash = function () {\n    if (!document || !document.createElement || !videojs.getTech('Html5').isSupported()) {\n      return false;\n    }\n    return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n  }();\n  Vhs.supportsTypeNatively = type => {\n    if (type === 'hls') {\n      return Vhs.supportsNativeHls;\n    }\n    if (type === 'dash') {\n      return Vhs.supportsNativeDash;\n    }\n    return false;\n  };\n  /**\n   * VHS is a source handler, not a tech. Make sure attempts to use it\n   * as one do not cause exceptions.\n   */\n\n  Vhs.isSupported = function () {\n    return videojs.log.warn('VHS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n  };\n  /**\n   * A global function for setting an onRequest hook\n   *\n   * @param {function} callback for request modifiction\n   */\n\n  Vhs.xhr.onRequest = function (callback) {\n    addOnRequestHook(Vhs.xhr, callback);\n  };\n  /**\n   * A global function for setting an onResponse hook\n   *\n   * @param {callback} callback for response data retrieval\n   */\n\n  Vhs.xhr.onResponse = function (callback) {\n    addOnResponseHook(Vhs.xhr, callback);\n  };\n  /**\n   * Deletes a global onRequest callback if it exists\n   *\n   * @param {function} callback to delete from the global set\n   */\n\n  Vhs.xhr.offRequest = function (callback) {\n    removeOnRequestHook(Vhs.xhr, callback);\n  };\n  /**\n   * Deletes a global onResponse callback if it exists\n   *\n   * @param {function} callback to delete from the global set\n   */\n\n  Vhs.xhr.offResponse = function (callback) {\n    removeOnResponseHook(Vhs.xhr, callback);\n  };\n  const Component = videojs.getComponent('Component');\n  /**\n   * The Vhs Handler object, where we orchestrate all of the parts\n   * of VHS to interact with video.js\n   *\n   * @class VhsHandler\n   * @extends videojs.Component\n   * @param {Object} source the soruce object\n   * @param {Tech} tech the parent tech object\n   * @param {Object} options optional and required options\n   */\n\n  class VhsHandler extends Component {\n    constructor(source, tech, options) {\n      super(tech, options.vhs); // if a tech level `initialBandwidth` option was passed\n      // use that over the VHS level `bandwidth` option\n\n      if (typeof options.initialBandwidth === 'number') {\n        this.options_.bandwidth = options.initialBandwidth;\n      }\n      this.logger_ = logger('VhsHandler'); // we need access to the player in some cases,\n      // so, get it from Video.js via the `playerId`\n\n      if (tech.options_ && tech.options_.playerId) {\n        const _player = videojs.getPlayer(tech.options_.playerId);\n        this.player_ = _player;\n      }\n      this.tech_ = tech;\n      this.source_ = source;\n      this.stats = {};\n      this.ignoreNextSeekingEvent_ = false;\n      this.setOptions_();\n      if (this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n        tech.overrideNativeAudioTracks(true);\n        tech.overrideNativeVideoTracks(true);\n      } else if (this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n        // overriding native VHS only works if audio tracks have been emulated\n        // error early if we're misconfigured\n        throw new Error('Overriding native VHS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n      } // listen for fullscreenchange events for this player so that we\n      // can adjust our quality selection quickly\n\n      this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], event => {\n        const fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n        if (fullscreenElement && fullscreenElement.contains(this.tech_.el())) {\n          this.playlistController_.fastQualityChange_();\n        } else {\n          // When leaving fullscreen, since the in page pixel dimensions should be smaller\n          // than full screen, see if there should be a rendition switch down to preserve\n          // bandwidth.\n          this.playlistController_.checkABR_();\n        }\n      });\n      this.on(this.tech_, 'seeking', function () {\n        if (this.ignoreNextSeekingEvent_) {\n          this.ignoreNextSeekingEvent_ = false;\n          return;\n        }\n        this.setCurrentTime(this.tech_.currentTime());\n      });\n      this.on(this.tech_, 'error', function () {\n        // verify that the error was real and we are loaded\n        // enough to have pc loaded.\n        if (this.tech_.error() && this.playlistController_) {\n          this.playlistController_.pauseLoading();\n        }\n      });\n      this.on(this.tech_, 'play', this.play);\n    }\n    /**\n     * Set VHS options based on options from configuration, as well as partial\n     * options to be passed at a later time.\n     *\n     * @param {Object} options A partial chunk of config options\n     */\n\n    setOptions_(options = {}) {\n      this.options_ = merge(this.options_, options); // defaults\n\n      this.options_.withCredentials = this.options_.withCredentials || false;\n      this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n      this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false;\n      this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n      this.options_.useForcedSubtitles = this.options_.useForcedSubtitles || false;\n      this.options_.useNetworkInformationApi = this.options_.useNetworkInformationApi || false;\n      this.options_.useDtsForTimestampOffset = this.options_.useDtsForTimestampOffset || false;\n      this.options_.customTagParsers = this.options_.customTagParsers || [];\n      this.options_.customTagMappers = this.options_.customTagMappers || [];\n      this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n      this.options_.llhls = this.options_.llhls === false ? false : true;\n      this.options_.bufferBasedABR = this.options_.bufferBasedABR || false;\n      if (typeof this.options_.playlistExclusionDuration !== 'number') {\n        this.options_.playlistExclusionDuration = 60;\n      }\n      if (typeof this.options_.bandwidth !== 'number') {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          const storedObject = getVhsLocalStorage();\n          if (storedObject && storedObject.bandwidth) {\n            this.options_.bandwidth = storedObject.bandwidth;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'vhs-bandwidth-from-local-storage'\n            });\n          }\n          if (storedObject && storedObject.throughput) {\n            this.options_.throughput = storedObject.throughput;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'vhs-throughput-from-local-storage'\n            });\n          }\n        }\n      } // if bandwidth was not set by options or pulled from local storage, start playlist\n      // selection at a reasonable bandwidth\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n      } // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n      ['withCredentials', 'useDevicePixelRatio', 'customPixelRatio', 'limitRenditionByPlayerDimensions', 'bandwidth', 'customTagParsers', 'customTagMappers', 'cacheEncryptionKeys', 'playlistSelector', 'initialPlaylistSelector', 'bufferBasedABR', 'liveRangeSafeTimeDelta', 'llhls', 'useForcedSubtitles', 'useNetworkInformationApi', 'useDtsForTimestampOffset', 'exactManifestTimings', 'leastPixelDiffSelector'].forEach(option => {\n        if (typeof this.source_[option] !== 'undefined') {\n          this.options_[option] = this.source_[option];\n        }\n      });\n      this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n      this.useDevicePixelRatio = this.options_.useDevicePixelRatio;\n      const customPixelRatio = this.options_.customPixelRatio; // Ensure the custom pixel ratio is a number greater than or equal to 0\n\n      if (typeof customPixelRatio === 'number' && customPixelRatio >= 0) {\n        this.customPixelRatio = customPixelRatio;\n      }\n    } // alias for public method to set options\n\n    setOptions(options = {}) {\n      this.setOptions_(options);\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n    src(src, type) {\n      // do nothing if the src is falsey\n      if (!src) {\n        return;\n      }\n      this.setOptions_(); // add main playlist controller options\n\n      this.options_.src = expandDataUri(this.source_.src);\n      this.options_.tech = this.tech_;\n      this.options_.externVhs = Vhs;\n      this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update the tech\n\n      this.options_.seekTo = time => {\n        this.tech_.setCurrentTime(time);\n      }; // pass player to allow for player level eventing on construction.\n\n      this.options_.player_ = this.player_;\n      this.playlistController_ = new PlaylistController(this.options_);\n      const playbackWatcherOptions = merge({\n        liveRangeSafeTimeDelta: SAFE_TIME_DELTA\n      }, this.options_, {\n        seekable: () => this.seekable(),\n        media: () => this.playlistController_.media(),\n        playlistController: this.playlistController_\n      });\n      this.playbackWatcher_ = new PlaybackWatcher(playbackWatcherOptions);\n      this.attachStreamingEventListeners_();\n      this.playlistController_.on('error', () => {\n        const player = videojs.players[this.tech_.options_.playerId];\n        let error = this.playlistController_.error;\n        if (typeof error === 'object' && !error.code) {\n          error.code = 3;\n        } else if (typeof error === 'string') {\n          error = {\n            message: error,\n            code: 3\n          };\n        }\n        player.error(error);\n      });\n      const defaultSelector = this.options_.bufferBasedABR ? Vhs.movingAverageBandwidthSelector(0.55) : Vhs.STANDARD_PLAYLIST_SELECTOR; // `this` in selectPlaylist should be the VhsHandler for backwards\n      // compatibility with < v2\n\n      this.playlistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : defaultSelector.bind(this);\n      this.playlistController_.selectInitialPlaylist = Vhs.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n      this.playlists = this.playlistController_.mainPlaylistLoader_;\n      this.mediaSource = this.playlistController_.mediaSource; // Proxy assignment of some properties to the main playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get() {\n            return this.playlistController_.selectPlaylist;\n          },\n          set(selectPlaylist) {\n            this.playlistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get() {\n            return this.playlistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set(throughput) {\n            this.playlistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n\n            this.playlistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get() {\n            let playerBandwidthEst = this.playlistController_.mainSegmentLoader_.bandwidth;\n            const networkInformation = window.navigator.connection || window.navigator.mozConnection || window.navigator.webkitConnection;\n            const tenMbpsAsBitsPerSecond = 10e6;\n            if (this.options_.useNetworkInformationApi && networkInformation) {\n              // downlink returns Mbps\n              // https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/downlink\n              const networkInfoBandwidthEstBitsPerSec = networkInformation.downlink * 1000 * 1000; // downlink maxes out at 10 Mbps. In the event that both networkInformationApi and the player\n              // estimate a bandwidth greater than 10 Mbps, use the larger of the two estimates to ensure that\n              // high quality streams are not filtered out.\n\n              if (networkInfoBandwidthEstBitsPerSec >= tenMbpsAsBitsPerSecond && playerBandwidthEst >= tenMbpsAsBitsPerSecond) {\n                playerBandwidthEst = Math.max(playerBandwidthEst, networkInfoBandwidthEstBitsPerSec);\n              } else {\n                playerBandwidthEst = networkInfoBandwidthEstBitsPerSec;\n              }\n            }\n            return playerBandwidthEst;\n          },\n          set(bandwidth) {\n            this.playlistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n\n            this.playlistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get() {\n            const invBandwidth = 1 / (this.bandwidth || 1);\n            let invThroughput;\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n            const systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n            return systemBitrate;\n          },\n          set() {\n            videojs.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n      if (this.options_.bandwidth) {\n        this.bandwidth = this.options_.bandwidth;\n      }\n      if (this.options_.throughput) {\n        this.throughput = this.options_.throughput;\n      }\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: () => this.bandwidth || 0,\n          enumerable: true\n        },\n        mediaRequests: {\n          get: () => this.playlistController_.mediaRequests_() || 0,\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: () => this.playlistController_.mediaRequestsAborted_() || 0,\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: () => this.playlistController_.mediaRequestsTimedout_() || 0,\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: () => this.playlistController_.mediaRequestsErrored_() || 0,\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: () => this.playlistController_.mediaTransferDuration_() || 0,\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: () => this.playlistController_.mediaBytesTransferred_() || 0,\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: () => this.playlistController_.mediaSecondsLoaded_() || 0,\n          enumerable: true\n        },\n        mediaAppends: {\n          get: () => this.playlistController_.mediaAppends_() || 0,\n          enumerable: true\n        },\n        mainAppendsToLoadedData: {\n          get: () => this.playlistController_.mainAppendsToLoadedData_() || 0,\n          enumerable: true\n        },\n        audioAppendsToLoadedData: {\n          get: () => this.playlistController_.audioAppendsToLoadedData_() || 0,\n          enumerable: true\n        },\n        appendsToLoadedData: {\n          get: () => this.playlistController_.appendsToLoadedData_() || 0,\n          enumerable: true\n        },\n        timeToLoadedData: {\n          get: () => this.playlistController_.timeToLoadedData_() || 0,\n          enumerable: true\n        },\n        buffered: {\n          get: () => timeRangesToArray(this.tech_.buffered()),\n          enumerable: true\n        },\n        currentTime: {\n          get: () => this.tech_.currentTime(),\n          enumerable: true\n        },\n        currentSource: {\n          get: () => this.tech_.currentSource_,\n          enumerable: true\n        },\n        currentTech: {\n          get: () => this.tech_.name_,\n          enumerable: true\n        },\n        duration: {\n          get: () => this.tech_.duration(),\n          enumerable: true\n        },\n        main: {\n          get: () => this.playlists.main,\n          enumerable: true\n        },\n        playerDimensions: {\n          get: () => this.tech_.currentDimensions(),\n          enumerable: true\n        },\n        seekable: {\n          get: () => timeRangesToArray(this.tech_.seekable()),\n          enumerable: true\n        },\n        timestamp: {\n          get: () => Date.now(),\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: () => this.tech_.getVideoPlaybackQuality(),\n          enumerable: true\n        }\n      });\n      this.tech_.one('canplay', this.playlistController_.setupFirstPlay.bind(this.playlistController_));\n      this.tech_.on('bandwidthupdate', () => {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          updateVhsLocalStorage({\n            bandwidth: this.bandwidth,\n            throughput: Math.round(this.throughput)\n          });\n        }\n      });\n      this.playlistController_.on('selectedinitialmedia', () => {\n        // Add the manual rendition mix-in to VhsHandler\n        renditionSelectionMixin(this);\n      });\n      this.playlistController_.sourceUpdater_.on('createdsourcebuffers', () => {\n        this.setupEme_();\n      }); // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n\n      this.on(this.playlistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      }); // In the live case, we need to ignore the very first `seeking` event since\n      // that will be the result of the seek-to-live behavior\n\n      this.on(this.playlistController_, 'firstplay', function () {\n        this.ignoreNextSeekingEvent_ = true;\n      });\n      this.setupQualityLevels_(); // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n\n      if (!this.tech_.el()) {\n        return;\n      }\n      this.mediaSourceUrl_ = window.URL.createObjectURL(this.playlistController_.mediaSource);\n      this.tech_.src(this.mediaSourceUrl_);\n    }\n    createKeySessions_() {\n      const audioPlaylistLoader = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n      this.logger_('waiting for EME key session creation');\n      waitForKeySessionCreation({\n        player: this.player_,\n        sourceKeySystems: this.source_.keySystems,\n        audioMedia: audioPlaylistLoader && audioPlaylistLoader.media(),\n        mainPlaylists: this.playlists.main.playlists\n      }).then(() => {\n        this.logger_('created EME key session');\n        this.playlistController_.sourceUpdater_.initializedEme();\n      }).catch(err => {\n        this.logger_('error while creating EME key session', err);\n        this.player_.error({\n          message: 'Failed to initialize media keys for EME',\n          code: 3\n        });\n      });\n    }\n    handleWaitingForKey_() {\n      // If waitingforkey is fired, it's possible that the data that's necessary to retrieve\n      // the key is in the manifest. While this should've happened on initial source load, it\n      // may happen again in live streams where the keys change, and the manifest info\n      // reflects the update.\n      //\n      // Because videojs-contrib-eme compares the PSSH data we send to that of PSSH data it's\n      // already requested keys for, we don't have to worry about this generating extraneous\n      // requests.\n      this.logger_('waitingforkey fired, attempting to create any new key sessions');\n      this.createKeySessions_();\n    }\n    /**\n     * If necessary and EME is available, sets up EME options and waits for key session\n     * creation.\n     *\n     * This function also updates the source updater so taht it can be used, as for some\n     * browsers, EME must be configured before content is appended (if appending unencrypted\n     * content before encrypted content).\n     */\n\n    setupEme_() {\n      const audioPlaylistLoader = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n      const didSetupEmeOptions = setupEmeOptions({\n        player: this.player_,\n        sourceKeySystems: this.source_.keySystems,\n        media: this.playlists.media(),\n        audioMedia: audioPlaylistLoader && audioPlaylistLoader.media()\n      });\n      this.player_.tech_.on('keystatuschange', e => {\n        this.playlistController_.updatePlaylistByKeyStatus(e.keyId, e.status);\n      });\n      this.handleWaitingForKey_ = this.handleWaitingForKey_.bind(this);\n      this.player_.tech_.on('waitingforkey', this.handleWaitingForKey_);\n      if (!didSetupEmeOptions) {\n        // If EME options were not set up, we've done all we could to initialize EME.\n        this.playlistController_.sourceUpdater_.initializedEme();\n        return;\n      }\n      this.createKeySessions_();\n    }\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n    setupQualityLevels_() {\n      const player = videojs.players[this.tech_.options_.playerId]; // if there isn't a player or there isn't a qualityLevels plugin\n      // or qualityLevels_ listeners have already been setup, do nothing.\n\n      if (!player || !player.qualityLevels || this.qualityLevels_) {\n        return;\n      }\n      this.qualityLevels_ = player.qualityLevels();\n      this.playlistController_.on('selectedinitialmedia', () => {\n        handleVhsLoadedMetadata(this.qualityLevels_, this);\n      });\n      this.playlists.on('mediachange', () => {\n        handleVhsMediaChange(this.qualityLevels_, this.playlists);\n      });\n    }\n    /**\n     * return the version\n     */\n\n    static version() {\n      return {\n        '@videojs/http-streaming': version$4,\n        'mux.js': version$3,\n        'mpd-parser': version$2,\n        'm3u8-parser': version$1,\n        'aes-decrypter': version\n      };\n    }\n    /**\n     * return the version\n     */\n\n    version() {\n      return this.constructor.version();\n    }\n    canChangeType() {\n      return SourceUpdater.canChangeType();\n    }\n    /**\n     * Begin playing the video.\n     */\n\n    play() {\n      this.playlistController_.play();\n    }\n    /**\n     * a wrapper around the function in PlaylistController\n     */\n\n    setCurrentTime(currentTime) {\n      this.playlistController_.setCurrentTime(currentTime);\n    }\n    /**\n     * a wrapper around the function in PlaylistController\n     */\n\n    duration() {\n      return this.playlistController_.duration();\n    }\n    /**\n     * a wrapper around the function in PlaylistController\n     */\n\n    seekable() {\n      return this.playlistController_.seekable();\n    }\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n    dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n      if (this.playlistController_) {\n        this.playlistController_.dispose();\n      }\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n      if (this.tech_ && this.tech_.vhs) {\n        delete this.tech_.vhs;\n      }\n      if (this.mediaSourceUrl_ && window.URL.revokeObjectURL) {\n        window.URL.revokeObjectURL(this.mediaSourceUrl_);\n        this.mediaSourceUrl_ = null;\n      }\n      if (this.tech_) {\n        this.tech_.off('waitingforkey', this.handleWaitingForKey_);\n      }\n      super.dispose();\n    }\n    convertToProgramTime(time, callback) {\n      return getProgramTime({\n        playlist: this.playlistController_.media(),\n        time,\n        callback\n      });\n    } // the player must be playing before calling this\n\n    seekToProgramTime(programTime, callback, pauseAfterSeek = true, retryCount = 2) {\n      return seekToProgramTime({\n        programTime,\n        playlist: this.playlistController_.media(),\n        retryCount,\n        pauseAfterSeek,\n        seekTo: this.options_.seekTo,\n        tech: this.options_.tech,\n        callback\n      });\n    }\n    /**\n     * Adds the onRequest, onResponse, offRequest and offResponse functions\n     * to the VhsHandler xhr Object.\n     */\n\n    setupXhrHooks_() {\n      /**\n       * A player function for setting an onRequest hook\n       *\n       * @param {function} callback for request modifiction\n       */\n      this.xhr.onRequest = callback => {\n        addOnRequestHook(this.xhr, callback);\n      };\n      /**\n       * A player function for setting an onResponse hook\n       *\n       * @param {callback} callback for response data retrieval\n       */\n\n      this.xhr.onResponse = callback => {\n        addOnResponseHook(this.xhr, callback);\n      };\n      /**\n       * Deletes a player onRequest callback if it exists\n       *\n       * @param {function} callback to delete from the player set\n       */\n\n      this.xhr.offRequest = callback => {\n        removeOnRequestHook(this.xhr, callback);\n      };\n      /**\n       * Deletes a player onResponse callback if it exists\n       *\n       * @param {function} callback to delete from the player set\n       */\n\n      this.xhr.offResponse = callback => {\n        removeOnResponseHook(this.xhr, callback);\n      }; // Trigger an event on the player to notify the user that vhs is ready to set xhr hooks.\n      // This allows hooks to be set before the source is set to vhs when handleSource is called.\n\n      this.player_.trigger('xhr-hooks-ready');\n    }\n    attachStreamingEventListeners_() {\n      const playlistControllerEvents = ['seekablerangeschanged', 'bufferedrangeschanged', 'contentsteeringloadstart', 'contentsteeringloadcomplete', 'contentsteeringparsed'];\n      const playbackWatcher = ['gapjumped', 'playedrangeschanged']; // re-emit streaming events and payloads on the player.\n\n      playlistControllerEvents.forEach(eventName => {\n        this.playlistController_.on(eventName, metadata => {\n          this.player_.trigger(_extends$1({}, metadata));\n        });\n      });\n      playbackWatcher.forEach(eventName => {\n        this.playbackWatcher_.on(eventName, metadata => {\n          this.player_.trigger(_extends$1({}, metadata));\n        });\n      });\n    }\n  }\n  /**\n   * The Source Handler object, which informs video.js what additional\n   * MIME types are supported and sets up playback. It is registered\n   * automatically to the appropriate tech based on the capabilities of\n   * the browser it is running in. It is not necessary to use or modify\n   * this object in normal usage.\n   */\n\n  const VhsSourceHandler = {\n    name: 'videojs-http-streaming',\n    VERSION: version$4,\n    canHandleSource(srcObj, options = {}) {\n      const localOptions = merge(videojs.options, options);\n      return VhsSourceHandler.canPlayType(srcObj.type, localOptions);\n    },\n    handleSource(source, tech, options = {}) {\n      const localOptions = merge(videojs.options, options);\n      tech.vhs = new VhsHandler(source, tech, localOptions);\n      tech.vhs.xhr = xhrFactory();\n      tech.vhs.setupXhrHooks_();\n      tech.vhs.src(source.src, source.type);\n      return tech.vhs;\n    },\n    canPlayType(type, options) {\n      const simpleType = simpleTypeFromSourceType(type);\n      if (!simpleType) {\n        return '';\n      }\n      const overrideNative = VhsSourceHandler.getOverrideNative(options);\n      const supportsTypeNatively = Vhs.supportsTypeNatively(simpleType);\n      const canUseMsePlayback = !supportsTypeNatively || overrideNative;\n      return canUseMsePlayback ? 'maybe' : '';\n    },\n    getOverrideNative(options = {}) {\n      const {\n        vhs = {}\n      } = options;\n      const defaultOverrideNative = !(videojs.browser.IS_ANY_SAFARI || videojs.browser.IS_IOS);\n      const {\n        overrideNative = defaultOverrideNative\n      } = vhs;\n      return overrideNative;\n    }\n  };\n  /**\n   * Check to see if the native MediaSource object exists and supports\n   * an MP4 container with both H.264 video and AAC-LC audio.\n   *\n   * @return {boolean} if  native media sources are supported\n   */\n\n  const supportsNativeMediaSources = () => {\n    return browserSupportsCodec('avc1.4d400d,mp4a.40.2');\n  }; // register source handlers with the appropriate techs\n\n  if (supportsNativeMediaSources()) {\n    videojs.getTech('Html5').registerSourceHandler(VhsSourceHandler, 0);\n  }\n  videojs.VhsHandler = VhsHandler;\n  videojs.VhsSourceHandler = VhsSourceHandler;\n  videojs.Vhs = Vhs;\n  if (!videojs.use) {\n    videojs.registerComponent('Vhs', Vhs);\n  }\n  videojs.options.vhs = videojs.options.vhs || {};\n  if (!videojs.getPlugin || !videojs.getPlugin('reloadSourceOnError')) {\n    videojs.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n  }\n\n  return videojs;\n\n}));\n"],"names":["global","factory","exports","module","define","amd","globalThis","self","videojs","this","hooks_","hooks","type","fn","concat","removeHook","index","indexOf","slice","splice","FullscreenApi","prefixed","apiMap","specApi","browserApi","i","length","document","history","log$1","createLogger$1","name","logByType","delimiter","arguments","undefined","styles","level","log","_len2","args","Array","_key2","LogByTypeFactory","lvl","levels","lvlRegExp","RegExp","resultName","unshift","toUpperCase","push","window","console","info","test","isArray","createLogger","subName","subDelimiter","subStyles","resultDelimiter","createNewLogger","newName","newDelimiter","newStyles","all","off","debug","warn","error","DEFAULT","hasOwnProperty","Error","filter","fname","historyItem","clear","disable","enable","_len3","_key3","_len4","_key4","_len5","_key5","toString$1","Object","prototype","toString","keys","object","isObject$1","each","forEach","key","reduce","initial","accum","value","isPlain","call","constructor","merge$2","result","_len6","sources","_key6","source","values$1","defineLazyProperty","obj","getValue","setter","set","defineProperty","enumerable","writable","options","configurable","get","Obj","freeze","__proto__","isObject","merge","values","ANDROID_VERSION","IS_IPOD","IOS_VERSION","IS_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROMIUM","IS_CHROME","CHROMIUM_VERSION","CHROME_VERSION","IS_CHROMECAST_RECEIVER","Boolean","cast","framework","CastReceiverContext","IE_VERSION","IS_SAFARI","IS_WINDOWS","IS_IPAD","IS_IPHONE","IS_TIZEN","IS_WEBOS","IS_SMART_TV","TOUCH_ENABLED","isReal","navigator","maxTouchPoints","DocumentTouch","UAD","userAgentData","platform","brands","find","b","brand","version","USER_AGENT","userAgent","match","major","parseFloat","minor","exec","IS_IOS","IS_ANY_SAFARI","browser","isNonBlankString","str","trim","isEl","nodeType","isInFrame","parent","x","createQuerier","method","selector","context","querySelector","ctx","createEl","tagName","properties","attributes","content","el","createElement","getOwnPropertyNames","propName","val","textContent","attrName","setAttribute","appendContent","text","innerText","prependTo","child","firstChild","insertBefore","appendChild","hasClass","element","classToCheck","throwIfWhitespace","classList","contains","addClass","_len7","classesToAdd","_key7","add","prev","current","split","removeClass","_len8","classesToRemove","_key8","remove","toggleClass","classToToggle","predicate","className","toggle","setAttributes","attrValue","removeAttribute","getAttributes","tag","knownBooleans","attrs","attrVal","includes","getAttribute","attribute","blockTextSelection","body","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","k","height","computedStyle","width","findPosition","offsetParent","left","top","offsetWidth","offsetHeight","fullscreenElement","offsetLeft","offsetTop","getPointerPosition","event","translated","y","item","nodeName","toLowerCase","transform","map","Number","assignedSlot","parentElement","WebKitCSSMatrix","transformValue","getComputedStyle","matrix","m41","m42","host","position","boxTarget","target","box","boxW","boxH","offsetY","offsetX","changedTouches","pageX","pageY","Math","max","min","isTextNode$1","emptyEl","removeChild","normalizeContent","createTextNode","node","insertContent","isSingleLeftClick","button","buttons","$","$$","prop","computedStyleValue","e","getPropertyValue","copyStyleSheetsToWindow","win","styleSheets","styleSheet","cssRules","rule","cssText","join","style","head","link","rel","media","mediaText","href","Dom","isTextNode","videojs$1","_windowLoaded","autoSetup","vids","getElementsByTagName","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","setTimeout","setWindowLoaded","removeEventListener","readyState","addEventListener","createStyleElement","setTextContent","DomData","WeakMap","_supportsPassive","_guid","newGUID","_cleanUpEvents","elem","has","data","handlers","dispatcher","detachEvent","disabled","delete","_handleMultipleEvents","types","callback","fixEvent","fixed_","returnTrue","returnFalse","isPropagationStopped","isImmediatePropagationStopped","old","deprecatedProps","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","clientX","doc","documentElement","scrollLeft","clientLeft","clientY","scrollTop","clientTop","which","charCode","keyCode","passiveEvents","on","guid","hash","handlersCopy","m","n","opts","supportsPassive","passive","attachEvent","removeType","t","trigger","elemData","ownerDocument","bubbles","targetData","one","func","apply","any","Events","bind_","uid","bound","bind","throttle","last","performance","now","debounce","immediate","timeout","debounced","later","clearTimeout","cancel","Fn","UPDATE_REFRESH_INTERVAL","EVENT_MAP","EventTarget$2","ael","allowedEvents_","queueTrigger","Map","oldTimeout","size","dispatchEvent","objName","name_","isEvented","eventBusEl_","every","isValidEventType","validateTarget","fnName","validateEventType","validateListener","listener","normalizeListenArgs","isTargetingSelf","shift","listen","EventedMixin","_len9","_key9","removeListenerOnDispose","removeRemoverOnTargetDispose","_this","_len10","_key10","wrapper","_len11","largs","_key11","_this2","_len12","_key12","_len13","_key13","targetOrType","typeOrListener","evented","eventBusKey","assign","eventedCallbacks","el_","StatefulMixin","state","setState","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","string","replace","w","toTitleCase$1","titleCaseEquals","str1","str2","Str","toTitleCase","Component$1","ready","play","player_","isDisposed_","parentComponent_","options_","id_","id","c","handleLanguagechange","children_","childIndex_","childNameIndex_","setTimeoutIds_","Set","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","dispose","readyQueue_","restoreEl","replaceChild","isDisposed","localize","tokens","defaultValue","code","language","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","children","getChildById","getChild","getDescendant","_len14","names","_key14","acc","currentChild","setIcon","iconName","experimentalSvgIcons","xmlnsURL","iconContainer","svgEl","createElementNS","setAttributeNS","useEl","iconIsSet_","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","parentOptions","handleAdd","playerOptions","newChild","workingChildren","Tech","some","wchild","isTech","buildCSSClass","sync","isReady_","triggerReady","readyQueue","_len15","_key15","_len16","_key16","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","parseInt","currentDimension","computedWidthOrHeight","isNaN","currentDimensions","currentWidth","currentHeight","getPositions","boundingClientRect","right","bottom","center","blur","handleKeyDown","spatialNavigation","enabled","handleKeyPress","emitTapEvents","touchStart","firstTouch","couldBeTap","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","interval","intervalId","requestAnimationFrame","requestNamedAnimationFrame","cancelNamedAnimationFrame","cancelAnimationFrame","_ref4","idName","cancelName","getIsDisabled","getIsExpresslyInert","inert","getIsFocusable","tabIndex","getIsAvailableToBeFocused","isVisibleStyleProperty","elementStyle","thisVisibility","elementCenter","clientWidth","innerWidth","clientHeight","innerHeight","pointContainer","elementFromPoint","isVisible","opacity","registerComponent","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","getRange","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","timeRangesObj","start","end","Symbol","iterator","createTimeRanges$1","defaultImplementation","seconds","guide","s","floor","h","gm","gh","Infinity","implementation","setFormatTime","customImplementation","resetFormatTime","formatTime","Time","createTimeRanges","createTimeRange","bufferedPercent","buffered","duration","bufferedDuration","MediaError","message","defaultMessages","status","metadata","errorTypes","MEDIA_ERR_CUSTOM","MEDIA_ERR_ABORTED","MEDIA_ERR_NETWORK","MEDIA_ERR_DECODE","MEDIA_ERR_SRC_NOT_SUPPORTED","MEDIA_ERR_ENCRYPTED","tuple","reviver","json","JSON","parse","err","isPromise","then","silencePromise","trackToJson_","track","cues","cue","startTime","endTime","textTrackConverter","tech","trackEls","trackObjs","trackEl","src","textTracks","addedTrack","addRemoteTextTrack","addCue","ModalDialog","super","handleKeyDown_","close_","close","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","label","previouslyActiveEl_","desc","open","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","originalEvent","focusableEls","focusableEls_","focusIndex","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","tracks","tracks_","addTrack","labelchange_","removeTrack","rtrack","l","getTrackById","change","addtrack","removetrack","labelchange","disableOthers$1","list","disableOthers","selected","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","translation","TextTrackKind","chapters","TextTrackMode","hidden","showing","Track","trackProps","newLabel","parseUrl","url","URL","baseURI","getAbsoluteURL","getFileExtension","path","pathParts","pop","isCrossOrigin","winLoc","location","origin","Url","commonjsGlobal","createCommonjsModule","window_1","_extends_1","_extends","r","__esModule","_extends$1","isFunction_1","alert","confirm","prompt","_createForOfIteratorHelperLoose","o","allowArrayLike","it","next","minLen","_arrayLikeToArray","_unsupportedIterableToArray","done","TypeError","arr","len","arr2","interceptors","InterceptorsStorage","typeToInterceptorsMap_","enabled_","_proto","getIsEnabled","reset","addInterceptor","interceptor","interceptorsSet","removeInterceptor","clearInterceptorsByType","getForType","execute","payload","_step","_iterator","RetryManager","maxAttempts_","delayFactor_","fuzzFactor_","initialDelay_","getMaxAttempts","setMaxAttempts","maxAttempts","getDelayFactor","setDelayFactor","delayFactor","getFuzzFactor","setFuzzFactor","fuzzFactor","getInitialDelay","setInitialDelay","initialDelay","createRetry","_temp","_ref","Retry","currentDelay_","currentAttempt_","_proto2","moveToNextAttempt","delayDelta","shouldRetry","getCurrentDelay","getCurrentMinPossibleDelay","getCurrentMaxPossibleDelay","getCurrentFuzzedDelay","lowValue","highValue","random","retry","httpHandler","decodeResponseBody","response","responseBody","statusCode","cause","TextDecoder","charset","contentTypeHeader","contentType","_contentType$split","getCharset","headers","decode","String","fromCharCode","Uint8Array","createXHR","requestInterceptorsStorage","responseInterceptorsStorage","retryManager","parseHeaders","row","lib","default_1","initParams","uri","params","_createXHR","requestType","requestInterceptorPayload","updatedPayload","called","getBody","xhr","responseText","responseType","responseXML","firefoxBugTakenEffect","getXml","isJson","errorFunc","evt","timeoutTimer","retryTimeout","aborted","responseInterceptorPayload","failureResponse","responseUrl","responseURL","_updatedPayload","loadFunc","useXDR","rawRequest","getAllResponseHeaders","_updatedPayload2","cors","XDomainRequest","XMLHttpRequest","stringify","onreadystatechange","onload","onerror","onprogress","onabort","ontimeout","username","password","withCredentials","abort","setRequestHeader","isEmpty","beforeSend","send","array","forEachArray","default","parseCues","srcContent","parser","WebVTT","Parser","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","flush","loadTrack","crossOrigin","tech_","loaded_","TextTrack","settings","srclang","mode","default_","activeCues_","preload_","preloadTextTracks","activeCues","changed","timeupdateHandler","rvf_","requestVideoFrameCallback","disposeHandler","stopTracking","startTracking","defineProperties","newMode","ct","currentTime","active","cancelVideoFrameCallback","originalCue","VTTCue","originalCue_","removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","HTMLTrackElement","NONE","LOADED","load","LOADING","ERROR","NORMAL","audio","ListClass","changing_","enabledChange_","TrackClass","capitalName","video","selectedChange_","getterName","privateName","REMOTE","remoteText","remoteTextEl","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","ALL","doccy","topLevel","document_1","_objCreate","create","F","ParsingError","errorData","parseTimeStamp","input","computeSeconds","f","Settings","parseOptions","keyValueDelim","groupDelim","groups","kv","parseCue","regionList","oInput","consumeTimeStamp","ts","Errors","BadTimeStamp","skipWhitespace","substr","v","region","alt","vals","vals0","integer","percent","vertical","line","lineAlign","snapToLines","align","middle","positionAlign","consumeCueSettings","BadSignature","dflt","defaultKey","a","TEXTAREA_ELEMENT","TAG_NAME","u","ruby","rt","lang","DEFAULT_COLOR_CLASS","white","lime","cyan","red","yellow","magenta","blue","black","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","shouldAdd","localName","annotation","rootDiv","tagStack","innerHTML","createProcessingInstruction","classes","cl","bgColor","colorName","propValue","strongRTLRanges","isStrongRTLChar","currentRange","determineBidi","cueDiv","nodeStack","childNodes","pushNodes","nextTextNode","charCodeAt","StyleBox","CueStyleBox","styleOptions","color","backgroundColor","display","writingMode","unicodeBidi","applyStyles","div","direction","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","lh","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","trackList","count","computeLinePos","axis","step","round","maxPosition","initialAxis","abs","ceil","reverse","calculatedPercentage","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","p","intersectPercentage","findBestPosition","toCSSCompatValues","WebVTT$1","unit","toMove","overlaps","b2","boxes","container","reference","getSimpleBoxPosition","decodeURIComponent","encodeURIComponent","convertCueToDOMTree","cuetext","processCues","overlay","paddedOverlay","margin","hasBeenReset","displayState","shouldCompute","fontSize","decoder","buffer","reportOrThrowError","collectNextLine","pos","parseHeader","ontimestampmap","MPEGTS","LOCAL","parseTimestampMap","xy","anchor","VTTRegion","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseRegion","stream","alreadyCollectedLine","hasSubstring","vtt","directionSetting","lr","rl","alignSetting","auto","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","pauseOnExit","setting","findDirectionSetting","SyntaxError","getCueAsHTML","vttcue","scrollSetting","up","isValidPercentValue","vttregion","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","findScrollSetting","browserIndex","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","onDurationChange_","onDurationChange","trackProgress_","trackProgress","trackCurrentTime_","trackCurrentTime","stopTrackingCurrentTime_","stopTrackingCurrentTime","disposeSourceHandler_","disposeSourceHandler","queuedHanders_","hasStarted_","props","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","manualProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","setCrossOrigin","error_","played","setScrubbing","_isScrubbing","scrubbing","setCurrentTime","_seconds","trackListChanges","addWebVttScript_","script","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","manualCleanup","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","requestPictureInPicture","Promise","reject","disablePictureInPicture","setDisablePictureInPicture","cb","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","override","overrideNativeVideoTracks","canPlayType","_type","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","featuresVideoFrameCallback","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","setSourceHelper","mediate","middleware","arg","callMethod","middlewareValue","middlewareIterator","terminated","mws","mw","executeRight","allowedGetters","muted","seekable","volume","ended","allowedSetters","setMuted","setVolume","allowedMediators","lastRun","mwFactory","mwrest","mwf","mwi","getOrCreateFactory","_src","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","m4a","mp3","aac","caf","flac","oga","wav","m3u8","mpd","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","filterSource","newsrc","srcobj","fixSource","mimetype","backKeyCode","SpatialNavKeyCodes","codes","ff","rw","back","isEventKey","keyName","getEventName","SpatialNavigation","focusableComponents","isListening_","isPaused_","onKeyDown_","lastFocusedComponent_","updateFocusableComponents","refocusComponent","handlePlayerFocus_","handlePlayerBlur_","errorDisplay","stop","actualEvent","substring","action","performMediaAction_","userSeek_","liveTracker","isLive","nextSeekedFromUser","resume","nextFocusedElement","isChildrenOfPlayer","currentComponent","getCurrentComponent","closest","searchForTrackSelect_","currentTarget","searchForChildrenCandidates","componentsArray","items","findSuitableDOMChild","buttonContainer","searchForSuitableChild","suitableChild","curComp","currentFocusedComponent","currentPositions","candidates","isInDirection_","bestCandidate","findBestCandidate_","focusedComponent","currentCenter","minDistance","candidate","candidateCenter","distance","calculateDistance_","srcRect","targetRect","userActive","center1","center2","dx","dy","j","techOrder","techName","isSupported","loadTech_","ClickableComponent","handleMouseOver_","handleMouseOver","handleMouseOut_","handleMouseOut","handleClick_","handleClick","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","noUITitleAttributes","clickHandler","PosterImage","update","update_","crossorigin","poster","setSrc","loading","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","hex","tryUpdateStyle","getCSSPositionValue","updateDisplayHandler","updateDisplayOverlay","toggleDisplay","preselectTrack","screenOrientation","screen","orientation","changeOrientationEvent","modes","userPref","cache_","selectedLanguage","firstDesc","firstCaptions","preferredTrack","translate","clearDisplay","allowMultipleShowingTracks","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","videoHeight","CSS","supports","playerWidth","playerHeight","playerAspectRatio","videoAspectRatio","videoWidth","insetInlineMatch","insetBlockMatch","updateDisplayState","overrides","textTrackSettings","getValues","textOpacity","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontFamily","fontVariant","cueEl","isAudio","playerType","dir","Button","BigPlayButton","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","TimeDisplay","updateTextNode_","span","labelText_","textNode_","enableSmoothSeeking","updateContent","time","formattedTime_","oldNode","CurrentTimeDisplay","getCache","DurationDisplay","RemainingTimeDisplay","displayNegative","remainingTimeDisplay","remainingTime","updateShowing","SeekToLive","updateLiveEdgeStatus","updateLiveEdgeStatusHandler_","textEl_","atLiveEdge","seekToLiveEdge","clamp","number","Num","Slider","handleMouseDown_","handleMouseUp_","handleMouseUp","handleMouseMove_","handleMouseMove","bar","barName","playerEvent","progress","getProgress","progress_","sizeKey","toFixed","getPercent","calculateDistance","spatialNavOptions","spatialNavEnabled","horizontalSeek","stepBack","stepForward","bool","vertical_","percentify","partEls_","loadedText","separator","percentageEl_","seekableEnd","bufferedEnd","percent_","part","dataset","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","write","updateTime","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","SeekBar","setEventHandlers_","updateInterval","enableIntervalHandler_","enableInterval_","disableIntervalHandler_","disableInterval_","toggleVisibility_","visibilityState","getCurrentTime_","liveCurrentTime","currentTime_","seekableStart","videoWasPlaying","newTime","mouseDown","mouseTimeDisplay","handleAction","gotoFraction","STEP_SECONDS","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","handleMouseUpHandler_","handleMouseDownHandler_","seekBar","playProgressBar","seekBarEl","removeListenersAddedOnMousedownAndTouchstart","PictureInPictureToggle","handlePictureInPictureChange","handlePictureInPictureEnabledChange","handlePictureInPictureAudioModeChange","currentType","audioPosterMode","audioOnlyMode","isInPictureInPicture","exitPictureInPicture","pictureInPictureEnabled","enableDocumentPictureInPicture","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","rangeBarRect","rangeBarPoint","volumeBarPointPx","updateVolume","MouseVolumeLevelDisplay","VolumeBar","updateLastVolume_","updateARIAAttributes","mouseVolumeLevelDisplay","volumeBarEl","volumeBarRect","volumeBarPoint","checkMuted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","checkVolumeSupport","throttledHandleMouseMove","orientationClass","MuteToggle","checkMuteSupport","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","handleKeyPressHandler_","volumePanelState_","muteToggle","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","SkipForward","validOptions","skipTime","getSkipForwardTime","toLocaleString","controlBar","skipButtons","forward","currentVideoTime","SkipBackward","getSkipBackwardTime","backward","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","MenuButton","buttonClass","handleMenuKeyUp_","handleMenuKeyUp","menu","handleMouseLeave","handleSubmenuKeyDown","createMenu","hideThreshold_","title","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","updateHandler","MenuItem","selectable","isSelected_","multiSelectable","menuItemEl","TextTrackMenuItem","_this3","kinds","changeHandler","_len17","_key17","handleTracksChange","selectedLanguageChangeHandler","_len18","_key18","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","allHidden","TextTrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","selectCurrentItem_","track_","findChaptersTrack","setTrack","updateHandler_","remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","parentSpan","SubsCapsButton","language_","AudioTrackMenuItem","_this4","audioTracks","_len19","_key19","featuresNativeAudioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","labelElId_","updateVisibility","updateLabel","handlePlaybackRateschange","labelEl_","rates","playbackRates","playbackRateSupported","Spacer","ControlBar","ErrorDisplay","TextTrackSelect","selectLabelledbyIds","legendId","labelId","SelectOptions","optionText","optionId","option","TextTrackFieldset","legendElement","legendText","selects","selectConfig","selectConfigs","selectClassName","textTrackSelect","TextTrackSettingsColors","textTrackComponentid","ElFgColorFieldset","fieldSets","ElBgColorFieldset","ElWinColorFieldset","TextTrackSettingsFont","TrackSettingsControls","defaultsDescription","resetButton","doneButton","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","parseOptionValue","renderModalComponents","endDialog","setDefaults","persistTextTrackSettings","bindFunctionsToSelectsAndButtons","restoreSettings","textTrackSettingsColors","textTrackSettingsFont","trackSettingsControls","saveSettings","config","selectedIndex","setValues","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","defaults$1","trackingThreshold","liveTolerance","trackLiveHandler_","trackLive_","handlePlay_","handleFirstTimeupdate_","handleFirstTimeupdate","handleSeeked_","seekToLiveEdge_","reset_","handleDurationchange","toggleTracking","deltaTime","lastTime_","pastSeekEnd_","pastSeekEnd","isBehind","seekedBehindLive_","timeupdateSeen_","behindLiveEdge_","liveui","isTracking","hasStarted","trackingInterval_","timeDiff","nextSeekedFromUser_","lastSeekEnd_","seekableEnds","sort","seekableStarts","behindLiveEdge","updateDom_","els","techEl","techAriaAttrs","techAriaAttr","defaults","initialDisplay","takeFocus","class","preventScroll","forceDisplayTimeout","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","Element","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","getInnerHTMLDescriptor","appendWrapper","appendFn","_len20","_key20","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","isScrubbing_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","listeners","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","fastSeek","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","nativeIOSFullscreen","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitDisplayingFullscreen","webkitExitFullScreen","webkitKeys","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","TEST_VID","canControlVolume","canControl","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","_ref5","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","charAt","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","boundUpdateStyleEl_","updateStyleEl_","boundApplyInitTime_","applyInitTime_","boundUpdateCurrentBreakpoint_","updateCurrentBreakpoint_","boundHandleTechClick_","handleTechClick_","boundHandleTechDoubleClick_","handleTechDoubleClick_","boundHandleTechTouchStart_","handleTechTouchStart_","boundHandleTechTouchMove_","handleTechTouchMove_","boundHandleTechTouchEnd_","handleTechTouchEnd_","boundHandleTechTap_","handleTechTap_","boundUpdatePlayerHeightOnAudioOnlyMode_","updatePlayerHeightOnAudioOnlyMode_","isFullscreen_","isPosterFromTech_","queuedCallbacks_","userActive_","debugEnabled_","audioOnlyMode_","audioPosterMode_","audioOnlyCache_","controlBarHeight","hiddenChildren","tagAttributes","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fullscreenchange","fluid_","playerOptionsCopy","middleware_","parsedSVG","DOMParser","parseFromString","sprite","majorVersion","listenForUserActivity_","breakpoints","responsive","styleEl_","playerElIngest_","divEmbed","tabindex","deviceClassNames","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","fill_","fluid","aspectRatio","links","linkEl","techGet_","techCall_","posterImage","privDimension","parsedVal","addEventedCallback","ratio","aspectRatio_","width_","height_","idClass","ratioParts","ratioMultiplier","unloadTech_","titleTechName","camelTechName","techName_","normalizeAutoplay","techOptions","loop","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","safety","removeTechControlsListeners_","manualAutoplay_","resolveMuted","previouslyMuted","restoreMuted","mutedPromise","catch","promise","updateSourceCaches_","findMimetype","matchingSources","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","techSrc","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","userActions","click","doubleClick","userWasActive","cancelable","toggleFullscreenClass_","targetPlayer","isFs","matches","fullscreen","togglePictureInPictureClass_","initTime","inactivityTimeout","defaultPlaybackRate","reduceRight","resolve","play_","isSrcReady","isSafariOrIOS","waitToPlay_","resetProgressBar_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","callbacks","isFinite","percentAsDecimal","defaultMuted","isFS","oldValue","fullscreenOptions","offHandler","errorHandler","requestFullscreenHelper_","fsOptions","preferFullWindow","enterFullWindow","exitFullscreenHelper_","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","documentPictureInPicture","pipContainer","titleBar","requestWindow","pipWindow","pipVideo","hotkeys","isContentEditable","excludeElement","handleHotkeys","fullscreenKey","keydownEvent","muteKey","playPauseKey","FSToggle","selectSource","techs","_ref6","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","foundSourceAndTech","finder","_ref7","sourceOrder","handleSrc_","isRetry","resetRetryOnError_","middlewareSource","src_","notSupportedMessage","setTech","stopListeningForErrors","sourceTech","vhs","doReset_","resetControlBarUI_","resetPlaybackRate_","resetVolumeBar_","currentTimeDisplay","durationDisplay","progressControl","loadProgressBar","currentSources","techAutoplay","newPoster","usingNativeControls_","hookFunction","newErr","suppressNotSupportedError","triggerSuppressedError","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","handleMouseUpAndMouseLeave","screenX","screenY","isAudio_","enableAudioOnlyUI_","playerChildren","disableAudioOnlyUI_","exitPromises","enablePosterModeUI_","disablePosterModeUI_","toJSON","createModal","modal","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","responsive_","loadMedia","artist","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","childName","previousLogLevel_","newRates","html5","userLanguage","navigationUI","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","instance","_len21","_key21","getEventHash","Plugin","VERSION","isBasic","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","deprecateForMajor","oldName","warned","_len22","_key22","deprecate","BASE_PLUGIN_NAME","usingPlugin","hasPlugin","normalizeId","getPlayer","rootNode","getRootNode","ShadowRoot","defaultView","PlayerComponent","hook","hookOnce","original","getPlayers","nId","getAllPlayers","comp","use","writeable","mergeOptions","addLanguage","EventTarget","dom","NetworkBadStatus","NetworkRequestFailed","NetworkRequestAborted","NetworkRequestTimeout","NetworkBodyParserFailed","StreamingHlsPlaylistParserError","StreamingDashManifestParserError","StreamingContentSteeringParserError","StreamingVttParserError","StreamingFailedToSelectNextSegment","StreamingFailedToDecryptSegment","StreamingFailedToTransmuxSegment","StreamingFailedToAppendSegment","StreamingCodecsChangeError","_interopDefaultLegacy","videojs__default","QualityLevel","representation","bitrate","bandwidth","frameRate","QualityLevelList","levels_","selectedIndex_","addQualityLevel","qualityLevel","getQualityLevelById","removeQualityLevel","removed","addqualitylevel","removequalitylevel","initPlugin","originalPluginFn","qualityLevels","qualityLevelList","urlToolkit","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","buildAbsoluteURL","baseURL","relativeURL","alwaysNormalize","basePartsForNormalise","parseURL","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","builtParts","query","fragment","baseURLPath","newPath","lastIndexOf","parts","resolveUrl$1","baseUrl","relativeUrl","nativeURL","protocolLess","removeLocation","newUrl","DEFAULT_LOCATION","protocol","Stream","_length","_i","pipe","destination","decodeB64ToUint8Array$1","b64Text","decodedString","atob","Buffer","LineStream","nextNewline","TAB","parseByterange","byterangeString","offset","parseAttributes$1","ParseStream","customParsers","tagMappers","mapper","mappedLine","newLine","tagType","playlistType","allowed","URI","BYTERANGE","byterange","RESOLUTION","resolution","BANDWIDTH","dateTimeString","dateTimeObject","Date","IV","Uint32Array","PRECISE","subkey","clientAttributePattern","isHexaDecimal","isDecimalFloating","addParser","_ref8","expression","customType","dataParser","segment","addTagMapper","_ref9","camelCaseKeys","setHoldBack","manifest","serverControl","targetDuration","partTargetDuration","hb","phb","minTargetDuration","minPartDuration","lineStream","parseStream","lastProgramDateTime","uris","currentMap","currentUri","hasParts","defaultMediaGroups","AUDIO","VIDEO","SUBTITLES","currentTimeline","allowCache","discontinuityStarts","dateRanges","segments","lastByterangeEnd","lastPartByterangeEnd","dateRangeTags","preloadHints","timeline","preloadSegment","entry","mediaGroup","rendition","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","KEYFORMAT","contentProtection","KEYID","schemeIdUri","keyId","pssh","iv","playlist","playlists","mediaGroups","TYPE","NAME","mediaGroupType","autoselect","AUTOSELECT","LANGUAGE","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","getTime","programDateTime","targetduration","timeOffset","precise","cueOut","cueOutCont","cueIn","skip","warnOnMissingAttributes_","segmentIndex","partIndex","renditionReports","canBlockReload","canSkipDateranges","hint","isPart","otherHint","required","partInf","partTarget","dateRange","endDate","startDate","plannedDuration","endOnNextYes","endOnNext","newDateInSeconds","dateRangeWithSameId","findIndex","dateRangeToFind","independentSegments","contentSteering","comment","custom","identifier","missing","chunk","regexs","webm","ogg","muxerVideo","muxerAudio","muxerText","mediaTypes","upperMediaTypes","translateLegacyCodec","codec","orig","profile","avcLevel","parseCodecs","codecString","codecs","codecType","details","mediaType","isAudioCodec","getMimeForCodec","browserSupportsCodec","MediaSource","isTypeSupported","muxerSupportsCodec","MPEGURL_REGEX","DASH_REGEX","simpleTypeFromSourceType","isArrayBufferView","ArrayBuffer","isView","toUint8","bytes","byteOffset","byteLength","BigInt","BYTE_TABLE","Uint16Array","bytesToNumber","_ref$signed","signed","_ref$le","le","total","byte","exponent","numberToBytes","_temp2","_ref2$le","byteCount","countBits","countBytes","byteIndex","stringToBytes","stringIsBytes","unescape","view","bytesMatch","_temp3","_ref3","_ref3$offset","_ref3$mask","mask","bByte","decodeB64ToUint8Array","oc","MIME_TYPE","HTML","isHTML","XML_APPLICATION","XML_TEXT","XML_XHTML_APPLICATION","XML_SVG_IMAGE","NAMESPACE$3","SVG","XML","XMLNS","conventions","ac","NAMESPACE","NAMESPACE$2","notEmptyString","orderedSetReducer","toOrderedSet","splitOnASCIIWhitespace","copy","dest","Class","Super","pt","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","HIERARCHY_REQUEST_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","NOT_FOUND_ERR","NOT_SUPPORTED_ERR","INUSE_ATTRIBUTE_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","refresh","_node","_refresh","_updateLiveList","inc","_inc","ls","__set__","$$length","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","ns","namespaceURI","_nsMap","prefix","_onAddAttribute","_removeNamedNode","lastIndex","DOMImplementation$1","Node","_xmlEncoder","_visitNode","Document","_onUpdateChild","cs","_removeChild","previous","previousSibling","lastChild","isDocTypeNode","isElementNode","isElementInsertionPossible","parentChildNodes","docTypeNode","isElementReplacementPossible","assertPreInsertionValidity1to5","hasValidParentNodeType","hasInsertableNodeType","assertPreInsertionValidityInDocument","nodeChildNodes","nodeChildElements","parentElementChild","assertPreReplacementValidityInDocument","hasDoctypeChildThatIsNotChild","_insertBefore","_inDocumentAssertion","cp","newFirst","newLast","pre","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","XMLSerializer","nodeSerializeToString","isHtml","nodeFilter","buf","lookupPrefix","visibleNamespaces","namespace","serializeToString","needNamespaceDefine","addSerializedAttribute","qualifiedName","prefixedNodeName","defaultNS","ai","nsi","pubid","publicId","sysid","systemId","sub","internalSubset","importNode","deep","node2","attrs2","_ownerElement","setAttributeNode","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","feature","createDocument","doctype","root","createDocumentType","nodeValue","refChild","oldChild","normalize","appendData","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","getElementById","rtv","getElementsByClassName","classNames","classNamesSet","base","nodeClassNames","nodeClassNamesSet","createComment","createCDATASection","createAttribute","specified","createEntityReference","pl","createAttributeNS","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","deleteData","splitText","newText","newNode","getTextContent","DOMImplementation","entities","XML_ENTITIES","amp","apos","gt","lt","quot","HTML_ENTITIES","Aacute","aacute","Abreve","abreve","acd","acE","Acirc","acirc","acute","Acy","acy","AElig","aelig","af","Afr","afr","Agrave","agrave","alefsym","aleph","Alpha","alpha","Amacr","amacr","amalg","AMP","And","and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","Aogon","aogon","Aopf","aopf","ap","apacir","apE","ape","apid","ApplyFunction","approx","approxeq","Aring","aring","Ascr","ascr","Assign","ast","asymp","asympeq","Atilde","atilde","Auml","auml","awconint","awint","backcong","backepsilon","backprime","backsim","backsimeq","Backslash","Barv","barvee","Barwed","barwed","barwedge","bbrk","bbrktbrk","bcong","Bcy","bcy","bdquo","becaus","Because","because","bemptyv","bepsi","bernou","Bernoullis","Beta","beta","beth","between","Bfr","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bNot","bnot","Bopf","bopf","bot","bowtie","boxbox","boxDL","boxDl","boxdL","boxdl","boxDR","boxDr","boxdR","boxdr","boxh","boxHD","boxHd","boxhD","boxhd","boxHU","boxHu","boxhU","boxhu","boxminus","boxplus","boxtimes","boxUL","boxUl","boxuL","boxul","boxUR","boxUr","boxuR","boxur","boxV","boxv","boxVH","boxVh","boxvH","boxvh","boxVL","boxVl","boxvL","boxvl","boxVR","boxVr","boxvR","boxvr","bprime","Breve","breve","brvbar","Bscr","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpE","bumpe","Bumpeq","bumpeq","Cacute","cacute","Cap","cap","capand","capbrcup","capcap","capcup","capdot","CapitalDifferentialD","caps","caret","caron","Cayleys","ccaps","Ccaron","ccaron","Ccedil","ccedil","Ccirc","ccirc","Cconint","ccups","ccupssm","Cdot","cdot","cedil","Cedilla","cemptyv","cent","CenterDot","centerdot","Cfr","cfr","CHcy","chcy","check","checkmark","Chi","chi","cir","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","CircleDot","circledR","circledS","CircleMinus","CirclePlus","CircleTimes","cirE","cire","cirfnint","cirmid","cirscir","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","clubs","clubsuit","Colon","colon","Colone","colone","coloneq","comma","commat","compfn","complement","complexes","cong","congdot","Congruent","Conint","conint","ContourIntegral","Copf","copf","coprod","Coproduct","COPY","copysr","CounterClockwiseContourIntegral","crarr","Cross","cross","Cscr","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","Cup","cup","cupbrcap","CupCap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","Dagger","dagger","daleth","Darr","dArr","darr","dash","Dashv","dashv","dbkarow","dblac","Dcaron","dcaron","Dcy","dcy","DD","dd","ddagger","ddarr","DDotrahd","ddotseq","deg","Del","Delta","delta","demptyv","dfisht","Dfr","dfr","dHar","dharl","dharr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","diam","Diamond","diamond","diamondsuit","diams","die","DifferentialD","digamma","disin","divide","divideontimes","divonx","DJcy","djcy","dlcorn","dlcrop","dollar","Dopf","dopf","Dot","dot","DotDot","doteq","doteqdot","DotEqual","dotminus","dotplus","dotsquare","doublebarwedge","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","Downarrow","downarrow","DownArrowBar","DownArrowUpArrow","DownBreve","downdownarrows","downharpoonleft","downharpoonright","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","drbkarow","drcorn","drcrop","Dscr","dscr","DScy","dscy","dsol","Dstrok","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","DZcy","dzcy","dzigrarr","Eacute","eacute","easter","Ecaron","ecaron","ecir","Ecirc","ecirc","ecolon","Ecy","ecy","eDDot","Edot","eDot","edot","ee","efDot","Efr","efr","eg","Egrave","egrave","egs","egsdot","elinters","ell","elsdot","Emacr","emacr","emptyset","EmptySmallSquare","emptyv","EmptyVerySmallSquare","emsp","emsp13","emsp14","ENG","eng","ensp","Eogon","eogon","Eopf","eopf","epar","eparsl","eplus","epsi","Epsilon","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","Equal","equals","EqualTilde","equest","Equilibrium","equiv","equivDD","eqvparsl","erarr","erDot","Escr","escr","esdot","Esim","esim","Eta","eta","ETH","eth","Euml","euml","euro","excl","exist","Exists","expectation","ExponentialE","exponentiale","fallingdotseq","Fcy","fcy","female","ffilig","fflig","ffllig","Ffr","ffr","filig","FilledSmallSquare","FilledVerySmallSquare","fjlig","flat","fllig","fltns","fnof","Fopf","fopf","ForAll","forall","fork","forkv","Fouriertrf","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","Fscr","fscr","gacute","Gamma","gamma","Gammad","gammad","gap","Gbreve","gbreve","Gcedil","Gcirc","gcirc","Gcy","gcy","Gdot","gdot","gE","ge","gEl","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","Gfr","gfr","Gg","gg","ggg","gimel","GJcy","gjcy","gl","gla","glE","glj","gnap","gnapprox","gnE","gne","gneq","gneqq","gnsim","Gopf","gopf","grave","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","gscr","gsim","gsime","gsiml","Gt","GT","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","Hacek","hairsp","half","hamilt","HARDcy","hardcy","hArr","harr","harrcir","harrw","Hat","hbar","Hcirc","hcirc","hearts","heartsuit","hellip","hercon","Hfr","hfr","HilbertSpace","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","Hopf","hopf","horbar","HorizontalLine","Hscr","hscr","hslash","Hstrok","hstrok","HumpDownHump","HumpEqual","hybull","hyphen","Iacute","iacute","ic","Icirc","icirc","Icy","icy","Idot","IEcy","iecy","iexcl","iff","Ifr","ifr","Igrave","igrave","ii","iiiint","iiint","iinfin","iiota","IJlig","ijlig","Im","Imacr","imacr","image","ImaginaryI","imagline","imagpart","imath","imof","imped","Implies","in","incare","infin","infintie","inodot","Int","int","intcal","integers","Integral","intercal","Intersection","intlarhk","intprod","InvisibleComma","InvisibleTimes","IOcy","iocy","Iogon","iogon","Iopf","iopf","Iota","iota","iprod","iquest","Iscr","iscr","isin","isindot","isinE","isins","isinsv","isinv","Itilde","itilde","Iukcy","iukcy","Iuml","iuml","Jcirc","jcirc","Jcy","jcy","Jfr","jfr","jmath","Jopf","jopf","Jscr","jscr","Jsercy","jsercy","Jukcy","jukcy","Kappa","kappa","kappav","Kcedil","kcedil","Kcy","kcy","Kfr","kfr","kgreen","KHcy","khcy","KJcy","kjcy","Kopf","kopf","Kscr","kscr","lAarr","Lacute","lacute","laemptyv","lagran","Lambda","lambda","Lang","langd","langle","lap","Laplacetrf","laquo","Larr","lArr","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","lAtail","latail","late","lates","lBarr","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","Lcaron","lcaron","Lcedil","lcedil","lceil","lcub","Lcy","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","lE","LeftAngleBracket","LeftArrow","Leftarrow","leftarrow","LeftArrowBar","LeftArrowRightArrow","leftarrowtail","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","leftharpoondown","leftharpoonup","leftleftarrows","LeftRightArrow","Leftrightarrow","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","leftthreetimes","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","lEg","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","LessEqualGreater","LessFullEqual","LessGreater","lessgtr","LessLess","lesssim","LessSlantEqual","LessTilde","lfisht","lfloor","Lfr","lfr","lg","lgE","lHar","lhard","lharu","lharul","lhblk","LJcy","ljcy","Ll","ll","llarr","llcorner","Lleftarrow","llhard","lltri","Lmidot","lmidot","lmoust","lmoustache","lnap","lnapprox","lnE","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","LongLeftArrow","Longleftarrow","longleftarrow","LongLeftRightArrow","Longleftrightarrow","longleftrightarrow","longmapsto","LongRightArrow","Longrightarrow","longrightarrow","looparrowleft","looparrowright","lopar","Lopf","lopf","loplus","lotimes","lowast","lowbar","LowerLeftArrow","LowerRightArrow","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","Lscr","lscr","Lsh","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","Lstrok","lstrok","Lt","LT","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrPar","lurdshar","luruhar","lvertneqq","lvnE","macr","male","malt","maltese","mapsto","mapstodown","mapstoleft","mapstoup","marker","mcomma","Mcy","mcy","mdash","mDDot","measuredangle","MediumSpace","Mellintrf","Mfr","mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","MinusPlus","mlcp","mldr","mnplus","models","Mopf","mopf","mp","Mscr","mscr","mstpos","Mu","mu","multimap","mumap","nabla","Nacute","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","Ncaron","ncaron","Ncedil","ncedil","ncong","ncongdot","ncup","Ncy","ncy","ndash","ne","nearhk","neArr","nearr","nearrow","nedot","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","nequiv","nesear","nesim","NestedGreaterGreater","NestedLessLess","NewLine","nexist","nexists","Nfr","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","nGg","ngsim","nGt","ngt","ngtr","nGtv","nhArr","nharr","nhpar","ni","nis","nisd","niv","NJcy","njcy","nlArr","nlarr","nldr","nlE","nle","nLeftarrow","nleftarrow","nLeftrightarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nLl","nlsim","nLt","nlt","nltri","nltrie","nLtv","nmid","NoBreak","NonBreakingSpace","Nopf","nopf","Not","not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","notin","notindot","notinE","notinva","notinvb","notinvc","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","notni","notniva","notnivb","notnivc","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrArr","nrarr","nrarrc","nrarrw","nRightarrow","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","Nscr","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","Ntilde","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","Nu","nu","numero","numsp","nvap","nVDash","nVdash","nvDash","nvdash","nvge","nvgt","nvHarr","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwarhk","nwArr","nwarr","nwarrow","nwnear","Oacute","oacute","oast","ocir","Ocirc","ocirc","Ocy","ocy","odash","Odblac","odblac","odiv","odot","odsold","OElig","oelig","ofcir","Ofr","ofr","ogon","Ograve","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","Omacr","omacr","Omega","omega","Omicron","omicron","omid","ominus","Oopf","oopf","opar","OpenCurlyDoubleQuote","OpenCurlyQuote","operp","oplus","Or","or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv","oS","Oscr","oscr","Oslash","oslash","osol","Otilde","otilde","Otimes","otimes","otimesas","Ouml","ouml","ovbar","OverBar","OverBrace","OverBracket","OverParenthesis","par","para","parallel","parsim","parsl","PartialD","Pcy","pcy","percnt","period","permil","perp","pertenk","Pfr","pfr","Phi","phi","phiv","phmmat","phone","Pi","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","PlusMinus","plusmn","plussim","plustwo","pm","Poincareplane","pointint","Popf","popf","pound","Pr","pr","prap","prcue","prE","prec","precapprox","preccurlyeq","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","preceq","precnapprox","precneqq","precnsim","precsim","Prime","prime","primes","prnap","prnE","prnsim","prod","Product","profalar","profline","profsurf","Proportion","Proportional","propto","prsim","prurel","Pscr","pscr","Psi","psi","puncsp","Qfr","qfr","qint","Qopf","qopf","qprime","Qscr","qscr","quaternions","quatint","quest","questeq","QUOT","rAarr","race","Racute","racute","radic","raemptyv","Rang","rang","rangd","range","rangle","raquo","Rarr","rArr","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","Rarrtl","rarrtl","rarrw","rAtail","ratail","rationals","RBarr","rBarr","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","Rcaron","rcaron","Rcedil","rcedil","rceil","rcub","Rcy","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","Re","real","realine","realpart","reals","REG","reg","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","rfisht","rfloor","Rfr","rfr","rHar","rhard","rharu","rharul","Rho","rho","rhov","RightAngleBracket","RightArrow","Rightarrow","rightarrow","RightArrowBar","RightArrowLeftArrow","rightarrowtail","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","RightTee","RightTeeArrow","RightTeeVector","rightthreetimes","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","Ropf","ropf","roplus","rotimes","RoundImplies","rpar","rpargt","rppolint","rrarr","Rrightarrow","rsaquo","Rscr","rscr","Rsh","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","RuleDelayed","ruluhar","rx","Sacute","sacute","sbquo","Sc","sc","scap","Scaron","scaron","sccue","scE","sce","Scedil","scedil","Scirc","scirc","scnap","scnE","scnsim","scpolint","scsim","Scy","scy","sdot","sdotb","sdote","searhk","seArr","searr","searrow","sect","semi","seswar","setminus","setmn","sext","Sfr","sfr","sfrown","sharp","SHCHcy","shchcy","SHcy","shcy","ShortDownArrow","ShortLeftArrow","shortmid","shortparallel","ShortRightArrow","ShortUpArrow","shy","Sigma","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","SmallCircle","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","SOFTcy","softcy","sol","solb","solbar","Sopf","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","Sqrt","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","Square","square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","squarf","squf","srarr","Sscr","sscr","ssetmn","ssmile","sstarf","Star","star","starf","straightepsilon","straightphi","strns","Sub","subdot","subE","sube","subedot","submult","subnE","subne","subplus","subrarr","Subset","subset","subseteq","subseteqq","SubsetEqual","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","succeq","succnapprox","succneqq","succnsim","succsim","SuchThat","Sum","sum","sung","Sup","sup","sup1","sup2","sup3","supdot","supdsub","supE","supe","supedot","Superset","SupersetEqual","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","Supset","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swarhk","swArr","swarr","swarrow","swnwar","szlig","Tab","Tau","tau","tbrk","Tcaron","tcaron","Tcedil","tcedil","Tcy","tcy","tdot","telrec","Tfr","tfr","there4","Therefore","therefore","Theta","theta","thetasym","thetav","thickapprox","thicksim","ThickSpace","thinsp","ThinSpace","thkap","thksim","THORN","thorn","Tilde","tilde","TildeEqual","TildeFullEqual","TildeTilde","times","timesb","timesbar","timesd","tint","toea","topbot","topcir","Topf","topf","topfork","tosa","tprime","TRADE","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","TripleDot","triplus","trisb","tritime","trpezium","Tscr","tscr","TScy","tscy","TSHcy","tshcy","Tstrok","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","Uacute","uacute","Uarr","uArr","uarr","Uarrocir","Ubrcy","ubrcy","Ubreve","ubreve","Ucirc","ucirc","Ucy","ucy","udarr","Udblac","udblac","udhar","ufisht","Ufr","ufr","Ugrave","ugrave","uHar","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","Umacr","umacr","uml","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","uogon","Uopf","uopf","UpArrow","Uparrow","uparrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","Updownarrow","updownarrow","UpEquilibrium","upharpoonleft","upharpoonright","uplus","UpperLeftArrow","UpperRightArrow","Upsi","upsi","upsih","Upsilon","upsilon","UpTee","UpTeeArrow","upuparrows","urcorn","urcorner","urcrop","Uring","uring","urtri","Uscr","uscr","utdot","Utilde","utilde","utri","utrif","uuarr","Uuml","uuml","uwangle","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","vArr","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","Vbar","vBar","vBarv","Vcy","vcy","VDash","Vdash","vDash","vdash","Vdashl","Vee","vee","veebar","veeeq","vellip","Verbar","verbar","Vert","vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","vfr","vltri","vnsub","vnsup","Vopf","vopf","vprop","vrtri","Vscr","vscr","vsubnE","vsubne","vsupnE","vsupne","Vvdash","vzigzag","Wcirc","wcirc","wedbar","Wedge","wedge","wedgeq","weierp","Wfr","wfr","Wopf","wopf","wp","wr","wreath","Wscr","wscr","xcap","xcirc","xcup","xdtri","Xfr","xfr","xhArr","xharr","Xi","xi","xlArr","xlarr","xmap","xnis","xodot","Xopf","xopf","xoplus","xotime","xrArr","xrarr","Xscr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","Yacute","yacute","YAcy","yacy","Ycirc","ycirc","Ycy","ycy","yen","Yfr","yfr","YIcy","yicy","Yopf","yopf","Yscr","yscr","YUcy","yucy","Yuml","yuml","Zacute","zacute","Zcaron","zcaron","Zcy","zcy","Zdot","zdot","zeetrf","ZeroWidthSpace","Zeta","zeta","Zfr","zfr","ZHcy","zhcy","zigrarr","Zopf","zopf","Zscr","zscr","zwj","zwnj","entityMap","NAMESPACE$1","nameStartChar","nameChar","tagNamePattern","ParseError$1","locator","XMLReader$1","copyLocator","lineNumber","columnNumber","parseElementStartPart","currentNSMap","entityReplacer","addAttribute","qname","startIndex","attributeNames","fatalError","addValue","warning","setTagName","closed","appendElement$1","domBuilder","localNSMap","qName","nsp","nsPrefix","_copy","startPrefixMapping","startElement","endElement","endPrefixMapping","parseHtmlSpecialContent","elStartEnd","elEndStart","characters","fixSelfClosed","closeMap","parseDCC","startCDATA","endCDATA","matchs","lastMatch","startDTD","endDTD","parseInstruction","processingInstruction","ElementAttributes","defaultNSMap","startDocument","defaultNSMapCopy","fixedFromCharCode","surrogate1","surrogate2","appendText","xt","lineEnd","linePattern","lineStart","parseStack","tagStart","currentElement","endMatch","locator2","parse$1","endDocument","getLocalName","getLocator","getQName","getURI","sax","XMLReader","ParseError","normalizeLineEndings","DOMParser$1","DOMHandler","cdata","_locator","_toString","chars","java","appendElement","hander","mimeType","xmlns","setDocumentLocator","errorImpl","isCallback","Function","build","msg","buildErrorHandler","xml","documentURI","ins","ignorableWhitespace","ch","charNode","skippedEntity","comm","impl","dt","__DOMHandler","merge$1","_len23","objects","_key23","flatten","lists","urlTypeToSegment","_ref10","indexRange","resolvedUri","startRange","endRange","MAX_SAFE_INTEGER","parseEndNumber","endNumber","segmentRange","static","timescale","sourceDuration","periodDuration","segmentDuration","dynamic","NOW","clientOffset","availabilityStartTime","periodStart","minimumUpdatePeriod","timeShiftBufferDepth","periodStartWC","segmentCount","availableStart","availableEnd","parseByDuration","startNumber","toSegments","sectionDuration","segmentsFromBase","initialization","presentationTime","initSegment","sourceURL","segmentTimeInfo","addSidxSegmentsToPlaylist$1","sidx","sidxByteRange","sidxEnd","mediaReferences","references","referenceType","firstOffset","referencedSize","subsegmentDuration","endIndex","SUPPORTED_MEDIA_TYPES","getUniqueTimelineStarts","timelineStarts","keyFunction","_ref11","union","getMediaGroupPlaylists","mediaGroupPlaylists","master","group","groupKey","labelKey","mediaProperties","updateMediaSequenceForPlaylist","_ref12","positionManifestOnTimeline","_ref15","oldManifest","newManifest","oldPlaylists","newPlaylists","_ref13","_ref14","oldPlaylist","findPlaylistWithName","firstNewSegment","oldMatchingSegmentIndex","oldSegment","updateSequenceNumbers","generateSidxKey","byteRangeToString","mergeDiscontiguousPlaylists","playlistsByBaseUrl","cur","allPlaylists","playlistGroup","mergedPlaylists","findIndexes","addSidxSegmentsToPlaylist","sidxMapping","sidxKey","sidxMatch","addSidxSegmentsToPlaylists","formatVideoPlaylist","_ref18","CODECS","serviceLocation","videoOnly","_ref19","audioOnly","_ref20","vttOnly","_ref21","flattenMediaGroupPlaylists","mediaGroupObject","labelContents","toM3u8","_ref23","dashPlaylists","locations","previousManifest","eventStream","suggestedPresentationDelay","videoPlaylists","audioPlaylists","vttPlaylists","captionServices","isAudioOnly","organizedAudioGroup","mainPlaylist","formattedPlaylists","roleLabel","formatted","formatAudioPlaylist","_ref16","organizeAudioPlaylists","organizedVttGroup","_ref17","m3u8Attributes","vttPlaylist","formatVttPlaylist","organizeVttPlaylists","playlistTimelineStarts","_ref24","addMediaSequenceValues","_ref22","subs","cc","svcObj","svc","service","channel","easyReader","getLiveRValue","parseByTimeline","segmentTimeline","sIndex","S","d","repeat","segmentTime","nextS","identifierPattern","constructTemplateUrl","format","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","mapSegment","parseTemplateInfo","presentationTimeOffset","segmentsFromList","segmentUrls","segmentUrlMap","segmentUrlObject","SegmentURLToSegmentObject","segmentUrl","mediaRange","generateSegments","_ref25","segmentAttributes","segmentsFn","segmentInfo","template","segmentsInfo","findChildren","_ref26","getContent","parseDuration","year","month","day","hour","minute","second","parsers","mediaPresentationDuration","parseDivisionValue","parsedValue","parseAttributes","parseFn","keySystemsMap","buildBaseUrls","baseUrlElements","baseUrlElement","initialBaseUrl","resolvedBaseUrl","finalBaseUrl","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","toEventStream","eventStreamAttributes","eventAttributes","messageData","contentEncoding","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","accessibility","flags","opt","parseCaptionServiceMetadata","labelVal","keySystem","psshNode","representations","adaptationSetSegmentInfo","inheritBaseUrls","repBaseUrlElements","repBaseUrls","representationSegmentInfo","toAdaptationSets","mpdAttributes","mpdBaseUrls","adaptationSets","generateContentSteeringInformation","contentSteeringNodes","eventHandler","infoFromContentSteeringTag","serverURL","queryBeforeStart","stringToMpdXml","manifestString","parsedManifestInfo","manifestUri","periodNodes","periods","priorPeriod","_ref27","priorPeriodAttributes","mpdType","getPeriodStart","contentSteeringInfo","representationInfo","inheritAttributes","parseUTCTiming","UTCTimingNode","parseUTCTimingScheme","MAX_UINT32","pow","getUint64","uint8","dv","DataView","getBigUint64","getUint32","parseSidx_1","subarray","referenceId","earliestPresentationTime","referenceCount","getUint16","startsWithSap","sapType","sapDeltaTime","ID3","getId3Offset","returnSize","getId3Size","normalizePath$1","findBox","paths","complete","normalizePaths$1","results","EBML_TAGS","EBML","DocType","Segment","SegmentInfo","Tracks","TrackNumber","DefaultDuration","TrackEntry","TrackType","FlagDefault","CodecID","CodecPrivate","Cluster","Timestamp","TimestampScale","BlockGroup","BlockDuration","Block","SimpleBlock","LENGTH_TABLE","getvint","removeLength","getLength","valueBytes","getInfinityDataSize","innerid","dataHeader","findEbml","normalizePaths","dataStart","dataEnd","NAL_TYPE_ONE","NAL_TYPE_TWO","EMULATION_PREVENTION","discardEmulationPreventionBytes","positions","newLength","newData","sourceIndex","findNal","dataType","nalLimit","nalStart","nalsFound","nalOffset","nalType","CONSTANTS","matroska","ac3","riff","avi","fmp4","moov","moof","_isLikely","docType","h264","findH264Nal","h265","findH265Nal","isLikelyTypes","isLikelyFn","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","isLikely","detectContainerForBytes","sampleRate","timestamp","clock_1","resolveUrl","resolveManifestRedirect","req","logger","_len24","_key24","_len25","_key25","filterRanges","timeRanges","findRange","TIME_FUDGE_FACTOR","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","lastBufferedEnd","timeAheadOf","segmentDurationWithParts","getPartsAndSegments","si","getLastParts","lastSegment","getKnownPartCount","_ref28","partCount","liveEdgeDelay","partHoldBack","holdBack","intervalDuration","endSequence","expired","backwardDuration","forwardDuration","totalDuration","sumDurations","_ref29","defaultDuration","durationList","durations","playlistEnd","useSafeLiveEnd","liveEdgePadding","lastSegmentEndTime","isExcluded","excludeUntil","isIncompatible","isEnabled","excluded","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","playlistMatch","someAudioVariant","groupName","variant","Playlist","getMediaInfoForTime","_ref30","startingSegmentIndex","startingPartIndex","exactManifestTimings","partsAndSegments","partAndSegment","canUseFudgeFactor","isDisabled","isAes","estimateSegmentRequestTime","bytesReceived","createPlaylistID","groupID","forEachMediaGroup","setupMediaPlaylist","_ref32","playlistErrors_","addPropertiesToMain","createGroupID","phonyUri","audioOnlyMain","groupId","setupMediaPlaylists","resolveMediaGroupUris","DateRangesStorage","offset_","pendingDateRanges_","processedDateRanges_","setOffset","firstSegment","setPendingDateRanges","trimProcessedDateRanges_","pendingDateRange","processDateRange","getDateRangesToProcess","dateRangeClasses","dateRangesToProcess","classListIndex","getStreamingNetworkErrorMetadata","_ref33","parseFailure","isBadStatus","isFailure","errorMetadata","isBadStatusOrParseFailure","errorType","timedout","erroType","EventTarget$1","updateSegment","skipped","resolveSegmentUris","baseUri","getAllSegments","isPlaylistUnchanged","updateMain$1","newMedia","unchangedCheck","oldMedia","mergedPlaylist","skippedSegments","updateSegments","oldSegments","newSegments","newIndex","newSegment","refreshDelay","lastPart","lastDuration","playlistMetadataPayload","renditions","PlaylistLoader","logger_","vhs_","addDateRangesToTextTrack_","addDateRangesToTextTrack","vhsOptions","customTagParsers","customTagMappers","llhls","dateRangesStorage_","handleMediaupdatetimeout_","handleLoadedPlaylist_","mediaPlaylist","availableDateRanges","addLLHLSQueryDirectives","parameters","nextMSN","nextPart","_HLS_part","_HLS_msn","canSkipUntil","_HLS_skip","parsedUri","searchParams","playlistRequestError","haveMetadata","playlistString","startingState","parseManifest_","_ref34","_ref31","onwarn","oninfo","customParser","parseManifest","_ref35","_ref36","_ref37","playlistObject","playlistInfo","lastRequest","pendingMedia_","media_","updateMediaUpdateTimeout_","parsedPlaylist","stopRequest","mediaUpdateTimeout","finalRenditionTimeout","oldRequest","shouldDelay","delay","mediaChange","mainPlaylistRef","started","setupInitialPlaylist","srcUri","mainForMedia","updateOrDeleteClone","isUpdate","pathway","ID","oldPlaylistUri","oldPlaylistId","newPlaylistUri","createCloneURI_","newPlaylistId","createCloneAttributes_","updatedPlaylist","createClonePlaylist_","updateOrDeleteCloneMedia","oldMediaPlaylist","createClonedMediaGroups_","addClonePathway","basePlaylist","playlistId","baseID","newUri","newPlaylistID","newMediaPlaylist","newProps","hostname","HOST","PARAMS","oldAttributes","getKeyIdSet","keyIds","keysystem","callbackWrapper","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","xhrFactory","XhrFunction","beforeRequest","Vhs","_requestCallbackSet","_responseCallbackSet","xhrMethod","beforeRequestOptions","callAllRequestHooks","requestSet","newOptions","requestCallback","callAllResponseHooks","responseSet","responseCallback","originalAbort","segmentXhrHeaders","Range","byterangeEnd","byterangeStart","byterangeStr","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","initSegmentId","segmentKeyId","hexDump","ascii","utils","tagDump","_ref38","textRanges","getProgramTime","_ref39","matchedSegment","findSegmentForPlayerTime","segmentEnd","videoTimingInfo","transmuxedPresentationEnd","estimatedStart","transmuxedPresentationStart","seekTime","programTimeObject","mediaSeconds","programTime","playerTimeToProgramTime","playerTime","transmuxerPrependedSeconds","offsetFromSegmentStart","toISOString","seekToProgramTime","_ref40","retryCount","seekTo","pauseAfterSeek","verifyProgramDateTimeTags","findSegmentForProgramTime","lastSegmentStart","lastSegmentDuration","mediaOffset","getOffsetFromTimestamp","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","seekToTime","seekedCallback","callbackOnCompleted","containerRequest","id3Offset","finished","endRequestAndCallback","_bytes","progressListener","newPart","_len","buffers","_key","totalLen","tempBuffer","concatTypedArrays","overrideMimeType","_ref41","loaded","dashPlaylistUnchanged","aSegment","bSegment","aByterange","bByterange","dashGroupId","updateMain","oldMain","newMain","noChanges","playlistUpdate","removeOldMediaGroupLabels","equivalentSidx","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","sidxInfo","DashPlaylistLoader","srcUrlOrPlaylist","mainPlaylistLoader","mainPlaylistLoader_","isMain_","addMetadataToTextTrack","refreshXml_","refreshMedia_","loadedPlaylists_","srcUrl","sidxMapping_","childPlaylist_","requestErrored_","addSidxSegments_","mediaRequest_","fin","sidxContainer","internal","playlistExclusionDuration","minimumUpdatePeriodTimeout_","createMupOnMedia_","hasPendingRequest","sidxChanged","_ref43","isFinalRendition","updateMinimumUpdatePeriodTimeout_","requestMain_","mainChanged","haveMain_","manifestInfo","mainXml_","date","mainLoaded_","handleMain_","syncClientServerClock_","utcTiming","clientOffset_","serverTime","_ref42","mainXml","parseMainXml","addEventStreamToMetadataTrack_","parsedManifest","mpl","mup","createMUPTimeout_","filterChangedSidxMappings","mediaGroupSidx","mediaID","mediaChanged","createMediaUpdateTimeout","metadataArray","eventStreamNode","cueTime","frames","defaultKID","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","BACK_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","BUFFER_HIGH_WATER_LINE","browserWorkerPolyFill","workerObj","objectUrl","createObjectURL","Blob","blob","BlobBuilder","getBlob","worker","Worker","objURL","terminate","revokeObjectURL","getWorkerString","workerCode$1","Stream$8","init","flushSource","partialFlush","endTimeline","dinf","esds","ftyp","mfhd","minf","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun$1","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","videoSample","audioSample","audioTrun","videoTrun","trunHeader","MAX_UINT32$1","numbers","avc1","avcC","btrt","dref","mdat","mp4a","pasp","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","trun","vmhd","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","samples","dependsOn","isDependedOn","hasRedundancy","avc1Box","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","sarRatio","hSpacing","vSpacing","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","bytesOffest","header","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","silence","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","mp4Generator","fileType","movie","sampleForFrame","frame","dataOffset","pts","dts","keyFrame","frameUtils$1","groupNalsIntoFrames","nalUnits","currentNal","currentFrame","nalCount","nalUnitType","groupFramesIntoGops","currentGop","gops","extendFirstKeyFrame","generateSampleTable","baseDataOffset","concatenateNalData","nalsByteLength","numberOfNals","generateSampleTableForFrame","concatenateNalDataForFrame","highPrefix","lowPrefix","zeroFill","timelineStartPts","keepOriginalTimestamps","clock$2","ONE_SECOND_IN_TS","coneOfSilence","metaTable","clock$1","audioFrameUtils$1","prefixWithSilence","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","silentFrame","firstFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","trimAdtsFramesByEarliestDts","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","concatenateFrameData","sumFrameByteLengths","ONE_SECOND_IN_TS$3","trackDecodeInfo$1","clearDtsInfo","maxSegmentDts","maxSegmentPts","calculateTrackBaseMediaDecodeTime","timelineStartInfo","collectDtsInfo","captionPacketParser","parseSei","payloadType","payloadSize","parseUserData","sei","parseCaptionPackets","userData","ccData","emulationPreventionBytesPositions","USER_DATA_REGISTERED_ITU_T_T35","Stream$7","cea708Parser","CaptionStream$2","parse708captions_","parse708captions","captionPackets_","ccStreams_","Cea608Stream","cc708Stream_","Cea708Stream","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","flushCCStreams","flushType","flushStream","idx","presortIndex","packet","dispatchCea608Packet","dispatchCea708Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION_708","within708TextBlock","Cea708Window","windowNum","clearText","pendingNewLine","winAttr","penAttr","penLoc","penColor","visible","rowLock","columnLock","relativePositioning","anchorVertical","anchorHorizontal","anchorPoint","rowCount","virtualRowCount","columnCount","windowStyle","penStyle","getText","rows","rowIdx","beforeRowOverflow","addText","backspace","Cea708Service","serviceNum","encoding","currentWindow","windows","createTextDecoder","startPts","setCurrentWindow","textDecoder_","serviceProps","captionServiceEncodings","serviceName","serviceEncodings","current708Packet","services","new708Packet","add708Bytes","push708Packet","ptsVals","byte0","byte1","packet708","packetData","blockSize","seq","sizeCode","pushServiceBlock","initService","handleText","multiByteCharacter","extendedCommands","defineWindow","clearWindows","deleteWindows","displayWindows","hideWindows","toggleWindows","setWindowAttributes","setPenAttributes","setPenColor","setPenLocation","isExtended","getPts","flushDisplayed","char","charCodeArray","newCode","isMultiByte","extended","currentByte","nextByte","unicode","firstByte","secondByte","fillOpacity","fillRed","fillGreen","fillBlue","borderType","borderRed","borderGreen","borderBlue","wordWrap","printDirection","scrollDirection","justify","effectSpeed","effectDirection","displayEffect","displayedText","winId","endPts","pushCaption","textTag","penSize","italics","underline","edgeType","fontStyle","fgOpacity","fgRed","fgGreen","fgBlue","bgOpacity","bgRed","bgGreen","bgBlue","edgeRed","edgeGreen","edgeBlue","column","CHARACTER_TRANSLATION","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","indent","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","formatting_","indentations","isColorPAC","isNormalChar","logWarning","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","newBaseRow","popOn","baseRow","rollUp","paintOn","captionStream","CaptionStream","streamTypes","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","Stream$6","handleRollover$1","TimestampRolloverStream$1","lastDTS","referenceDTS","type_","MetadataStream","timestampRolloverStream","TimestampRolloverStream","handleRollover","typedArray","typedArrayIndexOf$1","fromIndex","currentIndex","typedArrayIndexOf","textEncodingDescriptionByte","percentEncode$1","parseUtf8","parseIso88591$1","parseSyncSafeInteger$1","frameParsers","APIC","mimeTypeEndIndex","descriptionEndIndex","pictureType","pictureData","TXXX","WXXX","PRIV","owner","privateData","parseId3","parseId3Frames","frameSize","frameStart","tagSize","parseSyncSafeInteger","StreamTypes$3","id3","bufferSize","dispatchType","dataAlignmentIndicator","timeStamp","TransportPacketStream","TransportParseStream","ElementaryStream","metadataStream","Stream$4","CaptionStream$1","StreamTypes$2","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","tableEnd","streamType","pid","processPes_","STREAM_TYPES","adts","segmentHadPmt","timedMetadata","forceFlush","packetFlushable","trackId","pes","ptsDtsFlags","startPrefix","packetLength","parsePes","flushStreams_","m2ts$1","PAT_PID","MP2T_PACKET_LENGTH","AdtsStream$1","m2ts_1","ONE_SECOND_IN_TS$2","ADTS_SAMPLING_FREQUENCIES$1","handlePartialSegments","frameNum","skipWarn_","frameLength","protectionSkipBytes","oldBuffer","sampleCount","adtsFrameDuration","ExpGolomb$1","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","H264Stream$1","NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","Stream$2","ExpGolomb","syncPoint","swapBuffer","currentPts","currentDts","readSequenceParameterSet","skipScalingList","nalByteStream","nalUnitTypeCode","expGolombDecoder","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","AacStream$1","H264Stream","ADTS_SAMPLING_FREQUENCIES","parseId3TagSize","isLikelyAacData","parseAdtsSize","lowThree","parseType","parseSampleRate","parseAacTimestamp","percentEncode","aacUtils","setTimestamp","bytesLeft","tempLength","VideoSegmentStream","AudioSegmentStream","Transmuxer","CoalesceStream","frameUtils","audioFrameUtils","trackDecodeInfo","m2ts","clock","AdtsStream","AacStream","ONE_SECOND_IN_TS$1","AUDIO_PROPERTIES","VIDEO_PROPERTIES","retriggerForStream","addPipelineLogRetriggers","transmuxer","pipeline","arrayEquals","generateSegmentTimingInfo","startDts","endDts","prependedContentDuration","firstSequenceNumber","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","videoClockCyclesOfSilencePrefixed","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","nearestDistance","alignIndex","gopIndex","alignEndIndex","matchFound","trimIndex","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","caption","captionStreams","setRemux","hasFlushed","transmuxPipeline_","setupAacPipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","getLogTrigger_","hasAudio","hasVideo","setupTsPipeline","packetStream","elementaryStream","h264Stream","videoSegmentStream","id3Frame","setBaseMediaDecodeTime","isAac","resetCaptions","getTracks","getTimescaleFromMediaHeader","getEmsgID3","bin","parseType_1","toUnsigned$2","parseType$2","findBox$2","subresults","toUnsigned$1","getUint64$2","parseTfdt$2","parseSampleFlags","parseTrun$2","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","parseTfhd$2","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","sampleDescriptionIndex","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","findBox$1","parseTfdt$1","parseTrun$1","parseTfhd$1","window$2","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","trafs","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","headerInfo","truns","allSamples","parseSamples","avcStream","seiNal","lastMatchedSample","avcView","logs","seiNals","matchingSample","findSeiNals","captionParser","segmentCache","parsedCaptions","parsingPartial","isInitialized","isPartial","isNewInit","videoTrackIds","timescales","parsedData","cachedSegment","trackNals","parseEmbeddedCaptions","pushNals","nals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","uint8ToCString","curChar","retString","getUint64$1","isValidEmsgBox","emsg","hasScheme","scheme_id_uri","isValidV0Box","isDefined","presentation_time_delta","isValidV1Box","presentation_time","emsg$1","parseEmsgBox","boxData","event_duration","emsgBox","message_data","scaleTime","timeDelta","toUnsigned","toHexString","parseType$1","parseTfhd","parseTrun","parseTfdt","window$1","lowestTime","baseTime","scale","traks","tkhdVersion","getUint8","sampleDescriptions","codecConfig","codecBox","segmentData","parsedBox","parsedId3Frames","probe$2","StreamTypes$1","parsePid","parsePayloadUnitStartIndicator","parseAdaptionField","parseNalUnitType","probe$1","pusi","payloadOffset","parsePesType","parsePesTime","videoPacketContainsKeyFrame","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","StreamTypes","probe","parseAudioPes_","pesType","parsed","endLoop","table","parseVideoPes_","firstKeyFrame","inspectTs_","parsePsi_","tsInspector","baseTimestamp","audioCount","audioTimescale","inspectAac_","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","MessageHandlers","initArray","postMessage","gopInfo","timingInfo","videoSegmentTimingInfo","presentation","audioSegmentTimingInfo","trackInfo","audioTimingInfo","wireTransmuxerEvents","pushMp4Captions","trackIds","probeMp4StartTime","_ref44","probeMp4Tracks","_ref45","probeEmsgID3","_ref46","id3Frames","emsgData","probeTs","_ref47","baseStartTime","tsStartTime","timeInfo","videoStart","audioStart","clearAllMp4Captions","clearParsedMp4Captions","setTimestampOffset","timestampOffset","appendStart","onmessage","messageHandlers","TransmuxWorker","processTransmux","audioAppendStart","onData","onTrackInfo","onAudioTimingInfo","onVideoTimingInfo","onVideoSegmentTimingInfo","onAudioSegmentTimingInfo","onId3","onCaptions","onDone","onEndedTimeline","onTransmuxerLog","isEndOfTimeline","triggerSegmentEventFn","transmuxedData","waitForEndedTimelineEvent","currentTransmux","handleData_","videoFrameDtsTime","videoFramePtsTime","handleGopInfo_","_ref48","handleDone_","dequeue","handleError","segmentInfoPayload","transmuxQueue","processAction","enqueueAction","transmux","segmentTransmuxer","term","workerCallback","endAction","listenForEndEvent","isArrayBuffer","transfers","REQUEST_ERRORS","abortAll","activeXhrs","handleErrors","handleKeyResponse","finishProcessingFn","errorObj","keyInfo","parseInitSegment","_ref49","handleSegmentResponse","_ref51","newBytes","stringToArrayBuffer","lastReachedChar","stats","getRequestStats","encryptedBytes","transmuxAndNotify","_ref52","trackInfoFn","timingInfoFn","videoSegmentTimingInfoFn","audioSegmentTimingInfoFn","id3Fn","captionsFn","endedTimelineFn","dataFn","doneFn","fmp4Tracks","isMuxed","audioStartFn","audioEndFn","videoStartFn","videoEndFn","probeResult","handleSegmentBytes","_ref53","bytesAsUint8Array","isLikelyFmp4MediaSegment","isFmp4","audioCodec","videoCodec","finishLoading","_ref54","_ref55","decrypt","_ref56","decryptionWorker","decryptionHandler","decrypted","keyBytes","decryptError","encrypted","waitForCompletion","_ref58","didError","segmentFinish","_ref57","requestId","decryptedBytes","decryptSegment","endOfAllRequests","parseError","handleProgress","_ref60","progressFn","progressEvent","getProgressStats","firstBytesReceivedAt","mediaSegmentRequest","_ref61","xhrOptions","abortFn","keyRequestOptions","keyRequestCallback","keyXhr","mapKeyRequestOptions","mapKeyRequestCallback","mapKeyXhr","initSegmentOptions","initSegmentRequestCallback","_ref50","handleInitSegmentResponse","initSegmentXhr","segmentRequestOptions","segmentRequestCallback","segmentXhr","loadendState","activeXhr","_ref59","calledAbortFn","handleLoadEnd","logFn$1","isMaat","mediaAttributes","unwrapCodecList","codecList","_ref62","codecCount","codecObj","codecsForPlaylist","codecInfo","getCodecs","audioGroup","defaultCodecs","audioGroupId","audioType","codecsFromDefault","logFn","representationToString","safeGetComputedStyle","property","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","simpleSelector","playerBandwidth","limitRenditionByPlayerDimensions","playlistController","getAudioTrackPlaylists_","sortedPlaylistReps","rep","enabledPlaylistReps","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","leastPixelDiffRep","leastPixelDiffSelector","leastPixelDiffList","pixelDiff","lastBandwidthSelector","pixelRatio","useDevicePixelRatio","devicePixelRatio","customPixelRatio","systemBandwidth","playlistController_","compactSegmentUrlDescription","pathname","addMetadata","_ref64","inbandTextTracks","videoDuration","Cue","WebKitDataCue","metadataTrack","metadataTrack_","deprecateOldCue","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","finiteDuration","nextTime","dateRangeAttr","scte35Out","scte35In","dateRangeKeysToOmit","createMetadataTrackIfNotExists","inBandMetadataTrackDispatchType","removeCuesFromTrack","finite","segmentInfoString","startOfSegment","mediaIndex","segmentLen","selection","isSyncRequest","independent","hasPartIndex","zeroBasedPartCount","timingInfoPropertyForMedia","shouldWaitForTimelineChange","_ref67","timelineChangeController","loaderType","audioDisabled","lastMainTimelineChange","lastTimelineChange","pendingAudioTimelineChange","pendingTimelineChange","shouldFixBadTimelineChanges","pendingMainTimelineChange","hasPendingTimelineChanges","differentPendingChanges","fixBadTimelineChange","segmentLoader","resetEverything","segmentTooLong","_ref68","maxDuration","getTroublesomeSegmentDurationMessage","sourceType","timingInfos","typeTimingInfo","mediaDuration","isSegmentWayTooLong","isSegmentSlightlyTooLong","segmentTooLongMessage","severity","_ref69","isEncrypted","ke","isMediaInitialization","SegmentLoader","mediaSource","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","seekable_","seeking_","mediaSource_","loaderType_","currentMediaInfo_","startingMediaInfo_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceUpdater_","sourceUpdater","inbandTextTracks_","state_","timelineChangeController_","shouldSaveSegmentTimingInfo_","useDtsForTimestampOffset_","useDtsForTimestampOffset","captionServices_","checkBufferTimeout_","currentTimeline_","shouldForceTimestampOffsetAfterResync_","pendingSegment_","xhrOptions_","pendingSegments_","audioDisabled_","isPendingTimestampOffset_","gopBuffer_","timeMapping_","safeAppend_","appendInitSegment_","playlistOfLastInitSegment_","callQueue_","loadQueue_","metadataQueue_","waitingOnRemove_","quotaExceededErrorRetryTimeout_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","decrypter_","decrypter","syncController_","syncController","syncPoint_","transmuxer_","createTransmuxer_","triggerSyncInfoUpdate_","isEndOfStream_","ended_","fetchAtBuffer_","newState","hasEnoughInfoToAppend_","processCallQueue_","hasEnoughInfoToLoad_","processLoadQueue_","mediaSequenceSync_","getMediaSequenceSync","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","mediaAppends","abort_","setAudio","removeAudio","monitorBuffer_","abortRequests","clearPendingTimelineChange","checkForAbort_","endOfStream","buffered_","getMediaInfo_","videoBuffered","audioBuffered","initSegmentForMap","storedMap","segmentKey","storedKey","couldBeginLoading_","playlist_","init_","newPlaylist","syncInfo","setDateTimeMappingForStart","oldId","diagnostics","resetLoader","resyncLoader","mediaSequenceDiff","saveExpiredSegmentInfo","resetAppendedStatus","force","removesRemaining","removeFinished","removeGopBuffer","mapping","updatedBuffer","removeVideo","monitorBufferTick_","fillBuffer_","updating","chooseNextRequest_","loadSegment_","appendedLastSegment","appendedLastPart","bufferedTime","preloaded","haveEnoughBuffer","getSyncPoint","targetTime","timelineSegments","getSyncSegmentCandidate","isReliable","getSyncInfoFromMediaSequenceSync_","mediaInfoForTime","nextSegment","hasIndependentSegments","lastSegmentLastPart","forceTimestampOffset","generateSegmentInfo_","finalTargetTime","mediaSequenceSyncInfo","getSyncInfoForTime","isAppended","nextMediaSequenceSyncInfo","overrideCheck","timestampOffsetForSegment_","audioBufferedEnd","audioTimestampOffset","gopsSafeToAlignWith","currentTimePts","videoTimestampOffset","_ref66","timestampOffsetForSegment","earlyAbortWhenNeeded_","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$1","timeUntilRebuffer","switchCandidate","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","handleAbort_","handleProgress_","simpleSegment","handleTrackInfo_","checkForIllegalMediaSwitch","akeys","bkeys","shallowEqual","handleTimingInfo_","timeType","timingInfoProperty","handleCaptions_","captionData","hasAppendedData_","captionTracks","captionTrack","trackName","def","captionService","createCaptionsTrackIfNotExists","_ref63","captionArray","addCaptionData","handleId3_","processMetadataQueue_","callQueue","fun","loadQueue","getCurrentMediaInfo_","getPendingSegmentPlaylist","setTimeMapping_","updateMediaSecondsLoaded_","useVideoTimingInfo","firstVideoFrameTimeForData","trueSegmentStart_","currentStart","currentVideoTimestampOffset","updateAppendInitSegmentStatus","updateSourceBufferTimestampOffset_","updateTimingInfoEnd_","saveSegmentTimingInfo","shouldSaveTimelineMapping","appendData_","changedTimestampOffset","getInitSegmentAndUpdateState_","_ref70","handleQuotaExceededError_","_ref71","audioBufferStart","audioBufferEnd","videoBufferStart","videoBufferEnd","appendToSourceBuffer_","timeToRemoveUntil","MIN_BACK_BUFFER","handleAppendError_","_ref72","_ref73","segmentObj","concatSegments","appendBuffer","handleSegmentTimingInfo_","segmentTimingInfo","transmuxedDecodeStart","transmuxedDecodeEnd","trimBackBuffer_","updateTransmuxerAndRequestSegment_","shouldUpdateTransmuxerTimestampOffset_","createSimplifiedSegmentObj_","isEndOfStream","isWalkingForward","isDiscontinuity","segmentRequestFinished_","_ref74","_ref75","removeToTime","safeBackBufferTrimTime","trimTime","maxTrimTime","previousSegment","saveTransferStats_","saveBandwidthRelatedStats_","bandwidthInfo","handleTimeout_","updateGopBuffer","waitForAppendsToComplete_","timelineMapping","mappingForTimeline","_ref76","waitForVideo","waitForAudio","waitingOnAppends","checkAppendsDone_","videoQueueCallback","audioQueueCallback","handleAppendsDone_","illegalMediaSwitchError","illegalMediaSwitch","startingMedia","didChange","getSegmentStartTimeForTimestampOffsetCalculation_","_ref77","prioritizedTimingInfo","markAppended","segmentDurationMessage","recordThroughput_","addSegmentMetadataCue_","badSegmentGuess","badPartGuess","segmentProcessingTime","segmentProcessingThroughput","bufferTypes","sourceBuffer","queuePending","shiftQueue","queueIndex","queueEntry","nextQueueIndexOfType","cleanupBuffer","titleType","inSourceBuffers","sourceBuffers","actions","onError","addSourceBuffer","mime","removeSourceBuffer","newCodecBase","oldCodec","codecsChangeInfo","changeType","pushQueue","_ref78","onUpdateend","descriptiveString","bufferedRangesStr","bufferedRangesToString","SourceUpdater","sourceopenListener_","audioTimestampOffset_","videoTimestampOffset_","delayedAudioAppendQueue_","videoAppendQueued_","onVideoUpdateEnd_","onAudioUpdateEnd_","onVideoError_","videoError_","onAudioError_","audioError_","createdSourceBuffers_","initializedEme_","triggeredReady_","initializedEme","hasCreatedSourceBuffers","hasInitializedAnyEme","createSourceBuffers","addOrChangeSourceBuffers","canRemoveSourceBuffer","canChangeType","SourceBuffer","processedAppend_","videoBuffer","que","audioBuffer","bufferA","bufferB","arity","extents","bufferIntersection","setDuration","uint8ToUtf8","uintArray","escape","VTT_LINE_TERMINATORS","NoVttJsError","VTTSegmentLoader","subtitlesTrack_","featuresNativeTextTracks_","loadVttJs","combinedByteLength","combinedSegment","timestampOffsetForTimeline","checkTimestampOffset","skipEmptySegments_","stopForError","requested","parseVTTCues_","updateTimeMapping_","timelines","uniqueCues","cueKey","removeDuplicateCuesFromTrack","decodeBytesToString","timestampmap","mapData","mappingObj","diff","handleRollover_","firstStart","lastStart","valueIn90khz","referenceIn90khz","findAdCue","mediaTime","adStartTime","adEndTime","SyncInfo","_ref79","appended","start_","end_","segmentIndex_","partIndex_","appended_","isInRange","SyncInfoData","segmentSyncInfo","partsSyncInfo","segmentSyncInfo_","partsSyncInfo_","hasPartsSyncInfo","resetAppendStatus","partSyncInfo","MediaSequenceSync","storage_","diagnostics_","isReliable_","syncInfoData","isReliablePlaylist_","updateStorage_","calculateBaseTime_","getSyncInfoForMediaSequence","startingMediaSequence","startingTime","newStorage","newDiagnostics","currentMediaSequence","prevSyncInfoData","segmentStart","segmentIsAppended","currentPartStart","partStart","partEnd","partIsAppended","fallback","DependantMediaSequenceSync","parent_","syncPointStrategies","run","mediaSequenceSync","timelineToDatetimeMappings","lastDistance","datetimeMapping","z","discontinuitySync","discontinuities","SyncController","mediaSequenceStorage_","_ref80","syncPoints","runStrategies_","syncPointInfo","strategy","selectSyncPoint_","getExpiredTime","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","_ref81","didCalculateSegmentTimeMapping","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","dateTime","accuracy","mediaIndexDiff","TimelineChangeController","pendingTimelineChanges_","lastTimelineChanges_","_ref82","_ref83","timelineChangeInfo","workerCode","aesTables","AES","tmp","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","x8","tEnc","tDec","precompute","_tables","keyLen","rcon","encKey","decKey","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","AsyncStream","jobs","timeout_","processJob_","job","ntoh","word","Decrypter","initVector","STEP","encrypted32","Int32Array","asyncStream_","decryptChunk_","padded","decipher","decrypted32","init0","init1","init2","init3","wordIx","audioTrackKind_","stopLoaders","activePlaylistLoader","startLoaders","playlistLoader","excludePlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","setupListeners","requestOptions","segmentLoaders","initialize","variantLabel","isMainPlaylist","useForcedSubtitles","CLOSED-CAPTIONS","groupMatch","setupMediaGroups","audioSegmentLoader","mainSegmentLoader","variants","groupKeys","groupPropertyList","onGroupChanged","getActiveGroup","previousActiveLoader","lastGroup","lastGroup_","lastTrack_","onGroupChanging","lastTrack","pc","selectPlaylist","fastQualityChange_","_ref84","activeTrack_","onAudioTrackChanged","SteeringManifest","priority_","pathwayClones_","version_","ttl","ttl_","reloadUri","reloadUri_","pathwayClones","ContentSteeringController","currentPathway","defaultPathway","availablePathways_","steeringManifest","proxyServerUrl_","manifestType_","ttlTimeout_","request_","currentPathwayClones","nextPathwayClones","excludedSteeringManifestURLs","xhr_","getBandwidth_","assignTagProperties","steeringTag","serverUri","steeringUri","startsWith","decodeDataUriManifest_","pathwayId","defaultServiceLocation","proxyServerURL","requestSteeringManifest","getRequestURI","errorInfo","retrySeconds","startTTLTimeout_","steeringManifestJson","assignSteeringProperties_","parsedMetadata","contentSteeringManifest","setProxyServerUrl_","steeringUrl","steeringUrlObject","proxyServerUrlObject","encodeURI","setSteeringParams_","dataUri","urlObject","getPathway","networkThroughput","pathwayKey","throughputKey","steeringJson","TTL","nextPathway","pathwaysByPriority","chooseNextPathway","proxyURI","steeringURI","ttlMS","clearTTLTimeout_","addAvailablePathway","clearAvailablePathways","excludePathway","didDASHTagChange","newTag","getAvailablePathways","Vhs$1","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","PlaylistController","externVhs","useCueTags","enableLowInitialPlaylist","bufferBasedABR","maxPlaylistRetries","useCueTags_","cueTagsTrack_","requestOptions_","pauseLoading","mediaTypes_","createMediaTypes","handleDurationChange_","handleSourceOpen_","handleSourceEnded_","keyStatusMap_","segmentLoaderSettings","setupMainPlaylistLoaderListeners_","subtitleSegmentLoader_","onLoad","contentSteeringController_","getBandwidth","setupSegmentLoaderListeners_","startABRTimer_","stopABRTimer_","triggeredFmp4Usage","loadOnPlay_","timeToLoadedData__","mainAppendsToLoadedData__","audioAppendsToLoadedData__","timeToLoadedDataStart","mainAppendsToLoadedData_","audioAppendsToLoadedData_","appendsToLoadedData_","timeToLoadedData_","checkABR_","nextPlaylist","shouldSwitchToMedia_","switchMedia_","newId","renditionInfo","switchMediaForDASHContentSteering_","dashMediaPlaylists","abrTimer_","defaultPlaylists","defaultGroup","requestTimeout","triggerPresenceUsage_","setupFirstPlay","selectedMedia","attachContentSteeringListeners_","initContentSteeringController_","excludeUnsupportedVariants_","selectInitialPlaylist","initialMedia_","handleUpdatedMediaPlaylist","playlistToExclude","waitingForFastQualityPlaylistReceived_","runFastQualitySwitch_","lastExcludeReason_","stuckAtPlaylistEnd_","updateAdCues_","updateDuration","defaultDemuxed","audioGroupKeys","currentPlaylist","bufferLowWaterLine","bufferHighWaterLine","_ref85","sharedLogLine","isBuffered","forwardBuffer","maxBufferLowWaterLine","nextBandwidth","currBandwidth","logLine","shouldSwitchToMedia","onSyncInfoUpdate_","onEndOfStream","delegateLoaders_","updateCodecs","tryToCreateSourceBuffers_","getCodecsOrExclude_","mediaSecondsLoaded_","startPoint","mainMediaInfo","absolutePlaylistEnd","_ref86","pathwayAttribute_","reIncludeDelay","excludeThenChangePathway_","reincluded","errorMessage","delayDuration","fnNames","loaders","dontFilterPlaylist","loader","audioSeekable","mainSeekable","oldEnd","oldStart","seekableRanges","updateDuration_","areMediaTypesKnown_","usingAudioLoader","hasMainMediaInfo","hasAudioMediaInfo","playlistCodecs","unsupportedCodecs","unsupportedAudio","supporter","supportFunction","switchMessages","newCodec","excludeIncompatibleVariants_","ids","unsupported","codecCount_","videoDetails","audioDetails","exclusionReasons","variantCodecs","variantCodecCount","variantVideoDetails","variantAudioDetails","adOffset","adTotal","updateAdCues","newMax","_ref65","addDateRangeMetadata","resetContentSteeringController_","didPathwaysChange","availablePathways","newPathways","handlePathwayClones_","didEnablePlaylists","differentPathwayId","noExcludeUntil","changeSegmentPathway_","entries","oldClone","equalPathwayClones_","aParams","bParams","excludeNonUsablePlaylistsByKeyId_","nonUsableKeyStatusCount","keyIdSet","hasUsableKeyStatus","nonUsableExclusion","isNonHD","excludedForNonUsableKey","addKeyStatus_","formattedKeyIdString","uInt8Buffer","padStart","bufferToHexString","updatePlaylistByKeyStatus","excludeNonUsableThenChangePlaylist_","Representation","vhsHandler","qualityChangeFunction","enableFunction","playlistID","changePlaylistFn","incompatible","currentlyEnabled","timerCancelEvents","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","liveRangeSafeTimeDelta","playedRanges_","consecutiveUpdates","lastRecordedTime","checkCurrentTimeTimeout_","playHandler","monitorCurrentTime_","canPlayHandler","waitingHandler","techWaiting_","cancelTimerHandler","resetTimeUpdate_","loaderTypes","loaderChecks","resetSegmentDownloads_","updateend","checkSegmentDownloads_","setSeekingHandlers","seekingAppendCheck_","fixesBadSeeks_","clearSeekingAppendCheck_","watchForBadSeeking_","checkCurrentTime_","isBufferedDifferent","isRangeDifferent","bufferedRanges","waiting_","playedRanges","afterSeekableWindow_","beforeSeekableWindow_","minAppendedDuration","bufferedToCheck","nextRange","livePoint","videoUnderflow_","skipTheGap_","allowedEnd","isLLHLS","_ref87","lastVideoRange","videoRange","audioRange","gapFromVideoUnderflow_","scheduledCurrentTime","gapInfo","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","reloadSourceOnError","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","movingAverageBandwidthSelector","decay","average","lastSystemBandwidth","comparePlaylistResolution","leftWidth","rightWidth","handleVhsMediaChange","waitForKeySessionCreation","_ref88","sourceKeySystems","audioMedia","mainPlaylists","eme","initializeMediaKeys","keySystemsOptionsArr","getAllPsshKeySystemsOptions","keySystems","keySystemsArr","keySystemsOptions","keySystemsObj","keySystemOptions","initializationFinishedPromises","keySessionCreatedPromises","setupEmeOptions","_ref89","sourceOptions","emeKeySystems","audioPlaylist","videoContentType","audioContentType","keySystemContentTypes","getVhsLocalStorage","storedObject","addOnRequestHook","addOnResponseHook","removeOnRequestHook","removeOnResponseHook","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","onRequest","onResponse","offRequest","offResponse","Component","VhsHandler","initialBandwidth","_player","source_","ignoreNextSeekingEvent_","setOptions_","overrideNative","featuresNativeVideoTracks","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","useBandwidthFromLocalStorage","useNetworkInformationApi","setOptions","playbackWatcherOptions","playbackWatcher_","attachStreamingEventListeners_","defaultSelector","playerBandwidthEst","networkInformation","connection","mozConnection","webkitConnection","networkInfoBandwidthEstBitsPerSec","downlink","invBandwidth","invThroughput","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaAppends_","mainAppendsToLoadedData","audioAppendsToLoadedData","appendsToLoadedData","timeToLoadedData","currentTech","playerDimensions","objectToStore","updateVhsLocalStorage","setupEme_","setupQualityLevels_","mediaSourceUrl_","createKeySessions_","audioPlaylistLoader","handleWaitingForKey_","didSetupEmeOptions","qualityLevels_","convertToProgramTime","setupXhrHooks_","VhsSourceHandler","simpleType","getOverrideNative","defaultOverrideNative"],"mappings":"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"}