{"version":3,"file":"aria.min.js","sources":["../src/aria.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Enhancements to Bootstrap components for accessibility.\n *\n * @module     theme_boost/aria\n * @copyright  2018 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport Pending from 'core/pending';\nimport * as FocusLockManager from 'core/local/aria/focuslock';\n\n/**\n * Drop downs from bootstrap don't support keyboard accessibility by default.\n */\nconst dropdownFix = () => {\n    let focusEnd = false;\n    const setFocusEnd = (end = true) => {\n        focusEnd = end;\n    };\n    const getFocusEnd = () => {\n        const result = focusEnd;\n        focusEnd = false;\n        return result;\n    };\n\n    // Special handling for navigation keys when menu is open.\n    const shiftFocus = (element, focusCheck = null) => {\n        const pendingPromise = new Pending('core/aria:delayed-focus');\n        setTimeout(() => {\n            if (!focusCheck || focusCheck()) {\n                element.focus();\n            }\n\n            pendingPromise.resolve();\n        }, 50);\n    };\n\n    // Event handling for the dropdown menu button.\n    const handleMenuButton = e => {\n        const trigger = e.key;\n        let fixFocus = false;\n\n        // Space key or Enter key opens the menu.\n        if (trigger === ' ' || trigger === 'Enter') {\n            fixFocus = true;\n            // Cancel random scroll.\n            e.preventDefault();\n            // Open the menu instead.\n            e.target.click();\n        }\n\n        // Up and Down keys also open the menu.\n        if (trigger === 'ArrowUp' || trigger === 'ArrowDown') {\n            fixFocus = true;\n        }\n\n        if (!fixFocus) {\n            // No need to fix the focus. Return early.\n            return;\n        }\n\n        // Fix the focus on the menu items when the menu is opened.\n        const menu = e.target.parentElement.querySelector('[role=\"menu\"]');\n        let menuItems = false;\n        let foundMenuItem = false;\n\n        if (menu) {\n            menuItems = menu.querySelectorAll('[role=\"menuitem\"]');\n        }\n        if (menuItems && menuItems.length > 0) {\n            // Up key opens the menu at the end.\n            if (trigger === 'ArrowUp') {\n                setFocusEnd();\n            } else {\n                setFocusEnd(false);\n            }\n\n            if (getFocusEnd()) {\n                foundMenuItem = menuItems[menuItems.length - 1];\n            } else {\n                // The first menu entry, pretty reasonable.\n                foundMenuItem = menuItems[0];\n            }\n        }\n\n        if (foundMenuItem) {\n            shiftFocus(foundMenuItem);\n        }\n    };\n\n    // Search for menu items by finding the first item that has\n    // text starting with the typed character (case insensitive).\n    document.addEventListener('keypress', e => {\n        if (e.target.matches('[role=\"menu\"] [role=\"menuitem\"]')) {\n            const menu = e.target.closest('[role=\"menu\"]');\n            if (!menu) {\n                return;\n            }\n            const menuItems = menu.querySelectorAll('[role=\"menuitem\"]');\n            if (!menuItems) {\n                return;\n            }\n\n            const trigger = e.key.toLowerCase();\n\n            for (let i = 0; i < menuItems.length; i++) {\n                const item = menuItems[i];\n                const itemText = item.text.trim().toLowerCase();\n                if (itemText.indexOf(trigger) == 0) {\n                    shiftFocus(item);\n                    break;\n                }\n            }\n        }\n    });\n\n    // Keyboard navigation for arrow keys, home and end keys.\n    document.addEventListener('keydown', e => {\n\n        // We only want to set focus when users access the dropdown via keyboard as per\n        // guidelines defined in w3 aria practices 1.1 menu-button.\n        if (e.target.matches('[data-toggle=\"dropdown\"]')) {\n            handleMenuButton(e);\n        }\n\n        if (e.target.matches('[role=\"menu\"] [role=\"menuitem\"]')) {\n            const trigger = e.key;\n            let next = false;\n            const menu = e.target.closest('[role=\"menu\"]');\n\n            if (!menu) {\n                return;\n            }\n            const menuItems = menu.querySelectorAll('[role=\"menuitem\"]');\n            if (!menuItems) {\n                return;\n            }\n            // Down key.\n            if (trigger == 'ArrowDown') {\n                for (let i = 0; i < menuItems.length - 1; i++) {\n                    if (menuItems[i] == e.target) {\n                        next = menuItems[i + 1];\n                        break;\n                    }\n                }\n                if (!next) {\n                    // Wrap to first item.\n                    next = menuItems[0];\n                }\n            } else if (trigger == 'ArrowUp') {\n                // Up key.\n                for (let i = 1; i < menuItems.length; i++) {\n                    if (menuItems[i] == e.target) {\n                        next = menuItems[i - 1];\n                        break;\n                    }\n                }\n                if (!next) {\n                    // Wrap to last item.\n                    next = menuItems[menuItems.length - 1];\n                }\n            } else if (trigger == 'Home') {\n                // Home key.\n                next = menuItems[0];\n\n            } else if (trigger == 'End') {\n                // End key.\n                next = menuItems[menuItems.length - 1];\n            }\n\n            // Variable next is set if we do want to act on the keypress.\n            if (next) {\n                e.preventDefault();\n                shiftFocus(next);\n            }\n            return;\n        }\n    });\n\n    // Trap focus if the dropdown is a dialog.\n    $(document).on('shown.bs.dropdown', e => {\n        const dialog = e.target.querySelector('.dropdown-menu[role=\"dialog\"]');\n        if (dialog) {\n            // Use setTimeout to make sure the dialog is positioned correctly to prevent random scrolling.\n            setTimeout(() => {\n                FocusLockManager.trapFocus(dialog);\n            });\n        }\n    });\n\n    // Untrap focus when the dialog dropdown is closed.\n    $(document).on('hidden.bs.dropdown', e => {\n        const dialog = e.target.querySelector('.dropdown-menu[role=\"dialog\"]');\n        if (dialog) {\n            FocusLockManager.untrapFocus();\n        }\n\n        // We need to focus on the menu trigger.\n        const trigger = e.target.querySelector('[data-toggle=\"dropdown\"]');\n        // If it's a click event, then no element is focused because the clicked element is inside a closed dropdown.\n        const focused = e.clickEvent?.target || (document.activeElement !== document.body ? document.activeElement : null);\n        if (trigger && focused && e.target.contains(focused)) {\n            shiftFocus(trigger, () => {\n                if (document.activeElement === document.body) {\n                    // If the focus is currently on the body, then we can safely assume that the focus needs to be updated.\n                    return true;\n                }\n\n                // If the focus is on a child of the clicked element still, then update the focus.\n                return e.target.contains(document.activeElement);\n            });\n        }\n    });\n};\n\n/**\n * A lot of Bootstrap's out of the box features don't work if dropdown items are not focusable.\n */\nconst comboboxFix = () => {\n    $(document).on('show.bs.dropdown', e => {\n        if (e.relatedTarget.matches('[role=\"combobox\"]')) {\n            const combobox = e.relatedTarget;\n            const listbox = document.querySelector(`#${combobox.getAttribute('aria-controls')}[role=\"listbox\"]`);\n\n            if (listbox) {\n                const selectedOption = listbox.querySelector('[role=\"option\"][aria-selected=\"true\"]');\n\n                // To make sure ArrowDown doesn't move the active option afterwards.\n                setTimeout(() => {\n                    if (selectedOption) {\n                        selectedOption.classList.add('active');\n                        combobox.setAttribute('aria-activedescendant', selectedOption.id);\n                    } else {\n                        const firstOption = listbox.querySelector('[role=\"option\"]');\n                        firstOption.setAttribute('aria-selected', 'true');\n                        firstOption.classList.add('active');\n                        combobox.setAttribute('aria-activedescendant', firstOption.id);\n                    }\n                }, 0);\n            }\n        }\n    });\n\n    $(document).on('hidden.bs.dropdown', e => {\n        if (e.relatedTarget.matches('[role=\"combobox\"]')) {\n            const combobox = e.relatedTarget;\n            const listbox = document.querySelector(`#${combobox.getAttribute('aria-controls')}[role=\"listbox\"]`);\n\n            combobox.removeAttribute('aria-activedescendant');\n\n            if (listbox) {\n                setTimeout(() => {\n                    // Undo all previously highlighted options.\n                    listbox.querySelectorAll('.active[role=\"option\"]').forEach(option => {\n                        option.classList.remove('active');\n                    });\n                }, 0);\n            }\n        }\n    });\n\n    // Handling keyboard events for both navigating through and selecting options.\n    document.addEventListener('keydown', e => {\n        if (e.target.matches('[role=\"combobox\"][aria-controls]:not([aria-haspopup=dialog])')) {\n            const combobox = e.target;\n            const trigger = e.key;\n            let next = null;\n            const listbox = document.querySelector(`#${combobox.getAttribute('aria-controls')}[role=\"listbox\"]`);\n            const options = listbox.querySelectorAll('[role=\"option\"]');\n            const activeOption = listbox.querySelector('.active[role=\"option\"]');\n            const editable = combobox.hasAttribute('aria-autocomplete');\n\n            // Under the special case that the dropdown menu is being shown as a result of the key press (like when the user\n            // presses ArrowDown or Enter or ... to open the dropdown menu), activeOption is not set yet.\n            // It's because of a race condition with show.bs.dropdown event handler.\n            if (options && (activeOption || editable)) {\n                if (trigger == 'ArrowDown') {\n                    for (let i = 0; i < options.length - 1; i++) {\n                        if (options[i] == activeOption) {\n                            next = options[i + 1];\n                            break;\n                        }\n                    }\n                    if (editable && !next) {\n                        next = options[0];\n                    }\n                } if (trigger == 'ArrowUp') {\n                    for (let i = 1; i < options.length; i++) {\n                        if (options[i] == activeOption) {\n                            next = options[i - 1];\n                            break;\n                        }\n                    }\n                    if (editable && !next) {\n                        next = options[options.length - 1];\n                    }\n                } else if (trigger == 'Home' && !editable) {\n                    next = options[0];\n                } else if (trigger == 'End' && !editable) {\n                    next = options[options.length - 1];\n                } else if ((trigger == ' ' && !editable) || trigger == 'Enter') {\n                    e.preventDefault();\n                    selectOption(combobox, activeOption);\n                } else if (!editable) {\n                    // Search for options by finding the first option that has\n                    // text starting with the typed character (case insensitive).\n                    for (let i = 0; i < options.length; i++) {\n                        const option = options[i];\n                        const optionText = option.textContent.trim().toLowerCase();\n                        const keyPressed = e.key.toLowerCase();\n                        if (optionText.indexOf(keyPressed) == 0) {\n                            next = option;\n                            break;\n                        }\n                    }\n                }\n\n                // Variable next is set if we do want to act on the keypress.\n                if (next) {\n                    e.preventDefault();\n                    if (activeOption) {\n                        activeOption.classList.remove('active');\n                    }\n                    next.classList.add('active');\n                    combobox.setAttribute('aria-activedescendant', next.id);\n                    next.scrollIntoView({block: 'nearest'});\n                }\n            }\n        }\n    });\n\n    document.addEventListener('click', e => {\n        const option = e.target.closest('[role=\"listbox\"] [role=\"option\"]');\n        if (option) {\n            const listbox = option.closest('[role=\"listbox\"]');\n            const combobox = document.querySelector(`[role=\"combobox\"][aria-controls=\"${listbox.id}\"]`);\n            if (combobox) {\n                selectOption(combobox, option);\n            }\n        }\n    });\n\n    // In case some code somewhere else changes the value of the combobox.\n    document.addEventListener('change', e => {\n        if (e.target.matches('input[type=\"hidden\"][id]')) {\n            const combobox = document.querySelector(`[role=\"combobox\"][data-input-element=\"${e.target.id}\"]`);\n            const option = e.target.parentElement.querySelector(`[role=\"option\"][data-value=\"${e.target.value}\"]`);\n\n            if (combobox && option) {\n                selectOption(combobox, option);\n            }\n        }\n    });\n\n    const selectOption = (combobox, option) => {\n        const listbox = option.closest('[role=\"listbox\"]');\n        const oldSelectedOption = listbox.querySelector('[role=\"option\"][aria-selected=\"true\"]');\n\n        if (oldSelectedOption != option) {\n            if (oldSelectedOption) {\n                oldSelectedOption.removeAttribute('aria-selected');\n            }\n            option.setAttribute('aria-selected', 'true');\n        }\n\n        if (combobox.hasAttribute('value')) {\n            combobox.value = option.dataset.shortText || option.textContent.replace(/[\\n\\r]+|[\\s]{2,}/g, ' ').trim();\n        } else {\n            const selectedOptionContainer = combobox.querySelector('[data-selected-option]');\n            if (selectedOptionContainer) {\n                selectedOptionContainer.textContent = option.dataset.shortText || option.textContent;\n            } else {\n                combobox.textContent = option.dataset.shortText || option.textContent;\n            }\n        }\n\n        if (combobox.dataset.inputElement) {\n            const inputElement = document.getElementById(combobox.dataset.inputElement);\n            if (inputElement && (inputElement.value != option.dataset.value)) {\n                inputElement.value = option.dataset.value;\n                inputElement.dispatchEvent(new Event('change', {bubbles: true}));\n            }\n        }\n    };\n};\n\n/**\n * After page load, focus on any element with special autofocus attribute.\n */\nconst autoFocus = () => {\n    window.addEventListener(\"load\", () => {\n        const alerts = document.querySelectorAll('[data-aria-autofocus=\"true\"][role=\"alert\"]');\n        Array.prototype.forEach.call(alerts, autofocusElement => {\n            // According to the specification an role=\"alert\" region is only read out on change to the content\n            // of that region.\n            autofocusElement.innerHTML += ' ';\n            autofocusElement.removeAttribute('data-aria-autofocus');\n        });\n    });\n};\n\n/**\n * Changes the focus to the correct element based on the key that is pressed.\n * @param {NodeList} elements A NodeList of focusable elements to navigate between.\n * @param {KeyboardEvent} e The keyboard event that triggers the roving focus.\n * @param {boolean} vertical Whether the navigation is vertical.\n * @param {boolean} updateTabIndex Whether to update the tabIndex of the elements.\n */\nconst rovingFocus = (elements, e, vertical, updateTabIndex) => {\n    const rtl = window.right_to_left();\n    const arrowNext = vertical ? 'ArrowDown' : (rtl ? 'ArrowLeft' : 'ArrowRight');\n    const arrowPrevious = vertical ? 'ArrowUp' : (rtl ? 'ArrowRight' : 'ArrowLeft');\n    const keys = [arrowNext, arrowPrevious, 'Home', 'End'];\n\n    if (!keys.includes(e.key)) {\n        return;\n    }\n\n    const focusElement = index => {\n        elements[index].focus();\n        if (updateTabIndex) {\n            elements.forEach((element, i) => element.setAttribute('tabindex', i === index ? '0' : '-1'));\n        }\n    };\n\n    const currentIndex = Array.prototype.indexOf.call(elements, e.target);\n    let nextIndex;\n\n    switch (e.key) {\n        case arrowNext:\n            e.preventDefault();\n            nextIndex = (currentIndex + 1 < elements.length) ? currentIndex + 1 : 0;\n            focusElement(nextIndex);\n            break;\n        case arrowPrevious:\n            e.preventDefault();\n            nextIndex = (currentIndex - 1 >= 0) ? currentIndex - 1 : elements.length - 1;\n            focusElement(nextIndex);\n            break;\n        case 'Home':\n            e.preventDefault();\n            focusElement(0);\n            break;\n        case 'End':\n            e.preventDefault();\n            focusElement(elements.length - 1);\n    }\n};\n\n/**\n * Fix accessibility issues regarding tab elements focus and their tab order in Bootstrap navs.\n */\nconst tabElementFix = () => {\n    document.addEventListener('keydown', e => {\n        if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'Home', 'End'].includes(e.key)) {\n            if (e.target.matches('[role=\"tablist\"] [role=\"tab\"]')) {\n                const tabList = e.target.closest('[role=\"tablist\"]');\n                const tabs = Array.prototype.filter.call(\n                    tabList.querySelectorAll('[role=\"tab\"]'),\n                    tab => !!tab.offsetHeight\n                ); // We only work with the visible tabs.\n                const vertical = tabList.getAttribute('aria-orientation') == 'vertical';\n\n                rovingFocus(tabs, e, vertical, false);\n            }\n        }\n    });\n\n    document.addEventListener('click', e => {\n        if (e.target.matches('[role=\"tablist\"] [data-toggle=\"tab\"], [role=\"tablist\"] [data-toggle=\"pill\"]')) {\n            const tabs = e.target.closest('[role=\"tablist\"]').querySelectorAll('[data-toggle=\"tab\"], [data-toggle=\"pill\"]');\n            e.preventDefault();\n            $(e.target).tab('show');\n            tabs.forEach(tab => {\n                tab.tabIndex = -1;\n            });\n            e.target.tabIndex = 0;\n        }\n    });\n};\n\n/**\n * Fix keyboard interaction with Bootstrap Collapse elements.\n *\n * @see {@link https://www.w3.org/TR/wai-aria-practices-1.1/#disclosure|WAI-ARIA Authoring Practices 1.1 - Disclosure (Show/Hide)}\n */\nconst collapseFix = () => {\n    document.addEventListener('keydown', e => {\n        if (e.target.matches('[data-toggle=\"collapse\"]')) {\n            // Pressing space should toggle expand/collapse.\n            if (e.key === ' ') {\n                e.preventDefault();\n                e.target.click();\n            }\n        }\n    });\n};\n\n/**\n * Fix accessibility issues\n */\nconst toolbarFix = () => {\n    document.addEventListener('keydown', e => {\n        if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'Home', 'End'].includes(e.key)) {\n            if (e.target.matches('[role=\"toolbar\"] button')) {\n                const buttons = e.target.closest('[role=\"toolbar\"]').querySelectorAll('button');\n                rovingFocus(buttons, e, false, true);\n            }\n        }\n    });\n};\n\nexport const init = () => {\n    dropdownFix();\n    comboboxFix();\n    autoFocus();\n    tabElementFix();\n    collapseFix();\n    toolbarFix();\n};\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireDefault","__esModule","default","_jquery","_pending","FocusLockManager","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","dropdownFix","focusEnd","setFocusEnd","arguments","length","undefined","shiftFocus","element","focusCheck","pendingPromise","Pending","setTimeout","focus","resolve","handleMenuButton","trigger","key","fixFocus","preventDefault","target","click","menu","parentElement","querySelector","menuItems","foundMenuItem","querySelectorAll","getFocusEnd","result","document","addEventListener","matches","closest","toLowerCase","item","text","trim","indexOf","next","$","on","dialog","trapFocus","_e$clickEvent","untrapFocus","focused","clickEvent","activeElement","body","contains","rovingFocus","elements","vertical","updateTabIndex","rtl","window","right_to_left","arrowNext","arrowPrevious","includes","focusElement","index","forEach","setAttribute","currentIndex","Array","prototype","nextIndex","_exports","init","comboboxFix","relatedTarget","combobox","listbox","getAttribute","selectedOption","classList","add","id","firstOption","removeAttribute","option","remove","options","activeOption","editable","hasAttribute","selectOption","optionText","textContent","keyPressed","scrollIntoView","block","value","oldSelectedOption","dataset","shortText","replace","selectedOptionContainer","inputElement","getElementById","dispatchEvent","Event","bubbles","alerts","autofocusElement","innerHTML","tabList","tabs","filter","tab","offsetHeight","tabIndex","buttons"],"mappings":"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"}