{"version":3,"file":"actions.min.js","sources":["../src/actions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Cohorts actions.\n *\n * @module     core_cohort/actions\n * @copyright  2024 David Woloszyn <david.woloszyn@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {dispatchEvent} from 'core/event_dispatcher';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\nimport {prefetchStrings} from 'core/prefetch';\nimport {getString} from 'core/str';\nimport {add as addToast} from 'core/toast';\nimport {deleteCohort, deleteCohorts} from 'core_cohort/repository';\nimport * as reportEvents from 'core_reportbuilder/local/events';\nimport * as reportSelectors from 'core_reportbuilder/local/selectors';\nimport {eventTypes} from 'core/local/inplace_editable/events';\n\nconst SELECTORS = {\n    CHECKBOXES: '[data-togglegroup=\"report-select-all\"][data-toggle=\"slave\"]:checked',\n    DELETE: '[data-action=\"cohort-delete\"]',\n    DELETEBUTTON: '[data-action=\"cohort-delete-selected\"]',\n    EDITNAME: '[data-itemtype=\"cohortname\"]',\n};\n\n/**\n * Initialise module.\n */\nexport const init = () => {\n\n    prefetchStrings('core_cohort', [\n        'delcohortsconfirm',\n        'delcohortssuccess',\n        'delconfirm',\n        'delsuccess',\n    ]);\n\n    prefetchStrings('core', [\n        'delete',\n        'deleteselected',\n        'selectitem',\n    ]);\n\n    registerEventListeners();\n};\n\n/**\n * Register event listeners.\n */\nexport const registerEventListeners = () => {\n\n    // Edit cohort name inplace.\n    document.addEventListener(eventTypes.elementUpdated, async(event) => {\n        const editCohortName = event.target.closest(SELECTORS.EDITNAME);\n        if (editCohortName) {\n            const cohortId = event.target.dataset.itemid;\n            const checkbox = document.querySelector(`input[value=\"${cohortId}\"][type=\"checkbox\"]`);\n            const label = document.querySelector(`label[for=\"${checkbox.id}\"]`);\n            if (label) {\n                label.innerHTML = await getString('selectitem', 'core', event.target.dataset.value);\n            }\n        }\n    });\n\n    document.addEventListener('click', event => {\n\n        // Delete single cohort.\n        const cohortDeleteSingle = event.target.closest(SELECTORS.DELETE);\n        if (cohortDeleteSingle) {\n            event.preventDefault();\n\n            const {cohortId, cohortName} = cohortDeleteSingle.dataset;\n\n            Notification.saveCancelPromise(\n                getString('deleteselected', 'core'),\n                getString('delconfirm', 'core_cohort', cohortName),\n                getString('delete', 'core'),\n                {triggerElement: cohortDeleteSingle}\n            ).then(() => {\n                const pendingPromise = new Pending('core_cohort/cohort:delete');\n                const reportElement = event.target.closest(reportSelectors.regions.report);\n\n                // eslint-disable-next-line promise/no-nesting\n                return deleteCohort(cohortId)\n                    .then(() => addToast(getString('delsuccess', 'core_cohort')))\n                    .then(() => {\n                        dispatchEvent(reportEvents.tableReload, {preservePagination: true}, reportElement);\n                        return pendingPromise.resolve();\n                    })\n                    .catch(Notification.exception);\n            }).catch(() => {\n                return;\n            });\n        }\n\n        // Delete multiple cohorts.\n        const cohortDeleteMultiple = event.target.closest(SELECTORS.DELETEBUTTON);\n        if (cohortDeleteMultiple) {\n            event.preventDefault();\n\n            const reportElement = document.querySelector(reportSelectors.regions.report);\n            const cohortDeleteChecked = reportElement.querySelectorAll(SELECTORS.CHECKBOXES);\n            if (cohortDeleteChecked.length === 0) {\n                return;\n            }\n\n            Notification.saveCancelPromise(\n                getString('deleteselected', 'core'),\n                getString('delcohortsconfirm', 'core_cohort'),\n                getString('delete', 'core'),\n                {triggerElement: cohortDeleteMultiple}\n            ).then(() => {\n                const pendingPromise = new Pending('core_cohort/cohorts:delete');\n                const deleteCohortIds = [...cohortDeleteChecked].map(check => check.value);\n\n                // eslint-disable-next-line promise/no-nesting\n                return deleteCohorts(deleteCohortIds)\n                    .then(() => addToast(getString('delcohortssuccess', 'core_cohort')))\n                    .then(() => {\n                        dispatchEvent(reportEvents.tableReload, {preservePagination: true}, reportElement);\n                        return pendingPromise.resolve();\n                    })\n                    .catch(Notification.exception);\n            }).catch(() => {\n                return;\n            });\n        }\n    });\n};\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireWildcard","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireDefault","_notification","_pending","reportEvents","reportSelectors","SELECTORS","_exports","init","prefetchStrings","registerEventListeners","document","addEventListener","eventTypes","elementUpdated","async","event","target","closest","cohortId","dataset","itemid","checkbox","querySelector","label","id","innerHTML","getString","value","cohortDeleteSingle","preventDefault","cohortName","Notification","saveCancelPromise","triggerElement","then","pendingPromise","Pending","reportElement","regions","report","deleteCohort","addToast","add","dispatchEvent","tableReload","preservePagination","resolve","catch","exception","cohortDeleteMultiple","cohortDeleteChecked","querySelectorAll","length","deleteCohortIds","map","check","deleteCohorts"],"mappings":"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"}