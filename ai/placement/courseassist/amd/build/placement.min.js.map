{"version":3,"file":"placement.min.js","sources":["../src/placement.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module to load and render the tools for the AI assist plugin.\n *\n * @module     aiplacement_courseassist/placement\n * @copyright  2024 Huong Nguyen <huongnv13@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Templates from 'core/templates';\nimport Ajax from 'core/ajax';\nimport 'core/copy_to_clipboard';\nimport Notification from 'core/notification';\nimport Selectors from 'aiplacement_courseassist/selectors';\nimport Policy from 'core_ai/policy';\nimport AIHelper from 'core_ai/helper';\nimport DrawerEvents from 'core/drawer_events';\nimport {subscribe} from 'core/pubsub';\nimport * as MessageDrawerHelper from 'core_message/message_drawer_helper';\n\nconst AICourseAssist = class {\n\n    /**\n     * The user ID.\n     * @type {Integer}\n     */\n    userId;\n    /**\n     * The context ID.\n     * @type {Integer}\n     */\n    contextId;\n\n    /**\n     * Constructor.\n     * @param {Integer} userId The user ID.\n     * @param {Integer} contextId The context ID.\n     */\n    constructor(userId, contextId) {\n        this.userId = userId;\n        this.contextId = contextId;\n\n        this.aiDrawerElement = document.querySelector(Selectors.ELEMENTS.AIDRAWER);\n        this.aiDrawerBodyElement = document.querySelector(Selectors.ELEMENTS.AIDRAWER_BODY);\n        this.pageElement = document.querySelector(Selectors.ELEMENTS.PAGE);\n\n        this.registerEventListeners();\n    }\n\n    /**\n     * Register event listeners.\n     */\n    registerEventListeners() {\n        document.addEventListener('click', async(e) => {\n            const summariseAction = e.target.closest(Selectors.ACTIONS.SUMMARY);\n            if (summariseAction) {\n                e.preventDefault();\n                this.toggleAIDrawer();\n                const isPolicyAccepted = await this.isPolicyAccepted();\n                if (!isPolicyAccepted) {\n                    // Display policy.\n                    this.displayPolicy();\n                    return;\n                }\n                // Display summary.\n                this.displaySummary();\n            }\n        });\n\n        // Close AI drawer if message drawer is shown.\n        subscribe(DrawerEvents.DRAWER_SHOWN, () => {\n            if (this.isAIDrawerOpen()) {\n                this.closeAIDrawer();\n            }\n        });\n    }\n\n    /**\n     * Register event listeners for the policy.\n     */\n    registerPolicyEventListeners() {\n        const acceptAction = document.querySelector(Selectors.ACTIONS.ACCEPT);\n        const declineAction = document.querySelector(Selectors.ACTIONS.DECLINE);\n        if (acceptAction) {\n            acceptAction.addEventListener('click', (e) => {\n                e.preventDefault();\n                this.acceptPolicy().then(() => {\n                    return this.displaySummary();\n                }).catch(Notification.exception);\n            });\n        }\n        if (declineAction) {\n            declineAction.addEventListener('click', (e) => {\n                e.preventDefault();\n                this.closeAIDrawer();\n            });\n        }\n    }\n\n    /**\n     * Register event listeners for the error.\n     */\n    registerErrorEventListeners() {\n        const retryAction = document.querySelector(Selectors.ACTIONS.RETRY);\n        if (retryAction) {\n            retryAction.addEventListener('click', (e) => {\n                e.preventDefault();\n                this.aiDrawerBodyElement.dataset.hasdata = '0';\n                this.displaySummary();\n            });\n        }\n    }\n\n    /**\n     * Register event listeners for the response.\n     */\n    registerResponseEventListeners() {\n        const regenerateAction = document.querySelector(Selectors.ACTIONS.REGENERATE);\n        if (regenerateAction) {\n            regenerateAction.addEventListener('click', (e) => {\n                e.preventDefault();\n                this.aiDrawerBodyElement.dataset.hasdata = '0';\n                this.displaySummary();\n            });\n        }\n    }\n\n    registerLoadingEventListeners() {\n        const cancelAction = document.querySelector(Selectors.ACTIONS.CANCEL);\n        if (cancelAction) {\n            cancelAction.addEventListener('click', (e) => {\n                e.preventDefault();\n                this.setRequestCancelled();\n                this.toggleAIDrawer();\n            });\n        }\n    }\n\n    /**\n     * Check if the AI drawer is open.\n     * @return {boolean} True if the AI drawer is open, false otherwise.\n     */\n    isAIDrawerOpen() {\n        return this.aiDrawerElement.classList.contains('show');\n    }\n\n    /**\n     * Check if the request is cancelled.\n     * @return {boolean} True if the request is cancelled, false otherwise.\n     */\n    isRequestCancelled() {\n        return this.aiDrawerBodyElement.dataset.cancelled === '1';\n    }\n\n    setRequestCancelled() {\n        this.aiDrawerBodyElement.dataset.cancelled = '1';\n    }\n\n    /**\n     * Open the AI drawer.\n     */\n    openAIDrawer() {\n        // Close message drawer if it is shown.\n        MessageDrawerHelper.hide();\n        this.aiDrawerElement.classList.add('show');\n        this.aiDrawerBodyElement.setAttribute('aria-live', 'polite');\n        if (!this.pageElement.classList.contains('show-drawer-right')) {\n            this.addPadding();\n        }\n        // Disable the summary button.\n        this.disableSummaryButton();\n    }\n\n    /**\n     * Close the AI drawer.\n     */\n    closeAIDrawer() {\n        this.aiDrawerElement.classList.remove('show');\n        this.aiDrawerBodyElement.removeAttribute('aria-live');\n        if (this.pageElement.classList.contains('show-drawer-right') && this.aiDrawerBodyElement.dataset.removepadding === '1') {\n            this.removePadding();\n        }\n        // Enable the summary button.\n        this.enableSummaryButton();\n    }\n\n    /**\n     * Toggle the AI drawer.\n     */\n    toggleAIDrawer() {\n        if (this.isAIDrawerOpen()) {\n            this.closeAIDrawer();\n        } else {\n            this.openAIDrawer();\n        }\n    }\n\n    /**\n     * Add padding to the page to make space for the AI drawer.\n     */\n    addPadding() {\n        this.pageElement.classList.add('show-drawer-right');\n        this.aiDrawerBodyElement.dataset.removepadding = '1';\n    }\n\n    /**\n     * Remove padding from the page.\n     */\n    removePadding() {\n        this.pageElement.classList.remove('show-drawer-right');\n        this.aiDrawerBodyElement.dataset.removepadding = '0';\n    }\n\n    /**\n     * Disable the summary button.\n     */\n    disableSummaryButton() {\n        const summaryButton = document.querySelector(Selectors.ACTIONS.SUMMARY);\n        if (summaryButton) {\n            summaryButton.setAttribute('disabled', 1);\n        }\n    }\n\n    /**\n     * Enable the summary button and focus on it.\n     */\n    enableSummaryButton() {\n        const summaryButton = document.querySelector(Selectors.ACTIONS.SUMMARY);\n        if (summaryButton) {\n            summaryButton.removeAttribute('disabled');\n            summaryButton.focus();\n        }\n    }\n\n    /**\n     * Check if the policy is accepted.\n     * @return {bool} True if the policy is accepted, false otherwise.\n     */\n    async isPolicyAccepted() {\n        return await Policy.getPolicyStatus(this.userId);\n    }\n\n    /**\n     * Accept the policy.\n     * @return {Promise<Object>}\n     */\n    acceptPolicy() {\n        return Policy.acceptPolicy();\n    }\n\n    /**\n     * Check if the AI drawer has generated content or not.\n     * @return {boolean} True if the AI drawer has generated content, false otherwise.\n     */\n    hasGeneratedContent() {\n        return this.aiDrawerBodyElement.dataset.hasdata === '1';\n    }\n\n    /**\n     * Display the policy.\n     */\n    displayPolicy() {\n        Templates.render('core_ai/policyblock', {}).then((html) => {\n            this.aiDrawerBodyElement.innerHTML = html;\n            this.registerPolicyEventListeners();\n            return;\n        }).catch(Notification.exception);\n    }\n\n    /**\n     * Display the loading spinner.\n     */\n    displayLoading() {\n        Templates.render('aiplacement_courseassist/loading', {}).then((html) => {\n            this.aiDrawerBodyElement.innerHTML = html;\n            this.registerLoadingEventListeners();\n            return;\n        }).catch(Notification.exception);\n    }\n\n    /**\n     * Display the summary.\n     */\n    async displaySummary() {\n        if (!this.hasGeneratedContent()) {\n            // Display loading spinner.\n            this.displayLoading();\n            // Clear the drawer content to prevent sending some unnecessary content.\n            this.aiDrawerBodyElement.innerHTML = '';\n            const request = {\n                methodname: 'aiplacement_courseassist_summarise_text',\n                args: {\n                    contextid: this.contextId,\n                    prompttext: this.getTextContent(),\n                }\n            };\n            try {\n                const responseObj = await Ajax.call([request])[0];\n                if (responseObj.error) {\n                    this.displayError();\n                    return;\n                } else {\n                    if (!this.isRequestCancelled()) {\n                        // Replace double line breaks with <br> and with </p><p> for paragraphs.\n                        const generatedContent = AIHelper.replaceLineBreaks(responseObj.generatedcontent);\n                        this.displayResponse(generatedContent);\n                        return;\n                    } else {\n                        this.aiDrawerBodyElement.dataset.cancelled = '0';\n                    }\n                }\n            } catch (error) {\n                window.console.log(error);\n                this.displayError();\n            }\n        }\n    }\n\n    /**\n     * Display the response.\n     * @param {String} content The content to display.\n     */\n    displayResponse(content) {\n        Templates.render('aiplacement_courseassist/response', {content: content}).then((html) => {\n            this.aiDrawerBodyElement.innerHTML = html;\n            this.aiDrawerBodyElement.dataset.hasdata = '1';\n            this.registerResponseEventListeners();\n            return;\n        }).catch(Notification.exception);\n    }\n\n    /**\n     * Display the error.\n     */\n    displayError() {\n        Templates.render('aiplacement_courseassist/error', {}).then((html) => {\n            this.aiDrawerBodyElement.innerHTML = html;\n            this.registerErrorEventListeners();\n            return;\n        }).catch(Notification.exception);\n    }\n\n    /**\n     * Get the text content of the main region.\n     * @return {String} The text content.\n     */\n    getTextContent() {\n        const mainRegion = document.querySelector(Selectors.ELEMENTS.MAIN_REGION);\n        return mainRegion.innerText || mainRegion.textContent;\n    }\n};\n\nexport default AICourseAssist;\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireDefault","__esModule","default","_templates","_ajax","_notification","_selectors","_policy","_helper","_drawer_events","MessageDrawerHelper","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","_default","userId","contextId","constructor","this","aiDrawerElement","document","querySelector","Selectors","ELEMENTS","AIDRAWER","aiDrawerBodyElement","AIDRAWER_BODY","pageElement","PAGE","registerEventListeners","addEventListener","async","target","closest","ACTIONS","SUMMARY","preventDefault","toggleAIDrawer","isPolicyAccepted","displayPolicy","displaySummary","subscribe","DrawerEvents","DRAWER_SHOWN","isAIDrawerOpen","closeAIDrawer","registerPolicyEventListeners","acceptAction","ACCEPT","declineAction","DECLINE","acceptPolicy","then","catch","Notification","exception","registerErrorEventListeners","retryAction","RETRY","dataset","hasdata","registerResponseEventListeners","regenerateAction","REGENERATE","registerLoadingEventListeners","cancelAction","CANCEL","setRequestCancelled","classList","contains","isRequestCancelled","cancelled","openAIDrawer","hide","add","setAttribute","addPadding","disableSummaryButton","remove","removeAttribute","removepadding","removePadding","enableSummaryButton","summaryButton","focus","Policy","getPolicyStatus","hasGeneratedContent","Templates","render","html","innerHTML","displayLoading","request","methodname","args","contextid","prompttext","getTextContent","responseObj","Ajax","error","displayError","generatedContent","AIHelper","replaceLineBreaks","generatedcontent","displayResponse","window","console","log","content","mainRegion","MAIN_REGION","innerText","textContent","_exports"],"mappings":"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"}