{"version":3,"file":"chartjs-lazy.min.js","sources":["../src/chartjs-lazy.js"],"sourcesContent":["/*!\n * Chart.js v4.4.2\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\n\n/**\n * Description of import into Moodle:\n *\n * - Download Chartjs source code (zip) file from https://github.com/chartjs/Chart.js/releases/latest.\n * - You must build Chart.js to generate the dist files (https://www.chartjs.org/docs/latest/developers/contributing.html#building-and-testing).\n *   Chart.js will generate a new file dist/chart.umd.js with minified format, in order to avoid the minification\n *   we need to modify rollup.config.js, find below code in the file:\n *   ```\n *   1. // UMD build\n *   2. // dist/chart.umd.js\n *   3. {\n *   4.     input: 'src/index.umd.ts',\n *   5.     plugins: plugins(true),\n *   6.     output: {\n *   7.       ...\n *   8.     },\n *   9. },\n *   ```\n *\n *   Change line 5 into:\n *   ```\n *   plugins: plugins(),\n *   ```\n *\n *   Save the file and run build script again.\n *\n * - Copy /dist/chart.umd.js content to lib/amd/src/chartjs-lazy.js.\n * - Remove below line in the lib/amd/src/chartjs-lazy.js:\n *   ```\n *   //# sourceMappingURL=chart.umd.js.map\n *   ```\n * - Convert line endings to LF-Unix format.\n * - Change the version number and the copyright year at the file header block.\n * - Keep these instructions in the file.\n * - Visit lib/tests/other/chartjstestpage.php to see if the library still works after the update.\n *\n */\n\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\ntypeof define === 'function' && define.amd ? define(factory) :\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Chart = factory());\n})(this, (function () { 'use strict';\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nget Colors () { return plugin_colors; },\nget Decimation () { return plugin_decimation; },\nget Filler () { return index; },\nget Legend () { return plugin_legend; },\nget SubTitle () { return plugin_subtitle; },\nget Title () { return plugin_title; },\nget Tooltip () { return plugin_tooltip; }\n});\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone$1(source) {\n    if (isArray(source)) {\n        return source.map(clone$1);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone$1(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone$1(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone$1(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\n/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$2 = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map$2);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map$2[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate$1(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate$1(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nvar helpers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nHALF_PI: HALF_PI,\nINFINITY: INFINITY,\nPI: PI,\nPITAU: PITAU,\nQUARTER_PI: QUARTER_PI,\nRAD_PER_DEG: RAD_PER_DEG,\nTAU: TAU,\nTWO_THIRDS_PI: TWO_THIRDS_PI,\n_addGrace: _addGrace,\n_alignPixel: _alignPixel,\n_alignStartEnd: _alignStartEnd,\n_angleBetween: _angleBetween,\n_angleDiff: _angleDiff,\n_arrayUnique: _arrayUnique,\n_attachContext: _attachContext,\n_bezierCurveTo: _bezierCurveTo,\n_bezierInterpolation: _bezierInterpolation,\n_boundSegment: _boundSegment,\n_boundSegments: _boundSegments,\n_capitalize: _capitalize,\n_computeSegments: _computeSegments,\n_createResolver: _createResolver,\n_decimalPlaces: _decimalPlaces,\n_deprecated: _deprecated,\n_descriptors: _descriptors,\n_elementsEqual: _elementsEqual,\n_factorize: _factorize,\n_filterBetween: _filterBetween,\n_getParentNode: _getParentNode,\n_getStartAndCountOfVisiblePoints: _getStartAndCountOfVisiblePoints,\n_int16Range: _int16Range,\n_isBetween: _isBetween,\n_isClickEvent: _isClickEvent,\n_isDomSupported: _isDomSupported,\n_isPointInArea: _isPointInArea,\n_limitValue: _limitValue,\n_longestText: _longestText,\n_lookup: _lookup,\n_lookupByKey: _lookupByKey,\n_measureText: _measureText,\n_merger: _merger,\n_mergerIf: _mergerIf,\n_normalizeAngle: _normalizeAngle,\n_parseObjectDataRadialScale: _parseObjectDataRadialScale,\n_pointInLine: _pointInLine,\n_readValueToProps: _readValueToProps,\n_rlookupByKey: _rlookupByKey,\n_scaleRangesChanged: _scaleRangesChanged,\n_setMinAndMaxByKey: _setMinAndMaxByKey,\n_splitKey: _splitKey,\n_steppedInterpolation: _steppedInterpolation,\n_steppedLineTo: _steppedLineTo,\n_textX: _textX,\n_toLeftRightCenter: _toLeftRightCenter,\n_updateBezierControlPoints: _updateBezierControlPoints,\naddRoundedRectPath: addRoundedRectPath,\nalmostEquals: almostEquals,\nalmostWhole: almostWhole,\ncallback: callback,\nclearCanvas: clearCanvas,\nclipArea: clipArea,\nclone: clone$1,\ncolor: color,\ncreateContext: createContext,\ndebounce: debounce,\ndefined: defined,\ndistanceBetweenPoints: distanceBetweenPoints,\ndrawPoint: drawPoint,\ndrawPointLegend: drawPointLegend,\neach: each,\neasingEffects: effects,\nfiniteOrDefault: finiteOrDefault,\nfontString: fontString,\nformatNumber: formatNumber,\ngetAngleFromPoint: getAngleFromPoint,\ngetHoverColor: getHoverColor,\ngetMaximumSize: getMaximumSize,\ngetRelativePosition: getRelativePosition,\ngetRtlAdapter: getRtlAdapter,\ngetStyle: getStyle,\nisArray: isArray,\nisFinite: isNumberFinite,\nisFunction: isFunction,\nisNullOrUndef: isNullOrUndef,\nisNumber: isNumber,\nisObject: isObject,\nisPatternOrGradient: isPatternOrGradient,\nlistenArrayEvents: listenArrayEvents,\nlog10: log10,\nmerge: merge,\nmergeIf: mergeIf,\nniceNum: niceNum,\nnoop: noop,\noverrideTextDirection: overrideTextDirection,\nreadUsedSize: readUsedSize,\nrenderText: renderText,\nrequestAnimFrame: requestAnimFrame,\nresolve: resolve,\nresolveObjectKey: resolveObjectKey,\nrestoreTextDirection: restoreTextDirection,\nretinaScale: retinaScale,\nsetsEqual: setsEqual,\nsign: sign,\nsplineCurve: splineCurve,\nsplineCurveMonotone: splineCurveMonotone,\nsupportsEventListenerOptions: supportsEventListenerOptions,\nthrottled: throttled,\ntoDegrees: toDegrees,\ntoDimension: toDimension,\ntoFont: toFont,\ntoFontString: toFontString,\ntoLineHeight: toLineHeight,\ntoPadding: toPadding,\ntoPercentage: toPercentage,\ntoRadians: toRadians,\ntoTRBL: toTRBL,\ntoTRBLCorners: toTRBLCorners,\nuid: uid,\nunclipArea: unclipArea,\nunlistenArrayEvents: unlistenArrayEvents,\nvalueOrDefault: valueOrDefault\n});\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nvar platforms = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBasePlatform: BasePlatform,\nBasicPlatform: BasicPlatform,\nDomPlatform: DomPlatform,\n_detectPlatform: _detectPlatform\n});\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.2\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar _adapters = {\n    _date: DateAdapterBase\n};\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new _adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// Register built-ins\nChart.register(controllers, scales, elements, plugins);\nChart.helpers = {\n    ...helpers\n};\nChart._adapters = _adapters;\nChart.Animation = Animation;\nChart.Animations = Animations;\nChart.animator = animator;\nChart.controllers = registry.controllers.items;\nChart.DatasetController = DatasetController;\nChart.Element = Element;\nChart.elements = elements;\nChart.Interaction = Interaction;\nChart.layouts = layouts;\nChart.platforms = platforms;\nChart.Scale = Scale;\nChart.Ticks = Ticks;\n// Compatibility with ESM extensions\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\nChart.Chart = Chart;\nif (typeof window !== 'undefined') {\n    window.Chart = Chart;\n}\n\nreturn Chart;\n\n}));\n"],"names":["global","factory","this","plugins","Object","freeze","__proto__","Colors","plugin_colors","Decimation","plugin_decimation","Filler","index","Legend","plugin_legend","SubTitle","plugin_subtitle","Title","plugin_title","Tooltip","plugin_tooltip","noop","uid","id","isNullOrUndef","value","isArray","Array","type","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","clone$1","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","_splitKey","parts","split","tmp","part","push","resolveObjectKey","obj","resolver","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","_factorize","result","sqrt","sort","pop","isNumber","n","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","arguments","undefined","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","_len","_key","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","from","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_len2","_key2","debounce","delay","timeout","_len3","_key3","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","animator","constructor","_request","_charts","Map","_running","_lastDate","_notify","chart","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","get","complete","progress","listen","event","cb","add","reduce","acc","cur","_duration","stop","cancel","remove","delete","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","d","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","m","exec","p1","p2","hwb2rgb","hsv2rgb","map$2","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","clone","proto","fromObject","input","functionParse","rgbParse","Color","ret","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","t","rgb1","rgb2","interpolate$1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","formatters","numeric","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","_scriptable","startsWith","_indexable","_fallback","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","bottom","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_isDomSupported","document","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","height","getRelativePosition","canvas","currentDevicePixelRatio","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","useOffsetPos","shadowRoot","rect","getBoundingClientRect","clientX","clientY","getCanvasPosition","xOffset","yOffset","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxWidth","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","halfWidth","clearCanvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_createResolver","scopes","prefixes","fallback","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","prop","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","resolve","resolveFallback","getScope","addScopes","parentScopes","parentFallback","rootScopes","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","LINE_HEIGHT","FONT_STYLE","toLineHeight","_readValueToProps","props","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","console","warn","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","getRtlAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_ref","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","_computeSegments","segmentOptions","_loop","findStartAndEnd","splitByStyles","solidSegments","_fullLoop","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","helpers","_deprecated","easingEffects","fontString","pixelSize","fontStyle","fontFamily","binarySearch","metaset","controller","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","evaluateInteractionItems","position","handler","metasets","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","chartArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","startAngle","endAngle","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","dataset","getDatasetMeta","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","stacks","wrap","stack","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","factor","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","update","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","configure","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","updatePos","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","config","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","platforms","interpolators","boolean","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","elapsed","wait","promises","Promise","rej","resolved","Animations","_properties","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","hidden","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","spacing","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","edge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","super","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","registry","controllers","_typedRegistries","_len4","_key4","_each","_len5","_key5","addControllers","_len6","_key6","_len7","_key7","addPlugins","_len8","_key8","addScales","_len9","_key9","getController","_get","getElement","getPlugin","getScale","removeControllers","_len10","_key10","removeElements","_len11","_key11","removePlugins","_len12","_key12","removeScales","_len13","_key13","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","_ref2","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","_ref3","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","_len14","scaleOptions","_key14","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","abstract","DateAdapterBase","members","formats","startOf","endOf","_adapters","_date","computeMinSampleSize","$bar","visibleMetas","getAllScaleValues","curr","updateMinAndPrev","parseValue","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","borderSkipped","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","_ref5","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","legend","generateLabels","fontColor","legendItem","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","cutoutPercentage","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","stackCount","baseValue","minBarLength","actualBase","floating","barSign","halfGrid","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","LineController","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","PointElement","hoverRadius","findOrAddLabel","addedLabels","addIfString","unshift","lastIndexOf","_getLabelForValue","relativeLabelSize","minSpacing","_ref6","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks$1","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","_ref7","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","_padding","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","labelCount","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","cleanDecimatedData","algorithm","beforeElementsUpdate","xAxis","decimated","getStartAndCountOfVisiblePointsSimplified","threshold","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_ref8","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","itemsEqual","_element","afterEvent","ci","useBorderRadius","_drawArgs","fontOpts","titleBlock","createTitle","WeakMap","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref9","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","exports","module","define","amd","globalThis","self"],"mappings":"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"}