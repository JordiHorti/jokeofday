{"version":3,"file":"audio_recorder.min.js","sources":["../src/audio_recorder.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Record RTC - audio recorder configuration.\n *\n * @module      tiny_recordrtc/audio_recorder\n * @copyright   2022 Stevani Andolo <stevani@hotmail.com.au>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport BaseClass from './base_recorder';\nimport Modal from './modal';\nimport {component} from 'tiny_recordrtc/common';\n\nexport default class Audio extends BaseClass {\n\n    // A mapping of MIME types to their corresponding file extensions.\n    fileExtensions = {\n        'audio/ogg': 'ogg',\n        'audio/mp4': 'mp4',\n        'audio/webm': 'webm',\n    };\n\n    configurePlayer() {\n        return this.modalRoot.querySelector('audio');\n    }\n\n    getSupportedTypes() {\n        return [\n            // Firefox supports webm and ogg but Chrome only supports ogg.\n            // So we use ogg to maximize the compatibility.\n            'audio/ogg;codecs=opus',\n\n            // Safari supports mp4.\n            'audio/mp4;codecs=opus',\n            'audio/mp4;codecs=wav',\n            'audio/mp4;codecs=mp3',\n\n            // Set webm as a fallback.\n            'audio/webm;codecs=opus',\n        ];\n    }\n\n    getRecordingOptions() {\n        return {\n            audioBitsPerSecond: parseInt(this.config.audiobitrate),\n        };\n    }\n\n    getMediaConstraints() {\n        return {\n            audio: true,\n        };\n    }\n\n    getRecordingType() {\n        return 'audio';\n    }\n\n    getTimeLimit() {\n        return this.config.audiotimelimit;\n    }\n\n    getEmbedTemplateName() {\n        return 'tiny_recordrtc/embed_audio';\n    }\n\n    getFileName(prefix) {\n        return `${prefix}-audio.${this.getFileExtension()}`;\n    }\n\n    getFileExtension() {\n        const options = super.getParsedRecordingOptions(); // Call parent method.\n        if (options?.mimeType) {\n            const mimeType = options.mimeType.split(';')[0];\n            return this.fileExtensions[mimeType];\n        }\n\n        window.console.warn(`Unknown file type for MediaRecorder API`);\n        return '';\n    }\n\n    static getModalClass() {\n        return class extends Modal {\n            static TYPE = `${component}/audio_recorder`;\n            static TEMPLATE = `${component}/audio_recorder`;\n        };\n    }\n}\n"],"names":["_interopRequireDefault","e","__esModule","default","_base_recorder","_modal","Audio","BaseClass","fileExtensions","configurePlayer","this","modalRoot","querySelector","getSupportedTypes","getRecordingOptions","audioBitsPerSecond","parseInt","config","audiobitrate","getMediaConstraints","audio","getRecordingType","getTimeLimit","audiotimelimit","getEmbedTemplateName","getFileName","prefix","getFileExtension","options","super","getParsedRecordingOptions","mimeType","split","window","console","warn","getModalClass","Modal","static","component","_exports"],"mappings":"yJAwB4B,SAAAA,uBAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAE,CAAAA,QAAAF,EAAA;;;;;;;qFAD5BG,eAAAJ,uBAAAI,gBACAC,OAAAL,uBAAAK,QAGe,MAAMC,cAAcC,eAAAA,QAG/BC,eAAiB,CACb,YAAa,MACb,YAAa,MACb,aAAc,QAGlBC,eAAAA,GACI,OAAOC,KAAKC,UAAUC,cAAc,QACxC,CAEAC,iBAAAA,GACI,MAAO,CAGH,wBAGA,wBACA,uBACA,uBAGA,yBAER,CAEAC,mBAAAA,GACI,MAAO,CACHC,mBAAoBC,SAASN,KAAKO,OAAOC,cAEjD,CAEAC,mBAAAA,GACI,MAAO,CACHC,OAAO,EAEf,CAEAC,gBAAAA,GACI,MAAO,OACX,CAEAC,YAAAA,GACI,OAAOZ,KAAKO,OAAOM,cACvB,CAEAC,oBAAAA,GACI,MAAO,4BACX,CAEAC,WAAAA,CAAYC,QACR,MAAO,GAAGA,gBAAgBhB,KAAKiB,oBACnC,CAEAA,gBAAAA,GACI,MAAMC,QAAUC,MAAMC,4BACtB,GAAIF,eAAAA,QAASG,SAAU,CACnB,MAAMA,SAAWH,QAAQG,SAASC,MAAM,KAAK,GAC7C,OAAOtB,KAAKF,eAAeuB,SAC/B,CAGA,OADAE,OAAOC,QAAQC,KAAK,2CACb,EACX,CAEA,oBAAOC,GACH,OAAO,cAAcC,eACjBC,YAAc,GAAGC,QAAAA,2BACjBD,gBAAkB,GAAGC,QAAAA,2BAE7B,EACH,OAAAC,SAAArC,QAAAG,MAAAkC,SAAArC,OAAA"}