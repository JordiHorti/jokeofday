{"version":3,"file":"storage.min.js","sources":["../src/storage.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Storage helper for the Moodle Tiny Autosave plugin.\n *\n * @module      tiny_autosave/storage\n * @copyright   2022 Andrew Lyons <andrew@nicols.co.uk>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as Repository from \"./repository\";\nimport Pending from 'core/pending';\nimport {\n    markInitialised,\n    getBackoffTime,\n} from \"./options\";\nimport Log from 'core/log';\nimport {getLogSource} from './common';\n\n/** @property {Map} A map of debounced draft saves */\nconst saveDebounceMap = new Map();\n\n/**\n * Attempt to restore a draft into the editor\n *\n * @param {TinyMCE} editor The Editor to restore a draft for\n */\nexport const restoreDraft = async(editor) => {\n    const pendingPromise = new Pending('tiny_autosave/restoreDraft');\n    try {\n        const session = await Repository.resumeAutosaveSession(editor);\n        if (session && session.drafttext) {\n            editor.undoManager.ignore(() => {\n                editor.setContent(session.drafttext);\n                editor.save();\n            });\n        }\n    } catch (error) {\n        // Ignore any errors as drafts are optional.\n        Log.warn(`Failed to restore draft: ${error}`, getLogSource(editor));\n    }\n    markInitialised(editor);\n    pendingPromise.resolve();\n};\n\n/**\n * Save the current content of the editor as a draft.\n *\n * @param {TinyMCE} editor\n */\nexport const saveDraft = (editor) => {\n    const timerId = saveDebounceMap.get(editor);\n    if (timerId) {\n        clearTimeout(timerId);\n    }\n    saveDebounceMap.set(editor, setTimeout(() => {\n        Log.debug(`Saving draft`, getLogSource(editor));\n        Repository.updateAutosaveSession(editor)\n        .catch((error) => window.console.warn(error));\n    }, getBackoffTime(editor)));\n};\n\n/**\n * Delete the draft for the current editor.\n *\n * @param {TinyMCE} editor\n */\nexport const removeAutosaveSession = (editor) => {\n    Log.debug(`Removing Autosave session`, getLogSource(editor));\n    Repository.removeAutosaveSession(editor);\n};\n"],"names":["_interopRequireDefault","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","Repository","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","_pending","_log","saveDebounceMap","Map","_exports","restoreDraft","async","pendingPromise","Pending","session","resumeAutosaveSession","editor","drafttext","undoManager","ignore","setContent","save","error","Log","warn","getLogSource","markInitialised","resolve","saveDraft","timerId","clearTimeout","setTimeout","debug","updateAutosaveSession","catch","window","console","getBackoffTime","removeAutosaveSession"],"mappings":"yKA6B2B,SAAAA,uBAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAE,CAAAA,QAAAF,EAAA,CAAA,SAAAG,yBAAAH,GAAA,GAAA,mBAAAI,QAAA,OAAA,KAAA,IAAAC,EAAAD,IAAAA,QAAAE,EAAAF,IAAAA,eAAAD,yBAAA,SAAAH,GAAAA,OAAAA,EAAAM,EAAAD,IAAAL,EAAA,wIAN3BO,WAM2B,SAAAP,EAAAK,GAAAA,IAAAA,GAAAL,GAAAA,EAAAC,WAAAD,OAAAA,EAAAA,GAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAE,MAAAA,CAAAA,QAAAF,GAAAM,IAAAA,EAAAH,yBAAAE,GAAA,GAAAC,GAAAA,EAAAE,IAAAR,GAAA,OAAAM,EAAAG,IAAAT,GAAA,IAAAU,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,IAAA,IAAAC,KAAAhB,EAAAgB,GAAAA,YAAAA,GAAAC,CAAAA,EAAAA,eAAAC,KAAAlB,EAAAgB,GAAAG,CAAAA,IAAAA,EAAAP,EAAAC,OAAAE,yBAAAf,EAAAgB,GAAAG,KAAAA,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAhB,EAAAgB,GAAAN,OAAAA,EAAAR,QAAAF,EAAAM,GAAAA,EAAAc,IAAApB,EAAAU,GAAAA;;;;;;;KAAA,CAN3BW,CAAAd,YACAe,SAAAvB,uBAAAuB,UAKAC,KAAAxB,uBAAAwB,MAIA,MAAMC,gBAAkB,IAAIC,IAuB1BC,SAAAC,aAhB0BC,eACxB,MAAMC,eAAiB,IAAIC,SAAO5B,QAAC,8BACnC,IACI,MAAM6B,cAAgBxB,WAAWyB,sBAAsBC,QACnDF,SAAWA,QAAQG,WACnBD,OAAOE,YAAYC,QAAO,KACtBH,OAAOI,WAAWN,QAAQG,WAC1BD,OAAOK,MAAM,GAGxB,CAAC,MAAOC,OAELC,KAAAA,QAAIC,KAAK,4BAA4BF,SAAS,EAAAG,QAAYA,cAACT,QAC/D,EACA,EAAAU,SAAAA,iBAAgBV,QAChBJ,eAAee,SAAS,EAkB1BlB,SAAAmB,UAVwBZ,SACtB,MAAMa,QAAUtB,gBAAgBf,IAAIwB,QAChCa,SACAC,aAAaD,SAEjBtB,gBAAgBJ,IAAIa,OAAQe,YAAW,KACnCR,KAAGtC,QAAC+C,MAAM,gBAAgB,EAAAP,QAAYA,cAACT,SACvC1B,WAAW2C,sBAAsBjB,QAChCkB,OAAOZ,OAAUa,OAAOC,QAAQZ,KAAKF,QAAO,IAC9C,EAAAe,SAAAA,gBAAerB,SAAS,EAW7BP,SAAA6B,sBAHoCtB,SAClCO,KAAGtC,QAAC+C,MAAM,6BAA6B,EAAAP,QAAYA,cAACT,SACpD1B,WAAWgD,sBAAsBtB,OAAO,CAC1C"}