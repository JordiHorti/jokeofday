{"version":3,"file":"dndsectionitem.min.js","sources":["../../../src/local/courseeditor/dndsectionitem.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course index section title draggable component.\n *\n * This component is used to control specific course section interactions like drag and drop\n * in both course index and course content.\n *\n * @module     core_courseformat/local/courseeditor/dndsectionitem\n * @class      core_courseformat/local/courseeditor/dndsectionitem\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent, DragDrop} from 'core/reactive';\n\nexport default class extends BaseComponent {\n\n    /**\n     * Initial state ready method.\n     *\n     * @param {number} sectionid the section id\n     * @param {Object} state the initial state\n     * @param {Element} fullregion the complete section region to mark as dragged\n     */\n    configDragDrop(sectionid, state, fullregion) {\n\n        this.id = sectionid;\n        if (this.section === undefined) {\n            this.section = state.section.get(this.id);\n        }\n        if (this.course === undefined) {\n            this.course = state.course;\n        }\n\n        // Prevent topic zero and delegated sections from being draggable.\n        if (this.section.number > 0 && this.section.component === null) {\n            this.getDraggableData = this._getDraggableData;\n        }\n\n        this.fullregion = fullregion;\n\n        // Drag and drop is only available for components compatible course formats.\n        if (this.reactive.isEditing && this.reactive.supportComponents) {\n            // Init the dropzone.\n            this.dragdrop = new DragDrop(this);\n            // Save dropzone classes.\n            this.classes = this.dragdrop.getClasses();\n        }\n    }\n\n    /**\n     * Remove all subcomponents dependencies.\n     */\n    destroy() {\n        if (this.dragdrop !== undefined) {\n            this.dragdrop.unregister();\n        }\n    }\n\n    /**\n     * Enable or disable the draggable property.\n     *\n     * @param {bool} value the new draggable value\n     */\n    setDraggable(value) {\n        if (this.getDraggableData) {\n            this.dragdrop?.setDraggable(value);\n        }\n    }\n\n    // Drag and drop methods.\n\n    /**\n     * The element drop start hook.\n     *\n     * @param {Object} dropdata the dropdata\n     */\n    dragStart(dropdata) {\n        this.reactive.dispatch('sectionDrag', [dropdata.id], true);\n    }\n\n    /**\n     * The element end start hook.\n     *\n     * @param {Object} dropdata the dropdata\n     */\n    dragEnd(dropdata) {\n        this.reactive.dispatch('sectionDrag', [dropdata.id], false);\n    }\n\n    /**\n     * Get the draggable data of this component.\n     *\n     * @returns {Object} exported course module drop data\n     */\n    _getDraggableData() {\n        const exporter = this.reactive.getExporter();\n        return exporter.sectionDraggableData(this.reactive.state, this.id);\n    }\n\n    /**\n     * Validate if the drop data can be dropped over the component.\n     *\n     * @param {Object} dropdata the exported drop data.\n     * @returns {boolean}\n     */\n    validateDropData(dropdata) {\n        // Course module validation.\n        if (dropdata?.type === 'cm') {\n            // Prevent content loops with subsections.\n            if (this.section?.component && dropdata?.hasdelegatedsection === true) {\n                return false;\n            }\n            // The first section element is already there so we can ignore it.\n            const firstcmid = this.section?.cmlist[0];\n            return dropdata.id !== firstcmid;\n        }\n        return false;\n    }\n\n    /**\n     * Display the component dropzone.\n     */\n    showDropZone() {\n        this.element.classList.add(this.classes.DROPZONE);\n    }\n\n    /**\n     * Hide the component dropzone.\n     */\n    hideDropZone() {\n        this.element.classList.remove(this.classes.DROPZONE);\n    }\n\n    /**\n     * Drop event handler.\n     *\n     * @param {Object} dropdata the accepted drop data\n     * @param {Event} event the drop event\n     */\n    drop(dropdata, event) {\n        // Call the move mutation.\n        if (dropdata.type == 'cm') {\n            const mutation = (event.altKey) ? 'cmDuplicate' : 'cmMove';\n            this.reactive.dispatch(mutation, [dropdata.id], this.id, this.section?.cmlist[0]);\n        }\n    }\n}\n"],"names":["_default","BaseComponent","configDragDrop","sectionid","state","fullregion","this","id","undefined","section","get","course","number","component","getDraggableData","_getDraggableData","reactive","isEditing","supportComponents","dragdrop","DragDrop","classes","getClasses","destroy","unregister","setDraggable","value","_this$dragdrop","dragStart","dropdata","dispatch","dragEnd","getExporter","sectionDraggableData","validateDropData","type","_this$section","_this$section2","hasdelegatedsection","firstcmid","cmlist","showDropZone","element","classList","add","DROPZONE","hideDropZone","remove","drop","event","_this$section3","mutation","altKey","_exports","default"],"mappings":";;;;;;;;;;;;AA6Be,MAAAA,iBAAcC,UAAAA,cASzBC,cAAAA,CAAeC,UAAWC,MAAOC,YAE7BC,KAAKC,GAAKJ,eACWK,IAAjBF,KAAKG,UACLH,KAAKG,QAAUL,MAAMK,QAAQC,IAAIJ,KAAKC,UAEtBC,IAAhBF,KAAKK,SACLL,KAAKK,OAASP,MAAMO,QAIpBL,KAAKG,QAAQG,OAAS,GAAgC,OAA3BN,KAAKG,QAAQI,YACxCP,KAAKQ,iBAAmBR,KAAKS,mBAGjCT,KAAKD,WAAaA,WAGdC,KAAKU,SAASC,WAAaX,KAAKU,SAASE,oBAEzCZ,KAAKa,SAAW,IAAIC,UAAQA,SAACd,MAE7BA,KAAKe,QAAUf,KAAKa,SAASG,aAErC,CAKAC,OAAAA,QAC0Bf,IAAlBF,KAAKa,UACLb,KAAKa,SAASK,YAEtB,CAOAC,YAAAA,CAAaC,OACkB,IAAAC,eAAvBrB,KAAKQ,mBACQa,QAAbA,eAAArB,KAAKa,gBAALQ,IAAaA,gBAAbA,eAAeF,aAAaC,OAEpC,CASAE,SAAAA,CAAUC,UACNvB,KAAKU,SAASc,SAAS,cAAe,CAACD,SAAStB,KAAK,EACzD,CAOAwB,OAAAA,CAAQF,UACJvB,KAAKU,SAASc,SAAS,cAAe,CAACD,SAAStB,KAAK,EACzD,CAOAQ,iBAAAA,GAEI,OADiBT,KAAKU,SAASgB,cACfC,qBAAqB3B,KAAKU,SAASZ,MAAOE,KAAKC,GACnE,CAQA2B,gBAAAA,CAAiBL,UAEb,GAAuB,QAAnBA,oBAAQ,EAARA,SAAUM,MAAe,CAAA,IAAAC,cAAAC,eAEzB,GAAgBD,QAAZA,cAAI9B,KAACG,eAAL2B,IAAYA,eAAZA,cAAcvB,YAA+C,KAAlCgB,oBAAQ,EAARA,SAAUS,qBACrC,OAAO,EAGX,MAAMC,UAAwBF,QAAfA,eAAG/B,KAAKG,mBAAO4B,sBAAZA,eAAcG,OAAO,GACvC,OAAOX,SAAStB,KAAOgC,SAC3B,CACA,OAAO,CACX,CAKAE,YAAAA,GACInC,KAAKoC,QAAQC,UAAUC,IAAItC,KAAKe,QAAQwB,SAC5C,CAKAC,YAAAA,GACIxC,KAAKoC,QAAQC,UAAUI,OAAOzC,KAAKe,QAAQwB,SAC/C,CAQAG,IAAAA,CAAKnB,SAAUoB,OAEX,GAAqB,MAAjBpB,SAASM,KAAc,CAAA,IAAAe,eACvB,MAAMC,SAAYF,MAAMG,OAAU,cAAgB,SAClD9C,KAAKU,SAASc,SAASqB,SAAU,CAACtB,SAAStB,IAAKD,KAAKC,GAAgB2C,QAAdA,eAAE5C,KAAKG,eAALyC,IAAYA,oBAAZA,EAAAA,eAAcV,OAAO,GAClF,CACJ,EACH,OAAAa,SAAAC,QAAAtD,SAAAqD,SAAAC,OAAA"}