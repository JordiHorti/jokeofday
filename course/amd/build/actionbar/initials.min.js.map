{"version":3,"file":"initials.min.js","sources":["../../src/actionbar/initials.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A small dropdown to filter users.\n *\n * @module    core_course/actionbar/initials\n * @copyright 2022 Mathew May <mathew.solutions>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Pending from 'core/pending';\nimport * as Url from 'core/url';\nimport CustomEvents from \"core/custom_interaction_events\";\nimport $ from 'jquery';\n\n/**\n * Whether the event listener has already been registered for this module.\n *\n * @type {boolean}\n */\nlet registered = false;\n\n// Contain our selectors within this file until they could be of use elsewhere.\nconst selectors = {\n    pageListItem: 'page-item',\n    pageClickableItem: '.page-link',\n    activeItem: 'active',\n    formDropdown: '.initialsdropdownform',\n    parentDomNode: '.initials-selector',\n    firstInitial: 'firstinitial',\n    lastInitial: 'lastinitial',\n    initialBars: '.initialbar', // Both first and last name use this class.\n    targetButton: 'initialswidget',\n    formItems: {\n        type: 'submit',\n        save: 'save',\n        cancel: 'cancel'\n    }\n};\n\n/**\n * Our initial hook into the module which will eventually allow us to handle the dropdown initials bar form.\n *\n * @param {String} callingLink The link to redirect upon form submission.\n * @param {String} firstInitialParam The URL parameter to set for the first name initial.\n * @param {String} lastInitialParam The URL parameter to set for the last name initial.\n * @param {Array} additionalParams Any additional parameters to set for the URL.\n */\nexport const init = (callingLink, firstInitialParam = 'sifirst',\n        lastInitialParam = 'silast', additionalParams = []) => {\n    if (registered) {\n        return;\n    }\n    const pendingPromise = new Pending();\n    registerListenerEvents(callingLink, firstInitialParam, lastInitialParam, additionalParams);\n    // BS events always bubble so, we need to listen for the event higher up the chain.\n    $(selectors.parentDomNode).on('shown.bs.dropdown', () => {\n        document.querySelector(selectors.pageClickableItem).focus({preventScroll: true});\n    });\n    pendingPromise.resolve();\n    registered = true;\n};\n\n/**\n * Register event listeners.\n *\n * @param {String} callingLink The link to redirect upon form submission.\n * @param {String} firstInitialParam The URL parameter to set for the first name initial.\n * @param {String} lastInitialParam The URL parameter to set for the last name initial.\n * @param {Array} additionalParams Any additional parameters to set for the URL.\n */\nconst registerListenerEvents = (callingLink, firstInitialParam = 'sifirst',\n        lastInitialParam = 'silast', additionalParams = []) => {\n    const events = [\n        'click',\n        CustomEvents.events.activate,\n        CustomEvents.events.keyboardActivate\n    ];\n    CustomEvents.define(document, events);\n\n    // Register events.\n    events.forEach((event) => {\n        document.addEventListener(event, (e) => {\n            // Always fetch the latest information when we click as state is a fickle thing.\n            let {firstActive, lastActive, sifirst, silast} = onClickVariables();\n            let itemToReset = '';\n\n            // Prevent the usual form behaviour.\n            if (e.target.closest(selectors.formDropdown)) {\n                e.preventDefault();\n            }\n\n            // Handle the state of active initials before form submission.\n            if (e.target.closest(`${selectors.formDropdown} .${selectors.pageListItem}`)) {\n                // Ensure the li items don't cause weird clicking emptying out the form.\n                if (e.target.classList.contains(selectors.pageListItem)) {\n                    return;\n                }\n\n                const initialsBar = e.target.closest(selectors.initialBars); // Find out which initial bar we are in.\n\n                // We want to find the current active item in the menu area the user selected.\n                // We also want to fetch the raw item out of the array for instant manipulation.\n                if (initialsBar.classList.contains(selectors.firstInitial)) {\n                    sifirst = e.target;\n                    itemToReset = firstActive;\n                } else {\n                    silast = e.target;\n                    itemToReset = lastActive;\n                }\n                swapActiveItems(itemToReset, e);\n            }\n\n            // Handle form submissions.\n            if (e.target.closest(`${selectors.formDropdown}`) && e.target.type === selectors.formItems.type) {\n                if (e.target.dataset.action === selectors.formItems.save) {\n                    // Ensure we strip out the value (All) as it messes with the PHP side of the initials bar.\n                    // Then we will redirect the user back onto the page with new filters applied.\n                    const params = {\n                        'id': e.target.closest(selectors.formDropdown).dataset.courseid,\n                        [firstInitialParam]: sifirst.parentElement.classList.contains('initialbarall') ? '' : sifirst.value,\n                        [lastInitialParam]: silast.parentElement.classList.contains('initialbarall') ? '' : silast.value,\n                    };\n\n                    // If additional parameters are passed, add them here (overriding any already set above).\n                    for (const [key, value] of Object.entries(additionalParams)) {\n                        params[key] = value;\n                    }\n                    window.location = Url.relativeUrl(callingLink, params);\n                }\n                if (e.target.dataset.action === selectors.formItems.cancel) {\n                    $(`.${selectors.targetButton}`).dropdown('toggle');\n                }\n            }\n        });\n    });\n};\n\n/**\n * A small abstracted helper function which allows us to ensure we have up-to-date lists of nodes.\n *\n * @returns {{firstActive: HTMLElement, lastActive: HTMLElement, sifirst: ?String, silast: ?String}}\n */\nconst onClickVariables = () => {\n    // Ensure we have an up-to-date initials bar.\n    const firstItems = [...document.querySelectorAll(`.${selectors.firstInitial} li`)];\n    const lastItems = [...document.querySelectorAll(`.${selectors.lastInitial} li`)];\n    const firstActive = firstItems.filter((item) => item.classList.contains(selectors.activeItem))[0];\n    const lastActive = lastItems.filter((item) => item.classList.contains(selectors.activeItem))[0];\n    // Ensure we retain both of the selections from a previous instance.\n    let sifirst = firstActive.querySelector(selectors.pageClickableItem);\n    let silast = lastActive.querySelector(selectors.pageClickableItem);\n    return {firstActive, lastActive, sifirst, silast};\n};\n\n/**\n * Given we are provided the old li and current click event, swap around the active properties.\n *\n * @param {HTMLElement} itemToReset\n * @param {Event} e\n */\nconst swapActiveItems = (itemToReset, e) => {\n    itemToReset.classList.remove(selectors.activeItem);\n    itemToReset.querySelector(selectors.pageClickableItem).ariaCurrent = false;\n\n    // Set the select item as the current item.\n    const itemToSetActive = e.target.parentElement;\n    itemToSetActive.classList.add(selectors.activeItem);\n    e.target.ariaCurrent = true;\n};\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireDefault","__esModule","default","_pending","Url","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","_custom_interaction_events","_jquery","registered","selectors","type","save","cancel","_exports","init","callingLink","firstInitialParam","arguments","length","undefined","lastInitialParam","additionalParams","pendingPromise","Pending","registerListenerEvents","$","on","document","querySelector","focus","preventScroll","resolve","events","CustomEvents","activate","keyboardActivate","define","forEach","event","addEventListener","firstActive","lastActive","sifirst","silast","onClickVariables","itemToReset","target","closest","preventDefault","classList","contains","swapActiveItems","dataset","action","params","id","courseid","parentElement","value","key","entries","window","location","relativeUrl","dropdown","firstItems","querySelectorAll","lastItems","filter","item","remove","ariaCurrent","add"],"mappings":"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"}